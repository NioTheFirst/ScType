Switched global version to 0.7.6



calculateInterest
_principal_1(uint256) := ϕ(['REF_11'])
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_borrowRate_1(uint256) := ϕ(['REF_13'])
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound interest ratio
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
Finance type key: (0, 21)
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound interest
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound interest
TMP_64(uint256) = 10 ** 30
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: compound interest
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: compound interest
_interest_1(uint256) := TMP_66(uint256)
Finance type key: (23, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: compound interest
RETURN _interest_1
_principal_1(uint256) := ϕ(['REF_11'])
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
_borrowRate_1(uint256) := ϕ(['REF_13'])
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound interest ratio
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
Finance type key: (0, 21)
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound interest
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: compound interest
TMP_64(uint256) = 10 ** 30
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: compound interest
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: compound interest
_interest_1(uint256) := TMP_66(uint256)
Finance type key: (23, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: compound interest
RETURN _interest_1



calculateInterestAccrued
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
[i]Type for REF_8

Name: REF_8 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN 0
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_timeElapsed_1(uint256) := TMP_68(uint256)
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> REF_10.principal
[i]Type for REF_11

Name: REF_11 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_13(uint256) -> REF_12.borrowRate
[i]Type for REF_13

Name: REF_13 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
_principal_1(uint256) := ϕ(['REF_11'])
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrowRate_1(uint256) := ϕ(['REF_13'])
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_64(uint256) = 10 ** 30
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
_interest_1(uint256) := TMP_66(uint256)
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
RETURN _interest_1
_principal_1(uint256) := ϕ(['REF_11'])
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrowRate_1(uint256) := ϕ(['REF_13'])
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_64(uint256) = 10 ** 30
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
_interest_1(uint256) := TMP_66(uint256)
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
RETURN _interest_1
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
_interestAccrued_1(uint256) := TMP_69(uint256)
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
RETURN _interestAccrued_1
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrowRate
Finance Type: undef
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
[i]Type for REF_7

Name: creditLineVariables Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
[i]Type for REF_8

Name: REF_8 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
Finance type key: (-1, -1)
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN 0
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_timeElapsed_1(uint256) := TMP_68(uint256)
Finance type key: (-1, -1)
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
[i]Type for REF_10

Name: creditLineVariables Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> REF_10.principal
[i]Type for REF_11

Name: REF_11 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
[i]Type for REF_12

Name: creditLineConstants Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_13(uint256) -> REF_12.borrowRate
[i]Type for REF_13

Name: REF_13 Function: calculateInterestAccrued
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
_principal_1(uint256) := ϕ(['REF_11'])
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrowRate_1(uint256) := ϕ(['REF_13'])
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_64(uint256) = 10 ** 30
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
_interest_1(uint256) := TMP_66(uint256)
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
RETURN _interest_1
_principal_1(uint256) := ϕ(['REF_11'])
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrowRate_1(uint256) := ϕ(['REF_13'])
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_64(uint256) = 10 ** 30
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
_interest_1(uint256) := TMP_66(uint256)
Finance type key: (-1, -1)
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
RETURN _interest_1
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
_interestAccrued_1(uint256) := TMP_69(uint256)
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
RETURN _interestAccrued_1



calculateCurrentDebt
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_interestAccrued_1(uint256) := TMP_70(uint256)
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
[i]Type for REF_14

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_15(uint256) -> REF_14.principal
[i]Type for REF_15

Name: REF_15 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
[i]Type for REF_17

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_18

Name: REF_18 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
[i]Type for REF_21

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> REF_21.totalInterestRepaid
[i]Type for REF_22

Name: REF_22 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_currentDebt_1(uint256) := TMP_73(uint256)
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _currentDebt_1
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateCurrentDebt
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: principal, interestAccruedTillLastPrincipalUpdate, totalInterestRepaid
Finance Type: undef
_interestAccrued_1(uint256) := TMP_70(uint256)
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
[i]Type for REF_14

Name: creditLineVariables Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_15(uint256) -> REF_14.principal
[i]Type for REF_15

Name: REF_15 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
[i]Type for REF_17

Name: creditLineVariables Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_18

Name: REF_18 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
[i]Type for REF_21

Name: creditLineVariables Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22(uint256) -> REF_21.totalInterestRepaid
[i]Type for REF_22

Name: REF_22 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_currentDebt_1(uint256) := TMP_73(uint256)
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _currentDebt_1



calculateBorrowableAmount
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_5(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_3(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceOracle_2(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
REF_23(CreditLine.CreditLineVariables) -> creditLineVariables_5[_id_1]
[i]Type for REF_23

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_24(CreditLine.CreditLineStatus) -> REF_23.status
[i]Type for REF_24

Name: REF_24 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_status_1(CreditLine.CreditLineStatus) := REF_24(CreditLine.CreditLineStatus)
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_25(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_25

Name: REF_25 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_74(bool) = _status_1 == REF_25
[i]Type for TMP_74

Name: TMP_74 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_26(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
[i]Type for REF_26

Name: REF_26 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_75(bool) = _status_1 == REF_26
[i]Type for TMP_75

Name: TMP_75 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76(bool) = TMP_74 || TMP_75
[i]Type for TMP_76

Name: TMP_76 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,CreditLine: Cannot only if credit line ACTIVE or REQUESTED)
[i]Type for TMP_77

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_78 = CONVERT priceOracle_2 to IPriceOracle
[i]Type for TMP_78

Name: TMP_78 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
REF_28(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
[i]Type for REF_28

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(address) -> REF_28.collateralAsset
[i]Type for REF_29

Name: REF_29 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_30(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
[i]Type for REF_30

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_31(address) -> REF_30.borrowAsset
[i]Type for REF_31

Name: REF_31 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_78(IPriceOracle), function:getLatestPrice, arguments:['REF_29', 'REF_31']  
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_4(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_3', 'creditLineConstants_2', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceOracle_3(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_2', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
_ratioOfPrices_1(uint256)= UNPACK TUPLE_0 index: 0 
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_decimals_1(uint256)= UNPACK TUPLE_0 index: 1 
[i]Type for _decimals

Name: _decimals Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_79(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_11(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_32(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
strategyRegistry_8(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
REF_236(CreditLine.CreditLineConstants) -> creditLineConstants_32[_id_1]
[i]Type for REF_236

Name: creditLineConstants Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_237(address) -> REF_236.collateralAsset
[i]Type for REF_237

Name: REF_237 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_collateralAsset_1(address) := REF_237(address)
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_293 = CONVERT strategyRegistry_8 to IStrategyRegistry
[i]Type for TMP_293

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_294(address[]) = HIGH_LEVEL_CALL, dest:TMP_293(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_294

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_12(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_11', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
strategyRegistry_9(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_8', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_294(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_0', '_amount_2'])
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_2(uint256) := ϕ(['index_1', 'index_3'])
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_239 -> LENGTH _strategyList_1
[i]Type for REF_239

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_295(bool) = index_2 < REF_239
[i]Type for TMP_295

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_240(address) -> _strategyList_1[index_2]
[i]Type for REF_240

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_296 = CONVERT 0 to address
[i]Type for TMP_296

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297(bool) = REF_240 == TMP_296
[i]Type for TMP_297

Name: TMP_297 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_241(mapping(address => uint256)) -> collateralShareInStrategy_12[_id_1]
[i]Type for REF_241

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_242(address) -> _strategyList_1[index_2]
[i]Type for REF_242

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_243(uint256) -> REF_241[REF_242]
[i]Type for REF_243

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_liquidityShares_1(uint256) := REF_243(uint256)
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_244(address) -> _strategyList_1[index_2]
[i]Type for REF_244

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_298 = CONVERT REF_244 to IYield
[i]Type for TMP_298

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_299(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
[i]Type for TMP_299

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_13(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_299(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_300

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_300(uint256)
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301(uint256) := index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_301

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_3(uint256) = index_2 + 1
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
RETURN _amount_1
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_11(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_32(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset
Finance Type: undef
strategyRegistry_8(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
REF_236(CreditLine.CreditLineConstants) -> creditLineConstants_32[_id_1]
[i]Type for REF_236

Name: creditLineConstants Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_237(address) -> REF_236.collateralAsset
[i]Type for REF_237

Name: REF_237 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_collateralAsset_1(address) := REF_237(address)
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_293 = CONVERT strategyRegistry_8 to IStrategyRegistry
[i]Type for TMP_293

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_294(address[]) = HIGH_LEVEL_CALL, dest:TMP_293(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_294

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_12(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_11', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
strategyRegistry_9(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_8', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_294(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_0', '_amount_2'])
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_2(uint256) := ϕ(['index_1', 'index_3'])
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_239 -> LENGTH _strategyList_1
[i]Type for REF_239

Name: REF_239 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_295(bool) = index_2 < REF_239
[i]Type for TMP_295

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_240(address) -> _strategyList_1[index_2]
[i]Type for REF_240

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_296 = CONVERT 0 to address
[i]Type for TMP_296

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297(bool) = REF_240 == TMP_296
[i]Type for TMP_297

Name: TMP_297 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_241(mapping(address => uint256)) -> collateralShareInStrategy_12[_id_1]
[i]Type for REF_241

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_242(address) -> _strategyList_1[index_2]
[i]Type for REF_242

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_243(uint256) -> REF_241[REF_242]
[i]Type for REF_243

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_liquidityShares_1(uint256) := REF_243(uint256)
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_244(address) -> _strategyList_1[index_2]
[i]Type for REF_244

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_298 = CONVERT REF_244 to IYield
[i]Type for TMP_298

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_299(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
[i]Type for TMP_299

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_13(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_299(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_300

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_300(uint256)
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301(uint256) := index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_301

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_3(uint256) = index_2 + 1
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
RETURN _amount_1
[i]Type for TMP_79

Name: TMP_79 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_5(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalCollateralToken_1(uint256) := TMP_79(uint256)
Finance type key: (-1, -1)
[i]Type for _totalCollateralToken

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_80(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
[i]Type for TMP_80

Name: TMP_80 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_currentDebt_1(uint256) := TMP_80(uint256)
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralToken_1', '_ratioOfPrices_1'] 
[i]Type for TMP_81

Name: TMP_81 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
[i]Type for REF_34

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_35(uint256) -> REF_34.idealCollateralRatio
[i]Type for REF_35

Name: REF_35 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
[i]Type for TMP_82

Name: TMP_82 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_83(uint256) = 10 ** 30
[i]Type for TMP_83

Name: TMP_83 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_82', 'TMP_83'] 
[i]Type for TMP_84

Name: TMP_84 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_85(uint256) = 10 ** _decimals_1
[i]Type for TMP_85

Name: TMP_85 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_84', 'TMP_85'] 
[i]Type for TMP_86

Name: TMP_86 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 29
LF: None
Value: 99999999999999991433150857216
Fields: 
Finance Type: undef
_maxPossible_1(uint256) := TMP_86(uint256)
Finance type key: (-1, -1)
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: 29
LF: None
Value: 99999999999999991433150857216
Fields: 
Finance Type: undef
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
[i]Type for REF_38

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(uint256) -> REF_38.borrowLimit
[i]Type for REF_39

Name: REF_39 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_borrowLimit_1(uint256) := REF_39(uint256)
Finance type key: (-1, -1)
[i]Type for _borrowLimit

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
[i]Type for TMP_87

Name: TMP_87 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 99999999999999991433150857216
Fields: 
Finance Type: undef
_maxPossible_3(uint256) := ϕ(['_maxPossible_1', '_maxPossible_2'])
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 29
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_88(bool) = _maxPossible_3 > _currentDebt_1
[i]Type for TMP_88

Name: TMP_88 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN 0
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_maxPossible_3', '_currentDebt_1'] 
[i]Type for TMP_89

Name: TMP_89 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 29
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_89
_maxPossible_2(uint256) := _borrowLimit_1(uint256)
Finance type key: (-1, -1)
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 99999999999999991433150857216
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_5(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
creditLineConstants_3(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset, borrowAsset
Finance Type: undef
priceOracle_2(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
REF_23(CreditLine.CreditLineVariables) -> creditLineVariables_5[_id_1]
[i]Type for REF_23

Name: creditLineVariables Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_24(CreditLine.CreditLineStatus) -> REF_23.status
[i]Type for REF_24

Name: REF_24 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_status_1(CreditLine.CreditLineStatus) := REF_24(CreditLine.CreditLineStatus)
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_25(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_25

Name: REF_25 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_74(bool) = _status_1 == REF_25
[i]Type for TMP_74

Name: TMP_74 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_26(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
[i]Type for REF_26

Name: REF_26 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_75(bool) = _status_1 == REF_26
[i]Type for TMP_75

Name: TMP_75 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_76(bool) = TMP_74 || TMP_75
[i]Type for TMP_76

Name: TMP_76 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,CreditLine: Cannot only if credit line ACTIVE or REQUESTED)
[i]Type for TMP_77

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_78 = CONVERT priceOracle_2 to IPriceOracle
[i]Type for TMP_78

Name: TMP_78 Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
REF_28(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
[i]Type for REF_28

Name: creditLineConstants Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_29(address) -> REF_28.collateralAsset
[i]Type for REF_29

Name: REF_29 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_30(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
[i]Type for REF_30

Name: creditLineConstants Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_31(address) -> REF_30.borrowAsset
[i]Type for REF_31

Name: REF_31 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_78(IPriceOracle), function:getLatestPrice, arguments:['REF_29', 'REF_31']  
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_4(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_3', 'creditLineConstants_2', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceOracle_3(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_2', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
_ratioOfPrices_1(uint256)= UNPACK TUPLE_0 index: 0 
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_decimals_1(uint256)= UNPACK TUPLE_0 index: 1 
[i]Type for _decimals

Name: _decimals Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_79(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
[i]Type for TMP_79

Name: TMP_79 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_5(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateBorrowableAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalCollateralToken_1(uint256) := TMP_79(uint256)
Finance type key: (-1, -1)
[i]Type for _totalCollateralToken

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_80(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
[i]Type for TMP_80

Name: TMP_80 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_currentDebt_1(uint256) := TMP_80(uint256)
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralToken_1', '_ratioOfPrices_1'] 
[i]Type for TMP_81

Name: TMP_81 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
[i]Type for REF_34

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_35(uint256) -> REF_34.idealCollateralRatio
[i]Type for REF_35

Name: REF_35 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
[i]Type for TMP_82

Name: TMP_82 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_83(uint256) = 10 ** 30
[i]Type for TMP_83

Name: TMP_83 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_82', 'TMP_83'] 
[i]Type for TMP_84

Name: TMP_84 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_85(uint256) = 10 ** _decimals_1
[i]Type for TMP_85

Name: TMP_85 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_84', 'TMP_85'] 
[i]Type for TMP_86

Name: TMP_86 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 29
LF: None
Value: 99999999999999991433150857216
Fields: 
Finance Type: undef
_maxPossible_1(uint256) := TMP_86(uint256)
Finance type key: (-1, -1)
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 29
LF: None
Value: 99999999999999991433150857216
Fields: 
Finance Type: undef
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
[i]Type for REF_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_39(uint256) -> REF_38.borrowLimit
[i]Type for REF_39

Name: REF_39 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_borrowLimit_1(uint256) := REF_39(uint256)
Finance type key: (-1, -1)
[i]Type for _borrowLimit

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
[i]Type for TMP_87

Name: TMP_87 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 99999999999999991433150857216
Fields: 
Finance Type: undef
_maxPossible_3(uint256) := ϕ(['_maxPossible_1', '_maxPossible_2'])
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 29
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_88(bool) = _maxPossible_3 > _currentDebt_1
[i]Type for TMP_88

Name: TMP_88 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN 0
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_maxPossible_3', '_currentDebt_1'] 
[i]Type for TMP_89

Name: TMP_89 Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: 29
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN TMP_89
_maxPossible_2(uint256) := _borrowLimit_1(uint256)
Finance type key: (-1, -1)
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



request
priceOracle_4(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
TMP_117(bool) = _borrowAsset_1 != _collateralAsset_1
[i]Type for TMP_117

Name: TMP_117 Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_118(None) = SOLIDITY_CALL require(bool,string)(TMP_117,R: cant borrow lent token)
[i]Type for TMP_118

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_119 = CONVERT priceOracle_4 to IPriceOracle
[i]Type for TMP_119

Name: TMP_119 Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
TMP_120(bool) = HIGH_LEVEL_CALL, dest:TMP_119(IPriceOracle), function:doesFeedExist, arguments:['_borrowAsset_1', '_collateralAsset_1']  
[i]Type for TMP_120

Name: TMP_120 Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceOracle_5(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_4', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,R: No price feed)
[i]Type for TMP_121

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_lender_1(address) := _requestTo_1(address)
Finance type key: (-1, -1)
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
_borrower_1(address) := msg.sender(address)
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_lender_3(address) := ϕ(['_lender_1', '_lender_2'])
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
_borrower_3(address) := ϕ(['_borrower_1', '_borrower_2'])
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_122(uint256) = INTERNAL_CALL, CreditLine._createRequest(address,address,uint256,uint256,bool,uint256,address,address,bool)(_lender_3,_borrower_3,_borrowLimit_1,_borrowRate_1,_autoLiquidation_1,_collateralRatio_1,_borrowAsset_1,_collateralAsset_1,_requestAsLender_1)
_lender_1(address) := ϕ(['_lender_3'])
[i]Type for _lender

Name: _lender Function: _createRequest
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
_borrower_1(address) := ϕ(['_borrower_3'])
[i]Type for _borrower

Name: _borrower Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _borrower
Value: u
Fields: 
Finance Type: undef
_borrowLimit_1(uint256) := ϕ(['_borrowLimit_1'])
[i]Type for _borrowLimit

Name: _borrowLimit Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrowRate_1(uint256) := ϕ(['_borrowRate_1'])
[i]Type for _borrowRate

Name: _borrowRate Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_autoLiquidation_1(bool) := ϕ(['_autoLiquidation_1'])
[i]Type for _autoLiquidation

Name: _autoLiquidation Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_collateralRatio_1(uint256) := ϕ(['_collateralRatio_1'])
[i]Type for _collateralRatio

Name: _collateralRatio Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrowAsset_1(address) := ϕ(['_borrowAsset_1'])
[i]Type for _borrowAsset

Name: _borrowAsset Function: _createRequest
Num: 
Den: 
Address: -997
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
_collateralAsset_1(address) := ϕ(['_collateralAsset_1'])
[i]Type for _collateralAsset

Name: _collateralAsset Function: _createRequest
Num: 
Den: 
Address: -996
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
_requestByLender_1(bool) := ϕ(['_requestAsLender_1'])
[i]Type for _requestByLender

Name: _requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineCounter_1(uint256) := ϕ(['creditLineCounter_2', 'creditLineCounter_0'])
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_9(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_8(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_124(bool) = _lender_1 != _borrower_1
[i]Type for TMP_124

Name: TMP_124 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,Lender and Borrower cannot be same addresses)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(uint256) = creditLineCounter_1 + 1
[i]Type for TMP_126

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
_id_1(uint256) := TMP_126(uint256)
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
creditLineCounter_2(uint256) := _id_1(uint256)
Finance type key: (-1, -1)
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_69(CreditLine.CreditLineVariables) -> creditLineVariables_9[_id_1]
[i]Type for REF_69

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70(CreditLine.CreditLineStatus) -> REF_69.status
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_71(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
[i]Type for REF_71

Name: REF_71 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_10(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_9'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
REF_70 (->creditLineVariables_10) := REF_71(CreditLine.CreditLineStatus)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_72(CreditLine.CreditLineConstants) -> creditLineConstants_8[_id_1]
[i]Type for REF_72

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_73(address) -> REF_72.borrower
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_9(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_8'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower
Finance Type: undef
REF_73 (->creditLineConstants_9) := _borrower_1(address)
Finance type key: (-1, -1)
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_74(CreditLine.CreditLineConstants) -> creditLineConstants_9[_id_1]
[i]Type for REF_74

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_75(address) -> REF_74.lender
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_10(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_9'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender
Finance Type: undef
REF_75 (->creditLineConstants_10) := _lender_1(address)
Finance type key: (-1, -1)
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_76(CreditLine.CreditLineConstants) -> creditLineConstants_10[_id_1]
[i]Type for REF_76

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_77(uint256) -> REF_76.borrowLimit
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_11(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_10'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit
Finance Type: undef
REF_77 (->creditLineConstants_11) := _borrowLimit_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_78(CreditLine.CreditLineConstants) -> creditLineConstants_11[_id_1]
[i]Type for REF_78

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_79(bool) -> REF_78.autoLiquidation
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_12(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_11'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation
Finance Type: undef
REF_79 (->creditLineConstants_12) := _autoLiquidation_1(bool)
Finance type key: (-1, -1)
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_80(CreditLine.CreditLineConstants) -> creditLineConstants_12[_id_1]
[i]Type for REF_80

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_81(uint256) -> REF_80.idealCollateralRatio
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_13(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_12'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio
Finance Type: undef
REF_81 (->creditLineConstants_13) := _collateralRatio_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_82(CreditLine.CreditLineConstants) -> creditLineConstants_13[_id_1]
[i]Type for REF_82

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(uint256) -> REF_82.borrowRate
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_14(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_13'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate
Finance Type: undef
REF_83 (->creditLineConstants_14) := _borrowRate_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_84(CreditLine.CreditLineConstants) -> creditLineConstants_14[_id_1]
[i]Type for REF_84

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_85(address) -> REF_84.borrowAsset
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_15(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_14'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset
Finance Type: undef
REF_85 (->creditLineConstants_15) := _borrowAsset_1(address)
Finance type key: (-1, -1)
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: 
Den: 
Address: -997
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_86(CreditLine.CreditLineConstants) -> creditLineConstants_15[_id_1]
[i]Type for REF_86

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_87(address) -> REF_86.collateralAsset
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_16(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_15'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
REF_87 (->creditLineConstants_16) := _collateralAsset_1(address)
Finance type key: (-1, -1)
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: 
Den: 
Address: -996
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_88(CreditLine.CreditLineConstants) -> creditLineConstants_16[_id_1]
[i]Type for REF_88

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(bool) -> REF_88.requestByLender
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_17(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_16'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_89 (->creditLineConstants_17) := _requestByLender_1(bool)
Finance type key: (-1, -1)
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
RETURN _id_1
_lender_1(address) := ϕ(['_lender_3'])
[i]Type for _lender

Name: _lender Function: _createRequest
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
_borrower_1(address) := ϕ(['_borrower_3'])
[i]Type for _borrower

Name: _borrower Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _borrower
Value: u
Fields: 
Finance Type: undef
_borrowLimit_1(uint256) := ϕ(['_borrowLimit_1'])
[i]Type for _borrowLimit

Name: _borrowLimit Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrowRate_1(uint256) := ϕ(['_borrowRate_1'])
[i]Type for _borrowRate

Name: _borrowRate Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_autoLiquidation_1(bool) := ϕ(['_autoLiquidation_1'])
[i]Type for _autoLiquidation

Name: _autoLiquidation Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_collateralRatio_1(uint256) := ϕ(['_collateralRatio_1'])
[i]Type for _collateralRatio

Name: _collateralRatio Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrowAsset_1(address) := ϕ(['_borrowAsset_1'])
[i]Type for _borrowAsset

Name: _borrowAsset Function: _createRequest
Num: 
Den: 
Address: -997
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
_collateralAsset_1(address) := ϕ(['_collateralAsset_1'])
[i]Type for _collateralAsset

Name: _collateralAsset Function: _createRequest
Num: 
Den: 
Address: -996
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
_requestByLender_1(bool) := ϕ(['_requestAsLender_1'])
[i]Type for _requestByLender

Name: _requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineCounter_1(uint256) := ϕ(['creditLineCounter_2', 'creditLineCounter_0'])
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
creditLineVariables_9(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
creditLineConstants_8(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
TMP_124(bool) = _lender_1 != _borrower_1
[i]Type for TMP_124

Name: TMP_124 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,Lender and Borrower cannot be same addresses)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(uint256) = creditLineCounter_1 + 1
[i]Type for TMP_126

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
_id_1(uint256) := TMP_126(uint256)
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
creditLineCounter_2(uint256) := _id_1(uint256)
Finance type key: (-1, -1)
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
REF_69(CreditLine.CreditLineVariables) -> creditLineVariables_9[_id_1]
[i]Type for REF_69

Name: creditLineVariables Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70(CreditLine.CreditLineStatus) -> REF_69.status
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_71(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
[i]Type for REF_71

Name: REF_71 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_10(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_9'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
REF_70 (->creditLineVariables_10) := REF_71(CreditLine.CreditLineStatus)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_72(CreditLine.CreditLineConstants) -> creditLineConstants_8[_id_1]
[i]Type for REF_72

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_73(address) -> REF_72.borrower
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_9(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_8'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_73 (->creditLineConstants_9) := _borrower_1(address)
Finance type key: (-1, -1)
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_74(CreditLine.CreditLineConstants) -> creditLineConstants_9[_id_1]
[i]Type for REF_74

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_75(address) -> REF_74.lender
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_10(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_9'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_75 (->creditLineConstants_10) := _lender_1(address)
Finance type key: (-1, -1)
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_76(CreditLine.CreditLineConstants) -> creditLineConstants_10[_id_1]
[i]Type for REF_76

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_77(uint256) -> REF_76.borrowLimit
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_11(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_10'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_77 (->creditLineConstants_11) := _borrowLimit_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_78(CreditLine.CreditLineConstants) -> creditLineConstants_11[_id_1]
[i]Type for REF_78

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_79(bool) -> REF_78.autoLiquidation
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_12(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_11'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_79 (->creditLineConstants_12) := _autoLiquidation_1(bool)
Finance type key: (-1, -1)
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_80(CreditLine.CreditLineConstants) -> creditLineConstants_12[_id_1]
[i]Type for REF_80

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_81(uint256) -> REF_80.idealCollateralRatio
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_13(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_12'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_81 (->creditLineConstants_13) := _collateralRatio_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_82(CreditLine.CreditLineConstants) -> creditLineConstants_13[_id_1]
[i]Type for REF_82

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(uint256) -> REF_82.borrowRate
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_14(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_13'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_83 (->creditLineConstants_14) := _borrowRate_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_84(CreditLine.CreditLineConstants) -> creditLineConstants_14[_id_1]
[i]Type for REF_84

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_85(address) -> REF_84.borrowAsset
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_15(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_14'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_85 (->creditLineConstants_15) := _borrowAsset_1(address)
Finance type key: (-1, -1)
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: 
Den: 
Address: -997
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_86(CreditLine.CreditLineConstants) -> creditLineConstants_15[_id_1]
[i]Type for REF_86

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_87(address) -> REF_86.collateralAsset
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_16(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_15'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_87 (->creditLineConstants_16) := _collateralAsset_1(address)
Finance type key: (-1, -1)
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: 
Den: 
Address: -996
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_88(CreditLine.CreditLineConstants) -> creditLineConstants_16[_id_1]
[i]Type for REF_88

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(bool) -> REF_88.requestByLender
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_17(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_16'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_89 (->creditLineConstants_17) := _requestByLender_1(bool)
Finance type key: (-1, -1)
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
RETURN _id_1
[i]Type for TMP_122

Name: TMP_122 Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
_id_1(uint256) := TMP_122(uint256)
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
_lender_2(address) := msg.sender(address)
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrower_2(address) := _requestTo_1(address)
Finance type key: (-1, -1)
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
RETURN _id_1
priceOracle_4(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
TMP_117(bool) = _borrowAsset_1 != _collateralAsset_1
[i]Type for TMP_117

Name: TMP_117 Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_118(None) = SOLIDITY_CALL require(bool,string)(TMP_117,R: cant borrow lent token)
[i]Type for TMP_118

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_119 = CONVERT priceOracle_4 to IPriceOracle
[i]Type for TMP_119

Name: TMP_119 Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
TMP_120(bool) = HIGH_LEVEL_CALL, dest:TMP_119(IPriceOracle), function:doesFeedExist, arguments:['_borrowAsset_1', '_collateralAsset_1']  
[i]Type for TMP_120

Name: TMP_120 Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceOracle_5(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_4', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: request
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,R: No price feed)
[i]Type for TMP_121

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_lender_1(address) := _requestTo_1(address)
Finance type key: (-1, -1)
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
_borrower_1(address) := msg.sender(address)
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_lender_3(address) := ϕ(['_lender_1', '_lender_2'])
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
_borrower_3(address) := ϕ(['_borrower_1', '_borrower_2'])
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
TMP_122(uint256) = INTERNAL_CALL, CreditLine._createRequest(address,address,uint256,uint256,bool,uint256,address,address,bool)(_lender_3,_borrower_3,_borrowLimit_1,_borrowRate_1,_autoLiquidation_1,_collateralRatio_1,_borrowAsset_1,_collateralAsset_1,_requestAsLender_1)
_lender_1(address) := ϕ(['_lender_3'])
[i]Type for _lender

Name: _lender Function: _createRequest
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
_borrower_1(address) := ϕ(['_borrower_3'])
[i]Type for _borrower

Name: _borrower Function: _createRequest
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
_borrowLimit_1(uint256) := ϕ(['_borrowLimit_1'])
[i]Type for _borrowLimit

Name: _borrowLimit Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrowRate_1(uint256) := ϕ(['_borrowRate_1'])
[i]Type for _borrowRate

Name: _borrowRate Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_autoLiquidation_1(bool) := ϕ(['_autoLiquidation_1'])
[i]Type for _autoLiquidation

Name: _autoLiquidation Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_collateralRatio_1(uint256) := ϕ(['_collateralRatio_1'])
[i]Type for _collateralRatio

Name: _collateralRatio Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrowAsset_1(address) := ϕ(['_borrowAsset_1'])
[i]Type for _borrowAsset

Name: _borrowAsset Function: _createRequest
Num: 
Den: 
Address: -997
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
_collateralAsset_1(address) := ϕ(['_collateralAsset_1'])
[i]Type for _collateralAsset

Name: _collateralAsset Function: _createRequest
Num: 
Den: 
Address: -996
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
_requestByLender_1(bool) := ϕ(['_requestAsLender_1'])
[i]Type for _requestByLender

Name: _requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineCounter_1(uint256) := ϕ(['creditLineCounter_2', 'creditLineCounter_0'])
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
creditLineVariables_9(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
creditLineConstants_8(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
TMP_124(bool) = _lender_1 != _borrower_1
[i]Type for TMP_124

Name: TMP_124 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,Lender and Borrower cannot be same addresses)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(uint256) = creditLineCounter_1 + 1
[i]Type for TMP_126

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
_id_1(uint256) := TMP_126(uint256)
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
creditLineCounter_2(uint256) := _id_1(uint256)
Finance type key: (-1, -1)
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
REF_69(CreditLine.CreditLineVariables) -> creditLineVariables_9[_id_1]
[i]Type for REF_69

Name: creditLineVariables Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70(CreditLine.CreditLineStatus) -> REF_69.status
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_71(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
[i]Type for REF_71

Name: REF_71 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_10(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_9'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
REF_70 (->creditLineVariables_10) := REF_71(CreditLine.CreditLineStatus)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_72(CreditLine.CreditLineConstants) -> creditLineConstants_8[_id_1]
[i]Type for REF_72

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_73(address) -> REF_72.borrower
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_9(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_8'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_73 (->creditLineConstants_9) := _borrower_1(address)
Finance type key: (-1, -1)
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_74(CreditLine.CreditLineConstants) -> creditLineConstants_9[_id_1]
[i]Type for REF_74

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_75(address) -> REF_74.lender
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_10(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_9'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_75 (->creditLineConstants_10) := _lender_1(address)
Finance type key: (-1, -1)
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_76(CreditLine.CreditLineConstants) -> creditLineConstants_10[_id_1]
[i]Type for REF_76

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_77(uint256) -> REF_76.borrowLimit
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_11(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_10'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_77 (->creditLineConstants_11) := _borrowLimit_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_78(CreditLine.CreditLineConstants) -> creditLineConstants_11[_id_1]
[i]Type for REF_78

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_79(bool) -> REF_78.autoLiquidation
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_12(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_11'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_79 (->creditLineConstants_12) := _autoLiquidation_1(bool)
Finance type key: (-1, -1)
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_80(CreditLine.CreditLineConstants) -> creditLineConstants_12[_id_1]
[i]Type for REF_80

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_81(uint256) -> REF_80.idealCollateralRatio
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_13(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_12'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_81 (->creditLineConstants_13) := _collateralRatio_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_82(CreditLine.CreditLineConstants) -> creditLineConstants_13[_id_1]
[i]Type for REF_82

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(uint256) -> REF_82.borrowRate
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_14(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_13'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_83 (->creditLineConstants_14) := _borrowRate_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_84(CreditLine.CreditLineConstants) -> creditLineConstants_14[_id_1]
[i]Type for REF_84

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_85(address) -> REF_84.borrowAsset
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_15(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_14'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_85 (->creditLineConstants_15) := _borrowAsset_1(address)
Finance type key: (-1, -1)
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: 
Den: 
Address: -997
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_86(CreditLine.CreditLineConstants) -> creditLineConstants_15[_id_1]
[i]Type for REF_86

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_87(address) -> REF_86.collateralAsset
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_16(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_15'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_87 (->creditLineConstants_16) := _collateralAsset_1(address)
Finance type key: (-1, -1)
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: 
Den: 
Address: -996
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_88(CreditLine.CreditLineConstants) -> creditLineConstants_16[_id_1]
[i]Type for REF_88

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(bool) -> REF_88.requestByLender
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_17(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_16'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_89 (->creditLineConstants_17) := _requestByLender_1(bool)
Finance type key: (-1, -1)
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
RETURN _id_1
_lender_1(address) := ϕ(['_lender_3'])
[i]Type for _lender

Name: _lender Function: _createRequest
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
_borrower_1(address) := ϕ(['_borrower_3'])
[i]Type for _borrower

Name: _borrower Function: _createRequest
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
_borrowLimit_1(uint256) := ϕ(['_borrowLimit_1'])
[i]Type for _borrowLimit

Name: _borrowLimit Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrowRate_1(uint256) := ϕ(['_borrowRate_1'])
[i]Type for _borrowRate

Name: _borrowRate Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_autoLiquidation_1(bool) := ϕ(['_autoLiquidation_1'])
[i]Type for _autoLiquidation

Name: _autoLiquidation Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_collateralRatio_1(uint256) := ϕ(['_collateralRatio_1'])
[i]Type for _collateralRatio

Name: _collateralRatio Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrowAsset_1(address) := ϕ(['_borrowAsset_1'])
[i]Type for _borrowAsset

Name: _borrowAsset Function: _createRequest
Num: 
Den: 
Address: -997
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
_collateralAsset_1(address) := ϕ(['_collateralAsset_1'])
[i]Type for _collateralAsset

Name: _collateralAsset Function: _createRequest
Num: 
Den: 
Address: -996
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
_requestByLender_1(bool) := ϕ(['_requestAsLender_1'])
[i]Type for _requestByLender

Name: _requestByLender Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineCounter_1(uint256) := ϕ(['creditLineCounter_2', 'creditLineCounter_0'])
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
creditLineVariables_9(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
creditLineConstants_8(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
TMP_124(bool) = _lender_1 != _borrower_1
[i]Type for TMP_124

Name: TMP_124 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,Lender and Borrower cannot be same addresses)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_126(uint256) = creditLineCounter_1 + 1
[i]Type for TMP_126

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
_id_1(uint256) := TMP_126(uint256)
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
creditLineCounter_2(uint256) := _id_1(uint256)
Finance type key: (-1, -1)
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
REF_69(CreditLine.CreditLineVariables) -> creditLineVariables_9[_id_1]
[i]Type for REF_69

Name: creditLineVariables Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_70(CreditLine.CreditLineStatus) -> REF_69.status
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_71(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
[i]Type for REF_71

Name: REF_71 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_10(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_9'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
REF_70 (->creditLineVariables_10) := REF_71(CreditLine.CreditLineStatus)
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_72(CreditLine.CreditLineConstants) -> creditLineConstants_8[_id_1]
[i]Type for REF_72

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_73(address) -> REF_72.borrower
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_9(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_8'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_73 (->creditLineConstants_9) := _borrower_1(address)
Finance type key: (-1, -1)
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_74(CreditLine.CreditLineConstants) -> creditLineConstants_9[_id_1]
[i]Type for REF_74

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_75(address) -> REF_74.lender
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_10(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_9'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_75 (->creditLineConstants_10) := _lender_1(address)
Finance type key: (-1, -1)
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_76(CreditLine.CreditLineConstants) -> creditLineConstants_10[_id_1]
[i]Type for REF_76

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_77(uint256) -> REF_76.borrowLimit
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_11(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_10'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_77 (->creditLineConstants_11) := _borrowLimit_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_78(CreditLine.CreditLineConstants) -> creditLineConstants_11[_id_1]
[i]Type for REF_78

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_79(bool) -> REF_78.autoLiquidation
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_12(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_11'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_79 (->creditLineConstants_12) := _autoLiquidation_1(bool)
Finance type key: (-1, -1)
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_80(CreditLine.CreditLineConstants) -> creditLineConstants_12[_id_1]
[i]Type for REF_80

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_81(uint256) -> REF_80.idealCollateralRatio
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_13(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_12'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_81 (->creditLineConstants_13) := _collateralRatio_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_82(CreditLine.CreditLineConstants) -> creditLineConstants_13[_id_1]
[i]Type for REF_82

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_83(uint256) -> REF_82.borrowRate
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_14(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_13'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_83 (->creditLineConstants_14) := _borrowRate_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_84(CreditLine.CreditLineConstants) -> creditLineConstants_14[_id_1]
[i]Type for REF_84

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_85(address) -> REF_84.borrowAsset
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_15(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_14'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_85 (->creditLineConstants_15) := _borrowAsset_1(address)
Finance type key: (-1, -1)
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: 
Den: 
Address: -997
Norm: u
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_86(CreditLine.CreditLineConstants) -> creditLineConstants_15[_id_1]
[i]Type for REF_86

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_87(address) -> REF_86.collateralAsset
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_16(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_15'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_87 (->creditLineConstants_16) := _collateralAsset_1(address)
Finance type key: (-1, -1)
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: 
Den: 
Address: -996
Norm: u
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_88(CreditLine.CreditLineConstants) -> creditLineConstants_16[_id_1]
[i]Type for REF_88

Name: creditLineConstants Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_89(bool) -> REF_88.requestByLender
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineConstants_17(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_16'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_89 (->creditLineConstants_17) := _requestByLender_1(bool)
Finance type key: (-1, -1)
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
RETURN _id_1
[i]Type for TMP_122

Name: TMP_122 Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
_id_1(uint256) := TMP_122(uint256)
Finance type key: (-1, -1)
[i]Type for _id

Name: _id Function: request
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
_lender_2(address) := msg.sender(address)
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_borrower_2(address) := _requestTo_1(address)
Finance type key: (-1, -1)
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Address: -998
Norm: u
LF: _requestTo
Value: u
Fields: 
Finance Type: undef
RETURN _id_1



accept
creditLineVariables_11(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
creditLineConstants_18(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_90(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
[i]Type for REF_90

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_91(CreditLine.CreditLineStatus) -> REF_90.status
[i]Type for REF_91

Name: REF_91 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_92(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
[i]Type for REF_92

Name: REF_92 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_127(bool) = REF_91 == REF_92
[i]Type for TMP_127

Name: TMP_127 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,CreditLine::acceptCreditLineLender - CreditLine is already accepted)
[i]Type for TMP_128

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_93(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
[i]Type for REF_93

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_94(bool) -> REF_93.requestByLender
[i]Type for REF_94

Name: REF_94 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_requestByLender_1(bool) := REF_94(bool)
Finance type key: (-1, -1)
[i]Type for _requestByLender

Name: _requestByLender Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_95(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
[i]Type for REF_95

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_96(address) -> REF_95.borrower
[i]Type for REF_96

Name: REF_96 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_129(bool) = msg.sender == REF_96
[i]Type for TMP_129

Name: TMP_129 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(bool) = TMP_129 && _requestByLender_1
[i]Type for TMP_130

Name: TMP_130 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_97(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
[i]Type for REF_97

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_98(address) -> REF_97.lender
[i]Type for REF_98

Name: REF_98 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_131(bool) = msg.sender == REF_98
[i]Type for TMP_131

Name: TMP_131 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_132 = ! _requestByLender_1 
[i]Type for TMP_132

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_133(bool) = TMP_131 && TMP_132
[i]Type for TMP_133

Name: TMP_133 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134(bool) = TMP_130 || TMP_133
[i]Type for TMP_134

Name: TMP_134 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Only Borrower or Lender who hasn't requested can accept)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_99(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
[i]Type for REF_99

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_100(CreditLine.CreditLineStatus) -> REF_99.status
[i]Type for REF_100

Name: REF_100 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_101(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_101

Name: REF_101 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_12(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_11'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
REF_100 (->creditLineVariables_12) := REF_101(CreditLine.CreditLineStatus)
Finance type key: (-1, -1)
[i]Type for REF_100

Name: REF_100 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_11(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
creditLineConstants_18(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_90(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
[i]Type for REF_90

Name: creditLineVariables Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_91(CreditLine.CreditLineStatus) -> REF_90.status
[i]Type for REF_91

Name: REF_91 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_92(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
[i]Type for REF_92

Name: REF_92 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_127(bool) = REF_91 == REF_92
[i]Type for TMP_127

Name: TMP_127 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,CreditLine::acceptCreditLineLender - CreditLine is already accepted)
[i]Type for TMP_128

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_93(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
[i]Type for REF_93

Name: creditLineConstants Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_94(bool) -> REF_93.requestByLender
[i]Type for REF_94

Name: REF_94 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_requestByLender_1(bool) := REF_94(bool)
Finance type key: (-1, -1)
[i]Type for _requestByLender

Name: _requestByLender Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_95(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
[i]Type for REF_95

Name: creditLineConstants Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_96(address) -> REF_95.borrower
[i]Type for REF_96

Name: REF_96 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_129(bool) = msg.sender == REF_96
[i]Type for TMP_129

Name: TMP_129 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(bool) = TMP_129 && _requestByLender_1
[i]Type for TMP_130

Name: TMP_130 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_97(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
[i]Type for REF_97

Name: creditLineConstants Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_98(address) -> REF_97.lender
[i]Type for REF_98

Name: REF_98 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_131(bool) = msg.sender == REF_98
[i]Type for TMP_131

Name: TMP_131 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_132 = ! _requestByLender_1 
[i]Type for TMP_132

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_133(bool) = TMP_131 && TMP_132
[i]Type for TMP_133

Name: TMP_133 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134(bool) = TMP_130 || TMP_133
[i]Type for TMP_134

Name: TMP_134 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Only Borrower or Lender who hasn't requested can accept)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_99(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
[i]Type for REF_99

Name: creditLineVariables Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_100(CreditLine.CreditLineStatus) -> REF_99.status
[i]Type for REF_100

Name: REF_100 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_101(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_101

Name: REF_101 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_12(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_11'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: accept
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
REF_100 (->creditLineVariables_12) := REF_101(CreditLine.CreditLineStatus)
Finance type key: (-1, -1)
[i]Type for REF_100

Name: REF_100 Function: accept
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)



depositCollateral
creditLineVariables_13(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
[i]Type for _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_status_2(uint256) := ϕ(['_status_0', '_status_1', '_status_4'])
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_387(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_387

Name: TMP_387 Function: nonReentrant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_388(None) = SOLIDITY_CALL require(bool,string)(TMP_387,ReentrancyGuard: reentrant call)
[i]Type for TMP_388

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_status_3(uint256) := _ENTERED_1(uint256)
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_status_4(uint256) := _NOT_ENTERED_2(uint256)
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
[i]Type for _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_status_2(uint256) := ϕ(['_status_0', '_status_1', '_status_4'])
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_387(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_387

Name: TMP_387 Function: nonReentrant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_388(None) = SOLIDITY_CALL require(bool,string)(TMP_387,ReentrancyGuard: reentrant call)
[i]Type for TMP_388

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_status_3(uint256) := _ENTERED_1(uint256)
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_status_4(uint256) := _NOT_ENTERED_2(uint256)
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_45(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
REF_315(CreditLine.CreditLineVariables) -> creditLineVariables_45[_id_1]
[i]Type for REF_315

Name: creditLineVariables Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_316(CreditLine.CreditLineStatus) -> REF_315.status
[i]Type for REF_316

Name: REF_316 Function: ifCreditLineExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_317(CreditLine.CreditLineStatus) -> CreditLineStatus.NOT_CREATED
[i]Type for REF_317

Name: REF_317 Function: ifCreditLineExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_389(bool) = REF_316 != REF_317
[i]Type for TMP_389

Name: TMP_389 Function: ifCreditLineExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_390(None) = SOLIDITY_CALL require(bool,string)(TMP_389,Credit line does not exist)
[i]Type for TMP_390

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_45(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: ifCreditLineExists
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
REF_315(CreditLine.CreditLineVariables) -> creditLineVariables_45[_id_1]
[i]Type for REF_315

Name: creditLineVariables Function: ifCreditLineExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_316(CreditLine.CreditLineStatus) -> REF_315.status
[i]Type for REF_316

Name: REF_316 Function: ifCreditLineExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_317(CreditLine.CreditLineStatus) -> CreditLineStatus.NOT_CREATED
[i]Type for REF_317

Name: REF_317 Function: ifCreditLineExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_389(bool) = REF_316 != REF_317
[i]Type for TMP_389

Name: TMP_389 Function: ifCreditLineExists
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_390(None) = SOLIDITY_CALL require(bool,string)(TMP_389,Credit line does not exist)
[i]Type for TMP_390

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_15(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
REF_102(CreditLine.CreditLineVariables) -> creditLineVariables_15[_id_1]
[i]Type for REF_102

Name: creditLineVariables Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_103(CreditLine.CreditLineStatus) -> REF_102.status
[i]Type for REF_103

Name: REF_103 Function: depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_104(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_104

Name: REF_104 Function: depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_137(bool) = REF_103 == REF_104
[i]Type for TMP_137

Name: TMP_137 Function: depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_138(None) = SOLIDITY_CALL require(bool,string)(TMP_137,CreditLine not active)
[i]Type for TMP_138

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine._depositCollateral(uint256,uint256,address,bool)(_id_1,_amount_1,_strategy_1,_fromSavingsAccount_1)
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_1'])
[i]Type for _amount

Name: _amount Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_strategy_1(address) := ϕ(['_strategy_1'])
[i]Type for _strategy

Name: _strategy Function: _depositCollateral
Num: 
Den: 
Address: -995
Norm: u
LF: _strategy
Value: u
Fields: 
Finance Type: undef
_fromSavingsAccount_1(bool) := ϕ(['_fromSavingsAccount_1'])
[i]Type for _fromSavingsAccount

Name: _fromSavingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_7(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_19(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
savingsAccount_4(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
REF_105(CreditLine.CreditLineConstants) -> creditLineConstants_19[_id_1]
[i]Type for REF_105

Name: creditLineConstants Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(address) -> REF_105.lender
[i]Type for REF_106

Name: REF_106 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_143(bool) = REF_106 != msg.sender
[i]Type for TMP_143

Name: TMP_143 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(None) = SOLIDITY_CALL require(bool,string)(TMP_143,lender cant deposit collateral)
[i]Type for TMP_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine._depositCollateralFromSavingsAccount(uint256,uint256,address)(_id_1,_amount_1,msg.sender)
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_1'])
[i]Type for _amount

Name: _amount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_sender_1(address) := ϕ(['msg.sender'])
[i]Type for _sender

Name: _sender Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: _sender
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_1(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_7(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
savingsAccount_2(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_2(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
REF_49(CreditLine.CreditLineConstants) -> creditLineConstants_7[_id_1]
[i]Type for REF_49

Name: creditLineConstants Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_50(address) -> REF_49.collateralAsset
[i]Type for REF_50

Name: REF_50 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_collateralAsset_1(address) := REF_50(address)
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_94 = CONVERT strategyRegistry_2 to IStrategyRegistry
[i]Type for TMP_94

Name: TMP_94 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_95(address[]) = HIGH_LEVEL_CALL, dest:TMP_94(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_95

Name: TMP_95 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: -994
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_2(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_1', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_3(address) := ϕ(['savingsAccount_13', 'savingsAccount_2', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_3(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_2', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_95(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: -994
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_96 = CONVERT savingsAccount_3 to ISavingsAccount
[i]Type for TMP_96

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_savingsAccount_1(ISavingsAccount) := TMP_96(ISavingsAccount)
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_52 -> LENGTH _strategyList_1
[i]Type for REF_52

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_97(bool) = _index_2 < REF_52
[i]Type for TMP_97

Name: TMP_97 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_53(address) -> _strategyList_1[_index_2]
[i]Type for REF_53

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: -994
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_strategy_1(address) := REF_53(address)
Finance type key: (-1, -1)
[i]Type for _strategy

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: -994
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_98(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_sender_1', '_collateralAsset_1', '_strategy_1']  
[i]Type for TMP_98

Name: TMP_98 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_3(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_2', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_liquidityShares_1(uint256) := TMP_98(uint256)
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_116(None) = SOLIDITY_CALL revert(string)(CreditLine::_depositCollateralFromSavingsAccount - Insufficient balance)
[i]Type for TMP_116

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_99(bool) = _liquidityShares_1 == 0
[i]Type for TMP_99

Name: TMP_99 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_55(address) -> _strategyList_1[_index_2]
[i]Type for REF_55

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: -994
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100 = CONVERT 0 to address
[i]Type for TMP_100

Name: TMP_100 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101(bool) = REF_55 == TMP_100
[i]Type for TMP_101

Name: TMP_101 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_102(bool) = TMP_99 || TMP_101
[i]Type for TMP_102

Name: TMP_102 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_103 = CONVERT _strategy_1 to IYield
[i]Type for TMP_103

Name: TMP_103 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: -994
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_104(uint256) = HIGH_LEVEL_CALL, dest:TMP_103(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
[i]Type for TMP_104

Name: TMP_104 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_4(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6', 'collateralShareInStrategy_3'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_104(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_105(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_105

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_106(bool) = TMP_105 >= _amount_1
[i]Type for TMP_106

Name: TMP_106 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
[i]Type for TMP_108

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_2(uint256) := TMP_108(uint256)
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_107(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
[i]Type for TMP_107

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_2(uint256) := TMP_107(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109 = CONVERT this to address
[i]Type for TMP_109

Name: TMP_109 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_110(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_collateralAsset_1', '_strategy_1', '_sender_1', 'TMP_109']  
[i]Type for TMP_110

Name: TMP_110 Function: _depositCollateralFromSavingsAccount
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
collateralShareInStrategy_5(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_4', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_61(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
[i]Type for REF_61

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_62(uint256) -> REF_61[_strategy_1]
[i]Type for REF_62

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_63(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
[i]Type for REF_63

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_64(uint256) -> REF_63[_strategy_1]
[i]Type for REF_64

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_liquidityShares_1', '_tokensToTransfer_3'] 
[i]Type for TMP_111

Name: TMP_111 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_112(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_111', '_tokenInStrategy_2'] 
[i]Type for TMP_112

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_113(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_64', 'TMP_112'] 
[i]Type for TMP_113

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_6(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_5'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_62 (->collateralShareInStrategy_6) := TMP_113(uint256)
Finance type key: (-1, -1)
[i]Type for REF_62

Name: REF_62 Function: _depositCollateralFromSavingsAccount
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_114(bool) = _amount_1 == _activeAmount_2
[i]Type for TMP_114

Name: TMP_114 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_115(uint256) := _index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_115

Name: TMP_115 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_3(uint256) = _index_2 + 1
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_1'])
[i]Type for _amount

Name: _amount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_sender_1(address) := ϕ(['msg.sender'])
[i]Type for _sender

Name: _sender Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: _sender
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_1(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_7(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
savingsAccount_2(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_2(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
REF_49(CreditLine.CreditLineConstants) -> creditLineConstants_7[_id_1]
[i]Type for REF_49

Name: creditLineConstants Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_50(address) -> REF_49.collateralAsset
[i]Type for REF_50

Name: REF_50 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_collateralAsset_1(address) := REF_50(address)
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_94 = CONVERT strategyRegistry_2 to IStrategyRegistry
[i]Type for TMP_94

Name: TMP_94 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_95(address[]) = HIGH_LEVEL_CALL, dest:TMP_94(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_95

Name: TMP_95 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: -994
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_2(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_1', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_3(address) := ϕ(['savingsAccount_13', 'savingsAccount_2', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_3(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_2', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_95(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: -994
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_96 = CONVERT savingsAccount_3 to ISavingsAccount
[i]Type for TMP_96

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_savingsAccount_1(ISavingsAccount) := TMP_96(ISavingsAccount)
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_52 -> LENGTH _strategyList_1
[i]Type for REF_52

Name: REF_52 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_97(bool) = _index_2 < REF_52
[i]Type for TMP_97

Name: TMP_97 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_53(address) -> _strategyList_1[_index_2]
[i]Type for REF_53

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: -994
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_strategy_1(address) := REF_53(address)
Finance type key: (-1, -1)
[i]Type for _strategy

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: -994
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_98(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_sender_1', '_collateralAsset_1', '_strategy_1']  
[i]Type for TMP_98

Name: TMP_98 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_3(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_2', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_liquidityShares_1(uint256) := TMP_98(uint256)
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_116(None) = SOLIDITY_CALL revert(string)(CreditLine::_depositCollateralFromSavingsAccount - Insufficient balance)
[i]Type for TMP_116

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_99(bool) = _liquidityShares_1 == 0
[i]Type for TMP_99

Name: TMP_99 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_55(address) -> _strategyList_1[_index_2]
[i]Type for REF_55

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: -994
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_100 = CONVERT 0 to address
[i]Type for TMP_100

Name: TMP_100 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101(bool) = REF_55 == TMP_100
[i]Type for TMP_101

Name: TMP_101 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_102(bool) = TMP_99 || TMP_101
[i]Type for TMP_102

Name: TMP_102 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_103 = CONVERT _strategy_1 to IYield
[i]Type for TMP_103

Name: TMP_103 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: -994
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_104(uint256) = HIGH_LEVEL_CALL, dest:TMP_103(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
[i]Type for TMP_104

Name: TMP_104 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_4(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6', 'collateralShareInStrategy_3'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_104(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_105(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_105

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_106(bool) = TMP_105 >= _amount_1
[i]Type for TMP_106

Name: TMP_106 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
[i]Type for TMP_108

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_2(uint256) := TMP_108(uint256)
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_107(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
[i]Type for TMP_107

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_2(uint256) := TMP_107(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_109 = CONVERT this to address
[i]Type for TMP_109

Name: TMP_109 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_110(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_collateralAsset_1', '_strategy_1', '_sender_1', 'TMP_109']  
[i]Type for TMP_110

Name: TMP_110 Function: _depositCollateralFromSavingsAccount
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
collateralShareInStrategy_5(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_4', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_61(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
[i]Type for REF_61

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_62(uint256) -> REF_61[_strategy_1]
[i]Type for REF_62

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_63(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
[i]Type for REF_63

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_64(uint256) -> REF_63[_strategy_1]
[i]Type for REF_64

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_111(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_liquidityShares_1', '_tokensToTransfer_3'] 
[i]Type for TMP_111

Name: TMP_111 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_112(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_111', '_tokenInStrategy_2'] 
[i]Type for TMP_112

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_113(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_64', 'TMP_112'] 
[i]Type for TMP_113

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_6(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_5'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_62 (->collateralShareInStrategy_6) := TMP_113(uint256)
Finance type key: (-1, -1)
[i]Type for REF_62

Name: REF_62 Function: _depositCollateralFromSavingsAccount
Num: -994
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_114(bool) = _amount_1 == _activeAmount_2
[i]Type for TMP_114

Name: TMP_114 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_115(uint256) := _index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_115

Name: TMP_115 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_3(uint256) = _index_2 + 1
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
REF_107(CreditLine.CreditLineConstants) -> creditLineConstants_19[_id_1]
[i]Type for REF_107

Name: creditLineConstants Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_108(address) -> REF_107.collateralAsset
[i]Type for REF_108

Name: REF_108 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_collateralAsset_1(address) := REF_108(address)
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_146 = CONVERT savingsAccount_4 to ISavingsAccount
[i]Type for TMP_146

Name: TMP_146 Function: _depositCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_savingsAccount_1(ISavingsAccount) := TMP_146(ISavingsAccount)
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_147 = CONVERT 0 to address
[i]Type for TMP_147

Name: TMP_147 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_148(bool) = _collateralAsset_1 == TMP_147
[i]Type for TMP_148

Name: TMP_148 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_151 = CONVERT _collateralAsset_1 to IERC20
[i]Type for TMP_151

Name: TMP_151 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_152 = CONVERT this to address
[i]Type for TMP_152

Name: TMP_152 Function: _depositCollateral
Num: -1
Den: -1
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_151', 'msg.sender', 'TMP_152', '_amount_1'] 
TMP_149(bool) = msg.value == _amount_1
[i]Type for TMP_149

Name: TMP_149 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_150(None) = SOLIDITY_CALL require(bool,string)(TMP_149,CreditLine::_depositCollateral - value to transfer doesn't match argument)
[i]Type for TMP_150

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_154 = CONVERT _collateralAsset_1 to IERC20
[i]Type for TMP_154

Name: TMP_154 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_155(bool) = HIGH_LEVEL_CALL, dest:TMP_154(IERC20), function:approve, arguments:['_strategy_1', '_amount_1']  
[i]Type for TMP_155

Name: TMP_155 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_8(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_7', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_156 = CONVERT this to address
[i]Type for TMP_156

Name: TMP_156 Function: _depositCollateral
Num: -1
Den: -1
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_157(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_collateralAsset_1', '_strategy_1', 'TMP_156'] value:msg.value 
[i]Type for TMP_157

Name: TMP_157 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_9(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_8', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_sharesReceived_1(uint256) := TMP_157(uint256)
Finance type key: (-1, -1)
[i]Type for _sharesReceived

Name: _sharesReceived Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_112(mapping(address => uint256)) -> collateralShareInStrategy_9[_id_1]
[i]Type for REF_112

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_113(uint256) -> REF_112[_strategy_1]
[i]Type for REF_113

Name: collateralShareInStrategy Function: _depositCollateral
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_114(mapping(address => uint256)) -> collateralShareInStrategy_9[_id_1]
[i]Type for REF_114

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_115(uint256) -> REF_114[_strategy_1]
[i]Type for REF_115

Name: collateralShareInStrategy Function: _depositCollateral
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_158(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_115', '_sharesReceived_1'] 
[i]Type for TMP_158

Name: TMP_158 Function: _depositCollateral
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_10(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_9'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_113 (->collateralShareInStrategy_10) := TMP_158(uint256)
Finance type key: (-1, -1)
[i]Type for REF_113

Name: REF_113 Function: _depositCollateral
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_1'])
[i]Type for _amount

Name: _amount Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_strategy_1(address) := ϕ(['_strategy_1'])
[i]Type for _strategy

Name: _strategy Function: _depositCollateral
Num: 
Den: 
Address: -995
Norm: u
LF: _strategy
Value: u
Fields: 
Finance Type: undef
_fromSavingsAccount_1(bool) := ϕ(['_fromSavingsAccount_1'])
[i]Type for _fromSavingsAccount

Name: _fromSavingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_7(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_19(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
savingsAccount_4(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
REF_105(CreditLine.CreditLineConstants) -> creditLineConstants_19[_id_1]
[i]Type for REF_105

Name: creditLineConstants Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_106(address) -> REF_105.lender
[i]Type for REF_106

Name: REF_106 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_143(bool) = REF_106 != msg.sender
[i]Type for TMP_143

Name: TMP_143 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(None) = SOLIDITY_CALL require(bool,string)(TMP_143,lender cant deposit collateral)
[i]Type for TMP_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine._depositCollateralFromSavingsAccount(uint256,uint256,address)(_id_1,_amount_1,msg.sender)
REF_107(CreditLine.CreditLineConstants) -> creditLineConstants_19[_id_1]
[i]Type for REF_107

Name: creditLineConstants Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_108(address) -> REF_107.collateralAsset
[i]Type for REF_108

Name: REF_108 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_collateralAsset_1(address) := REF_108(address)
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_146 = CONVERT savingsAccount_4 to ISavingsAccount
[i]Type for TMP_146

Name: TMP_146 Function: _depositCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_savingsAccount_1(ISavingsAccount) := TMP_146(ISavingsAccount)
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_147 = CONVERT 0 to address
[i]Type for TMP_147

Name: TMP_147 Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_148(bool) = _collateralAsset_1 == TMP_147
[i]Type for TMP_148

Name: TMP_148 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_151 = CONVERT _collateralAsset_1 to IERC20
[i]Type for TMP_151

Name: TMP_151 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_152 = CONVERT this to address
[i]Type for TMP_152

Name: TMP_152 Function: _depositCollateral
Num: 
Den: 
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_151', 'msg.sender', 'TMP_152', '_amount_1'] 
TMP_149(bool) = msg.value == _amount_1
[i]Type for TMP_149

Name: TMP_149 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_150(None) = SOLIDITY_CALL require(bool,string)(TMP_149,CreditLine::_depositCollateral - value to transfer doesn't match argument)
[i]Type for TMP_150

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_154 = CONVERT _collateralAsset_1 to IERC20
[i]Type for TMP_154

Name: TMP_154 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_155(bool) = HIGH_LEVEL_CALL, dest:TMP_154(IERC20), function:approve, arguments:['_strategy_1', '_amount_1']  
[i]Type for TMP_155

Name: TMP_155 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_8(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_7', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_156 = CONVERT this to address
[i]Type for TMP_156

Name: TMP_156 Function: _depositCollateral
Num: 
Den: 
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_157(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_collateralAsset_1', '_strategy_1', 'TMP_156'] value:msg.value 
[i]Type for TMP_157

Name: TMP_157 Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_9(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_8', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_sharesReceived_1(uint256) := TMP_157(uint256)
Finance type key: (-1, -1)
[i]Type for _sharesReceived

Name: _sharesReceived Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_112(mapping(address => uint256)) -> collateralShareInStrategy_9[_id_1]
[i]Type for REF_112

Name: collateralShareInStrategy Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_113(uint256) -> REF_112[_strategy_1]
[i]Type for REF_113

Name: collateralShareInStrategy Function: _depositCollateral
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_114(mapping(address => uint256)) -> collateralShareInStrategy_9[_id_1]
[i]Type for REF_114

Name: collateralShareInStrategy Function: _depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_115(uint256) -> REF_114[_strategy_1]
[i]Type for REF_115

Name: collateralShareInStrategy Function: _depositCollateral
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_158(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_115', '_sharesReceived_1'] 
[i]Type for TMP_158

Name: TMP_158 Function: _depositCollateral
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_10(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_9'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_113 (->collateralShareInStrategy_10) := TMP_158(uint256)
Finance type key: (-1, -1)
[i]Type for REF_113

Name: REF_113 Function: _depositCollateral
Num: -995
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_13(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
creditLineVariables_15(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: depositCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
REF_102(CreditLine.CreditLineVariables) -> creditLineVariables_15[_id_1]
[i]Type for REF_102

Name: creditLineVariables Function: depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_103(CreditLine.CreditLineStatus) -> REF_102.status
[i]Type for REF_103

Name: REF_103 Function: depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_104(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_104

Name: REF_104 Function: depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_137(bool) = REF_103 == REF_104
[i]Type for TMP_137

Name: TMP_137 Function: depositCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_138(None) = SOLIDITY_CALL require(bool,string)(TMP_137,CreditLine not active)
[i]Type for TMP_138

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine._depositCollateral(uint256,uint256,address,bool)(_id_1,_amount_1,_strategy_1,_fromSavingsAccount_1)



borrow
creditLineVariables_16(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
creditLineConstants_20(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
protocolFeeFraction_2(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_0', 'protocolFeeFraction_1', 'protocolFeeFraction_12'])
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: borrow
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFeeCollector_2(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_12', 'protocolFeeCollector_0', 'protocolFeeCollector_9'])
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: borrow
Num: -1
Den: -1
Address: 7
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
MODIFIER_CALL, CreditLine.onlyCreditLineBorrower(uint256)(_id_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: onlyCreditLineBorrower
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_47(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: onlyCreditLineBorrower
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_318(CreditLine.CreditLineConstants) -> creditLineConstants_47[_id_1]
[i]Type for REF_318

Name: creditLineConstants Function: onlyCreditLineBorrower
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_319(address) -> REF_318.borrower
[i]Type for REF_319

Name: REF_319 Function: onlyCreditLineBorrower
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_391(bool) = REF_319 == msg.sender
[i]Type for TMP_391

Name: TMP_391 Function: onlyCreditLineBorrower
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_392(None) = SOLIDITY_CALL require(bool,string)(TMP_391,Only credit line Borrower can access)
[i]Type for TMP_392

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: onlyCreditLineBorrower
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_47(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: onlyCreditLineBorrower
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_318(CreditLine.CreditLineConstants) -> creditLineConstants_47[_id_1]
[i]Type for REF_318

Name: creditLineConstants Function: onlyCreditLineBorrower
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_319(address) -> REF_318.borrower
[i]Type for REF_319

Name: REF_319 Function: onlyCreditLineBorrower
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_391(bool) = REF_319 == msg.sender
[i]Type for TMP_391

Name: TMP_391 Function: onlyCreditLineBorrower
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_392(None) = SOLIDITY_CALL require(bool,string)(TMP_391,Only credit line Borrower can access)
[i]Type for TMP_392

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_22(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_47'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_129(CreditLine.CreditLineVariables) -> creditLineVariables_18[_id_1]
[i]Type for REF_129

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_130(CreditLine.CreditLineStatus) -> REF_129.status
[i]Type for REF_130

Name: REF_130 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_131(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_131

Name: REF_131 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_179(bool) = REF_130 == REF_131
[i]Type for TMP_179

Name: TMP_179 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,CreditLine: The credit line is not yet active.)
[i]Type for TMP_180

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_181(uint256) = INTERNAL_CALL, CreditLine.calculateBorrowableAmount(uint256)(_id_1)
[i]Type for TMP_181

Name: TMP_181 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_19(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_5'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
creditLineConstants_23(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_6'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
_borrowableAmount_1(uint256) := TMP_181(uint256)
Finance type key: (-1, -1)
[i]Type for _borrowableAmount

Name: _borrowableAmount Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_182(bool) = _amount_1 <= _borrowableAmount_1
[i]Type for TMP_182

Name: TMP_182 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_183(None) = SOLIDITY_CALL require(bool,string)(TMP_182,CreditLine::borrow - The current collateral ratio doesn't allow to withdraw the amount)
[i]Type for TMP_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_132(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
[i]Type for REF_132

Name: creditLineConstants Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_133(address) -> REF_132.borrowAsset
[i]Type for REF_133

Name: creditLineConstants.borrowAsset Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_borrowAsset_1(address) := REF_133(address)
Finance type key: (-1, -1)
[i]Type for _borrowAsset

Name: _borrowAsset Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_134(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
[i]Type for REF_134

Name: creditLineConstants Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_135(address) -> REF_134.lender
[i]Type for REF_135

Name: REF_135 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_lender_1(address) := REF_135(address)
Finance type key: (-1, -1)
[i]Type for _lender

Name: _lender Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine.updateinterestAccruedTillLastPrincipalUpdate(uint256)(_id_1)
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_6(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
REF_41(CreditLine.CreditLineVariables) -> creditLineVariables_6[_id_1]
[i]Type for REF_41

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_42(CreditLine.CreditLineStatus) -> REF_41.status
[i]Type for REF_42

Name: REF_42 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_43(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_43

Name: REF_43 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_90(bool) = REF_42 == REF_43
[i]Type for TMP_90

Name: TMP_90 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_91(None) = SOLIDITY_CALL require(bool,string)(TMP_90,CreditLine: The credit line is not yet active.)
[i]Type for TMP_91

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_92(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
[i]Type for TMP_92

Name: TMP_92 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_7(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
_interestAccrued_1(uint256) := TMP_92(uint256)
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_44(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
[i]Type for REF_44

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_45(uint256) -> REF_44.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_45

Name: REF_45 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_93(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_45', '_interestAccrued_1'] 
[i]Type for TMP_93

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_newInterestAccrued_1(uint256) := TMP_93(uint256)
Finance type key: (-1, -1)
[i]Type for _newInterestAccrued

Name: _newInterestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_47(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
[i]Type for REF_47

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_48(uint256) -> REF_47.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_48

Name: REF_48 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_8(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_7'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
REF_48 (->creditLineVariables_8) := _newInterestAccrued_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_48

Name: REF_48 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_6(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
REF_41(CreditLine.CreditLineVariables) -> creditLineVariables_6[_id_1]
[i]Type for REF_41

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_42(CreditLine.CreditLineStatus) -> REF_41.status
[i]Type for REF_42

Name: REF_42 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_43(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_43

Name: REF_43 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_90(bool) = REF_42 == REF_43
[i]Type for TMP_90

Name: TMP_90 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_91(None) = SOLIDITY_CALL require(bool,string)(TMP_90,CreditLine: The credit line is not yet active.)
[i]Type for TMP_91

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_92(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
[i]Type for TMP_92

Name: TMP_92 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_7(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
_interestAccrued_1(uint256) := TMP_92(uint256)
Finance type key: (-1, -1)
[i]Type for _interestAccrued

Name: _interestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_44(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
[i]Type for REF_44

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_45(uint256) -> REF_44.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_45

Name: REF_45 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_93(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_45', '_interestAccrued_1'] 
[i]Type for TMP_93

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_newInterestAccrued_1(uint256) := TMP_93(uint256)
Finance type key: (-1, -1)
[i]Type for _newInterestAccrued

Name: _newInterestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_47(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
[i]Type for REF_47

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_48(uint256) -> REF_47.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_48

Name: REF_48 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_8(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_7'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
REF_48 (->creditLineVariables_8) := _newInterestAccrued_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_48

Name: REF_48 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_20(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_8'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status
Finance Type: undef
REF_136(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
[i]Type for REF_136

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_137(uint256) -> REF_136.principal
[i]Type for REF_137

Name: REF_137 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_138(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
[i]Type for REF_138

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_139(uint256) -> REF_138.principal
[i]Type for REF_139

Name: REF_139 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_185(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_139', '_amount_1'] 
[i]Type for TMP_185

Name: TMP_185 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_21(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_20'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal
Finance Type: undef
REF_137 (->creditLineVariables_21) := TMP_185(uint256)
Finance type key: (-1, -1)
[i]Type for REF_137

Name: REF_137 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_141(CreditLine.CreditLineVariables) -> creditLineVariables_21[_id_1]
[i]Type for REF_141

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_142(uint256) -> REF_141.lastPrincipalUpdateTime
[i]Type for REF_142

Name: REF_142 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_22(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_21'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime
Finance Type: undef
REF_142 (->creditLineVariables_22) := block.timestamp(uint256)
[i]Type for REF_142

Name: REF_142 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_186 = CONVERT 0 to address
[i]Type for TMP_186

Name: TMP_186 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_187(bool) = _borrowAsset_1 != TMP_186
[i]Type for TMP_187

Name: TMP_187 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_196

Name: TMP_196 Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_197 = CONVERT this to address
[i]Type for TMP_197

Name: TMP_197 Function: borrow
Num: -1
Den: -1
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_198(uint256) = HIGH_LEVEL_CALL, dest:TMP_196(IERC20), function:balanceOf, arguments:['TMP_197']  
[i]Type for TMP_198

Name: TMP_198 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
protocolFeeFraction_10(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_1', 'protocolFeeFraction_12'])
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: borrow
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFeeCollector_10(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_12', 'protocolFeeCollector_9'])
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: borrow
Num: -1
Den: -1
Address: 7
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
_balanceBefore_scope_0_1(uint256) := TMP_198(uint256)
Finance type key: (0, -1)
[i]Type for _balanceBefore_scope_0

Name: _balanceBefore_scope_0 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
INTERNAL_CALL, CreditLine._withdrawBorrowAmount(address,uint256,address)(_borrowAsset_1,_amount_1,_lender_1)
_asset_1(address) := ϕ(['_borrowAsset_1'])
[i]Type for _asset

Name: _asset Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 1
Norm: 18
LF: _asset
Value: u
Fields: 
Finance Type: undef
_amountInTokens_1(uint256) := ϕ(['_amount_1'])
[i]Type for _amountInTokens

Name: _amountInTokens Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_lender_1(address) := ϕ(['_lender_1'])
[i]Type for _lender

Name: _lender Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: _lender
Value: u
Fields: 
Finance Type: undef
savingsAccount_5(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_4(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_159 = CONVERT strategyRegistry_4 to IStrategyRegistry
[i]Type for TMP_159

Name: TMP_159 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_160(address[]) = HIGH_LEVEL_CALL, dest:TMP_159(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_160

Name: TMP_160 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_6(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8', 'savingsAccount_5'])
[i]Type for savingsAccount

Name: savingsAccount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_5(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_4', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_160(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_161 = CONVERT savingsAccount_6 to ISavingsAccount
[i]Type for TMP_161

Name: TMP_161 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_savingsAccount_1(ISavingsAccount) := TMP_161(ISavingsAccount)
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_index_2(uint256) := ϕ(['_index_1', '_index_3'])
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_118 -> LENGTH _strategyList_1
[i]Type for REF_118

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_162(bool) = _index_2 < REF_118
[i]Type for TMP_162

Name: TMP_162 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_119(address) -> _strategyList_1[_index_2]
[i]Type for REF_119

Name: _strategyList Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_163 = CONVERT 0 to address
[i]Type for TMP_163

Name: TMP_163 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(bool) = REF_119 == TMP_163
[i]Type for TMP_164

Name: TMP_164 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(bool) = _activeAmount_0 == _amountInTokens_1
[i]Type for TMP_177

Name: TMP_177 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,insufficient balance)
[i]Type for TMP_178

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_121(address) -> _strategyList_1[_index_2]
[i]Type for REF_121

Name: _strategyList Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_lender_1', '_asset_1', 'REF_121']  
[i]Type for TMP_165

Name: TMP_165 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_liquidityShares_1(uint256) := TMP_165(uint256)
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = _liquidityShares_1 != 0
[i]Type for TMP_166

Name: TMP_166 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for tokenInStrategy

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_2(uint256) := ϕ(['_activeAmount_1', '_activeAmount_0'])
[i]Type for _activeAmount

Name: _activeAmount Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_122(address) -> _strategyList_1[_index_2]
[i]Type for REF_122

Name: _strategyList Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167 = CONVERT REF_122 to IYield
[i]Type for TMP_167

Name: TMP_167 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_168(uint256) = HIGH_LEVEL_CALL, dest:TMP_167(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_asset_1']  
[i]Type for TMP_168

Name: TMP_168 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenInStrategy_2(uint256) := TMP_168(uint256)
Finance type key: (-1, -1)
[i]Type for tokenInStrategy

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_176(uint256) := _index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_176

Name: TMP_176 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_3(uint256) = _index_2 + 1
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
_tokensToTransfer_1(uint256) := tokenInStrategy_2(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', 'tokenInStrategy_2'] 
[i]Type for TMP_169

Name: TMP_169 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_170(bool) = TMP_169 >= _amountInTokens_1
[i]Type for TMP_170

Name: TMP_170 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_0'] 
[i]Type for TMP_171

Name: TMP_171 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_2(uint256) := TMP_171(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_1', '_tokensToTransfer_2'])
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_172(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', '_tokensToTransfer_3'] 
[i]Type for TMP_172

Name: TMP_172 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_128(address) -> _strategyList_1[_index_2]
[i]Type for REF_128

Name: _strategyList Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_173 = CONVERT this to address
[i]Type for TMP_173

Name: TMP_173 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_174(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:withdrawFrom, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_128', '_lender_1', 'TMP_173', 'False']  
[i]Type for TMP_174

Name: TMP_174 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_175(bool) = _activeAmount_1 == _amountInTokens_1
[i]Type for TMP_175

Name: TMP_175 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(address) := ϕ(['_borrowAsset_1'])
[i]Type for _asset

Name: _asset Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 1
Norm: 18
LF: _asset
Value: u
Fields: 
Finance Type: undef
_amountInTokens_1(uint256) := ϕ(['_amount_1'])
[i]Type for _amountInTokens

Name: _amountInTokens Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_lender_1(address) := ϕ(['_lender_1'])
[i]Type for _lender

Name: _lender Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: _lender
Value: u
Fields: 
Finance Type: undef
savingsAccount_5(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_4(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_159 = CONVERT strategyRegistry_4 to IStrategyRegistry
[i]Type for TMP_159

Name: TMP_159 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_160(address[]) = HIGH_LEVEL_CALL, dest:TMP_159(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_160

Name: TMP_160 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_6(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8', 'savingsAccount_5'])
[i]Type for savingsAccount

Name: savingsAccount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_5(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_4', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_160(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_161 = CONVERT savingsAccount_6 to ISavingsAccount
[i]Type for TMP_161

Name: TMP_161 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_savingsAccount_1(ISavingsAccount) := TMP_161(ISavingsAccount)
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_index_2(uint256) := ϕ(['_index_1', '_index_3'])
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_118 -> LENGTH _strategyList_1
[i]Type for REF_118

Name: REF_118 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_162(bool) = _index_2 < REF_118
[i]Type for TMP_162

Name: TMP_162 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_119(address) -> _strategyList_1[_index_2]
[i]Type for REF_119

Name: _strategyList Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_163 = CONVERT 0 to address
[i]Type for TMP_163

Name: TMP_163 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_164(bool) = REF_119 == TMP_163
[i]Type for TMP_164

Name: TMP_164 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_177(bool) = _activeAmount_0 == _amountInTokens_1
[i]Type for TMP_177

Name: TMP_177 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,insufficient balance)
[i]Type for TMP_178

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_121(address) -> _strategyList_1[_index_2]
[i]Type for REF_121

Name: _strategyList Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_165(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_lender_1', '_asset_1', 'REF_121']  
[i]Type for TMP_165

Name: TMP_165 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_liquidityShares_1(uint256) := TMP_165(uint256)
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_166(bool) = _liquidityShares_1 != 0
[i]Type for TMP_166

Name: TMP_166 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for tokenInStrategy

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_2(uint256) := ϕ(['_activeAmount_1', '_activeAmount_0'])
[i]Type for _activeAmount

Name: _activeAmount Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_122(address) -> _strategyList_1[_index_2]
[i]Type for REF_122

Name: _strategyList Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_167 = CONVERT REF_122 to IYield
[i]Type for TMP_167

Name: TMP_167 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_168(uint256) = HIGH_LEVEL_CALL, dest:TMP_167(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_asset_1']  
[i]Type for TMP_168

Name: TMP_168 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenInStrategy_2(uint256) := TMP_168(uint256)
Finance type key: (-1, -1)
[i]Type for tokenInStrategy

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_176(uint256) := _index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_176

Name: TMP_176 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_3(uint256) = _index_2 + 1
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
_tokensToTransfer_1(uint256) := tokenInStrategy_2(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_169(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', 'tokenInStrategy_2'] 
[i]Type for TMP_169

Name: TMP_169 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_170(bool) = TMP_169 >= _amountInTokens_1
[i]Type for TMP_170

Name: TMP_170 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_171(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_0'] 
[i]Type for TMP_171

Name: TMP_171 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_2(uint256) := TMP_171(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_1', '_tokensToTransfer_2'])
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_172(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', '_tokensToTransfer_3'] 
[i]Type for TMP_172

Name: TMP_172 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_1(uint256) := TMP_172(uint256)
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_128(address) -> _strategyList_1[_index_2]
[i]Type for REF_128

Name: _strategyList Function: _withdrawBorrowAmount
Num: 
Den: 
Address: -993
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_173 = CONVERT this to address
[i]Type for TMP_173

Name: TMP_173 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_174(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:withdrawFrom, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_128', '_lender_1', 'TMP_173', 'False']  
[i]Type for TMP_174

Name: TMP_174 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_175(bool) = _activeAmount_1 == _amountInTokens_1
[i]Type for TMP_175

Name: TMP_175 Function: _withdrawBorrowAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_200 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_200

Name: TMP_200 Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_201 = CONVERT this to address
[i]Type for TMP_201

Name: TMP_201 Function: borrow
Num: -1
Den: -1
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = HIGH_LEVEL_CALL, dest:TMP_200(IERC20), function:balanceOf, arguments:['TMP_201']  
[i]Type for TMP_202

Name: TMP_202 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
protocolFeeFraction_12(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_11', 'protocolFeeFraction_1', 'protocolFeeFraction_12'])
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: borrow
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFeeCollector_12(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_12', 'protocolFeeCollector_11', 'protocolFeeCollector_9'])
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: borrow
Num: -1
Den: -1
Address: 7
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
_balanceAfter_scope_1_1(uint256) := TMP_202(uint256)
Finance type key: (0, -1)
[i]Type for _balanceAfter_scope_1

Name: _balanceAfter_scope_1 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_188 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_188

Name: TMP_188 Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_189 = CONVERT this to address
[i]Type for TMP_189

Name: TMP_189 Function: borrow
Num: -1
Den: -1
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = HIGH_LEVEL_CALL, dest:TMP_188(IERC20), function:balanceOf, arguments:['TMP_189']  
[i]Type for TMP_190

Name: TMP_190 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
protocolFeeFraction_7(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_6', 'protocolFeeFraction_1', 'protocolFeeFraction_12'])
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: borrow
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFeeCollector_7(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_12', 'protocolFeeCollector_9', 'protocolFeeCollector_6'])
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: borrow
Num: -1
Den: -1
Address: 7
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
_balanceBefore_1(uint256) := TMP_190(uint256)
Finance type key: (0, -1)
[i]Type for _balanceBefore

Name: _balanceBefore Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_balanceAfter_scope_1_1', '_balanceBefore_scope_0_1'] 
Finance type key: (0, 0)
[i]Type for TMP_203

Name: TMP_203 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_tokenDiffBalance_2(uint256) := TMP_203(uint256)
Finance type key: (0, -1)
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_tokenDiffBalance_3(uint256) := ϕ(['_tokenDiffBalance_1', '_tokenDiffBalance_2'])
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
INTERNAL_CALL, CreditLine._withdrawBorrowAmount(address,uint256,address)(_borrowAsset_1,_amount_1,_lender_1)
TMP_192 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_192

Name: TMP_192 Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_193 = CONVERT this to address
[i]Type for TMP_193

Name: TMP_193 Function: borrow
Num: -1
Den: -1
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_194(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IERC20), function:balanceOf, arguments:['TMP_193']  
[i]Type for TMP_194

Name: TMP_194 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
protocolFeeFraction_9(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_8', 'protocolFeeFraction_1', 'protocolFeeFraction_12'])
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: borrow
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFeeCollector_9(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_12', 'protocolFeeCollector_8', 'protocolFeeCollector_9'])
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: borrow
Num: -1
Den: -1
Address: 7
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
_balanceAfter_1(uint256) := TMP_194(uint256)
Finance type key: (0, -1)
[i]Type for _balanceAfter

Name: _balanceAfter Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_204(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_tokenDiffBalance_3', 'protocolFeeFraction_12'] 
[i]Type for TMP_204

Name: TMP_204 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205(uint256) = 10 ** 30
[i]Type for TMP_205

Name: TMP_205 Function: borrow
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_206(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_204', 'TMP_205'] 
[i]Type for TMP_206

Name: TMP_206 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: raw balance
_protocolFee_1(uint256) := TMP_206(uint256)
Finance type key: (0, -1)
[i]Type for _protocolFee

Name: _protocolFee Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: raw balance
TMP_207(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_tokenDiffBalance_3', '_protocolFee_1'] 
Finance type key: (0, 0)
[i]Type for TMP_207

Name: TMP_207 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: raw balance
_tokenDiffBalance_4(uint256) := TMP_207(uint256)
Finance type key: (0, -1)
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: raw balance
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_balanceAfter_1', '_balanceBefore_1'] 
Finance type key: (0, 0)
[i]Type for TMP_195

Name: TMP_195 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_tokenDiffBalance_1(uint256) := TMP_195(uint256)
Finance type key: (0, -1)
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_208 = CONVERT 0 to address
[i]Type for TMP_208

Name: TMP_208 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_209(bool) = _borrowAsset_1 == TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:protocolFeeCollector_12, function:call, arguments:[''] value:_protocolFee_1 
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFeeCollector_13(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_12', 'protocolFeeCollector_9'])
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: borrow
Num: -1
Den: -1
Address: 7
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
feeSuccess_1(bool)= UNPACK TUPLE_1 index: 0 
[i]Type for feeSuccess

Name: feeSuccess Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_212

Name: TMP_212 Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_212', 'protocolFeeCollector_12', '_protocolFee_1'] 
TMP_210(None) = SOLIDITY_CALL require(bool,string)(feeSuccess_1,Transfer fail)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_214

Name: TMP_214 Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_214', 'msg.sender', '_tokenDiffBalance_4'] 
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:_tokenDiffBalance_4 
[i]Type for TUPLE_2

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_2 index: 0 
[i]Type for success

Name: success Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer fail)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_16(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime
Finance Type: undef
creditLineConstants_20(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
protocolFeeFraction_2(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_0', 'protocolFeeFraction_1', 'protocolFeeFraction_12'])
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: borrow
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFeeCollector_2(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_12', 'protocolFeeCollector_0', 'protocolFeeCollector_9'])
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: borrow
Num: -1
Den: -1
Address: 7
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
MODIFIER_CALL, CreditLine.onlyCreditLineBorrower(uint256)(_id_1)
creditLineConstants_22(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_47'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
REF_129(CreditLine.CreditLineVariables) -> creditLineVariables_18[_id_1]
[i]Type for REF_129

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_130(CreditLine.CreditLineStatus) -> REF_129.status
[i]Type for REF_130

Name: REF_130 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_131(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_131

Name: REF_131 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_179(bool) = REF_130 == REF_131
[i]Type for TMP_179

Name: TMP_179 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,CreditLine: The credit line is not yet active.)
[i]Type for TMP_180

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_181(uint256) = INTERNAL_CALL, CreditLine.calculateBorrowableAmount(uint256)(_id_1)
[i]Type for TMP_181

Name: TMP_181 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_19(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_5'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime
Finance Type: undef
creditLineConstants_23(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_6'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
_borrowableAmount_1(uint256) := TMP_181(uint256)
Finance type key: (-1, -1)
[i]Type for _borrowableAmount

Name: _borrowableAmount Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_182(bool) = _amount_1 <= _borrowableAmount_1
[i]Type for TMP_182

Name: TMP_182 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_183(None) = SOLIDITY_CALL require(bool,string)(TMP_182,CreditLine::borrow - The current collateral ratio doesn't allow to withdraw the amount)
[i]Type for TMP_183

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_132(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
[i]Type for REF_132

Name: creditLineConstants Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: borrowAsset
Finance Type: undef
REF_133(address) -> REF_132.borrowAsset
[i]Type for REF_133

Name: creditLineConstants.borrowAsset Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_borrowAsset_1(address) := REF_133(address)
Finance type key: (-1, -1)
[i]Type for _borrowAsset

Name: _borrowAsset Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_134(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
[i]Type for REF_134

Name: creditLineConstants Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_135(address) -> REF_134.lender
[i]Type for REF_135

Name: REF_135 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_lender_1(address) := REF_135(address)
Finance type key: (-1, -1)
[i]Type for _lender

Name: _lender Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine.updateinterestAccruedTillLastPrincipalUpdate(uint256)(_id_1)
creditLineVariables_20(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_8'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime
Finance Type: undef
REF_136(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
[i]Type for REF_136

Name: creditLineVariables Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_137(uint256) -> REF_136.principal
[i]Type for REF_137

Name: REF_137 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_138(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
[i]Type for REF_138

Name: creditLineVariables Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_139(uint256) -> REF_138.principal
[i]Type for REF_139

Name: REF_139 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_185(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_139', '_amount_1'] 
[i]Type for TMP_185

Name: TMP_185 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_21(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_20'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime
Finance Type: undef
REF_137 (->creditLineVariables_21) := TMP_185(uint256)
Finance type key: (-1, -1)
[i]Type for REF_137

Name: REF_137 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_141(CreditLine.CreditLineVariables) -> creditLineVariables_21[_id_1]
[i]Type for REF_141

Name: creditLineVariables Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_142(uint256) -> REF_141.lastPrincipalUpdateTime
[i]Type for REF_142

Name: REF_142 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_22(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_21'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime
Finance Type: undef
REF_142 (->creditLineVariables_22) := block.timestamp(uint256)
[i]Type for REF_142

Name: REF_142 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_186 = CONVERT 0 to address
[i]Type for TMP_186

Name: TMP_186 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_187(bool) = _borrowAsset_1 != TMP_186
[i]Type for TMP_187

Name: TMP_187 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_196 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_196

Name: TMP_196 Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_197 = CONVERT this to address
[i]Type for TMP_197

Name: TMP_197 Function: borrow
Num: 
Den: 
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_198(uint256) = HIGH_LEVEL_CALL, dest:TMP_196(IERC20), function:balanceOf, arguments:['TMP_197']  
[i]Type for TMP_198

Name: TMP_198 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
protocolFeeFraction_10(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_1', 'protocolFeeFraction_12'])
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: borrow
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFeeCollector_10(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_12', 'protocolFeeCollector_9'])
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: borrow
Num: -1
Den: -1
Address: 7
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
_balanceBefore_scope_0_1(uint256) := TMP_198(uint256)
Finance type key: (0, -1)
[i]Type for _balanceBefore_scope_0

Name: _balanceBefore_scope_0 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
INTERNAL_CALL, CreditLine._withdrawBorrowAmount(address,uint256,address)(_borrowAsset_1,_amount_1,_lender_1)
TMP_200 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_200

Name: TMP_200 Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_201 = CONVERT this to address
[i]Type for TMP_201

Name: TMP_201 Function: borrow
Num: 
Den: 
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_202(uint256) = HIGH_LEVEL_CALL, dest:TMP_200(IERC20), function:balanceOf, arguments:['TMP_201']  
[i]Type for TMP_202

Name: TMP_202 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
protocolFeeFraction_12(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_11', 'protocolFeeFraction_1', 'protocolFeeFraction_12'])
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: borrow
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFeeCollector_12(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_12', 'protocolFeeCollector_11', 'protocolFeeCollector_9'])
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: borrow
Num: -1
Den: -1
Address: 7
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
_balanceAfter_scope_1_1(uint256) := TMP_202(uint256)
Finance type key: (0, -1)
[i]Type for _balanceAfter_scope_1

Name: _balanceAfter_scope_1 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_188 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_188

Name: TMP_188 Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_189 = CONVERT this to address
[i]Type for TMP_189

Name: TMP_189 Function: borrow
Num: 
Den: 
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_190(uint256) = HIGH_LEVEL_CALL, dest:TMP_188(IERC20), function:balanceOf, arguments:['TMP_189']  
[i]Type for TMP_190

Name: TMP_190 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
protocolFeeFraction_7(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_6', 'protocolFeeFraction_1', 'protocolFeeFraction_12'])
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: borrow
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFeeCollector_7(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_12', 'protocolFeeCollector_9', 'protocolFeeCollector_6'])
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: borrow
Num: -1
Den: -1
Address: 7
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
_balanceBefore_1(uint256) := TMP_190(uint256)
Finance type key: (0, -1)
[i]Type for _balanceBefore

Name: _balanceBefore Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_balanceAfter_scope_1_1', '_balanceBefore_scope_0_1'] 
Finance type key: (0, 0)
[i]Type for TMP_203

Name: TMP_203 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_tokenDiffBalance_2(uint256) := TMP_203(uint256)
Finance type key: (0, -1)
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_tokenDiffBalance_3(uint256) := ϕ(['_tokenDiffBalance_1', '_tokenDiffBalance_2'])
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
INTERNAL_CALL, CreditLine._withdrawBorrowAmount(address,uint256,address)(_borrowAsset_1,_amount_1,_lender_1)
TMP_192 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_192

Name: TMP_192 Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_193 = CONVERT this to address
[i]Type for TMP_193

Name: TMP_193 Function: borrow
Num: 
Den: 
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
TMP_194(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IERC20), function:balanceOf, arguments:['TMP_193']  
[i]Type for TMP_194

Name: TMP_194 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
protocolFeeFraction_9(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_8', 'protocolFeeFraction_1', 'protocolFeeFraction_12'])
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: borrow
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFeeCollector_9(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_12', 'protocolFeeCollector_8', 'protocolFeeCollector_9'])
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: borrow
Num: -1
Den: -1
Address: 7
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
_balanceAfter_1(uint256) := TMP_194(uint256)
Finance type key: (0, -1)
[i]Type for _balanceAfter

Name: _balanceAfter Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_204(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_tokenDiffBalance_3', 'protocolFeeFraction_12'] 
[i]Type for TMP_204

Name: TMP_204 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 48
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_205(uint256) = 10 ** 30
[i]Type for TMP_205

Name: TMP_205 Function: borrow
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_206(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_204', 'TMP_205'] 
[i]Type for TMP_206

Name: TMP_206 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: raw balance
_protocolFee_1(uint256) := TMP_206(uint256)
Finance type key: (0, -1)
[i]Type for _protocolFee

Name: _protocolFee Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: raw balance
TMP_207(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_tokenDiffBalance_3', '_protocolFee_1'] 
Finance type key: (0, 0)
[i]Type for TMP_207

Name: TMP_207 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: raw balance
_tokenDiffBalance_4(uint256) := TMP_207(uint256)
Finance type key: (0, -1)
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: raw balance
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_balanceAfter_1', '_balanceBefore_1'] 
Finance type key: (0, 0)
[i]Type for TMP_195

Name: TMP_195 Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
_tokenDiffBalance_1(uint256) := TMP_195(uint256)
Finance type key: (0, -1)
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: 1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_208 = CONVERT 0 to address
[i]Type for TMP_208

Name: TMP_208 Function: borrow
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_209(bool) = _borrowAsset_1 == TMP_208
[i]Type for TMP_209

Name: TMP_209 Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:protocolFeeCollector_12, function:call, arguments:[''] value:_protocolFee_1 
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
protocolFeeCollector_13(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_12', 'protocolFeeCollector_9'])
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: borrow
Num: -1
Den: -1
Address: 7
Norm: u
LF: protocolFeeCollector
Value: u
Fields: 
Finance Type: undef
feeSuccess_1(bool)= UNPACK TUPLE_1 index: 0 
[i]Type for feeSuccess

Name: feeSuccess Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_212 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_212

Name: TMP_212 Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_212', 'protocolFeeCollector_12', '_protocolFee_1'] 
TMP_210(None) = SOLIDITY_CALL require(bool,string)(feeSuccess_1,Transfer fail)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_214 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_214

Name: TMP_214 Function: borrow
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_214', 'msg.sender', '_tokenDiffBalance_4'] 
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:_tokenDiffBalance_4 
[i]Type for TUPLE_2

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_2 index: 0 
[i]Type for success

Name: success Function: borrow
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer fail)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



repay
creditLineVariables_23(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime
Finance Type: undef
creditLineConstants_25(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
REF_177(CreditLine.CreditLineVariables) -> creditLineVariables_24[_id_1]
[i]Type for REF_177

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_178(CreditLine.CreditLineStatus) -> REF_177.status
[i]Type for REF_178

Name: REF_178 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_179(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_179

Name: REF_179 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_253(bool) = REF_178 == REF_179
[i]Type for TMP_253

Name: TMP_253 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(None) = SOLIDITY_CALL require(bool,string)(TMP_253,CreditLine: The credit line is not yet active.)
[i]Type for TMP_254

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_180(CreditLine.CreditLineConstants) -> creditLineConstants_26[_id_1]
[i]Type for REF_180

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_181(address) -> REF_180.lender
[i]Type for REF_181

Name: REF_181 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_255(bool) = REF_181 != msg.sender
[i]Type for TMP_255

Name: TMP_255 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_256(None) = SOLIDITY_CALL require(bool,string)(TMP_255,Lender cant repay)
[i]Type for TMP_256

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_257(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
[i]Type for TMP_257

Name: TMP_257 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_25(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime
Finance Type: undef
_interestSincePrincipalUpdate_1(uint256) := TMP_257(uint256)
Finance type key: (-1, -1)
[i]Type for _interestSincePrincipalUpdate

Name: _interestSincePrincipalUpdate Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_182(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
[i]Type for REF_182

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_183(uint256) -> REF_182.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_183

Name: REF_183 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_258(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_183', '_interestSincePrincipalUpdate_1'] 
[i]Type for TMP_258

Name: TMP_258 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalInterestAccrued_1(uint256) := TMP_258(uint256)
Finance type key: (-1, -1)
[i]Type for _totalInterestAccrued

Name: _totalInterestAccrued Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
[i]Type for REF_186

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_187(uint256) -> REF_186.totalInterestRepaid
[i]Type for REF_187

Name: REF_187 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_259(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalInterestAccrued_1', 'REF_187'] 
[i]Type for TMP_259

Name: TMP_259 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_interestToPay_1(uint256) := TMP_259(uint256)
Finance type key: (-1, -1)
[i]Type for _interestToPay

Name: _interestToPay Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_189(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
[i]Type for REF_189

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_190(uint256) -> REF_189.principal
[i]Type for REF_190

Name: REF_190 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_260(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_interestToPay_1', 'REF_190'] 
[i]Type for TMP_260

Name: TMP_260 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalCurrentDebt_1(uint256) := TMP_260(uint256)
Finance type key: (-1, -1)
[i]Type for _totalCurrentDebt

Name: _totalCurrentDebt Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_principalPaid_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for _principalPaid

Name: _principalPaid Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_261(bool) = _amount_1 >= _totalCurrentDebt_1
[i]Type for TMP_261

Name: TMP_261 Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2(uint256) := _totalCurrentDebt_1(uint256)
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_264(bool) = _amount_3 > _interestToPay_1
[i]Type for TMP_264

Name: TMP_264 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_191(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
[i]Type for REF_191

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_192(uint256) -> REF_191.principal
[i]Type for REF_192

Name: REF_192 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_265(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCurrentDebt_1', '_amount_3'] 
[i]Type for TMP_265

Name: TMP_265 Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_27(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_25'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime
Finance Type: undef
REF_192 (->creditLineVariables_27) := TMP_265(uint256)
Finance type key: (-1, -1)
[i]Type for REF_192

Name: REF_192 Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_201(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
[i]Type for REF_201

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_202(uint256) -> REF_201.totalInterestRepaid
[i]Type for REF_202

Name: REF_202 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_203(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
[i]Type for REF_203

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_204(uint256) -> REF_203.totalInterestRepaid
[i]Type for REF_204

Name: REF_204 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_267(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_204', '_amount_3'] 
[i]Type for TMP_267

Name: TMP_267 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_26(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_25'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_202 (->creditLineVariables_26) := TMP_267(uint256)
Finance type key: (-1, -1)
[i]Type for REF_202

Name: REF_202 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_194(CreditLine.CreditLineVariables) -> creditLineVariables_27[_id_1]
[i]Type for REF_194

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_195(uint256) -> REF_194.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_195

Name: REF_195 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_28(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_27'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_195 (->creditLineVariables_28) := _totalInterestAccrued_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_195

Name: REF_195 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_principalPaid_3(uint256) := ϕ(['_principalPaid_1', '_principalPaid_2'])
[i]Type for _principalPaid

Name: _principalPaid Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_31(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_26', 'creditLineVariables_30'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_196(CreditLine.CreditLineVariables) -> creditLineVariables_28[_id_1]
[i]Type for REF_196

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_197(uint256) -> REF_196.lastPrincipalUpdateTime
[i]Type for REF_197

Name: REF_197 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_29(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_28'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_197 (->creditLineVariables_29) := block.timestamp(uint256)
[i]Type for REF_197

Name: REF_197 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_198(CreditLine.CreditLineVariables) -> creditLineVariables_29[_id_1]
[i]Type for REF_198

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_199(uint256) -> REF_198.totalInterestRepaid
[i]Type for REF_199

Name: REF_199 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_30(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_29'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_199 (->creditLineVariables_30) := _totalInterestAccrued_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_199

Name: REF_199 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, CreditLine._repay(uint256,uint256,bool,uint256)(_id_1,_amount_3,_fromSavingsAccount_1,_principalPaid_3)
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: _repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_3'])
[i]Type for _amount

Name: _amount Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fromSavingsAccount_1(bool) := ϕ(['_fromSavingsAccount_1'])
[i]Type for _fromSavingsAccount

Name: _fromSavingsAccount Function: _repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_principalPaid_1(uint256) := ϕ(['_principalPaid_3'])
[i]Type for _principalPaid

Name: _principalPaid Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_24(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
savingsAccount_9(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _repay
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
defaultStrategy_2(address) := ϕ(['defaultStrategy_0', 'defaultStrategy_1'])
[i]Type for defaultStrategy

Name: defaultStrategy Function: _repay
Num: -1
Den: -1
Address: 8
Norm: u
LF: defaultStrategy
Value: u
Fields: 
Finance Type: undef
TMP_237 = CONVERT savingsAccount_9 to ISavingsAccount
[i]Type for TMP_237

Name: TMP_237 Function: _repay
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_savingsAccount_1(ISavingsAccount) := TMP_237(ISavingsAccount)
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _repay
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_defaultStrategy_1(address) := defaultStrategy_2(address)
Finance type key: (-1, -1)
[i]Type for _defaultStrategy

Name: _defaultStrategy Function: _repay
Num: -1
Den: -1
Address: 8
Norm: u
LF: defaultStrategy
Value: u
Fields: 
Finance Type: undef
REF_168(CreditLine.CreditLineConstants) -> creditLineConstants_24[_id_1]
[i]Type for REF_168

Name: creditLineConstants Function: _repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(address) -> REF_168.borrowAsset
[i]Type for REF_169

Name: REF_169 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_borrowAsset_1(address) := REF_169(address)
Finance type key: (-1, -1)
[i]Type for _borrowAsset

Name: _borrowAsset Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(CreditLine.CreditLineConstants) -> creditLineConstants_24[_id_1]
[i]Type for REF_170

Name: creditLineConstants Function: _repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(address) -> REF_170.lender
[i]Type for REF_171

Name: REF_171 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_lender_1(address) := REF_171(address)
Finance type key: (-1, -1)
[i]Type for _lender

Name: _lender Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_238 = ! _fromSavingsAccount_1 
[i]Type for TMP_238

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine._repayFromSavingsAccount(uint256,address,address)(_amount_1,_borrowAsset_1,_lender_1)
_amount_1(uint256) := ϕ(['_amount_1'])
[i]Type for _amount

Name: _amount Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(address) := ϕ(['_borrowAsset_1'])
[i]Type for _asset

Name: _asset Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: _asset
Value: u
Fields: 
Finance Type: undef
_lender_1(address) := ϕ(['_lender_1'])
[i]Type for _lender

Name: _lender Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: _lender
Value: u
Fields: 
Finance Type: undef
savingsAccount_7(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_6(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_219 = CONVERT strategyRegistry_6 to IStrategyRegistry
[i]Type for TMP_219

Name: TMP_219 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_220(address[]) = HIGH_LEVEL_CALL, dest:TMP_219(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_220

Name: TMP_220 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_8(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8', 'savingsAccount_7'])
[i]Type for savingsAccount

Name: savingsAccount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_7(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_6', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_220(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_221 = CONVERT savingsAccount_8 to ISavingsAccount
[i]Type for TMP_221

Name: TMP_221 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_savingsAccount_1(ISavingsAccount) := TMP_221(ISavingsAccount)
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_activeAmount_1(uint256) := ϕ(['_activeAmount_0', '_activeAmount_2'])
[i]Type for _activeAmount

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157 -> LENGTH _strategyList_1
[i]Type for REF_157

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_222(bool) = _index_2 < REF_157
[i]Type for TMP_222

Name: TMP_222 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_158(address) -> _strategyList_1[_index_2]
[i]Type for REF_158

Name: _strategyList Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_223 = CONVERT 0 to address
[i]Type for TMP_223

Name: TMP_223 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_224(bool) = REF_158 == TMP_223
[i]Type for TMP_224

Name: TMP_224 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(None) = SOLIDITY_CALL revert(string)(CreditLine::_repayFromSavingsAccount - Insufficient balance)
[i]Type for TMP_236

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_160(address) -> _strategyList_1[_index_2]
[i]Type for REF_160

Name: _strategyList Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['msg.sender', '_asset_1', 'REF_160']  
[i]Type for TMP_225

Name: TMP_225 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_liquidityShares_1(uint256) := TMP_225(uint256)
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(bool) = _liquidityShares_1 == 0
[i]Type for TMP_226

Name: TMP_226 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_161(address) -> _strategyList_1[_index_2]
[i]Type for REF_161

Name: _strategyList Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227 = CONVERT REF_161 to IYield
[i]Type for TMP_227

Name: TMP_227 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = HIGH_LEVEL_CALL, dest:TMP_227(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_asset_1']  
[i]Type for TMP_228

Name: TMP_228 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_228(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_229

Name: TMP_229 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(bool) = TMP_229 >= _amount_1
[i]Type for TMP_230

Name: TMP_230 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_1', '_tokensToTransfer_2'])
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
[i]Type for TMP_232

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_2(uint256) := TMP_232(uint256)
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_231(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
[i]Type for TMP_231

Name: TMP_231 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_2(uint256) := TMP_231(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(address) -> _strategyList_1[_index_2]
[i]Type for REF_167

Name: _strategyList Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_167', 'msg.sender', '_lender_1']  
[i]Type for TMP_233

Name: TMP_233 Function: _repayFromSavingsAccount
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_234(bool) = _amount_1 == _activeAmount_2
[i]Type for TMP_234

Name: TMP_234 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := _index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_3(uint256) = _index_2 + 1
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_1'])
[i]Type for _amount

Name: _amount Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(address) := ϕ(['_borrowAsset_1'])
[i]Type for _asset

Name: _asset Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: _asset
Value: u
Fields: 
Finance Type: undef
_lender_1(address) := ϕ(['_lender_1'])
[i]Type for _lender

Name: _lender Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: _lender
Value: u
Fields: 
Finance Type: undef
savingsAccount_7(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_6(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_219 = CONVERT strategyRegistry_6 to IStrategyRegistry
[i]Type for TMP_219

Name: TMP_219 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_220(address[]) = HIGH_LEVEL_CALL, dest:TMP_219(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_220

Name: TMP_220 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_8(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8', 'savingsAccount_7'])
[i]Type for savingsAccount

Name: savingsAccount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_7(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_6', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_220(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_221 = CONVERT savingsAccount_8 to ISavingsAccount
[i]Type for TMP_221

Name: TMP_221 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_savingsAccount_1(ISavingsAccount) := TMP_221(ISavingsAccount)
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_activeAmount_1(uint256) := ϕ(['_activeAmount_0', '_activeAmount_2'])
[i]Type for _activeAmount

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_157 -> LENGTH _strategyList_1
[i]Type for REF_157

Name: REF_157 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_222(bool) = _index_2 < REF_157
[i]Type for TMP_222

Name: TMP_222 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_158(address) -> _strategyList_1[_index_2]
[i]Type for REF_158

Name: _strategyList Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_223 = CONVERT 0 to address
[i]Type for TMP_223

Name: TMP_223 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_224(bool) = REF_158 == TMP_223
[i]Type for TMP_224

Name: TMP_224 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_236(None) = SOLIDITY_CALL revert(string)(CreditLine::_repayFromSavingsAccount - Insufficient balance)
[i]Type for TMP_236

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_160(address) -> _strategyList_1[_index_2]
[i]Type for REF_160

Name: _strategyList Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_225(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['msg.sender', '_asset_1', 'REF_160']  
[i]Type for TMP_225

Name: TMP_225 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_liquidityShares_1(uint256) := TMP_225(uint256)
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_226(bool) = _liquidityShares_1 == 0
[i]Type for TMP_226

Name: TMP_226 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_161(address) -> _strategyList_1[_index_2]
[i]Type for REF_161

Name: _strategyList Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_227 = CONVERT REF_161 to IYield
[i]Type for TMP_227

Name: TMP_227 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_228(uint256) = HIGH_LEVEL_CALL, dest:TMP_227(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_asset_1']  
[i]Type for TMP_228

Name: TMP_228 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_228(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_229(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_229

Name: TMP_229 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_230(bool) = TMP_229 >= _amount_1
[i]Type for TMP_230

Name: TMP_230 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_1', '_tokensToTransfer_2'])
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_232(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
[i]Type for TMP_232

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_2(uint256) := TMP_232(uint256)
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_231(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
[i]Type for TMP_231

Name: TMP_231 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_2(uint256) := TMP_231(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_167(address) -> _strategyList_1[_index_2]
[i]Type for REF_167

Name: _strategyList Function: _repayFromSavingsAccount
Num: 
Den: 
Address: -992
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_233(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_167', 'msg.sender', '_lender_1']  
[i]Type for TMP_233

Name: TMP_233 Function: _repayFromSavingsAccount
Num: 
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_234(bool) = _amount_1 == _activeAmount_2
[i]Type for TMP_234

Name: TMP_234 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_235(uint256) := _index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _repayFromSavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_index_3(uint256) = _index_2 + 1
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_239 = CONVERT 0 to address
[i]Type for TMP_239

Name: TMP_239 Function: _repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_240(bool) = _borrowAsset_1 == TMP_239
[i]Type for TMP_240

Name: TMP_240 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_251(bool) = _principalPaid_1 != 0
[i]Type for TMP_251

Name: TMP_251 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_241(bool) = msg.value == _amount_1
[i]Type for TMP_241

Name: TMP_241 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_242(None) = SOLIDITY_CALL require(bool,string)(TMP_241,creditLine::repay - Ether sent not equal to repay amount)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_244

Name: TMP_244 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_245 = CONVERT this to address
[i]Type for TMP_245

Name: TMP_245 Function: _repay
Num: -1
Den: -1
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_244', 'msg.sender', 'TMP_245', '_amount_1'] 
TMP_243(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_borrowAsset_1', '_defaultStrategy_1', '_lender_1'] value:_amount_1 
[i]Type for TMP_243

Name: TMP_243 Function: _repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_247

Name: TMP_247 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_248(bool) = HIGH_LEVEL_CALL, dest:TMP_247(IERC20), function:approve, arguments:['_defaultStrategy_1', '_amount_1']  
[i]Type for TMP_248

Name: TMP_248 Function: _repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:increaseAllowanceToCreditLine, arguments:['_principalPaid_1', '_borrowAsset_1', '_lender_1']  
TMP_249(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_borrowAsset_1', '_defaultStrategy_1', '_lender_1']  
[i]Type for TMP_249

Name: TMP_249 Function: _repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: _repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_3'])
[i]Type for _amount

Name: _amount Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_fromSavingsAccount_1(bool) := ϕ(['_fromSavingsAccount_1'])
[i]Type for _fromSavingsAccount

Name: _fromSavingsAccount Function: _repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_principalPaid_1(uint256) := ϕ(['_principalPaid_3'])
[i]Type for _principalPaid

Name: _principalPaid Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_24(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: _repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
savingsAccount_9(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _repay
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
defaultStrategy_2(address) := ϕ(['defaultStrategy_0', 'defaultStrategy_1'])
[i]Type for defaultStrategy

Name: defaultStrategy Function: _repay
Num: -1
Den: -1
Address: 8
Norm: u
LF: defaultStrategy
Value: u
Fields: 
Finance Type: undef
TMP_237 = CONVERT savingsAccount_9 to ISavingsAccount
[i]Type for TMP_237

Name: TMP_237 Function: _repay
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_savingsAccount_1(ISavingsAccount) := TMP_237(ISavingsAccount)
Finance type key: (-1, -1)
[i]Type for _savingsAccount

Name: _savingsAccount Function: _repay
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
_defaultStrategy_1(address) := defaultStrategy_2(address)
Finance type key: (-1, -1)
[i]Type for _defaultStrategy

Name: _defaultStrategy Function: _repay
Num: -1
Den: -1
Address: 8
Norm: u
LF: defaultStrategy
Value: u
Fields: 
Finance Type: undef
REF_168(CreditLine.CreditLineConstants) -> creditLineConstants_24[_id_1]
[i]Type for REF_168

Name: creditLineConstants Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_169(address) -> REF_168.borrowAsset
[i]Type for REF_169

Name: REF_169 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_borrowAsset_1(address) := REF_169(address)
Finance type key: (-1, -1)
[i]Type for _borrowAsset

Name: _borrowAsset Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_170(CreditLine.CreditLineConstants) -> creditLineConstants_24[_id_1]
[i]Type for REF_170

Name: creditLineConstants Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_171(address) -> REF_170.lender
[i]Type for REF_171

Name: REF_171 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_lender_1(address) := REF_171(address)
Finance type key: (-1, -1)
[i]Type for _lender

Name: _lender Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_238 = ! _fromSavingsAccount_1 
[i]Type for TMP_238

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine._repayFromSavingsAccount(uint256,address,address)(_amount_1,_borrowAsset_1,_lender_1)
TMP_239 = CONVERT 0 to address
[i]Type for TMP_239

Name: TMP_239 Function: _repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_240(bool) = _borrowAsset_1 == TMP_239
[i]Type for TMP_240

Name: TMP_240 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_251(bool) = _principalPaid_1 != 0
[i]Type for TMP_251

Name: TMP_251 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_241(bool) = msg.value == _amount_1
[i]Type for TMP_241

Name: TMP_241 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_242(None) = SOLIDITY_CALL require(bool,string)(TMP_241,creditLine::repay - Ether sent not equal to repay amount)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_244 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_244

Name: TMP_244 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_245 = CONVERT this to address
[i]Type for TMP_245

Name: TMP_245 Function: _repay
Num: 
Den: 
Address: 9
Norm: u
LF: CreditLine
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_244', 'msg.sender', 'TMP_245', '_amount_1'] 
TMP_243(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_borrowAsset_1', '_defaultStrategy_1', '_lender_1'] value:_amount_1 
[i]Type for TMP_243

Name: TMP_243 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_247 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_247

Name: TMP_247 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_248(bool) = HIGH_LEVEL_CALL, dest:TMP_247(IERC20), function:approve, arguments:['_defaultStrategy_1', '_amount_1']  
[i]Type for TMP_248

Name: TMP_248 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:increaseAllowanceToCreditLine, arguments:['_principalPaid_1', '_borrowAsset_1', '_lender_1']  
TMP_249(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_borrowAsset_1', '_defaultStrategy_1', '_lender_1']  
[i]Type for TMP_249

Name: TMP_249 Function: _repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_206(CreditLine.CreditLineVariables) -> creditLineVariables_32[_id_1]
[i]Type for REF_206

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_207(uint256) -> REF_206.principal
[i]Type for REF_207

Name: REF_207 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_269(bool) = REF_207 == 0
[i]Type for TMP_269

Name: TMP_269 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_266(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_3', '_interestToPay_1'] 
[i]Type for TMP_266

Name: TMP_266 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_principalPaid_2(uint256) := TMP_266(uint256)
Finance type key: (-1, -1)
[i]Type for _principalPaid

Name: _principalPaid Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine._resetCreditLine(uint256)(_id_1)
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_33(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_208(CreditLine.CreditLineVariables) -> creditLineVariables_33[_id_1]
[i]Type for REF_208

Name: creditLineVariables Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_209(uint256) -> REF_208.lastPrincipalUpdateTime
[i]Type for REF_209

Name: REF_209 Function: _resetCreditLine
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_34(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_33'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_209 (->creditLineVariables_34) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_209

Name: REF_209 Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_210(CreditLine.CreditLineVariables) -> creditLineVariables_34[_id_1]
[i]Type for REF_210

Name: creditLineVariables Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_211(uint256) -> REF_210.totalInterestRepaid
[i]Type for REF_211

Name: REF_211 Function: _resetCreditLine
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_35(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_34'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_211 (->creditLineVariables_35) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_211

Name: REF_211 Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_212(CreditLine.CreditLineVariables) -> creditLineVariables_35[_id_1]
[i]Type for REF_212

Name: creditLineVariables Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_213(uint256) -> REF_212.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_213

Name: REF_213 Function: _resetCreditLine
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_36(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_35'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_213 (->creditLineVariables_36) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_213

Name: REF_213 Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_33(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_208(CreditLine.CreditLineVariables) -> creditLineVariables_33[_id_1]
[i]Type for REF_208

Name: creditLineVariables Function: _resetCreditLine
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_209(uint256) -> REF_208.lastPrincipalUpdateTime
[i]Type for REF_209

Name: REF_209 Function: _resetCreditLine
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_34(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_33'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_209 (->creditLineVariables_34) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_209

Name: REF_209 Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_210(CreditLine.CreditLineVariables) -> creditLineVariables_34[_id_1]
[i]Type for REF_210

Name: creditLineVariables Function: _resetCreditLine
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_211(uint256) -> REF_210.totalInterestRepaid
[i]Type for REF_211

Name: REF_211 Function: _resetCreditLine
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_35(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_34'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_211 (->creditLineVariables_35) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_211

Name: REF_211 Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_212(CreditLine.CreditLineVariables) -> creditLineVariables_35[_id_1]
[i]Type for REF_212

Name: creditLineVariables Function: _resetCreditLine
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_213(uint256) -> REF_212.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_213

Name: REF_213 Function: _resetCreditLine
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_36(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_35'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_213 (->creditLineVariables_36) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for REF_213

Name: REF_213 Function: _resetCreditLine
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_23(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
creditLineConstants_25(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
REF_177(CreditLine.CreditLineVariables) -> creditLineVariables_24[_id_1]
[i]Type for REF_177

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_178(CreditLine.CreditLineStatus) -> REF_177.status
[i]Type for REF_178

Name: REF_178 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_179(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_179

Name: REF_179 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_253(bool) = REF_178 == REF_179
[i]Type for TMP_253

Name: TMP_253 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_254(None) = SOLIDITY_CALL require(bool,string)(TMP_253,CreditLine: The credit line is not yet active.)
[i]Type for TMP_254

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_180(CreditLine.CreditLineConstants) -> creditLineConstants_26[_id_1]
[i]Type for REF_180

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_181(address) -> REF_180.lender
[i]Type for REF_181

Name: REF_181 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_255(bool) = REF_181 != msg.sender
[i]Type for TMP_255

Name: TMP_255 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_256(None) = SOLIDITY_CALL require(bool,string)(TMP_255,Lender cant repay)
[i]Type for TMP_256

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_257(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
[i]Type for TMP_257

Name: TMP_257 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_25(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
_interestSincePrincipalUpdate_1(uint256) := TMP_257(uint256)
Finance type key: (-1, -1)
[i]Type for _interestSincePrincipalUpdate

Name: _interestSincePrincipalUpdate Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_182(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
[i]Type for REF_182

Name: creditLineVariables Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_183(uint256) -> REF_182.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_183

Name: REF_183 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_258(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_183', '_interestSincePrincipalUpdate_1'] 
[i]Type for TMP_258

Name: TMP_258 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalInterestAccrued_1(uint256) := TMP_258(uint256)
Finance type key: (-1, -1)
[i]Type for _totalInterestAccrued

Name: _totalInterestAccrued Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_186(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
[i]Type for REF_186

Name: creditLineVariables Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_187(uint256) -> REF_186.totalInterestRepaid
[i]Type for REF_187

Name: REF_187 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_259(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalInterestAccrued_1', 'REF_187'] 
[i]Type for TMP_259

Name: TMP_259 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_interestToPay_1(uint256) := TMP_259(uint256)
Finance type key: (-1, -1)
[i]Type for _interestToPay

Name: _interestToPay Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_189(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
[i]Type for REF_189

Name: creditLineVariables Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_190(uint256) -> REF_189.principal
[i]Type for REF_190

Name: REF_190 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_260(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_interestToPay_1', 'REF_190'] 
[i]Type for TMP_260

Name: TMP_260 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalCurrentDebt_1(uint256) := TMP_260(uint256)
Finance type key: (-1, -1)
[i]Type for _totalCurrentDebt

Name: _totalCurrentDebt Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_principalPaid_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for _principalPaid

Name: _principalPaid Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_261(bool) = _amount_1 >= _totalCurrentDebt_1
[i]Type for TMP_261

Name: TMP_261 Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2(uint256) := _totalCurrentDebt_1(uint256)
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_3(uint256) := ϕ(['_amount_1', '_amount_2'])
[i]Type for _amount

Name: _amount Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_264(bool) = _amount_3 > _interestToPay_1
[i]Type for TMP_264

Name: TMP_264 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_191(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
[i]Type for REF_191

Name: creditLineVariables Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_192(uint256) -> REF_191.principal
[i]Type for REF_192

Name: REF_192 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_265(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCurrentDebt_1', '_amount_3'] 
[i]Type for TMP_265

Name: TMP_265 Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_27(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_25'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_192 (->creditLineVariables_27) := TMP_265(uint256)
Finance type key: (-1, -1)
[i]Type for REF_192

Name: REF_192 Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_201(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
[i]Type for REF_201

Name: creditLineVariables Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_202(uint256) -> REF_201.totalInterestRepaid
[i]Type for REF_202

Name: REF_202 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_203(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
[i]Type for REF_203

Name: creditLineVariables Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_204(uint256) -> REF_203.totalInterestRepaid
[i]Type for REF_204

Name: REF_204 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_267(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_204', '_amount_3'] 
[i]Type for TMP_267

Name: TMP_267 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_26(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_25'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_202 (->creditLineVariables_26) := TMP_267(uint256)
Finance type key: (-1, -1)
[i]Type for REF_202

Name: REF_202 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_194(CreditLine.CreditLineVariables) -> creditLineVariables_27[_id_1]
[i]Type for REF_194

Name: creditLineVariables Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_195(uint256) -> REF_194.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_195

Name: REF_195 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_28(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_27'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_195 (->creditLineVariables_28) := _totalInterestAccrued_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_195

Name: REF_195 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_principalPaid_3(uint256) := ϕ(['_principalPaid_1', '_principalPaid_2'])
[i]Type for _principalPaid

Name: _principalPaid Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_31(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_26', 'creditLineVariables_30'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_196(CreditLine.CreditLineVariables) -> creditLineVariables_28[_id_1]
[i]Type for REF_196

Name: creditLineVariables Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_197(uint256) -> REF_196.lastPrincipalUpdateTime
[i]Type for REF_197

Name: REF_197 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_29(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_28'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_197 (->creditLineVariables_29) := block.timestamp(uint256)
[i]Type for REF_197

Name: REF_197 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_198(CreditLine.CreditLineVariables) -> creditLineVariables_29[_id_1]
[i]Type for REF_198

Name: creditLineVariables Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_199(uint256) -> REF_198.totalInterestRepaid
[i]Type for REF_199

Name: REF_199 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_30(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_29'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: repay
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_199 (->creditLineVariables_30) := _totalInterestAccrued_1(uint256)
Finance type key: (-1, -1)
[i]Type for REF_199

Name: REF_199 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
INTERNAL_CALL, CreditLine._repay(uint256,uint256,bool,uint256)(_id_1,_amount_3,_fromSavingsAccount_1,_principalPaid_3)
REF_206(CreditLine.CreditLineVariables) -> creditLineVariables_32[_id_1]
[i]Type for REF_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_207(uint256) -> REF_206.principal
[i]Type for REF_207

Name: REF_207 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_269(bool) = REF_207 == 0
[i]Type for TMP_269

Name: TMP_269 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_266(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_3', '_interestToPay_1'] 
[i]Type for TMP_266

Name: TMP_266 Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_principalPaid_2(uint256) := TMP_266(uint256)
Finance type key: (-1, -1)
[i]Type for _principalPaid

Name: _principalPaid Function: repay
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine._resetCreditLine(uint256)(_id_1)



close
creditLineVariables_37(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: close
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
creditLineConstants_27(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: close
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
creditLineVariables_38(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: close
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_214(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
[i]Type for REF_214

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_215(address) -> REF_214.borrower
[i]Type for REF_215

Name: REF_215 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_273(bool) = msg.sender == REF_215
[i]Type for TMP_273

Name: TMP_273 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_216(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
[i]Type for REF_216

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_217(address) -> REF_216.lender
[i]Type for REF_217

Name: REF_217 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_274(bool) = msg.sender == REF_217
[i]Type for TMP_274

Name: TMP_274 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_275(bool) = TMP_273 || TMP_274
[i]Type for TMP_275

Name: TMP_275 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_276(None) = SOLIDITY_CALL require(bool,string)(TMP_275,CreditLine: Permission denied while closing Line of credit)
[i]Type for TMP_276

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_218(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
[i]Type for REF_218

Name: creditLineVariables Function: close
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_219(CreditLine.CreditLineStatus) -> REF_218.status
[i]Type for REF_219

Name: REF_219 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_220(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_220

Name: REF_220 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_277(bool) = REF_219 == REF_220
[i]Type for TMP_277

Name: TMP_277 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_278(None) = SOLIDITY_CALL require(bool,string)(TMP_277,CreditLine: Credit line should be active.)
[i]Type for TMP_278

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_221(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
[i]Type for REF_221

Name: creditLineVariables Function: close
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_222(uint256) -> REF_221.principal
[i]Type for REF_222

Name: REF_222 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_279(bool) = REF_222 == 0
[i]Type for TMP_279

Name: TMP_279 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,CreditLine: Cannot be closed since not repaid.)
[i]Type for TMP_280

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_223(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
[i]Type for REF_223

Name: creditLineVariables Function: close
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_224(uint256) -> REF_223.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_224

Name: REF_224 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_281(bool) = REF_224 == 0
[i]Type for TMP_281

Name: TMP_281 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_282(None) = SOLIDITY_CALL require(bool,string)(TMP_281,CreditLine: Cannot be closed since not repaid.)
[i]Type for TMP_282

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_225(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
[i]Type for REF_225

Name: creditLineVariables Function: close
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_226(CreditLine.CreditLineStatus) -> REF_225.status
[i]Type for REF_226

Name: REF_226 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_227(CreditLine.CreditLineStatus) -> CreditLineStatus.CLOSED
[i]Type for REF_227

Name: REF_227 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_39(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_38'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: close
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_226 (->creditLineVariables_39) := REF_227(CreditLine.CreditLineStatus)
Finance type key: (-1, -1)
[i]Type for REF_226

Name: REF_226 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_37(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: close
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
creditLineConstants_27(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: close
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
creditLineVariables_38(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: close
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_214(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
[i]Type for REF_214

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_215(address) -> REF_214.borrower
[i]Type for REF_215

Name: REF_215 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_273(bool) = msg.sender == REF_215
[i]Type for TMP_273

Name: TMP_273 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_216(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
[i]Type for REF_216

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_217(address) -> REF_216.lender
[i]Type for REF_217

Name: REF_217 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_274(bool) = msg.sender == REF_217
[i]Type for TMP_274

Name: TMP_274 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_275(bool) = TMP_273 || TMP_274
[i]Type for TMP_275

Name: TMP_275 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_276(None) = SOLIDITY_CALL require(bool,string)(TMP_275,CreditLine: Permission denied while closing Line of credit)
[i]Type for TMP_276

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_218(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
[i]Type for REF_218

Name: creditLineVariables Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_219(CreditLine.CreditLineStatus) -> REF_218.status
[i]Type for REF_219

Name: REF_219 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_220(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_220

Name: REF_220 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_277(bool) = REF_219 == REF_220
[i]Type for TMP_277

Name: TMP_277 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_278(None) = SOLIDITY_CALL require(bool,string)(TMP_277,CreditLine: Credit line should be active.)
[i]Type for TMP_278

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_221(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
[i]Type for REF_221

Name: creditLineVariables Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_222(uint256) -> REF_221.principal
[i]Type for REF_222

Name: REF_222 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_279(bool) = REF_222 == 0
[i]Type for TMP_279

Name: TMP_279 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,CreditLine: Cannot be closed since not repaid.)
[i]Type for TMP_280

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_223(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
[i]Type for REF_223

Name: creditLineVariables Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_224(uint256) -> REF_223.interestAccruedTillLastPrincipalUpdate
[i]Type for REF_224

Name: REF_224 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_281(bool) = REF_224 == 0
[i]Type for TMP_281

Name: TMP_281 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_282(None) = SOLIDITY_CALL require(bool,string)(TMP_281,CreditLine: Cannot be closed since not repaid.)
[i]Type for TMP_282

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_225(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
[i]Type for REF_225

Name: creditLineVariables Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_226(CreditLine.CreditLineStatus) -> REF_225.status
[i]Type for REF_226

Name: REF_226 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_227(CreditLine.CreditLineStatus) -> CreditLineStatus.CLOSED
[i]Type for REF_227

Name: REF_227 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_39(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_38'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: close
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_226 (->creditLineVariables_39) := REF_227(CreditLine.CreditLineStatus)
Finance type key: (-1, -1)
[i]Type for REF_226

Name: REF_226 Function: close
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)



calculateCurrentCollateralRatio
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_29(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
priceOracle_6(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
TMP_285 = CONVERT priceOracle_7 to IPriceOracle
[i]Type for TMP_285

Name: TMP_285 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
REF_229(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
[i]Type for REF_229

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_230(address) -> REF_229.collateralAsset
[i]Type for REF_230

Name: REF_230 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_231(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
[i]Type for REF_231

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_232(address) -> REF_231.borrowAsset
[i]Type for REF_232

Name: REF_232 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_285(IPriceOracle), function:getLatestPrice, arguments:['REF_230', 'REF_232']  
[i]Type for TUPLE_3

Name: TUPLE_3 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_31(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_30', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
priceOracle_8(address) := ϕ(['priceOracle_8', 'priceOracle_7', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
_ratioOfPrices_1(uint256)= UNPACK TUPLE_3 index: 0 
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_decimals_1(uint256)= UNPACK TUPLE_3 index: 1 
[i]Type for _decimals

Name: _decimals Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_286(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
[i]Type for TMP_286

Name: TMP_286 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentDebt_1(uint256) := TMP_286(uint256)
Finance type key: (-1, -1)
[i]Type for currentDebt

Name: currentDebt Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_287(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
[i]Type for TMP_287

Name: TMP_287 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_288(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_287', '_ratioOfPrices_1'] 
[i]Type for TMP_288

Name: TMP_288 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_289(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_288', 'currentDebt_1'] 
[i]Type for TMP_289

Name: TMP_289 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290(uint256) = 10 ** 30
[i]Type for TMP_290

Name: TMP_290 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_291(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_289', 'TMP_290'] 
[i]Type for TMP_291

Name: TMP_291 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
currentCollateralRatio_1(uint256) := TMP_291(uint256)
Finance type key: (-1, -1)
[i]Type for currentCollateralRatio

Name: currentCollateralRatio Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
RETURN currentCollateralRatio_1
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_29(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
priceOracle_6(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
TMP_285 = CONVERT priceOracle_7 to IPriceOracle
[i]Type for TMP_285

Name: TMP_285 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
REF_229(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
[i]Type for REF_229

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_230(address) -> REF_229.collateralAsset
[i]Type for REF_230

Name: REF_230 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_231(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
[i]Type for REF_231

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_232(address) -> REF_231.borrowAsset
[i]Type for REF_232

Name: REF_232 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_285(IPriceOracle), function:getLatestPrice, arguments:['REF_230', 'REF_232']  
[i]Type for TUPLE_3

Name: TUPLE_3 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_31(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_30', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
priceOracle_8(address) := ϕ(['priceOracle_8', 'priceOracle_7', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
_ratioOfPrices_1(uint256)= UNPACK TUPLE_3 index: 0 
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_decimals_1(uint256)= UNPACK TUPLE_3 index: 1 
[i]Type for _decimals

Name: _decimals Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_286(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
[i]Type for TMP_286

Name: TMP_286 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
currentDebt_1(uint256) := TMP_286(uint256)
Finance type key: (-1, -1)
[i]Type for currentDebt

Name: currentDebt Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_287(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
[i]Type for TMP_287

Name: TMP_287 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_288(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_287', '_ratioOfPrices_1'] 
[i]Type for TMP_288

Name: TMP_288 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_289(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_288', 'currentDebt_1'] 
[i]Type for TMP_289

Name: TMP_289 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_290(uint256) = 10 ** 30
[i]Type for TMP_290

Name: TMP_290 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_291(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_289', 'TMP_290'] 
[i]Type for TMP_291

Name: TMP_291 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
currentCollateralRatio_1(uint256) := TMP_291(uint256)
Finance type key: (-1, -1)
[i]Type for currentCollateralRatio

Name: currentCollateralRatio Function: calculateCurrentCollateralRatio
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
RETURN currentCollateralRatio_1



calculateTotalCollateralTokens
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_11(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_32(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
strategyRegistry_8(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
REF_236(CreditLine.CreditLineConstants) -> creditLineConstants_32[_id_1]
[i]Type for REF_236

Name: creditLineConstants Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_237(address) -> REF_236.collateralAsset
[i]Type for REF_237

Name: REF_237 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_collateralAsset_1(address) := REF_237(address)
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_293 = CONVERT strategyRegistry_8 to IStrategyRegistry
[i]Type for TMP_293

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_294(address[]) = HIGH_LEVEL_CALL, dest:TMP_293(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_294

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_12(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_11', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
strategyRegistry_9(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_8', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_294(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_0', '_amount_2'])
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_2(uint256) := ϕ(['index_1', 'index_3'])
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_239 -> LENGTH _strategyList_1
[i]Type for REF_239

Name: REF_239 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_295(bool) = index_2 < REF_239
[i]Type for TMP_295

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_240(address) -> _strategyList_1[index_2]
[i]Type for REF_240

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_296 = CONVERT 0 to address
[i]Type for TMP_296

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297(bool) = REF_240 == TMP_296
[i]Type for TMP_297

Name: TMP_297 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _amount_1
REF_241(mapping(address => uint256)) -> collateralShareInStrategy_12[_id_1]
[i]Type for REF_241

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_242(address) -> _strategyList_1[index_2]
[i]Type for REF_242

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_243(uint256) -> REF_241[REF_242]
[i]Type for REF_243

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_liquidityShares_1(uint256) := REF_243(uint256)
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_244(address) -> _strategyList_1[index_2]
[i]Type for REF_244

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_298 = CONVERT REF_244 to IYield
[i]Type for TMP_298

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_299(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
[i]Type for TMP_299

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_13(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_299(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_300

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_300(uint256)
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301(uint256) := index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_301

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_3(uint256) = index_2 + 1
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_11(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_32(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
strategyRegistry_8(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
REF_236(CreditLine.CreditLineConstants) -> creditLineConstants_32[_id_1]
[i]Type for REF_236

Name: creditLineConstants Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_237(address) -> REF_236.collateralAsset
[i]Type for REF_237

Name: REF_237 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_collateralAsset_1(address) := REF_237(address)
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_293 = CONVERT strategyRegistry_8 to IStrategyRegistry
[i]Type for TMP_293

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_294(address[]) = HIGH_LEVEL_CALL, dest:TMP_293(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_294

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_12(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_11', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
strategyRegistry_9(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_8', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_294(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_amount_0', '_amount_2'])
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_2(uint256) := ϕ(['index_1', 'index_3'])
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_239 -> LENGTH _strategyList_1
[i]Type for REF_239

Name: REF_239 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_295(bool) = index_2 < REF_239
[i]Type for TMP_295

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_240(address) -> _strategyList_1[index_2]
[i]Type for REF_240

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_296 = CONVERT 0 to address
[i]Type for TMP_296

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_297(bool) = REF_240 == TMP_296
[i]Type for TMP_297

Name: TMP_297 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN _amount_1
REF_241(mapping(address => uint256)) -> collateralShareInStrategy_12[_id_1]
[i]Type for REF_241

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_242(address) -> _strategyList_1[index_2]
[i]Type for REF_242

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_243(uint256) -> REF_241[REF_242]
[i]Type for REF_243

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_liquidityShares_1(uint256) := REF_243(uint256)
Finance type key: (-1, -1)
[i]Type for _liquidityShares

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_244(address) -> _strategyList_1[index_2]
[i]Type for REF_244

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_298 = CONVERT REF_244 to IYield
[i]Type for TMP_298

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: -999
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_299(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
[i]Type for TMP_299

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_13(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_299(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_300

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_2(uint256) := TMP_300(uint256)
Finance type key: (-1, -1)
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_301(uint256) := index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_301

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_3(uint256) = index_2 + 1
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef



withdrawCollateral
creditLineConstants_33(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
MODIFIER_CALL, CreditLine.onlyCreditLineBorrower(uint256)(_id_1)
creditLineConstants_35(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_47'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
TMP_302(uint256) = INTERNAL_CALL, CreditLine.withdrawableCollateral(uint256)(_id_1)
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_37(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
priceOracle_9(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: withdrawableCollateral
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
TMP_309 = CONVERT priceOracle_9 to IPriceOracle
[i]Type for TMP_309

Name: TMP_309 Function: withdrawableCollateral
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
REF_250(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
[i]Type for REF_250

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_251(address) -> REF_250.collateralAsset
[i]Type for REF_251

Name: REF_251 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
[i]Type for REF_252

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(address) -> REF_252.borrowAsset
[i]Type for REF_253

Name: REF_253 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_309(IPriceOracle), function:getLatestPrice, arguments:['REF_251', 'REF_253']  
[i]Type for TUPLE_4

Name: TUPLE_4 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_38(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_37', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
priceOracle_10(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_9', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: withdrawableCollateral
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
_ratioOfPrices_1(uint256)= UNPACK TUPLE_4 index: 0 
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_decimals_1(uint256)= UNPACK TUPLE_4 index: 1 
[i]Type for _decimals

Name: _decimals Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_310(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
[i]Type for TMP_310

Name: TMP_310 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_39(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
_totalCollateralTokens_1(uint256) := TMP_310(uint256)
Finance type key: (-1, -1)
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
[i]Type for TMP_311

Name: TMP_311 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_currentDebt_1(uint256) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
[i]Type for REF_255

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_256(uint256) -> REF_255.idealCollateralRatio
[i]Type for REF_256

Name: REF_256 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
[i]Type for TMP_312

Name: TMP_312 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_312', '_ratioOfPrices_1'] 
[i]Type for TMP_313

Name: TMP_313 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(uint256) = 10 ** _decimals_1
[i]Type for TMP_314

Name: TMP_314 Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_315(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_313', 'TMP_314'] 
[i]Type for TMP_315

Name: TMP_315 Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_316(uint256) = 10 ** 30
[i]Type for TMP_316

Name: TMP_316 Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_317(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_315', 'TMP_316'] 
[i]Type for TMP_317

Name: TMP_317 Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_collateralNeeded_1(uint256) := TMP_317(uint256)
Finance type key: (-1, -1)
[i]Type for _collateralNeeded

Name: _collateralNeeded Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_318(bool) = _collateralNeeded_1 >= _totalCollateralTokens_1
[i]Type for TMP_318

Name: TMP_318 Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_319(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCollateralTokens_1', '_collateralNeeded_1'] 
[i]Type for TMP_319

Name: TMP_319 Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_319
RETURN 0
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_37(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
priceOracle_9(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: withdrawableCollateral
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
TMP_309 = CONVERT priceOracle_9 to IPriceOracle
[i]Type for TMP_309

Name: TMP_309 Function: withdrawableCollateral
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
REF_250(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
[i]Type for REF_250

Name: creditLineConstants Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_251(address) -> REF_250.collateralAsset
[i]Type for REF_251

Name: REF_251 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
[i]Type for REF_252

Name: creditLineConstants Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(address) -> REF_252.borrowAsset
[i]Type for REF_253

Name: REF_253 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_309(IPriceOracle), function:getLatestPrice, arguments:['REF_251', 'REF_253']  
[i]Type for TUPLE_4

Name: TUPLE_4 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_38(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_37', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
priceOracle_10(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_9', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: withdrawableCollateral
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
_ratioOfPrices_1(uint256)= UNPACK TUPLE_4 index: 0 
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_decimals_1(uint256)= UNPACK TUPLE_4 index: 1 
[i]Type for _decimals

Name: _decimals Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_310(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
[i]Type for TMP_310

Name: TMP_310 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_39(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
_totalCollateralTokens_1(uint256) := TMP_310(uint256)
Finance type key: (-1, -1)
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
[i]Type for TMP_311

Name: TMP_311 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_currentDebt_1(uint256) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
[i]Type for REF_255

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_256(uint256) -> REF_255.idealCollateralRatio
[i]Type for REF_256

Name: REF_256 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
[i]Type for TMP_312

Name: TMP_312 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_312', '_ratioOfPrices_1'] 
[i]Type for TMP_313

Name: TMP_313 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(uint256) = 10 ** _decimals_1
[i]Type for TMP_314

Name: TMP_314 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_315(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_313', 'TMP_314'] 
[i]Type for TMP_315

Name: TMP_315 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_316(uint256) = 10 ** 30
[i]Type for TMP_316

Name: TMP_316 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_317(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_315', 'TMP_316'] 
[i]Type for TMP_317

Name: TMP_317 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_collateralNeeded_1(uint256) := TMP_317(uint256)
Finance type key: (-1, -1)
[i]Type for _collateralNeeded

Name: _collateralNeeded Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_318(bool) = _collateralNeeded_1 >= _totalCollateralTokens_1
[i]Type for TMP_318

Name: TMP_318 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_319(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCollateralTokens_1', '_collateralNeeded_1'] 
[i]Type for TMP_319

Name: TMP_319 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_319
RETURN 0
[i]Type for TMP_302

Name: TMP_302 Function: withdrawCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_36(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
_withdrawableCollateral_1(uint256) := TMP_302(uint256)
Finance type key: (-1, -1)
[i]Type for _withdrawableCollateral

Name: _withdrawableCollateral Function: withdrawCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(bool) = _amount_1 <= _withdrawableCollateral_1
[i]Type for TMP_303

Name: TMP_303 Function: withdrawCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,Collateral ratio cant go below ideal)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_247(CreditLine.CreditLineConstants) -> creditLineConstants_36[_id_1]
[i]Type for REF_247

Name: creditLineConstants Function: withdrawCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(address) -> REF_247.collateralAsset
[i]Type for REF_248

Name: REF_248 Function: withdrawCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_collateralAsset_1(address) := REF_248(address)
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: withdrawCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine._transferCollateral(uint256,address,uint256,bool)(_id_1,_collateralAsset_1,_amount_1,_toSavingsAccount_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
[i]Type for _asset

Name: _asset Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: _asset
Value: u
Fields: 
Finance Type: undef
_amountInTokens_1(uint256) := ϕ(['_totalCollateralTokens_1', '_amount_1'])
[i]Type for _amountInTokens

Name: _amountInTokens Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
[i]Type for _toSavingsAccount

Name: _toSavingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_10(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_10(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
[i]Type for TMP_320

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_321

Name: TMP_321 Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_11(address) := ϕ(['savingsAccount_13', 'savingsAccount_10', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_11(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_321(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_2(uint256) := ϕ(['index_1', 'index_3'])
[i]Type for index

Name: index Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_262 -> LENGTH _strategyList_1
[i]Type for REF_262

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_322(bool) = index_2 < REF_262
[i]Type for TMP_322

Name: TMP_322 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
[i]Type for REF_263

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _strategyList_1[index_2]
[i]Type for REF_264

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_265(uint256) -> REF_263[REF_264]
[i]Type for REF_265

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_1(uint256) := REF_265(uint256)
Finance type key: (-1, -1)
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
[i]Type for TMP_342

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_323(bool) = liquidityShares_1 == 0
[i]Type for TMP_323

Name: TMP_323 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_266(address) -> _strategyList_1[index_2]
[i]Type for REF_266

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_324 = CONVERT 0 to address
[i]Type for TMP_324

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_325(bool) = REF_266 == TMP_324
[i]Type for TMP_325

Name: TMP_325 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_326(bool) = TMP_323 || TMP_325
[i]Type for TMP_326

Name: TMP_326 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_267(address) -> _strategyList_1[index_2]
[i]Type for REF_267

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_327 = CONVERT REF_267 to IYield
[i]Type for TMP_327

Name: TMP_327 Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
[i]Type for TMP_328

Name: TMP_328 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_12(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_11', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_328(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_329

Name: TMP_329 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_330(bool) = TMP_329 > _amountInTokens_1
[i]Type for TMP_330

Name: TMP_330 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_3(uint256) := ϕ(['liquidityShares_2', 'liquidityShares_1'])
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
[i]Type for TMP_334

Name: TMP_334 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_2(uint256) := TMP_334(uint256)
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
[i]Type for TMP_331

Name: TMP_331 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_2(uint256) := TMP_331(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
[i]Type for TMP_332

Name: TMP_332 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
[i]Type for TMP_333

Name: TMP_333 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_2(uint256) := TMP_333(uint256)
Finance type key: (-1, -1)
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
[i]Type for REF_274

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_275(address) -> _strategyList_1[index_2]
[i]Type for REF_275

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_276(uint256) -> REF_274[REF_275]
[i]Type for REF_276

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
[i]Type for REF_277

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_278(address) -> _strategyList_1[index_2]
[i]Type for REF_278

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_279(uint256) -> REF_277[REF_278]
[i]Type for REF_279

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
[i]Type for TMP_335

Name: TMP_335 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
Finance type key: (-1, -1)
[i]Type for REF_276

Name: REF_276 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
[i]Type for TMP_338

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
REF_284(address) -> _strategyList_1[index_2]
[i]Type for REF_284

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
[i]Type for TMP_339

Name: TMP_339 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_14(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
[i]Type for TMP_336

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
REF_282(address) -> _strategyList_1[index_2]
[i]Type for REF_282

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
[i]Type for TMP_337

Name: TMP_337 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_17', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_13(address) := ϕ(['savingsAccount_13', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
[i]Type for TMP_340

Name: TMP_340 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(uint256) := index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_341

Name: TMP_341 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_3(uint256) = index_2 + 1
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
[i]Type for _asset

Name: _asset Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: _asset
Value: u
Fields: 
Finance Type: undef
_amountInTokens_1(uint256) := ϕ(['_totalCollateralTokens_1', '_amount_1'])
[i]Type for _amountInTokens

Name: _amountInTokens Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
[i]Type for _toSavingsAccount

Name: _toSavingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_10(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_10(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
[i]Type for TMP_320

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_321

Name: TMP_321 Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_11(address) := ϕ(['savingsAccount_13', 'savingsAccount_10', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_11(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_321(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_2(uint256) := ϕ(['index_1', 'index_3'])
[i]Type for index

Name: index Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_262 -> LENGTH _strategyList_1
[i]Type for REF_262

Name: REF_262 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_322(bool) = index_2 < REF_262
[i]Type for TMP_322

Name: TMP_322 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
[i]Type for REF_263

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _strategyList_1[index_2]
[i]Type for REF_264

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_265(uint256) -> REF_263[REF_264]
[i]Type for REF_265

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_1(uint256) := REF_265(uint256)
Finance type key: (-1, -1)
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
[i]Type for TMP_342

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_323(bool) = liquidityShares_1 == 0
[i]Type for TMP_323

Name: TMP_323 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_266(address) -> _strategyList_1[index_2]
[i]Type for REF_266

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_324 = CONVERT 0 to address
[i]Type for TMP_324

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_325(bool) = REF_266 == TMP_324
[i]Type for TMP_325

Name: TMP_325 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_326(bool) = TMP_323 || TMP_325
[i]Type for TMP_326

Name: TMP_326 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_267(address) -> _strategyList_1[index_2]
[i]Type for REF_267

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_327 = CONVERT REF_267 to IYield
[i]Type for TMP_327

Name: TMP_327 Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
[i]Type for TMP_328

Name: TMP_328 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_12(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_11', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_328(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_329

Name: TMP_329 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_330(bool) = TMP_329 > _amountInTokens_1
[i]Type for TMP_330

Name: TMP_330 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_3(uint256) := ϕ(['liquidityShares_2', 'liquidityShares_1'])
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
[i]Type for TMP_334

Name: TMP_334 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_2(uint256) := TMP_334(uint256)
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
[i]Type for TMP_331

Name: TMP_331 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_2(uint256) := TMP_331(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
[i]Type for TMP_332

Name: TMP_332 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
[i]Type for TMP_333

Name: TMP_333 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_2(uint256) := TMP_333(uint256)
Finance type key: (-1, -1)
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
[i]Type for REF_274

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_275(address) -> _strategyList_1[index_2]
[i]Type for REF_275

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_276(uint256) -> REF_274[REF_275]
[i]Type for REF_276

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
[i]Type for REF_277

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_278(address) -> _strategyList_1[index_2]
[i]Type for REF_278

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_279(uint256) -> REF_277[REF_278]
[i]Type for REF_279

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
[i]Type for TMP_335

Name: TMP_335 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
Finance type key: (-1, -1)
[i]Type for REF_276

Name: REF_276 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
[i]Type for TMP_338

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
REF_284(address) -> _strategyList_1[index_2]
[i]Type for REF_284

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
[i]Type for TMP_339

Name: TMP_339 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_14(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
[i]Type for TMP_336

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
REF_282(address) -> _strategyList_1[index_2]
[i]Type for REF_282

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
[i]Type for TMP_337

Name: TMP_337 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_17', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_13(address) := ϕ(['savingsAccount_13', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
[i]Type for TMP_340

Name: TMP_340 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(uint256) := index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_341

Name: TMP_341 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_3(uint256) = index_2 + 1
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
creditLineConstants_33(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
MODIFIER_CALL, CreditLine.onlyCreditLineBorrower(uint256)(_id_1)
creditLineConstants_35(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_47'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
TMP_302(uint256) = INTERNAL_CALL, CreditLine.withdrawableCollateral(uint256)(_id_1)
[i]Type for TMP_302

Name: TMP_302 Function: withdrawCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_36(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
_withdrawableCollateral_1(uint256) := TMP_302(uint256)
Finance type key: (-1, -1)
[i]Type for _withdrawableCollateral

Name: _withdrawableCollateral Function: withdrawCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_303(bool) = _amount_1 <= _withdrawableCollateral_1
[i]Type for TMP_303

Name: TMP_303 Function: withdrawCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,Collateral ratio cant go below ideal)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_247(CreditLine.CreditLineConstants) -> creditLineConstants_36[_id_1]
[i]Type for REF_247

Name: creditLineConstants Function: withdrawCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_248(address) -> REF_247.collateralAsset
[i]Type for REF_248

Name: REF_248 Function: withdrawCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_collateralAsset_1(address) := REF_248(address)
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: withdrawCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine._transferCollateral(uint256,address,uint256,bool)(_id_1,_collateralAsset_1,_amount_1,_toSavingsAccount_1)



withdrawableCollateral
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_37(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
priceOracle_9(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: withdrawableCollateral
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
TMP_309 = CONVERT priceOracle_9 to IPriceOracle
[i]Type for TMP_309

Name: TMP_309 Function: withdrawableCollateral
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
REF_250(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
[i]Type for REF_250

Name: creditLineConstants Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_251(address) -> REF_250.collateralAsset
[i]Type for REF_251

Name: REF_251 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
[i]Type for REF_252

Name: creditLineConstants Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(address) -> REF_252.borrowAsset
[i]Type for REF_253

Name: REF_253 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_309(IPriceOracle), function:getLatestPrice, arguments:['REF_251', 'REF_253']  
[i]Type for TUPLE_4

Name: TUPLE_4 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_38(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_37', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
priceOracle_10(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_9', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: withdrawableCollateral
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
_ratioOfPrices_1(uint256)= UNPACK TUPLE_4 index: 0 
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_decimals_1(uint256)= UNPACK TUPLE_4 index: 1 
[i]Type for _decimals

Name: _decimals Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_310(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
[i]Type for TMP_310

Name: TMP_310 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_39(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
_totalCollateralTokens_1(uint256) := TMP_310(uint256)
Finance type key: (-1, -1)
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
[i]Type for TMP_311

Name: TMP_311 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_currentDebt_1(uint256) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
[i]Type for REF_255

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_256(uint256) -> REF_255.idealCollateralRatio
[i]Type for REF_256

Name: REF_256 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
[i]Type for TMP_312

Name: TMP_312 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_312', '_ratioOfPrices_1'] 
[i]Type for TMP_313

Name: TMP_313 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(uint256) = 10 ** _decimals_1
[i]Type for TMP_314

Name: TMP_314 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_315(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_313', 'TMP_314'] 
[i]Type for TMP_315

Name: TMP_315 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_316(uint256) = 10 ** 30
[i]Type for TMP_316

Name: TMP_316 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_317(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_315', 'TMP_316'] 
[i]Type for TMP_317

Name: TMP_317 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_collateralNeeded_1(uint256) := TMP_317(uint256)
Finance type key: (-1, -1)
[i]Type for _collateralNeeded

Name: _collateralNeeded Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_318(bool) = _collateralNeeded_1 >= _totalCollateralTokens_1
[i]Type for TMP_318

Name: TMP_318 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN 0
TMP_319(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCollateralTokens_1', '_collateralNeeded_1'] 
[i]Type for TMP_319

Name: TMP_319 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_319
_id_1(uint256) := ϕ(['_id_1'])
[i]Type for _id

Name: _id Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_37(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
priceOracle_9(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: withdrawableCollateral
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
TMP_309 = CONVERT priceOracle_9 to IPriceOracle
[i]Type for TMP_309

Name: TMP_309 Function: withdrawableCollateral
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
REF_250(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
[i]Type for REF_250

Name: creditLineConstants Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_251(address) -> REF_250.collateralAsset
[i]Type for REF_251

Name: REF_251 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_252(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
[i]Type for REF_252

Name: creditLineConstants Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_253(address) -> REF_252.borrowAsset
[i]Type for REF_253

Name: REF_253 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_309(IPriceOracle), function:getLatestPrice, arguments:['REF_251', 'REF_253']  
[i]Type for TUPLE_4

Name: TUPLE_4 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_38(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_37', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
priceOracle_10(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_9', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: withdrawableCollateral
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
_ratioOfPrices_1(uint256)= UNPACK TUPLE_4 index: 0 
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_decimals_1(uint256)= UNPACK TUPLE_4 index: 1 
[i]Type for _decimals

Name: _decimals Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_310(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
[i]Type for TMP_310

Name: TMP_310 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_39(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: withdrawableCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
_totalCollateralTokens_1(uint256) := TMP_310(uint256)
Finance type key: (-1, -1)
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_311(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
[i]Type for TMP_311

Name: TMP_311 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_currentDebt_1(uint256) := TMP_311(uint256)
Finance type key: (-1, -1)
[i]Type for _currentDebt

Name: _currentDebt Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
[i]Type for REF_255

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_256(uint256) -> REF_255.idealCollateralRatio
[i]Type for REF_256

Name: REF_256 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
[i]Type for TMP_312

Name: TMP_312 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_313(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_312', '_ratioOfPrices_1'] 
[i]Type for TMP_313

Name: TMP_313 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_314(uint256) = 10 ** _decimals_1
[i]Type for TMP_314

Name: TMP_314 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_315(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_313', 'TMP_314'] 
[i]Type for TMP_315

Name: TMP_315 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
TMP_316(uint256) = 10 ** 30
[i]Type for TMP_316

Name: TMP_316 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_317(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_315', 'TMP_316'] 
[i]Type for TMP_317

Name: TMP_317 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_collateralNeeded_1(uint256) := TMP_317(uint256)
Finance type key: (-1, -1)
[i]Type for _collateralNeeded

Name: _collateralNeeded Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
TMP_318(bool) = _collateralNeeded_1 >= _totalCollateralTokens_1
[i]Type for TMP_318

Name: TMP_318 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN 0
TMP_319(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCollateralTokens_1', '_collateralNeeded_1'] 
[i]Type for TMP_319

Name: TMP_319 Function: withdrawableCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
RETURN TMP_319



liquidate
creditLineVariables_40(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
creditLineConstants_41(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
TMP_343(int256) = 1 + 1
[i]Type for TMP_343

Name: TMP_343 Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_343(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
REF_285(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
[i]Type for REF_285

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_286(CreditLine.CreditLineStatus) -> REF_285.status
[i]Type for REF_286

Name: REF_286 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_287(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_287

Name: REF_287 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_344(bool) = REF_286 == REF_287
[i]Type for TMP_344

Name: TMP_344 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_345(None) = SOLIDITY_CALL require(bool,string)(TMP_344,CreditLine: Credit line should be active.)
[i]Type for TMP_345

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_288(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
[i]Type for REF_288

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_289(uint256) -> REF_288.principal
[i]Type for REF_289

Name: REF_289 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_346(bool) = REF_289 != 0
[i]Type for TMP_346

Name: TMP_346 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_347(None) = SOLIDITY_CALL require(bool,string)(TMP_346,CreditLine: cannot liquidate if principal is 0)
[i]Type for TMP_347

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_348(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentCollateralRatio(uint256)(_id_1)
[i]Type for TMP_348

Name: TMP_348 Function: liquidate
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_43(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_31'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
currentCollateralRatio_1(uint256) := TMP_348(uint256)
Finance type key: (-1, -1)
[i]Type for currentCollateralRatio

Name: currentCollateralRatio Function: liquidate
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
REF_290(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
[i]Type for REF_290

Name: creditLineConstants Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_291(uint256) -> REF_290.idealCollateralRatio
[i]Type for REF_291

Name: REF_291 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_349(bool) = currentCollateralRatio_1 < REF_291
[i]Type for TMP_349

Name: TMP_349 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_350(None) = SOLIDITY_CALL require(bool,string)(TMP_349,CreditLine: Collateral ratio is higher than ideal value)
[i]Type for TMP_350

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_292(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
[i]Type for REF_292

Name: creditLineConstants Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_293(address) -> REF_292.collateralAsset
[i]Type for REF_293

Name: creditLineConstants.collateralAsset Function: liquidate
Num: -1
Den: -1
Address: 2
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_collateralAsset_1(address) := REF_293(address)
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: liquidate
Num: -1
Den: -1
Address: 2
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
REF_294(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
[i]Type for REF_294

Name: creditLineConstants Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_295(address) -> REF_294.lender
[i]Type for REF_295

Name: REF_295 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_lender_1(address) := REF_295(address)
Finance type key: (-1, -1)
[i]Type for _lender

Name: _lender Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_351(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
[i]Type for TMP_351

Name: TMP_351 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_44(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
_totalCollateralTokens_1(uint256) := TMP_351(uint256)
Finance type key: (-1, -1)
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_296(CreditLine.CreditLineConstants) -> creditLineConstants_44[_id_1]
[i]Type for REF_296

Name: creditLineConstants Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_297(address) -> REF_296.borrowAsset
[i]Type for REF_297

Name: creditLineConstants.borrowAsset Function: liquidate
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_borrowAsset_1(address) := REF_297(address)
Finance type key: (-1, -1)
[i]Type for _borrowAsset

Name: _borrowAsset Function: liquidate
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_298(CreditLine.CreditLineVariables) -> creditLineVariables_43[_id_1]
[i]Type for REF_298

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_299(CreditLine.CreditLineStatus) -> REF_298.status
[i]Type for REF_299

Name: REF_299 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_300(CreditLine.CreditLineStatus) -> CreditLineStatus.LIQUIDATED
[i]Type for REF_300

Name: REF_300 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_44(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_43'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_299 (->creditLineVariables_44) := REF_300(CreditLine.CreditLineStatus)
Finance type key: (-1, -1)
[i]Type for REF_299

Name: REF_299 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_301(CreditLine.CreditLineConstants) -> creditLineConstants_44[_id_1]
[i]Type for REF_301

Name: creditLineConstants Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_302(bool) -> REF_301.autoLiquidation
[i]Type for REF_302

Name: REF_302 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_352(bool) = _lender_1 != msg.sender
[i]Type for TMP_352

Name: TMP_352 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_353(bool) = REF_302 && TMP_352
[i]Type for TMP_353

Name: TMP_353 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_354(uint256) = INTERNAL_CALL, CreditLine._borrowTokensToLiquidate(address,address,uint256)(_borrowAsset_1,_collateralAsset_1,_totalCollateralTokens_1)
_borrowAsset_1(address) := ϕ(['_borrowAsset_1', '_borrowAsset_1'])
[i]Type for _borrowAsset

Name: _borrowAsset Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: 1
Norm: 18
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
_collateralAsset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
[i]Type for _collateralAsset

Name: _collateralAsset Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: 2
Norm: 6
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
_totalCollateralTokens_1(uint256) := ϕ(['_totalCollateralTokens_1', '_totalCollateralTokens_1'])
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: _borrowTokensToLiquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceOracle_11(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
liquidatorRewardFraction_2(uint256) := ϕ(['liquidatorRewardFraction_3', 'liquidatorRewardFraction_0', 'liquidatorRewardFraction_1'])
[i]Type for liquidatorRewardFraction

Name: liquidatorRewardFraction Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_367 = CONVERT priceOracle_11 to IPriceOracle
[i]Type for TMP_367

Name: TMP_367 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_367(IPriceOracle), function:getLatestPrice, arguments:['_borrowAsset_1', '_collateralAsset_1']  
[i]Type for TUPLE_6

Name: TUPLE_6 Function: _borrowTokensToLiquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceOracle_12(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_11', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
liquidatorRewardFraction_3(uint256) := ϕ(['liquidatorRewardFraction_3', 'liquidatorRewardFraction_1', 'liquidatorRewardFraction_2'])
[i]Type for liquidatorRewardFraction

Name: liquidatorRewardFraction Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_ratioOfPrices_1(uint256)= UNPACK TUPLE_6 index: 0 
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: _borrowTokensToLiquidate
Num: 1
Den: 2
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_decimals_1(uint256)= UNPACK TUPLE_6 index: 1 
[i]Type for _decimals

Name: _decimals Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_368(uint256) = 10 ** 30
[i]Type for TMP_368

Name: TMP_368 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_369 = CONVERT TMP_368 to uint256
[i]Type for TMP_369

Name: TMP_369 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_370(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_369', 'liquidatorRewardFraction_3'] 
[i]Type for TMP_370

Name: TMP_370 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_371(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralTokens_1', 'TMP_370'] 
[i]Type for TMP_371

Name: TMP_371 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_372(uint256) = 10 ** 30
[i]Type for TMP_372

Name: TMP_372 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_373(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_371', 'TMP_372'] 
[i]Type for TMP_373

Name: TMP_373 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_374(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_373', '_ratioOfPrices_1'] 
[i]Type for TMP_374

Name: TMP_374 Function: _borrowTokensToLiquidate
Num: 1
Den: 2
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
_borrowTokens_1(uint256) := TMP_374(uint256)
Finance type key: (-1, -1)
[i]Type for _borrowTokens

Name: _borrowTokens Function: _borrowTokensToLiquidate
Num: 1
Den: 2
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
RETURN _borrowTokens_1
_borrowAsset_1(address) := ϕ(['_borrowAsset_1', '_borrowAsset_1'])
[i]Type for _borrowAsset

Name: _borrowAsset Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: 1
Norm: 18
LF: _borrowAsset
Value: u
Fields: 
Finance Type: undef
_collateralAsset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
[i]Type for _collateralAsset

Name: _collateralAsset Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: 2
Norm: 6
LF: _collateralAsset
Value: u
Fields: 
Finance Type: undef
_totalCollateralTokens_1(uint256) := ϕ(['_totalCollateralTokens_1', '_totalCollateralTokens_1'])
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: _borrowTokensToLiquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceOracle_11(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_0', 'priceOracle_1', 'priceOracle_10', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
liquidatorRewardFraction_2(uint256) := ϕ(['liquidatorRewardFraction_3', 'liquidatorRewardFraction_0', 'liquidatorRewardFraction_1'])
[i]Type for liquidatorRewardFraction

Name: liquidatorRewardFraction Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_367 = CONVERT priceOracle_11 to IPriceOracle
[i]Type for TMP_367

Name: TMP_367 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: 5
Norm: u
LF: PriceOracle
Value: u
Fields: 
Finance Type: undef
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_367(IPriceOracle), function:getLatestPrice, arguments:['_borrowAsset_1', '_collateralAsset_1']  
[i]Type for TUPLE_6

Name: TUPLE_6 Function: _borrowTokensToLiquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
priceOracle_12(address) := ϕ(['priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_11', 'priceOracle_12', 'priceOracle_5'])
[i]Type for priceOracle

Name: priceOracle Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: 5
Norm: u
LF: priceOracle
Value: u
Fields: 
Finance Type: undef
liquidatorRewardFraction_3(uint256) := ϕ(['liquidatorRewardFraction_3', 'liquidatorRewardFraction_1', 'liquidatorRewardFraction_2'])
[i]Type for liquidatorRewardFraction

Name: liquidatorRewardFraction Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_ratioOfPrices_1(uint256)= UNPACK TUPLE_6 index: 0 
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: _borrowTokensToLiquidate
Num: 1
Den: 2
Address: u
Norm: 18
LF: None
Value: 'u'
Fields: 
Finance Type: undef
_decimals_1(uint256)= UNPACK TUPLE_6 index: 1 
[i]Type for _decimals

Name: _decimals Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_368(uint256) = 10 ** 30
[i]Type for TMP_368

Name: TMP_368 Function: _borrowTokensToLiquidate
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_369 = CONVERT TMP_368 to uint256
[i]Type for TMP_369

Name: TMP_369 Function: _borrowTokensToLiquidate
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_370(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_369', 'liquidatorRewardFraction_3'] 
[i]Type for TMP_370

Name: TMP_370 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_371(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralTokens_1', 'TMP_370'] 
[i]Type for TMP_371

Name: TMP_371 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_372(uint256) = 10 ** 30
[i]Type for TMP_372

Name: TMP_372 Function: _borrowTokensToLiquidate
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: 1000000000000000000000000000000
Fields: 
Finance Type: undef
TMP_373(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_371', 'TMP_372'] 
[i]Type for TMP_373

Name: TMP_373 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_374(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_373', '_ratioOfPrices_1'] 
[i]Type for TMP_374

Name: TMP_374 Function: _borrowTokensToLiquidate
Num: 1
Den: 2
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
_borrowTokens_1(uint256) := TMP_374(uint256)
Finance type key: (-1, -1)
[i]Type for _borrowTokens

Name: _borrowTokens Function: _borrowTokensToLiquidate
Num: 1
Den: 2
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
RETURN _borrowTokens_1
[i]Type for TMP_354

Name: TMP_354 Function: liquidate
Num: 1
Den: 2
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
_borrowTokens_1(uint256) := TMP_354(uint256)
Finance type key: (-1, -1)
[i]Type for _borrowTokens

Name: _borrowTokens Function: liquidate
Num: 1
Den: 2
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine._transferCollateral(uint256,address,uint256,bool)(_id_1,_collateralAsset_1,_totalCollateralTokens_1,_toSavingsAccount_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
[i]Type for _asset

Name: _asset Function: _transferCollateral
Num: -1
Den: -1
Address: 2
Norm: 6
LF: _asset
Value: u
Fields: 
Finance Type: undef
_amountInTokens_1(uint256) := ϕ(['_totalCollateralTokens_1', '_amount_1'])
[i]Type for _amountInTokens

Name: _amountInTokens Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
[i]Type for _toSavingsAccount

Name: _toSavingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_10(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_10(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
[i]Type for TMP_320

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_321

Name: TMP_321 Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_11(address) := ϕ(['savingsAccount_13', 'savingsAccount_10', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_11(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_321(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_2(uint256) := ϕ(['index_1', 'index_3'])
[i]Type for index

Name: index Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_262 -> LENGTH _strategyList_1
[i]Type for REF_262

Name: REF_262 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_322(bool) = index_2 < REF_262
[i]Type for TMP_322

Name: TMP_322 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
[i]Type for REF_263

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _strategyList_1[index_2]
[i]Type for REF_264

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_265(uint256) -> REF_263[REF_264]
[i]Type for REF_265

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_1(uint256) := REF_265(uint256)
Finance type key: (-1, -1)
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
[i]Type for TMP_342

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_323(bool) = liquidityShares_1 == 0
[i]Type for TMP_323

Name: TMP_323 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_266(address) -> _strategyList_1[index_2]
[i]Type for REF_266

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_324 = CONVERT 0 to address
[i]Type for TMP_324

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_325(bool) = REF_266 == TMP_324
[i]Type for TMP_325

Name: TMP_325 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_326(bool) = TMP_323 || TMP_325
[i]Type for TMP_326

Name: TMP_326 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_267(address) -> _strategyList_1[index_2]
[i]Type for REF_267

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_327 = CONVERT REF_267 to IYield
[i]Type for TMP_327

Name: TMP_327 Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
[i]Type for TMP_328

Name: TMP_328 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_12(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_11', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_328(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_329

Name: TMP_329 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_330(bool) = TMP_329 > _amountInTokens_1
[i]Type for TMP_330

Name: TMP_330 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_3(uint256) := ϕ(['liquidityShares_2', 'liquidityShares_1'])
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
[i]Type for TMP_334

Name: TMP_334 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_2(uint256) := TMP_334(uint256)
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
[i]Type for TMP_331

Name: TMP_331 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_2(uint256) := TMP_331(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
[i]Type for TMP_332

Name: TMP_332 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
[i]Type for TMP_333

Name: TMP_333 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_2(uint256) := TMP_333(uint256)
Finance type key: (-1, -1)
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
[i]Type for REF_274

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_275(address) -> _strategyList_1[index_2]
[i]Type for REF_275

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_276(uint256) -> REF_274[REF_275]
[i]Type for REF_276

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
[i]Type for REF_277

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_278(address) -> _strategyList_1[index_2]
[i]Type for REF_278

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_279(uint256) -> REF_277[REF_278]
[i]Type for REF_279

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
[i]Type for TMP_335

Name: TMP_335 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
Finance type key: (-1, -1)
[i]Type for REF_276

Name: REF_276 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
[i]Type for TMP_338

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
REF_284(address) -> _strategyList_1[index_2]
[i]Type for REF_284

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
[i]Type for TMP_339

Name: TMP_339 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_14(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
[i]Type for TMP_336

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
REF_282(address) -> _strategyList_1[index_2]
[i]Type for REF_282

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
[i]Type for TMP_337

Name: TMP_337 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_17', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_13(address) := ϕ(['savingsAccount_13', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
[i]Type for TMP_340

Name: TMP_340 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(uint256) := index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_341

Name: TMP_341 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_3(uint256) = index_2 + 1
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
[i]Type for _asset

Name: _asset Function: _transferCollateral
Num: -1
Den: -1
Address: 2
Norm: 6
LF: _asset
Value: u
Fields: 
Finance Type: undef
_amountInTokens_1(uint256) := ϕ(['_totalCollateralTokens_1', '_amount_1'])
[i]Type for _amountInTokens

Name: _amountInTokens Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
[i]Type for _toSavingsAccount

Name: _toSavingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_10(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_10(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
[i]Type for TMP_320

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_321

Name: TMP_321 Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_11(address) := ϕ(['savingsAccount_13', 'savingsAccount_10', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_11(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_321(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_2(uint256) := ϕ(['index_1', 'index_3'])
[i]Type for index

Name: index Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_262 -> LENGTH _strategyList_1
[i]Type for REF_262

Name: REF_262 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_322(bool) = index_2 < REF_262
[i]Type for TMP_322

Name: TMP_322 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
[i]Type for REF_263

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _strategyList_1[index_2]
[i]Type for REF_264

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_265(uint256) -> REF_263[REF_264]
[i]Type for REF_265

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_1(uint256) := REF_265(uint256)
Finance type key: (-1, -1)
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
[i]Type for TMP_342

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_323(bool) = liquidityShares_1 == 0
[i]Type for TMP_323

Name: TMP_323 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_266(address) -> _strategyList_1[index_2]
[i]Type for REF_266

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_324 = CONVERT 0 to address
[i]Type for TMP_324

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_325(bool) = REF_266 == TMP_324
[i]Type for TMP_325

Name: TMP_325 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_326(bool) = TMP_323 || TMP_325
[i]Type for TMP_326

Name: TMP_326 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_267(address) -> _strategyList_1[index_2]
[i]Type for REF_267

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_327 = CONVERT REF_267 to IYield
[i]Type for TMP_327

Name: TMP_327 Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
[i]Type for TMP_328

Name: TMP_328 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_12(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_11', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_328(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_329

Name: TMP_329 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_330(bool) = TMP_329 > _amountInTokens_1
[i]Type for TMP_330

Name: TMP_330 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_3(uint256) := ϕ(['liquidityShares_2', 'liquidityShares_1'])
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
[i]Type for TMP_334

Name: TMP_334 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_2(uint256) := TMP_334(uint256)
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
[i]Type for TMP_331

Name: TMP_331 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_2(uint256) := TMP_331(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
[i]Type for TMP_332

Name: TMP_332 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
[i]Type for TMP_333

Name: TMP_333 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_2(uint256) := TMP_333(uint256)
Finance type key: (-1, -1)
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
[i]Type for REF_274

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_275(address) -> _strategyList_1[index_2]
[i]Type for REF_275

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_276(uint256) -> REF_274[REF_275]
[i]Type for REF_276

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
[i]Type for REF_277

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_278(address) -> _strategyList_1[index_2]
[i]Type for REF_278

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_279(uint256) -> REF_277[REF_278]
[i]Type for REF_279

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
[i]Type for TMP_335

Name: TMP_335 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
Finance type key: (-1, -1)
[i]Type for REF_276

Name: REF_276 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
[i]Type for TMP_338

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
REF_284(address) -> _strategyList_1[index_2]
[i]Type for REF_284

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
[i]Type for TMP_339

Name: TMP_339 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_14(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
[i]Type for TMP_336

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
REF_282(address) -> _strategyList_1[index_2]
[i]Type for REF_282

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
[i]Type for TMP_337

Name: TMP_337 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_17', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_13(address) := ϕ(['savingsAccount_13', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
[i]Type for TMP_340

Name: TMP_340 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(uint256) := index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_341

Name: TMP_341 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_3(uint256) = index_2 + 1
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_355 = CONVERT 0 to address
[i]Type for TMP_355

Name: TMP_355 Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_356(bool) = _borrowAsset_1 == TMP_355
[i]Type for TMP_356

Name: TMP_356 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_357(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256,string), arguments:['amount_1', '_borrowTokens_1', 'Insufficient ETH to liquidate'] 
Handling trace

Name: _borrowTokens Function: liquidate
Num: 1
Den: 2
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: amount_1 Function: liquidate
Num: 2
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
d:{1: 1, 2: -1}
Error with TMP_357 in function liquidate
Error with: TMP_357 in function liquidate
[i]Type for TMP_357

Name: TMP_357 Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_returnETH_1(uint256) := TMP_357(uint256)
Finance type key: (-1, -1)
[i]Type for _returnETH

Name: _returnETH Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_360 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_360

Name: TMP_360 Function: liquidate
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_360', 'msg.sender', '_lender_1', '_borrowTokens_1'] 
TMP_358(bool) = _returnETH_1 != 0
[i]Type for TMP_358

Name: TMP_358 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_5(bool,bytes) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:_returnETH_1 
[i]Type for TUPLE_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_5 index: 0 
[i]Type for success

Name: success Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_359(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer fail)
[i]Type for TMP_359

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineVariables_40(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_0', 'creditLineVariables_10', 'creditLineVariables_1', 'creditLineVariables_44', 'creditLineVariables_36', 'creditLineVariables_39', 'creditLineVariables_12', 'creditLineVariables_15', 'creditLineVariables_5', 'creditLineVariables_8', 'creditLineVariables_22', 'creditLineVariables_32', 'creditLineVariables_4', 'creditLineVariables_45', 'creditLineVariables_2'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
creditLineConstants_41(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_2', 'creditLineConstants_0', 'creditLineConstants_24', 'creditLineConstants_28', 'creditLineConstants_36', 'creditLineConstants_44', 'creditLineConstants_6', 'creditLineConstants_46', 'creditLineConstants_17', 'creditLineConstants_40', 'creditLineConstants_18', 'creditLineConstants_47', 'creditLineConstants_23', 'creditLineConstants_19', 'creditLineConstants_7', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_48', 'creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
TMP_343(int256) = 1 + 1
[i]Type for TMP_343

Name: TMP_343 Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
a_1(int256) := TMP_343(int256)
Finance type key: (-1, -1)
[i]Type for a

Name: a Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
REF_285(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
[i]Type for REF_285

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_286(CreditLine.CreditLineStatus) -> REF_285.status
[i]Type for REF_286

Name: REF_286 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_287(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
[i]Type for REF_287

Name: REF_287 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_344(bool) = REF_286 == REF_287
[i]Type for TMP_344

Name: TMP_344 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_345(None) = SOLIDITY_CALL require(bool,string)(TMP_344,CreditLine: Credit line should be active.)
[i]Type for TMP_345

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_288(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
[i]Type for REF_288

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_289(uint256) -> REF_288.principal
[i]Type for REF_289

Name: REF_289 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_346(bool) = REF_289 != 0
[i]Type for TMP_346

Name: TMP_346 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_347(None) = SOLIDITY_CALL require(bool,string)(TMP_346,CreditLine: cannot liquidate if principal is 0)
[i]Type for TMP_347

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_348(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentCollateralRatio(uint256)(_id_1)
[i]Type for TMP_348

Name: TMP_348 Function: liquidate
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_43(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_31'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
currentCollateralRatio_1(uint256) := TMP_348(uint256)
Finance type key: (-1, -1)
[i]Type for currentCollateralRatio

Name: currentCollateralRatio Function: liquidate
Num: 
Den: 
Address: u
Norm: 30
LF: None
Value: u
Fields: 
Finance Type: undef
REF_290(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
[i]Type for REF_290

Name: creditLineConstants Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_291(uint256) -> REF_290.idealCollateralRatio
[i]Type for REF_291

Name: REF_291 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_349(bool) = currentCollateralRatio_1 < REF_291
[i]Type for TMP_349

Name: TMP_349 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_350(None) = SOLIDITY_CALL require(bool,string)(TMP_349,CreditLine: Collateral ratio is higher than ideal value)
[i]Type for TMP_350

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_292(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
[i]Type for REF_292

Name: creditLineConstants Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: collateralAsset
Finance Type: undef
REF_293(address) -> REF_292.collateralAsset
[i]Type for REF_293

Name: creditLineConstants.collateralAsset Function: liquidate
Num: -1
Den: -1
Address: 2
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_collateralAsset_1(address) := REF_293(address)
Finance type key: (-1, -1)
[i]Type for _collateralAsset

Name: _collateralAsset Function: liquidate
Num: -1
Den: -1
Address: 2
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
REF_294(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
[i]Type for REF_294

Name: creditLineConstants Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_295(address) -> REF_294.lender
[i]Type for REF_295

Name: REF_295 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_lender_1(address) := REF_295(address)
Finance type key: (-1, -1)
[i]Type for _lender

Name: _lender Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_351(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
[i]Type for TMP_351

Name: TMP_351 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
creditLineConstants_44(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
[i]Type for creditLineConstants

Name: creditLineConstants Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: borrower, lender, borrowLimit, autoLiquidation, idealCollateralRatio, borrowRate, borrowAsset, collateralAsset, requestByLender
Finance Type: undef
_totalCollateralTokens_1(uint256) := TMP_351(uint256)
Finance type key: (-1, -1)
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_296(CreditLine.CreditLineConstants) -> creditLineConstants_44[_id_1]
[i]Type for REF_296

Name: creditLineConstants Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: borrowAsset
Finance Type: undef
REF_297(address) -> REF_296.borrowAsset
[i]Type for REF_297

Name: creditLineConstants.borrowAsset Function: liquidate
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
_borrowAsset_1(address) := REF_297(address)
Finance type key: (-1, -1)
[i]Type for _borrowAsset

Name: _borrowAsset Function: liquidate
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_298(CreditLine.CreditLineVariables) -> creditLineVariables_43[_id_1]
[i]Type for REF_298

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_299(CreditLine.CreditLineStatus) -> REF_298.status
[i]Type for REF_299

Name: REF_299 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_300(CreditLine.CreditLineStatus) -> CreditLineStatus.LIQUIDATED
[i]Type for REF_300

Name: REF_300 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
creditLineVariables_44(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_43'])
[i]Type for creditLineVariables

Name: creditLineVariables Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: status, interestAccruedTillLastPrincipalUpdate, principal, lastPrincipalUpdateTime, totalInterestRepaid
Finance Type: undef
REF_299 (->creditLineVariables_44) := REF_300(CreditLine.CreditLineStatus)
Finance type key: (-1, -1)
[i]Type for REF_299

Name: REF_299 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
REF_301(CreditLine.CreditLineConstants) -> creditLineConstants_44[_id_1]
[i]Type for REF_301

Name: creditLineConstants Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_302(bool) -> REF_301.autoLiquidation
[i]Type for REF_302

Name: REF_302 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
TMP_352(bool) = _lender_1 != msg.sender
[i]Type for TMP_352

Name: TMP_352 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_353(bool) = REF_302 && TMP_352
[i]Type for TMP_353

Name: TMP_353 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_354(uint256) = INTERNAL_CALL, CreditLine._borrowTokensToLiquidate(address,address,uint256)(_borrowAsset_1,_collateralAsset_1,_totalCollateralTokens_1)
[i]Type for TMP_354

Name: TMP_354 Function: liquidate
Num: 1
Den: 2
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
_borrowTokens_1(uint256) := TMP_354(uint256)
Finance type key: (-1, -1)
[i]Type for _borrowTokens

Name: _borrowTokens Function: liquidate
Num: 1
Den: 2
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef
INTERNAL_CALL, CreditLine._transferCollateral(uint256,address,uint256,bool)(_id_1,_collateralAsset_1,_totalCollateralTokens_1,_toSavingsAccount_1)
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
[i]Type for _asset

Name: _asset Function: _transferCollateral
Num: -1
Den: -1
Address: 2
Norm: 6
LF: _asset
Value: u
Fields: 
Finance Type: undef
_amountInTokens_1(uint256) := ϕ(['_totalCollateralTokens_1', '_amount_1'])
[i]Type for _amountInTokens

Name: _amountInTokens Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
[i]Type for _toSavingsAccount

Name: _toSavingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_10(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_10(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
[i]Type for TMP_320

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_321

Name: TMP_321 Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_11(address) := ϕ(['savingsAccount_13', 'savingsAccount_10', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_11(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_321(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_2(uint256) := ϕ(['index_1', 'index_3'])
[i]Type for index

Name: index Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_262 -> LENGTH _strategyList_1
[i]Type for REF_262

Name: REF_262 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_322(bool) = index_2 < REF_262
[i]Type for TMP_322

Name: TMP_322 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
[i]Type for REF_263

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _strategyList_1[index_2]
[i]Type for REF_264

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_265(uint256) -> REF_263[REF_264]
[i]Type for REF_265

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_1(uint256) := REF_265(uint256)
Finance type key: (-1, -1)
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
[i]Type for TMP_342

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_323(bool) = liquidityShares_1 == 0
[i]Type for TMP_323

Name: TMP_323 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_266(address) -> _strategyList_1[index_2]
[i]Type for REF_266

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_324 = CONVERT 0 to address
[i]Type for TMP_324

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_325(bool) = REF_266 == TMP_324
[i]Type for TMP_325

Name: TMP_325 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_326(bool) = TMP_323 || TMP_325
[i]Type for TMP_326

Name: TMP_326 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_267(address) -> _strategyList_1[index_2]
[i]Type for REF_267

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_327 = CONVERT REF_267 to IYield
[i]Type for TMP_327

Name: TMP_327 Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
[i]Type for TMP_328

Name: TMP_328 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_12(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_11', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_328(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_329

Name: TMP_329 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_330(bool) = TMP_329 > _amountInTokens_1
[i]Type for TMP_330

Name: TMP_330 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_3(uint256) := ϕ(['liquidityShares_2', 'liquidityShares_1'])
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
[i]Type for TMP_334

Name: TMP_334 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_2(uint256) := TMP_334(uint256)
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
[i]Type for TMP_331

Name: TMP_331 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_2(uint256) := TMP_331(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
[i]Type for TMP_332

Name: TMP_332 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
[i]Type for TMP_333

Name: TMP_333 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_2(uint256) := TMP_333(uint256)
Finance type key: (-1, -1)
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
[i]Type for REF_274

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_275(address) -> _strategyList_1[index_2]
[i]Type for REF_275

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_276(uint256) -> REF_274[REF_275]
[i]Type for REF_276

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
[i]Type for REF_277

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_278(address) -> _strategyList_1[index_2]
[i]Type for REF_278

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_279(uint256) -> REF_277[REF_278]
[i]Type for REF_279

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
[i]Type for TMP_335

Name: TMP_335 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
Finance type key: (-1, -1)
[i]Type for REF_276

Name: REF_276 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
[i]Type for TMP_338

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
REF_284(address) -> _strategyList_1[index_2]
[i]Type for REF_284

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
[i]Type for TMP_339

Name: TMP_339 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_14(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
[i]Type for TMP_336

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
REF_282(address) -> _strategyList_1[index_2]
[i]Type for REF_282

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
[i]Type for TMP_337

Name: TMP_337 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_17', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_13(address) := ϕ(['savingsAccount_13', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
[i]Type for TMP_340

Name: TMP_340 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(uint256) := index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_341

Name: TMP_341 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_3(uint256) = index_2 + 1
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
[i]Type for _id

Name: _id Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
[i]Type for _asset

Name: _asset Function: _transferCollateral
Num: -1
Den: -1
Address: 2
Norm: 6
LF: _asset
Value: u
Fields: 
Finance Type: undef
_amountInTokens_1(uint256) := ϕ(['_totalCollateralTokens_1', '_amount_1'])
[i]Type for _amountInTokens

Name: _amountInTokens Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
[i]Type for _toSavingsAccount

Name: _toSavingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_0', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_10(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_10(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
[i]Type for TMP_320

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: StrategyRegistry
Value: u
Fields: 
Finance Type: undef
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
[i]Type for TMP_321

Name: TMP_321 Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_11(address) := ϕ(['savingsAccount_13', 'savingsAccount_10', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
strategyRegistry_11(address) := ϕ(['strategyRegistry_11', 'strategyRegistry_1', 'strategyRegistry_3', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_9', 'strategyRegistry_5'])
[i]Type for strategyRegistry

Name: strategyRegistry Function: _transferCollateral
Num: -1
Den: -1
Address: 4
Norm: u
LF: strategyRegistry
Value: u
Fields: 
Finance Type: undef
_strategyList_1(address[]) := TMP_321(address[])
Finance type key: (-1, -1)
[i]Type for _strategyList

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_1(uint256) := 0(uint256)
Finance type key: (-1, -1)
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_2(uint256) := ϕ(['index_1', 'index_3'])
[i]Type for index

Name: index Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_262 -> LENGTH _strategyList_1
[i]Type for REF_262

Name: REF_262 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_322(bool) = index_2 < REF_262
[i]Type for TMP_322

Name: TMP_322 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
[i]Type for REF_263

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_264(address) -> _strategyList_1[index_2]
[i]Type for REF_264

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_265(uint256) -> REF_263[REF_264]
[i]Type for REF_265

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_1(uint256) := REF_265(uint256)
Finance type key: (-1, -1)
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
[i]Type for TMP_342

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_323(bool) = liquidityShares_1 == 0
[i]Type for TMP_323

Name: TMP_323 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_266(address) -> _strategyList_1[index_2]
[i]Type for REF_266

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_324 = CONVERT 0 to address
[i]Type for TMP_324

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_325(bool) = REF_266 == TMP_324
[i]Type for TMP_325

Name: TMP_325 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_326(bool) = TMP_323 || TMP_325
[i]Type for TMP_326

Name: TMP_326 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_267(address) -> _strategyList_1[index_2]
[i]Type for REF_267

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_327 = CONVERT REF_267 to IYield
[i]Type for TMP_327

Name: TMP_327 Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: Yield
Value: u
Fields: 
Finance Type: undef
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
[i]Type for TMP_328

Name: TMP_328 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_12(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_11', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
_tokenInStrategy_2(uint256) := TMP_328(uint256)
Finance type key: (-1, -1)
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
[i]Type for TMP_329

Name: TMP_329 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_330(bool) = TMP_329 > _amountInTokens_1
[i]Type for TMP_330

Name: TMP_330 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_3(uint256) := ϕ(['liquidityShares_2', 'liquidityShares_1'])
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
[i]Type for TMP_334

Name: TMP_334 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_activeAmount_2(uint256) := TMP_334(uint256)
Finance type key: (-1, -1)
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
[i]Type for TMP_331

Name: TMP_331 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_tokensToTransfer_2(uint256) := TMP_331(uint256)
Finance type key: (-1, -1)
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
[i]Type for TMP_332

Name: TMP_332 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
[i]Type for TMP_333

Name: TMP_333 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityShares_2(uint256) := TMP_333(uint256)
Finance type key: (-1, -1)
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
[i]Type for REF_274

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_275(address) -> _strategyList_1[index_2]
[i]Type for REF_275

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_276(uint256) -> REF_274[REF_275]
[i]Type for REF_276

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
[i]Type for REF_277

Name: collateralShareInStrategy Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_278(address) -> _strategyList_1[index_2]
[i]Type for REF_278

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_279(uint256) -> REF_277[REF_278]
[i]Type for REF_279

Name: collateralShareInStrategy Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
[i]Type for TMP_335

Name: TMP_335 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
Finance type key: (-1, -1)
[i]Type for REF_276

Name: REF_276 Function: _transferCollateral
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
[i]Type for TMP_338

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
REF_284(address) -> _strategyList_1[index_2]
[i]Type for REF_284

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
[i]Type for TMP_339

Name: TMP_339 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_14(address) := ϕ(['savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
[i]Type for TMP_336

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: SavingsAccount
Value: u
Fields: 
Finance Type: undef
REF_282(address) -> _strategyList_1[index_2]
[i]Type for REF_282

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Address: -991
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
[i]Type for TMP_337

Name: TMP_337 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_19', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_18', 'collateralShareInStrategy_17', 'collateralShareInStrategy_6'])
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_13(address) := ϕ(['savingsAccount_13', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: _transferCollateral
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
[i]Type for TMP_340

Name: TMP_340 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_341(uint256) := index_2(uint256)
Finance type key: (-1, -1)
[i]Type for TMP_341

Name: TMP_341 Function: _transferCollateral
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
index_3(uint256) = index_2 + 1
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
TMP_355 = CONVERT 0 to address
[i]Type for TMP_355

Name: TMP_355 Function: liquidate
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_356(bool) = _borrowAsset_1 == TMP_355
[i]Type for TMP_356

Name: TMP_356 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_357(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256,string), arguments:['amount_1', '_borrowTokens_1', 'Insufficient ETH to liquidate'] 
Handling trace

Name: _borrowTokens Function: liquidate
Num: 1
Den: 2
Address: u
Norm: 18
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: amount_1 Function: liquidate
Num: 2
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
d:{1: 1, 2: -1}
[i]Type for TMP_357

Name: TMP_357 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_returnETH_1(uint256) := TMP_357(uint256)
Finance type key: (-1, -1)
[i]Type for _returnETH

Name: _returnETH Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_360 = CONVERT _borrowAsset_1 to IERC20
[i]Type for TMP_360

Name: TMP_360 Function: liquidate
Num: -1
Den: -1
Address: 1
Norm: 18
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_360', 'msg.sender', '_lender_1', '_borrowTokens_1'] 
TMP_358(bool) = _returnETH_1 != 0
[i]Type for TMP_358

Name: TMP_358 Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_5(bool,bytes) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:_returnETH_1 
[i]Type for TUPLE_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_5 index: 0 
[i]Type for success

Name: success Function: liquidate
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_359(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer fail)
[i]Type for TMP_359

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



receive
savingsAccount_15(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: receive
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_375(bool) = msg.sender == savingsAccount_15
[i]Type for TMP_375

Name: TMP_375 Function: receive
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_376(None) = SOLIDITY_CALL require(bool,string)(TMP_375,CreditLine::receive invalid transaction)
[i]Type for TMP_376

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_15(address) := ϕ(['savingsAccount_0', 'savingsAccount_13', 'savingsAccount_6', 'savingsAccount_1', 'savingsAccount_14', 'savingsAccount_3', 'savingsAccount_8'])
[i]Type for savingsAccount

Name: savingsAccount Function: receive
Num: -1
Den: -1
Address: 3
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_375(bool) = msg.sender == savingsAccount_15
[i]Type for TMP_375

Name: TMP_375 Function: receive
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_376(None) = SOLIDITY_CALL require(bool,string)(TMP_375,CreditLine::receive invalid transaction)
[i]Type for TMP_376

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Function count: 36



emergencyWithdraw
liquidityToken_2(mapping(address => address)) := ϕ(['liquidityToken_0', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_12', 'liquidityToken_4', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: emergencyWithdraw
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
TMP_132(address) = INTERNAL_CALL, OwnableUpgradeable.owner()()
_owner_2(address) := ϕ(['_owner_8', '_owner_5', '_owner_1', '_owner_0'])
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 3
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
RETURN _owner_2
_owner_2(address) := ϕ(['_owner_8', '_owner_5', '_owner_1', '_owner_0'])
[i]Type for _owner

Name: _owner Function: owner
Num: -1
Den: -1
Address: 3
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
RETURN _owner_2
[i]Type for TMP_132

Name: TMP_132 Function: onlyOwner
Num: -1
Den: -1
Address: 3
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
TMP_133(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
RETURN msg.sender
RETURN msg.sender
[i]Type for TMP_133

Name: TMP_133 Function: onlyOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134(bool) = TMP_132 == TMP_133
[i]Type for TMP_134

Name: TMP_134 Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Ownable: caller is not the owner)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_132(address) = INTERNAL_CALL, OwnableUpgradeable.owner()()
[i]Type for TMP_132

Name: TMP_132 Function: onlyOwner
Num: -1
Den: -1
Address: 3
Norm: u
LF: _owner
Value: u
Fields: 
Finance Type: undef
TMP_133(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
[i]Type for TMP_133

Name: TMP_133 Function: onlyOwner
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_134(bool) = TMP_132 == TMP_133
[i]Type for TMP_134

Name: TMP_134 Function: onlyOwner
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Ownable: caller is not the owner)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
[i]Type for _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_status_2(uint256) := ϕ(['_status_0', '_status_1', '_status_4'])
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_130

Name: TMP_130 Function: nonReentrant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_131(None) = SOLIDITY_CALL require(bool,string)(TMP_130,ReentrancyGuard: reentrant call)
[i]Type for TMP_131

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_status_3(uint256) := _ENTERED_1(uint256)
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_status_4(uint256) := _NOT_ENTERED_2(uint256)
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
[i]Type for _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_status_2(uint256) := ϕ(['_status_0', '_status_1', '_status_4'])
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_130(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_130

Name: TMP_130 Function: nonReentrant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_131(None) = SOLIDITY_CALL require(bool,string)(TMP_130,ReentrancyGuard: reentrant call)
[i]Type for TMP_131

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_status_3(uint256) := _ENTERED_1(uint256)
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_status_4(uint256) := _NOT_ENTERED_2(uint256)
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_34 = CONVERT 0 to address
[i]Type for TMP_34

Name: TMP_34 Function: emergencyWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_35(bool) = _wallet_1 != TMP_34
[i]Type for TMP_35

Name: TMP_35 Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_36(None) = SOLIDITY_CALL require(bool,string)(TMP_35,cant burn)
[i]Type for TMP_36

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_2(address) -> liquidityToken_4[_asset_1]
[i]Type for REF_2

Name: None Function: None
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
investedTo_1(address) := REF_2(address)
Finance type key: (-1, -1)
[i]Type for investedTo

Name: investedTo Function: emergencyWithdraw
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_37 = CONVERT investedTo_1 to IERC20
[i]Type for TMP_37

Name: TMP_37 Function: emergencyWithdraw
Num: -996
Den: -1
Address: u
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_38 = CONVERT this to address
[i]Type for TMP_38

Name: TMP_38 Function: emergencyWithdraw
Num: -1
Den: -1
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_39(uint256) = HIGH_LEVEL_CALL, dest:TMP_37(IERC20), function:balanceOf, arguments:['TMP_38']  
[i]Type for TMP_39

Name: TMP_39 Function: emergencyWithdraw
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount_1(uint256) := TMP_39(uint256)
Finance type key: (0, -1)
[i]Type for amount

Name: amount Function: emergencyWithdraw
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_40 = CONVERT 0 to address
[i]Type for TMP_40

Name: TMP_40 Function: emergencyWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(bool) = _asset_1 == TMP_40
[i]Type for TMP_41

Name: TMP_41 Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_44(uint256) = INTERNAL_CALL, YearnYield._withdrawERC(address,address,uint256)(_asset_1,investedTo_1,amount_1)
asset_1(address) := ϕ(['_asset_1', 'asset_1'])
[i]Type for asset

Name: asset Function: _withdrawERC
Num: 
Den: 
Address: -996
Norm: 6
LF: _asset
Value: u
Fields: 
Finance Type: undef
vault_1(address) := ϕ(['investedTo_1', 'investedTo_1'])
[i]Type for vault

Name: vault Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _withdrawERC
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_121 = CONVERT asset_1 to IERC20
[i]Type for TMP_121

Name: TMP_121 Function: _withdrawERC
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_122 = CONVERT this to address
[i]Type for TMP_122

Name: TMP_122 Function: _withdrawERC
Num: -1
Den: -1
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_123(uint256) = HIGH_LEVEL_CALL, dest:TMP_121(IERC20), function:balanceOf, arguments:['TMP_122']  
[i]Type for TMP_123

Name: TMP_123 Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
initialAssetBalance_1(uint256) := TMP_123(uint256)
Finance type key: (0, -1)
[i]Type for initialAssetBalance

Name: initialAssetBalance Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_124 = CONVERT vault_1 to IyVault
[i]Type for TMP_124

Name: TMP_124 Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_124(IyVault), function:withdraw, arguments:['amount_1']  
TMP_126 = CONVERT asset_1 to IERC20
[i]Type for TMP_126

Name: TMP_126 Function: _withdrawERC
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_127 = CONVERT this to address
[i]Type for TMP_127

Name: TMP_127 Function: _withdrawERC
Num: -1
Den: -1
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = HIGH_LEVEL_CALL, dest:TMP_126(IERC20), function:balanceOf, arguments:['TMP_127']  
[i]Type for TMP_128

Name: TMP_128 Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_129(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_128', 'initialAssetBalance_1'] 
Finance type key: (0, 0)
[i]Type for TMP_129

Name: TMP_129 Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
tokensReceived_1(uint256) := TMP_129(uint256)
Finance type key: (0, -1)
[i]Type for tokensReceived

Name: tokensReceived Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
asset_1(address) := ϕ(['_asset_1', 'asset_1'])
[i]Type for asset

Name: asset Function: _withdrawERC
Num: 
Den: 
Address: -996
Norm: 6
LF: _asset
Value: u
Fields: 
Finance Type: undef
vault_1(address) := ϕ(['investedTo_1', 'investedTo_1'])
[i]Type for vault

Name: vault Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _withdrawERC
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_121 = CONVERT asset_1 to IERC20
[i]Type for TMP_121

Name: TMP_121 Function: _withdrawERC
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_122 = CONVERT this to address
[i]Type for TMP_122

Name: TMP_122 Function: _withdrawERC
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_123(uint256) = HIGH_LEVEL_CALL, dest:TMP_121(IERC20), function:balanceOf, arguments:['TMP_122']  
[i]Type for TMP_123

Name: TMP_123 Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
initialAssetBalance_1(uint256) := TMP_123(uint256)
Finance type key: (0, -1)
[i]Type for initialAssetBalance

Name: initialAssetBalance Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_124 = CONVERT vault_1 to IyVault
[i]Type for TMP_124

Name: TMP_124 Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_124(IyVault), function:withdraw, arguments:['amount_1']  
TMP_126 = CONVERT asset_1 to IERC20
[i]Type for TMP_126

Name: TMP_126 Function: _withdrawERC
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_127 = CONVERT this to address
[i]Type for TMP_127

Name: TMP_127 Function: _withdrawERC
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = HIGH_LEVEL_CALL, dest:TMP_126(IERC20), function:balanceOf, arguments:['TMP_127']  
[i]Type for TMP_128

Name: TMP_128 Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_129(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_128', 'initialAssetBalance_1'] 
Finance type key: (0, 0)
[i]Type for TMP_129

Name: TMP_129 Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
tokensReceived_1(uint256) := TMP_129(uint256)
Finance type key: (0, -1)
[i]Type for tokensReceived

Name: tokensReceived Function: _withdrawERC
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i]Type for TMP_44

Name: TMP_44 Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_1(uint256) := TMP_44(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42(uint256) = INTERNAL_CALL, YearnYield._withdrawETH(address,uint256)(investedTo_1,amount_1)
vault_1(address) := ϕ(['investedTo_1', 'investedTo_1'])
[i]Type for vault

Name: vault Function: _withdrawETH
Num: -996
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _withdrawETH
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_114 = CONVERT this to address
[i]Type for TMP_114

Name: TMP_114 Function: _withdrawETH
Num: -1
Den: -1
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_115(uint256) = SOLIDITY_CALL balance(address)(TMP_114)
[i]Type for TMP_115

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ethBalance_1(uint256) := TMP_115(uint256)
Finance type key: (-1, -1)
[i]Type for ethBalance

Name: ethBalance Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT vault_1 to IyVault
[i]Type for TMP_116

Name: TMP_116 Function: _withdrawETH
Num: -996
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_116(IyVault), function:withdrawETH, arguments:['amount_1']  
TMP_118 = CONVERT this to address
[i]Type for TMP_118

Name: TMP_118 Function: _withdrawETH
Num: -1
Den: -1
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_119(uint256) = SOLIDITY_CALL balance(address)(TMP_118)
[i]Type for TMP_119

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_120(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_119', 'ethBalance_1'] 
[i]Type for TMP_120

Name: TMP_120 Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_1(uint256) := TMP_120(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_1(address) := ϕ(['investedTo_1', 'investedTo_1'])
[i]Type for vault

Name: vault Function: _withdrawETH
Num: -996
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _withdrawETH
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_114 = CONVERT this to address
[i]Type for TMP_114

Name: TMP_114 Function: _withdrawETH
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_115(uint256) = SOLIDITY_CALL balance(address)(TMP_114)
[i]Type for TMP_115

Name: TMP_115 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ethBalance_1(uint256) := TMP_115(uint256)
Finance type key: (-1, -1)
[i]Type for ethBalance

Name: ethBalance Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT vault_1 to IyVault
[i]Type for TMP_116

Name: TMP_116 Function: _withdrawETH
Num: -996
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_116(IyVault), function:withdrawETH, arguments:['amount_1']  
TMP_118 = CONVERT this to address
[i]Type for TMP_118

Name: TMP_118 Function: _withdrawETH
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_119(uint256) = SOLIDITY_CALL balance(address)(TMP_118)
[i]Type for TMP_119

Name: TMP_119 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_120(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_119', 'ethBalance_1'] 
[i]Type for TMP_120

Name: TMP_120 Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_1(uint256) := TMP_120(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_42

Name: TMP_42 Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_2(uint256) := TMP_42(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT _asset_1 to IERC20
[i]Type for TMP_45

Name: TMP_45 Function: emergencyWithdraw
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_45', '_wallet_1', 'received_1'] 
TUPLE_0(bool,bytes) = LOW_LEVEL_CALL, dest:_wallet_1, function:call, arguments:[''] value:received_2 
[i]Type for TUPLE_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_0 index: 0 
[i]Type for success

Name: success Function: emergencyWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_43(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer failed)
[i]Type for TMP_43

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityToken_2(mapping(address => address)) := ϕ(['liquidityToken_0', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_12', 'liquidityToken_4', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: emergencyWithdraw
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
TMP_34 = CONVERT 0 to address
[i]Type for TMP_34

Name: TMP_34 Function: emergencyWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_35(bool) = _wallet_1 != TMP_34
[i]Type for TMP_35

Name: TMP_35 Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_36(None) = SOLIDITY_CALL require(bool,string)(TMP_35,cant burn)
[i]Type for TMP_36

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_2(address) -> liquidityToken_4[_asset_1]
[i]Type for REF_2

Name: None Function: None
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
investedTo_1(address) := REF_2(address)
Finance type key: (-1, -1)
[i]Type for investedTo

Name: investedTo Function: emergencyWithdraw
Num: -996
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_37 = CONVERT investedTo_1 to IERC20
[i]Type for TMP_37

Name: TMP_37 Function: emergencyWithdraw
Num: -996
Den: -1
Address: u
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_38 = CONVERT this to address
[i]Type for TMP_38

Name: TMP_38 Function: emergencyWithdraw
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_39(uint256) = HIGH_LEVEL_CALL, dest:TMP_37(IERC20), function:balanceOf, arguments:['TMP_38']  
[i]Type for TMP_39

Name: TMP_39 Function: emergencyWithdraw
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
amount_1(uint256) := TMP_39(uint256)
Finance type key: (0, -1)
[i]Type for amount

Name: amount Function: emergencyWithdraw
Num: 5
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_40 = CONVERT 0 to address
[i]Type for TMP_40

Name: TMP_40 Function: emergencyWithdraw
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_41(bool) = _asset_1 == TMP_40
[i]Type for TMP_41

Name: TMP_41 Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_44(uint256) = INTERNAL_CALL, YearnYield._withdrawERC(address,address,uint256)(_asset_1,investedTo_1,amount_1)
[i]Type for TMP_44

Name: TMP_44 Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_1(uint256) := TMP_44(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_42(uint256) = INTERNAL_CALL, YearnYield._withdrawETH(address,uint256)(investedTo_1,amount_1)
[i]Type for TMP_42

Name: TMP_42 Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_2(uint256) := TMP_42(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45 = CONVERT _asset_1 to IERC20
[i]Type for TMP_45

Name: TMP_45 Function: emergencyWithdraw
Num: 
Den: 
Address: -996
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_45', '_wallet_1', 'received_1'] 
TUPLE_0(bool,bytes) = LOW_LEVEL_CALL, dest:_wallet_1, function:call, arguments:[''] value:received_2 
[i]Type for TUPLE_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_0 index: 0 
[i]Type for success

Name: success Function: emergencyWithdraw
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_43(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer failed)
[i]Type for TMP_43

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



lockTokens
liquidityToken_5(mapping(address => address)) := ϕ(['liquidityToken_0', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_12', 'liquidityToken_4', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: lockTokens
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, YearnYield.onlySavingsAccount()()
savingsAccount_11(address) := ϕ(['savingsAccount_1', 'savingsAccount_10', 'savingsAccount_12', 'savingsAccount_5', 'savingsAccount_0'])
[i]Type for savingsAccount

Name: savingsAccount Function: onlySavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_142(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
[i]Type for TMP_142

Name: TMP_142 Function: onlySavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_143(bool) = TMP_142 == savingsAccount_12
[i]Type for TMP_143

Name: TMP_143 Function: onlySavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(None) = SOLIDITY_CALL require(bool,string)(TMP_143,Invest: Only savings account can invoke)
[i]Type for TMP_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_11(address) := ϕ(['savingsAccount_1', 'savingsAccount_10', 'savingsAccount_12', 'savingsAccount_5', 'savingsAccount_0'])
[i]Type for savingsAccount

Name: savingsAccount Function: onlySavingsAccount
Num: -1
Den: -1
Address: 4
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
TMP_142(address) = INTERNAL_CALL, ContextUpgradeable._msgSender()()
[i]Type for TMP_142

Name: TMP_142 Function: onlySavingsAccount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_143(bool) = TMP_142 == savingsAccount_12
[i]Type for TMP_143

Name: TMP_143 Function: onlySavingsAccount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_144(None) = SOLIDITY_CALL require(bool,string)(TMP_143,Invest: Only savings account can invoke)
[i]Type for TMP_144

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
TMP_49(bool) = amount_1 != 0
[i]Type for TMP_49

Name: TMP_49 Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_50(None) = SOLIDITY_CALL require(bool,string)(TMP_49,Invest: amount)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_6(address) -> liquidityToken_7[asset_1]
[i]Type for REF_6

Name: None Function: None
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
investedTo_1(address) := REF_6(address)
Finance type key: (-1, -1)
[i]Type for investedTo

Name: investedTo Function: lockTokens
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_51 = CONVERT 0 to address
[i]Type for TMP_51

Name: TMP_51 Function: lockTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_52(bool) = asset_1 == TMP_51
[i]Type for TMP_52

Name: TMP_52 Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_56 = CONVERT asset_1 to IERC20
[i]Type for TMP_56

Name: TMP_56 Function: lockTokens
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_57 = CONVERT this to address
[i]Type for TMP_57

Name: TMP_57 Function: lockTokens
Num: -1
Den: -1
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_56', 'user_1', 'TMP_57', 'amount_1'] 
TMP_59(uint256) = INTERNAL_CALL, YearnYield._depositERC20(address,address,uint256)(asset_1,investedTo_1,amount_1)
asset_1(address) := ϕ(['asset_1'])
[i]Type for asset

Name: asset Function: _depositERC20
Num: 
Den: 
Address: -997
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
vault_1(address) := ϕ(['investedTo_1'])
[i]Type for vault

Name: vault Function: _depositERC20
Num: -997
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _depositERC20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101 = CONVERT vault_1 to IERC20
[i]Type for TMP_101

Name: TMP_101 Function: _depositERC20
Num: -997
Den: -1
Address: u
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_102 = CONVERT this to address
[i]Type for TMP_102

Name: TMP_102 Function: _depositERC20
Num: -1
Den: -1
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_103(uint256) = HIGH_LEVEL_CALL, dest:TMP_101(IERC20), function:balanceOf, arguments:['TMP_102']  
[i]Type for TMP_103

Name: TMP_103 Function: _depositERC20
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
sharesBefore_1(uint256) := TMP_103(uint256)
Finance type key: (0, -1)
[i]Type for sharesBefore

Name: sharesBefore Function: _depositERC20
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_104 = CONVERT asset_1 to IERC20
[i]Type for TMP_104

Name: TMP_104 Function: _depositERC20
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_105(bool) = HIGH_LEVEL_CALL, dest:TMP_104(IERC20), function:approve, arguments:['vault_1', '0']  
[i]Type for TMP_105

Name: TMP_105 Function: _depositERC20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_106 = CONVERT asset_1 to IERC20
[i]Type for TMP_106

Name: TMP_106 Function: _depositERC20
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_107(bool) = HIGH_LEVEL_CALL, dest:TMP_106(IERC20), function:approve, arguments:['vault_1', 'amount_1']  
[i]Type for TMP_107

Name: TMP_107 Function: _depositERC20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108 = CONVERT vault_1 to IyVault
[i]Type for TMP_108

Name: TMP_108 Function: _depositERC20
Num: -997
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_108(IyVault), function:deposit, arguments:['amount_1']  
TMP_110 = CONVERT vault_1 to IERC20
[i]Type for TMP_110

Name: TMP_110 Function: _depositERC20
Num: -997
Den: -1
Address: u
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_111 = CONVERT this to address
[i]Type for TMP_111

Name: TMP_111 Function: _depositERC20
Num: -1
Den: -1
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_112(uint256) = HIGH_LEVEL_CALL, dest:TMP_110(IERC20), function:balanceOf, arguments:['TMP_111']  
[i]Type for TMP_112

Name: TMP_112 Function: _depositERC20
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_113(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_112', 'sharesBefore_1'] 
Handling trace

Name: sharesBefore Function: _depositERC20
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_112 Function: _depositERC20
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
d:{6: 1, 7: -1}
Error with TMP_113 in function _depositERC20
Error with: TMP_113 in function _depositERC20
[i]Type for TMP_113

Name: TMP_113 Function: _depositERC20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sharesReceived_1(uint256) := TMP_113(uint256)
Finance type key: (-1, -1)
[i]Type for sharesReceived

Name: sharesReceived Function: _depositERC20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
asset_1(address) := ϕ(['asset_1'])
[i]Type for asset

Name: asset Function: _depositERC20
Num: 
Den: 
Address: -997
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
vault_1(address) := ϕ(['investedTo_1'])
[i]Type for vault

Name: vault Function: _depositERC20
Num: -997
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _depositERC20
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_101 = CONVERT vault_1 to IERC20
[i]Type for TMP_101

Name: TMP_101 Function: _depositERC20
Num: -997
Den: -1
Address: u
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_102 = CONVERT this to address
[i]Type for TMP_102

Name: TMP_102 Function: _depositERC20
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_103(uint256) = HIGH_LEVEL_CALL, dest:TMP_101(IERC20), function:balanceOf, arguments:['TMP_102']  
[i]Type for TMP_103

Name: TMP_103 Function: _depositERC20
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
sharesBefore_1(uint256) := TMP_103(uint256)
Finance type key: (0, -1)
[i]Type for sharesBefore

Name: sharesBefore Function: _depositERC20
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_104 = CONVERT asset_1 to IERC20
[i]Type for TMP_104

Name: TMP_104 Function: _depositERC20
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_105(bool) = HIGH_LEVEL_CALL, dest:TMP_104(IERC20), function:approve, arguments:['vault_1', '0']  
[i]Type for TMP_105

Name: TMP_105 Function: _depositERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_106 = CONVERT asset_1 to IERC20
[i]Type for TMP_106

Name: TMP_106 Function: _depositERC20
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_107(bool) = HIGH_LEVEL_CALL, dest:TMP_106(IERC20), function:approve, arguments:['vault_1', 'amount_1']  
[i]Type for TMP_107

Name: TMP_107 Function: _depositERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_108 = CONVERT vault_1 to IyVault
[i]Type for TMP_108

Name: TMP_108 Function: _depositERC20
Num: -997
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_108(IyVault), function:deposit, arguments:['amount_1']  
TMP_110 = CONVERT vault_1 to IERC20
[i]Type for TMP_110

Name: TMP_110 Function: _depositERC20
Num: -997
Den: -1
Address: u
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_111 = CONVERT this to address
[i]Type for TMP_111

Name: TMP_111 Function: _depositERC20
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_112(uint256) = HIGH_LEVEL_CALL, dest:TMP_110(IERC20), function:balanceOf, arguments:['TMP_111']  
[i]Type for TMP_112

Name: TMP_112 Function: _depositERC20
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_113(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_112', 'sharesBefore_1'] 
Handling trace

Name: sharesBefore Function: _depositERC20
Num: 6
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_112 Function: _depositERC20
Num: 7
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
d:{6: 1, 7: -1}
[i]Type for TMP_113

Name: TMP_113 Function: _depositERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sharesReceived_1(uint256) := TMP_113(uint256)
Finance type key: (-1, -1)
[i]Type for sharesReceived

Name: sharesReceived Function: _depositERC20
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_59

Name: TMP_59 Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sharesReceived_1(uint256) := TMP_59(uint256)
Finance type key: (-1, -1)
[i]Type for sharesReceived

Name: sharesReceived Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_53(bool) = msg.value == amount_1
[i]Type for TMP_53

Name: TMP_53 Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_54(None) = SOLIDITY_CALL require(bool,string)(TMP_53,Invest: ETH amount)
[i]Type for TMP_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sharesReceived_3(uint256) := ϕ(['sharesReceived_2', 'sharesReceived_1'])
[i]Type for sharesReceived

Name: sharesReceived Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_55(uint256) = INTERNAL_CALL, YearnYield._depositETH(address,uint256)(investedTo_1,amount_1)
vault_1(address) := ϕ(['investedTo_1'])
[i]Type for vault

Name: vault Function: _depositETH
Num: -997
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _depositETH
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_92 = CONVERT vault_1 to IERC20
[i]Type for TMP_92

Name: TMP_92 Function: _depositETH
Num: -997
Den: -1
Address: u
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_93 = CONVERT this to address
[i]Type for TMP_93

Name: TMP_93 Function: _depositETH
Num: -1
Den: -1
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_94(uint256) = HIGH_LEVEL_CALL, dest:TMP_92(IERC20), function:balanceOf, arguments:['TMP_93']  
[i]Type for TMP_94

Name: TMP_94 Function: _depositETH
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
initialTokenBalance_1(uint256) := TMP_94(uint256)
Finance type key: (0, -1)
[i]Type for initialTokenBalance

Name: initialTokenBalance Function: _depositETH
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_95 = CONVERT vault_1 to IyVault
[i]Type for TMP_95

Name: TMP_95 Function: _depositETH
Num: -997
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_95(IyVault), function:depositETH, arguments:[] value:amount_1 
TMP_97 = CONVERT vault_1 to IERC20
[i]Type for TMP_97

Name: TMP_97 Function: _depositETH
Num: -997
Den: -1
Address: u
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_98 = CONVERT this to address
[i]Type for TMP_98

Name: TMP_98 Function: _depositETH
Num: -1
Den: -1
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:TMP_97(IERC20), function:balanceOf, arguments:['TMP_98']  
[i]Type for TMP_99

Name: TMP_99 Function: _depositETH
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_100(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_99', 'initialTokenBalance_1'] 
Handling trace

Name: initialTokenBalance Function: _depositETH
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_99 Function: _depositETH
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
d:{8: 1, 9: -1}
Error with TMP_100 in function _depositETH
Error with: TMP_100 in function _depositETH
[i]Type for TMP_100

Name: TMP_100 Function: _depositETH
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sharesReceived_1(uint256) := TMP_100(uint256)
Finance type key: (-1, -1)
[i]Type for sharesReceived

Name: sharesReceived Function: _depositETH
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_1(address) := ϕ(['investedTo_1'])
[i]Type for vault

Name: vault Function: _depositETH
Num: -997
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1'])
[i]Type for amount

Name: amount Function: _depositETH
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_92 = CONVERT vault_1 to IERC20
[i]Type for TMP_92

Name: TMP_92 Function: _depositETH
Num: -997
Den: -1
Address: u
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_93 = CONVERT this to address
[i]Type for TMP_93

Name: TMP_93 Function: _depositETH
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_94(uint256) = HIGH_LEVEL_CALL, dest:TMP_92(IERC20), function:balanceOf, arguments:['TMP_93']  
[i]Type for TMP_94

Name: TMP_94 Function: _depositETH
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
initialTokenBalance_1(uint256) := TMP_94(uint256)
Finance type key: (0, -1)
[i]Type for initialTokenBalance

Name: initialTokenBalance Function: _depositETH
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_95 = CONVERT vault_1 to IyVault
[i]Type for TMP_95

Name: TMP_95 Function: _depositETH
Num: -997
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_95(IyVault), function:depositETH, arguments:[] value:amount_1 
TMP_97 = CONVERT vault_1 to IERC20
[i]Type for TMP_97

Name: TMP_97 Function: _depositETH
Num: -997
Den: -1
Address: u
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_98 = CONVERT this to address
[i]Type for TMP_98

Name: TMP_98 Function: _depositETH
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_99(uint256) = HIGH_LEVEL_CALL, dest:TMP_97(IERC20), function:balanceOf, arguments:['TMP_98']  
[i]Type for TMP_99

Name: TMP_99 Function: _depositETH
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_100(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_99', 'initialTokenBalance_1'] 
Handling trace

Name: initialTokenBalance Function: _depositETH
Num: 8
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_99 Function: _depositETH
Num: 9
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
d:{8: 1, 9: -1}
[i]Type for TMP_100

Name: TMP_100 Function: _depositETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sharesReceived_1(uint256) := TMP_100(uint256)
Finance type key: (-1, -1)
[i]Type for sharesReceived

Name: sharesReceived Function: _depositETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_55

Name: TMP_55 Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sharesReceived_2(uint256) := TMP_55(uint256)
Finance type key: (-1, -1)
[i]Type for sharesReceived

Name: sharesReceived Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
liquidityToken_5(mapping(address => address)) := ϕ(['liquidityToken_0', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_12', 'liquidityToken_4', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: lockTokens
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, YearnYield.onlySavingsAccount()()
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
TMP_49(bool) = amount_1 != 0
[i]Type for TMP_49

Name: TMP_49 Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_50(None) = SOLIDITY_CALL require(bool,string)(TMP_49,Invest: amount)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_6(address) -> liquidityToken_7[asset_1]
[i]Type for REF_6

Name: None Function: None
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
investedTo_1(address) := REF_6(address)
Finance type key: (-1, -1)
[i]Type for investedTo

Name: investedTo Function: lockTokens
Num: -997
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_51 = CONVERT 0 to address
[i]Type for TMP_51

Name: TMP_51 Function: lockTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_52(bool) = asset_1 == TMP_51
[i]Type for TMP_52

Name: TMP_52 Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_56 = CONVERT asset_1 to IERC20
[i]Type for TMP_56

Name: TMP_56 Function: lockTokens
Num: 
Den: 
Address: -997
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_57 = CONVERT this to address
[i]Type for TMP_57

Name: TMP_57 Function: lockTokens
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_56', 'user_1', 'TMP_57', 'amount_1'] 
TMP_59(uint256) = INTERNAL_CALL, YearnYield._depositERC20(address,address,uint256)(asset_1,investedTo_1,amount_1)
[i]Type for TMP_59

Name: TMP_59 Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sharesReceived_1(uint256) := TMP_59(uint256)
Finance type key: (-1, -1)
[i]Type for sharesReceived

Name: sharesReceived Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_53(bool) = msg.value == amount_1
[i]Type for TMP_53

Name: TMP_53 Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_54(None) = SOLIDITY_CALL require(bool,string)(TMP_53,Invest: ETH amount)
[i]Type for TMP_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sharesReceived_3(uint256) := ϕ(['sharesReceived_2', 'sharesReceived_1'])
[i]Type for sharesReceived

Name: sharesReceived Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_55(uint256) = INTERNAL_CALL, YearnYield._depositETH(address,uint256)(investedTo_1,amount_1)
[i]Type for TMP_55

Name: TMP_55 Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
sharesReceived_2(uint256) := TMP_55(uint256)
Finance type key: (-1, -1)
[i]Type for sharesReceived

Name: sharesReceived Function: lockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



unlockTokens
savingsAccount_2(address) := ϕ(['savingsAccount_1', 'savingsAccount_10', 'savingsAccount_12', 'savingsAccount_5', 'savingsAccount_0'])
[i]Type for savingsAccount

Name: savingsAccount Function: unlockTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
liquidityToken_8(mapping(address => address)) := ϕ(['liquidityToken_0', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_12', 'liquidityToken_4', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: unlockTokens
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, YearnYield.onlySavingsAccount()()
savingsAccount_3(address) := ϕ(['savingsAccount_12'])
[i]Type for savingsAccount

Name: savingsAccount Function: unlockTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
TMP_63(bool) = amount_1 != 0
[i]Type for TMP_63

Name: TMP_63 Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_64(None) = SOLIDITY_CALL require(bool,string)(TMP_63,Invest: amount)
[i]Type for TMP_64

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_8(address) -> liquidityToken_10[asset_1]
[i]Type for REF_8

Name: None Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
investedTo_1(address) := REF_8(address)
Finance type key: (-1, -1)
[i]Type for investedTo

Name: investedTo Function: unlockTokens
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_65 = CONVERT 0 to address
[i]Type for TMP_65

Name: TMP_65 Function: unlockTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_66(bool) = asset_1 == TMP_65
[i]Type for TMP_66

Name: TMP_66 Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(uint256) = INTERNAL_CALL, YearnYield._withdrawERC(address,address,uint256)(asset_1,investedTo_1,amount_1)
asset_1(address) := ϕ(['_asset_1', 'asset_1'])
[i]Type for asset

Name: asset Function: _withdrawERC
Num: 
Den: 
Address: -993
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
vault_1(address) := ϕ(['investedTo_1', 'investedTo_1'])
[i]Type for vault

Name: vault Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _withdrawERC
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_121 = CONVERT asset_1 to IERC20
[i]Type for TMP_121

Name: TMP_121 Function: _withdrawERC
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_122 = CONVERT this to address
[i]Type for TMP_122

Name: TMP_122 Function: _withdrawERC
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_123(uint256) = HIGH_LEVEL_CALL, dest:TMP_121(IERC20), function:balanceOf, arguments:['TMP_122']  
[i]Type for TMP_123

Name: TMP_123 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
initialAssetBalance_1(uint256) := TMP_123(uint256)
Finance type key: (0, -1)
[i]Type for initialAssetBalance

Name: initialAssetBalance Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_124 = CONVERT vault_1 to IyVault
[i]Type for TMP_124

Name: TMP_124 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_124(IyVault), function:withdraw, arguments:['amount_1']  
TMP_126 = CONVERT asset_1 to IERC20
[i]Type for TMP_126

Name: TMP_126 Function: _withdrawERC
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_127 = CONVERT this to address
[i]Type for TMP_127

Name: TMP_127 Function: _withdrawERC
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = HIGH_LEVEL_CALL, dest:TMP_126(IERC20), function:balanceOf, arguments:['TMP_127']  
[i]Type for TMP_128

Name: TMP_128 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_129(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_128', 'initialAssetBalance_1'] 
Finance type key: (0, 0)
[i]Type for TMP_129

Name: TMP_129 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
tokensReceived_1(uint256) := TMP_129(uint256)
Finance type key: (0, -1)
[i]Type for tokensReceived

Name: tokensReceived Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
asset_1(address) := ϕ(['_asset_1', 'asset_1'])
[i]Type for asset

Name: asset Function: _withdrawERC
Num: 
Den: 
Address: -993
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
vault_1(address) := ϕ(['investedTo_1', 'investedTo_1'])
[i]Type for vault

Name: vault Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _withdrawERC
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_121 = CONVERT asset_1 to IERC20
[i]Type for TMP_121

Name: TMP_121 Function: _withdrawERC
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_122 = CONVERT this to address
[i]Type for TMP_122

Name: TMP_122 Function: _withdrawERC
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_123(uint256) = HIGH_LEVEL_CALL, dest:TMP_121(IERC20), function:balanceOf, arguments:['TMP_122']  
[i]Type for TMP_123

Name: TMP_123 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
initialAssetBalance_1(uint256) := TMP_123(uint256)
Finance type key: (0, -1)
[i]Type for initialAssetBalance

Name: initialAssetBalance Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_124 = CONVERT vault_1 to IyVault
[i]Type for TMP_124

Name: TMP_124 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_124(IyVault), function:withdraw, arguments:['amount_1']  
TMP_126 = CONVERT asset_1 to IERC20
[i]Type for TMP_126

Name: TMP_126 Function: _withdrawERC
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_127 = CONVERT this to address
[i]Type for TMP_127

Name: TMP_127 Function: _withdrawERC
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = HIGH_LEVEL_CALL, dest:TMP_126(IERC20), function:balanceOf, arguments:['TMP_127']  
[i]Type for TMP_128

Name: TMP_128 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_129(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_128', 'initialAssetBalance_1'] 
Finance type key: (0, 0)
[i]Type for TMP_129

Name: TMP_129 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
tokensReceived_1(uint256) := TMP_129(uint256)
Finance type key: (0, -1)
[i]Type for tokensReceived

Name: tokensReceived Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i]Type for TMP_69

Name: TMP_69 Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_1(uint256) := TMP_69(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_67(uint256) = INTERNAL_CALL, YearnYield._withdrawETH(address,uint256)(investedTo_1,amount_1)
vault_1(address) := ϕ(['investedTo_1', 'investedTo_1'])
[i]Type for vault

Name: vault Function: _withdrawETH
Num: -993
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _withdrawETH
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_114 = CONVERT this to address
[i]Type for TMP_114

Name: TMP_114 Function: _withdrawETH
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_115(uint256) = SOLIDITY_CALL balance(address)(TMP_114)
[i]Type for TMP_115

Name: TMP_115 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ethBalance_1(uint256) := TMP_115(uint256)
Finance type key: (-1, -1)
[i]Type for ethBalance

Name: ethBalance Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT vault_1 to IyVault
[i]Type for TMP_116

Name: TMP_116 Function: _withdrawETH
Num: -993
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_116(IyVault), function:withdrawETH, arguments:['amount_1']  
TMP_118 = CONVERT this to address
[i]Type for TMP_118

Name: TMP_118 Function: _withdrawETH
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_119(uint256) = SOLIDITY_CALL balance(address)(TMP_118)
[i]Type for TMP_119

Name: TMP_119 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_120(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_119', 'ethBalance_1'] 
[i]Type for TMP_120

Name: TMP_120 Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_1(uint256) := TMP_120(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_1(address) := ϕ(['investedTo_1', 'investedTo_1'])
[i]Type for vault

Name: vault Function: _withdrawETH
Num: -993
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _withdrawETH
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_114 = CONVERT this to address
[i]Type for TMP_114

Name: TMP_114 Function: _withdrawETH
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_115(uint256) = SOLIDITY_CALL balance(address)(TMP_114)
[i]Type for TMP_115

Name: TMP_115 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ethBalance_1(uint256) := TMP_115(uint256)
Finance type key: (-1, -1)
[i]Type for ethBalance

Name: ethBalance Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT vault_1 to IyVault
[i]Type for TMP_116

Name: TMP_116 Function: _withdrawETH
Num: -993
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_116(IyVault), function:withdrawETH, arguments:['amount_1']  
TMP_118 = CONVERT this to address
[i]Type for TMP_118

Name: TMP_118 Function: _withdrawETH
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_119(uint256) = SOLIDITY_CALL balance(address)(TMP_118)
[i]Type for TMP_119

Name: TMP_119 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_120(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_119', 'ethBalance_1'] 
[i]Type for TMP_120

Name: TMP_120 Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_1(uint256) := TMP_120(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_67

Name: TMP_67 Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_2(uint256) := TMP_67(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_70 = CONVERT asset_1 to IERC20
[i]Type for TMP_70

Name: TMP_70 Function: unlockTokens
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_70', 'savingsAccount_5', 'received_1'] 
received_3(uint256) := ϕ(['received_2', 'received_1'])
[i]Type for received

Name: received Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:savingsAccount_6, function:call, arguments:[''] value:received_2 
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_7(address) := ϕ(['savingsAccount_1', 'savingsAccount_10', 'savingsAccount_12', 'savingsAccount_5', 'savingsAccount_6'])
[i]Type for savingsAccount

Name: savingsAccount Function: unlockTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_1 index: 0 
[i]Type for success

Name: success Function: unlockTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_68(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer failed)
[i]Type for TMP_68

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_2(address) := ϕ(['savingsAccount_1', 'savingsAccount_10', 'savingsAccount_12', 'savingsAccount_5', 'savingsAccount_0'])
[i]Type for savingsAccount

Name: savingsAccount Function: unlockTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
liquidityToken_8(mapping(address => address)) := ϕ(['liquidityToken_0', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_12', 'liquidityToken_4', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: unlockTokens
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, YearnYield.onlySavingsAccount()()
savingsAccount_3(address) := ϕ(['savingsAccount_12'])
[i]Type for savingsAccount

Name: savingsAccount Function: unlockTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
TMP_63(bool) = amount_1 != 0
[i]Type for TMP_63

Name: TMP_63 Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_64(None) = SOLIDITY_CALL require(bool,string)(TMP_63,Invest: amount)
[i]Type for TMP_64

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_8(address) -> liquidityToken_10[asset_1]
[i]Type for REF_8

Name: None Function: None
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
investedTo_1(address) := REF_8(address)
Finance type key: (-1, -1)
[i]Type for investedTo

Name: investedTo Function: unlockTokens
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_65 = CONVERT 0 to address
[i]Type for TMP_65

Name: TMP_65 Function: unlockTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_66(bool) = asset_1 == TMP_65
[i]Type for TMP_66

Name: TMP_66 Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_69(uint256) = INTERNAL_CALL, YearnYield._withdrawERC(address,address,uint256)(asset_1,investedTo_1,amount_1)
asset_1(address) := ϕ(['_asset_1', 'asset_1'])
[i]Type for asset

Name: asset Function: _withdrawERC
Num: 
Den: 
Address: -993
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
vault_1(address) := ϕ(['investedTo_1', 'investedTo_1'])
[i]Type for vault

Name: vault Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _withdrawERC
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_121 = CONVERT asset_1 to IERC20
[i]Type for TMP_121

Name: TMP_121 Function: _withdrawERC
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_122 = CONVERT this to address
[i]Type for TMP_122

Name: TMP_122 Function: _withdrawERC
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_123(uint256) = HIGH_LEVEL_CALL, dest:TMP_121(IERC20), function:balanceOf, arguments:['TMP_122']  
[i]Type for TMP_123

Name: TMP_123 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
initialAssetBalance_1(uint256) := TMP_123(uint256)
Finance type key: (0, -1)
[i]Type for initialAssetBalance

Name: initialAssetBalance Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_124 = CONVERT vault_1 to IyVault
[i]Type for TMP_124

Name: TMP_124 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_124(IyVault), function:withdraw, arguments:['amount_1']  
TMP_126 = CONVERT asset_1 to IERC20
[i]Type for TMP_126

Name: TMP_126 Function: _withdrawERC
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_127 = CONVERT this to address
[i]Type for TMP_127

Name: TMP_127 Function: _withdrawERC
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = HIGH_LEVEL_CALL, dest:TMP_126(IERC20), function:balanceOf, arguments:['TMP_127']  
[i]Type for TMP_128

Name: TMP_128 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_129(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_128', 'initialAssetBalance_1'] 
Finance type key: (0, 0)
[i]Type for TMP_129

Name: TMP_129 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
tokensReceived_1(uint256) := TMP_129(uint256)
Finance type key: (0, -1)
[i]Type for tokensReceived

Name: tokensReceived Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
asset_1(address) := ϕ(['_asset_1', 'asset_1'])
[i]Type for asset

Name: asset Function: _withdrawERC
Num: 
Den: 
Address: -993
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
vault_1(address) := ϕ(['investedTo_1', 'investedTo_1'])
[i]Type for vault

Name: vault Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _withdrawERC
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_121 = CONVERT asset_1 to IERC20
[i]Type for TMP_121

Name: TMP_121 Function: _withdrawERC
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_122 = CONVERT this to address
[i]Type for TMP_122

Name: TMP_122 Function: _withdrawERC
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_123(uint256) = HIGH_LEVEL_CALL, dest:TMP_121(IERC20), function:balanceOf, arguments:['TMP_122']  
[i]Type for TMP_123

Name: TMP_123 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
initialAssetBalance_1(uint256) := TMP_123(uint256)
Finance type key: (0, -1)
[i]Type for initialAssetBalance

Name: initialAssetBalance Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_124 = CONVERT vault_1 to IyVault
[i]Type for TMP_124

Name: TMP_124 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_124(IyVault), function:withdraw, arguments:['amount_1']  
TMP_126 = CONVERT asset_1 to IERC20
[i]Type for TMP_126

Name: TMP_126 Function: _withdrawERC
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
TMP_127 = CONVERT this to address
[i]Type for TMP_127

Name: TMP_127 Function: _withdrawERC
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_128(uint256) = HIGH_LEVEL_CALL, dest:TMP_126(IERC20), function:balanceOf, arguments:['TMP_127']  
[i]Type for TMP_128

Name: TMP_128 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
TMP_129(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_128', 'initialAssetBalance_1'] 
Finance type key: (0, 0)
[i]Type for TMP_129

Name: TMP_129 Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
tokensReceived_1(uint256) := TMP_129(uint256)
Finance type key: (0, -1)
[i]Type for tokensReceived

Name: tokensReceived Function: _withdrawERC
Num: -993
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i]Type for TMP_69

Name: TMP_69 Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_1(uint256) := TMP_69(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_67(uint256) = INTERNAL_CALL, YearnYield._withdrawETH(address,uint256)(investedTo_1,amount_1)
vault_1(address) := ϕ(['investedTo_1', 'investedTo_1'])
[i]Type for vault

Name: vault Function: _withdrawETH
Num: -993
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _withdrawETH
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_114 = CONVERT this to address
[i]Type for TMP_114

Name: TMP_114 Function: _withdrawETH
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_115(uint256) = SOLIDITY_CALL balance(address)(TMP_114)
[i]Type for TMP_115

Name: TMP_115 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ethBalance_1(uint256) := TMP_115(uint256)
Finance type key: (-1, -1)
[i]Type for ethBalance

Name: ethBalance Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT vault_1 to IyVault
[i]Type for TMP_116

Name: TMP_116 Function: _withdrawETH
Num: -993
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_116(IyVault), function:withdrawETH, arguments:['amount_1']  
TMP_118 = CONVERT this to address
[i]Type for TMP_118

Name: TMP_118 Function: _withdrawETH
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_119(uint256) = SOLIDITY_CALL balance(address)(TMP_118)
[i]Type for TMP_119

Name: TMP_119 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_120(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_119', 'ethBalance_1'] 
[i]Type for TMP_120

Name: TMP_120 Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_1(uint256) := TMP_120(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
vault_1(address) := ϕ(['investedTo_1', 'investedTo_1'])
[i]Type for vault

Name: vault Function: _withdrawETH
Num: -993
Den: -1
Address: u
Norm: 6
LF: vault
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['amount_1', 'amount_1'])
[i]Type for amount

Name: amount Function: _withdrawETH
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_114 = CONVERT this to address
[i]Type for TMP_114

Name: TMP_114 Function: _withdrawETH
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_115(uint256) = SOLIDITY_CALL balance(address)(TMP_114)
[i]Type for TMP_115

Name: TMP_115 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ethBalance_1(uint256) := TMP_115(uint256)
Finance type key: (-1, -1)
[i]Type for ethBalance

Name: ethBalance Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_116 = CONVERT vault_1 to IyVault
[i]Type for TMP_116

Name: TMP_116 Function: _withdrawETH
Num: -993
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
HIGH_LEVEL_CALL, dest:TMP_116(IyVault), function:withdrawETH, arguments:['amount_1']  
TMP_118 = CONVERT this to address
[i]Type for TMP_118

Name: TMP_118 Function: _withdrawETH
Num: 
Den: 
Address: 2
Norm: u
LF: YearnYield
Value: u
Fields: 
Finance Type: undef
TMP_119(uint256) = SOLIDITY_CALL balance(address)(TMP_118)
[i]Type for TMP_119

Name: TMP_119 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_120(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_119', 'ethBalance_1'] 
[i]Type for TMP_120

Name: TMP_120 Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_1(uint256) := TMP_120(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: _withdrawETH
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_67

Name: TMP_67 Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
received_2(uint256) := TMP_67(uint256)
Finance type key: (-1, -1)
[i]Type for received

Name: received Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_70 = CONVERT asset_1 to IERC20
[i]Type for TMP_70

Name: TMP_70 Function: unlockTokens
Num: 
Den: 
Address: -993
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_70', 'savingsAccount_5', 'received_1'] 
received_3(uint256) := ϕ(['received_2', 'received_1'])
[i]Type for received

Name: received Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:savingsAccount_6, function:call, arguments:[''] value:received_2 
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
savingsAccount_7(address) := ϕ(['savingsAccount_1', 'savingsAccount_10', 'savingsAccount_12', 'savingsAccount_5', 'savingsAccount_6'])
[i]Type for savingsAccount

Name: savingsAccount Function: unlockTokens
Num: -1
Den: -1
Address: 4
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
success_1(bool)= UNPACK TUPLE_1 index: 0 
[i]Type for success

Name: success Function: unlockTokens
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_68(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer failed)
[i]Type for TMP_68

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef



unlockShares
savingsAccount_8(address) := ϕ(['savingsAccount_1', 'savingsAccount_10', 'savingsAccount_12', 'savingsAccount_5', 'savingsAccount_0'])
[i]Type for savingsAccount

Name: savingsAccount Function: unlockShares
Num: -1
Den: -1
Address: 4
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, YearnYield.onlySavingsAccount()()
savingsAccount_9(address) := ϕ(['savingsAccount_12'])
[i]Type for savingsAccount

Name: savingsAccount Function: unlockShares
Num: -1
Den: -1
Address: 4
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
TMP_75(bool) = amount_1 == 0
[i]Type for TMP_75

Name: TMP_75 Function: unlockShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN 0
TMP_76 = CONVERT 0 to address
[i]Type for TMP_76

Name: TMP_76 Function: unlockShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_77(bool) = asset_1 != TMP_76
[i]Type for TMP_77

Name: TMP_77 Function: unlockShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_78(None) = SOLIDITY_CALL require(bool,string)(TMP_77,Asset address cannot be address(0))
[i]Type for TMP_78

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_79 = CONVERT asset_1 to IERC20
[i]Type for TMP_79

Name: TMP_79 Function: unlockShares
Num: 
Den: 
Address: -992
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_79', 'savingsAccount_10', 'amount_1'] 
RETURN amount_1
savingsAccount_8(address) := ϕ(['savingsAccount_1', 'savingsAccount_10', 'savingsAccount_12', 'savingsAccount_5', 'savingsAccount_0'])
[i]Type for savingsAccount

Name: savingsAccount Function: unlockShares
Num: -1
Den: -1
Address: 4
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, YearnYield.onlySavingsAccount()()
savingsAccount_9(address) := ϕ(['savingsAccount_12'])
[i]Type for savingsAccount

Name: savingsAccount Function: unlockShares
Num: -1
Den: -1
Address: 4
Norm: u
LF: savingsAccount
Value: u
Fields: 
Finance Type: undef
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
TMP_75(bool) = amount_1 == 0
[i]Type for TMP_75

Name: TMP_75 Function: unlockShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN 0
TMP_76 = CONVERT 0 to address
[i]Type for TMP_76

Name: TMP_76 Function: unlockShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_77(bool) = asset_1 != TMP_76
[i]Type for TMP_77

Name: TMP_77 Function: unlockShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_78(None) = SOLIDITY_CALL require(bool,string)(TMP_77,Asset address cannot be address(0))
[i]Type for TMP_78

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_79 = CONVERT asset_1 to IERC20
[i]Type for TMP_79

Name: TMP_79 Function: unlockShares
Num: 
Den: 
Address: -992
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_79', 'savingsAccount_10', 'amount_1'] 
RETURN amount_1



getTokensForShares
asset_1(address) := ϕ(['asset_1'])
[i]Type for asset

Name: asset Function: getTokensForShares
Num: 
Den: 
Address: -991
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
liquidityToken_11(mapping(address => address)) := ϕ(['liquidityToken_0', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_12', 'liquidityToken_4', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: getTokensForShares
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_84(bool) = shares_1 == 0
[i]Type for TMP_84

Name: TMP_84 Function: getTokensForShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN 0
REF_12(address) -> liquidityToken_11[asset_1]
[i]Type for REF_12

Name: liquidityToken Function: getTokensForShares
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_85 = CONVERT REF_12 to IyVault
[i]Type for TMP_85

Name: TMP_85 Function: getTokensForShares
Num: -991
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
TMP_86(uint256) = HIGH_LEVEL_CALL, dest:TMP_85(IyVault), function:getPricePerFullShare, arguments:[]  
[i]Type for TMP_86

Name: TMP_86 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: 'u'
Fields: 
Finance Type: undef
liquidityToken_12(mapping(address => address)) := ϕ(['liquidityToken_11', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_4', 'liquidityToken_12', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: getTokensForShares
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_87(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_86', 'shares_1'] 
[i]Type for TMP_87

Name: TMP_87 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_88(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_87', '1000000000000000000'] 
Error with TMP_88 in function getTokensForShares
Error with: TMP_88 in function getTokensForShares
[i]Type for TMP_88

Name: TMP_88 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
amount_1(uint256) := TMP_88(uint256)
Finance type key: (-1, -1)
[i]Type for amount

Name: amount Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
asset_1(address) := ϕ(['asset_1'])
[i]Type for asset

Name: asset Function: getTokensForShares
Num: 
Den: 
Address: -991
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
liquidityToken_11(mapping(address => address)) := ϕ(['liquidityToken_0', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_12', 'liquidityToken_4', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: getTokensForShares
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_84(bool) = shares_1 == 0
[i]Type for TMP_84

Name: TMP_84 Function: getTokensForShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
RETURN 0
REF_12(address) -> liquidityToken_11[asset_1]
[i]Type for REF_12

Name: liquidityToken Function: getTokensForShares
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_85 = CONVERT REF_12 to IyVault
[i]Type for TMP_85

Name: TMP_85 Function: getTokensForShares
Num: -991
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
TMP_86(uint256) = HIGH_LEVEL_CALL, dest:TMP_85(IyVault), function:getPricePerFullShare, arguments:[]  
[i]Type for TMP_86

Name: TMP_86 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: 'u'
Fields: 
Finance Type: undef
liquidityToken_12(mapping(address => address)) := ϕ(['liquidityToken_11', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_4', 'liquidityToken_12', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: getTokensForShares
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_87(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_86', 'shares_1'] 
[i]Type for TMP_87

Name: TMP_87 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_88(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_87', '1000000000000000000'] 
[i]Type for TMP_88

Name: TMP_88 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
amount_1(uint256) := TMP_88(uint256)
Finance type key: (-1, -1)
[i]Type for amount

Name: amount Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef



getSharesForTokens
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['amount_1', '1000000000000000000'] 
[i]Type for TMP_89

Name: TMP_89 Function: getSharesForTokens
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_90(uint256) = INTERNAL_CALL, YearnYield.getTokensForShares(uint256,address)(1000000000000000000,asset_1)
asset_1(address) := ϕ(['asset_1'])
[i]Type for asset

Name: asset Function: getTokensForShares
Num: 
Den: 
Address: -990
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
liquidityToken_11(mapping(address => address)) := ϕ(['liquidityToken_0', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_12', 'liquidityToken_4', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: getTokensForShares
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_84(bool) = shares_1 == 0
[i]Type for TMP_84

Name: TMP_84 Function: getTokensForShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(address) -> liquidityToken_11[asset_1]
[i]Type for REF_12

Name: liquidityToken Function: getTokensForShares
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_85 = CONVERT REF_12 to IyVault
[i]Type for TMP_85

Name: TMP_85 Function: getTokensForShares
Num: -990
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
TMP_86(uint256) = HIGH_LEVEL_CALL, dest:TMP_85(IyVault), function:getPricePerFullShare, arguments:[]  
[i]Type for TMP_86

Name: TMP_86 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: 'u'
Fields: 
Finance Type: undef
liquidityToken_12(mapping(address => address)) := ϕ(['liquidityToken_11', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_4', 'liquidityToken_12', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: getTokensForShares
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_87(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_86', 'shares_1'] 
Error with TMP_87 in function getTokensForShares
Error with: TMP_87 in function getTokensForShares
[i]Type for TMP_87

Name: TMP_87 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_88(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_87', '1000000000000000000'] 
[i]Type for TMP_88

Name: TMP_88 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
amount_1(uint256) := TMP_88(uint256)
Finance type key: (-1, -1)
[i]Type for amount

Name: amount Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
RETURN 0
asset_1(address) := ϕ(['asset_1'])
[i]Type for asset

Name: asset Function: getTokensForShares
Num: 
Den: 
Address: -990
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
liquidityToken_11(mapping(address => address)) := ϕ(['liquidityToken_0', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_12', 'liquidityToken_4', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: getTokensForShares
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_84(bool) = shares_1 == 0
[i]Type for TMP_84

Name: TMP_84 Function: getTokensForShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(address) -> liquidityToken_11[asset_1]
[i]Type for REF_12

Name: liquidityToken Function: getTokensForShares
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_85 = CONVERT REF_12 to IyVault
[i]Type for TMP_85

Name: TMP_85 Function: getTokensForShares
Num: -990
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
TMP_86(uint256) = HIGH_LEVEL_CALL, dest:TMP_85(IyVault), function:getPricePerFullShare, arguments:[]  
[i]Type for TMP_86

Name: TMP_86 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: 'u'
Fields: 
Finance Type: undef
liquidityToken_12(mapping(address => address)) := ϕ(['liquidityToken_11', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_4', 'liquidityToken_12', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: getTokensForShares
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_87(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_86', 'shares_1'] 
[i]Type for TMP_87

Name: TMP_87 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_88(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_87', '1000000000000000000'] 
[i]Type for TMP_88

Name: TMP_88 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
amount_1(uint256) := TMP_88(uint256)
Finance type key: (-1, -1)
[i]Type for amount

Name: amount Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
RETURN 0
[i]Type for TMP_90

Name: TMP_90 Function: getSharesForTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_91(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_89', 'TMP_90'] 
[i]Type for TMP_91

Name: TMP_91 Function: getSharesForTokens
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
shares_1(uint256) := TMP_91(uint256)
Finance type key: (-1, -1)
[i]Type for shares

Name: shares Function: getSharesForTokens
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['amount_1', '1000000000000000000'] 
[i]Type for TMP_89

Name: TMP_89 Function: getSharesForTokens
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
TMP_90(uint256) = INTERNAL_CALL, YearnYield.getTokensForShares(uint256,address)(1000000000000000000,asset_1)
asset_1(address) := ϕ(['asset_1'])
[i]Type for asset

Name: asset Function: getTokensForShares
Num: 
Den: 
Address: -990
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
liquidityToken_11(mapping(address => address)) := ϕ(['liquidityToken_0', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_12', 'liquidityToken_4', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: getTokensForShares
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_84(bool) = shares_1 == 0
[i]Type for TMP_84

Name: TMP_84 Function: getTokensForShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(address) -> liquidityToken_11[asset_1]
[i]Type for REF_12

Name: liquidityToken Function: getTokensForShares
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_85 = CONVERT REF_12 to IyVault
[i]Type for TMP_85

Name: TMP_85 Function: getTokensForShares
Num: -990
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
TMP_86(uint256) = HIGH_LEVEL_CALL, dest:TMP_85(IyVault), function:getPricePerFullShare, arguments:[]  
[i]Type for TMP_86

Name: TMP_86 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: 'u'
Fields: 
Finance Type: undef
liquidityToken_12(mapping(address => address)) := ϕ(['liquidityToken_11', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_4', 'liquidityToken_12', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: getTokensForShares
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_87(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_86', 'shares_1'] 
[i]Type for TMP_87

Name: TMP_87 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_88(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_87', '1000000000000000000'] 
[i]Type for TMP_88

Name: TMP_88 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
amount_1(uint256) := TMP_88(uint256)
Finance type key: (-1, -1)
[i]Type for amount

Name: amount Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
RETURN 0
asset_1(address) := ϕ(['asset_1'])
[i]Type for asset

Name: asset Function: getTokensForShares
Num: 
Den: 
Address: -990
Norm: 6
LF: asset
Value: u
Fields: 
Finance Type: undef
liquidityToken_11(mapping(address => address)) := ϕ(['liquidityToken_0', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_12', 'liquidityToken_4', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: getTokensForShares
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_84(bool) = shares_1 == 0
[i]Type for TMP_84

Name: TMP_84 Function: getTokensForShares
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_12(address) -> liquidityToken_11[asset_1]
[i]Type for REF_12

Name: liquidityToken Function: getTokensForShares
Num: -990
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_85 = CONVERT REF_12 to IyVault
[i]Type for TMP_85

Name: TMP_85 Function: getTokensForShares
Num: -990
Den: -1
Address: u
Norm: 6
LF: yVault
Value: u
Fields: 
Finance Type: undef
TMP_86(uint256) = HIGH_LEVEL_CALL, dest:TMP_85(IyVault), function:getPricePerFullShare, arguments:[]  
[i]Type for TMP_86

Name: TMP_86 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: 'u'
Fields: 
Finance Type: undef
liquidityToken_12(mapping(address => address)) := ϕ(['liquidityToken_11', 'liquidityToken_10', 'liquidityToken_1', 'liquidityToken_4', 'liquidityToken_12', 'liquidityToken_7'])
[i]Type for liquidityToken

Name: liquidityToken Function: getTokensForShares
Num: -1
Den: -1
Address: 1
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_87(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_86', 'shares_1'] 
[i]Type for TMP_87

Name: TMP_87 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_88(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_87', '1000000000000000000'] 
[i]Type for TMP_88

Name: TMP_88 Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
amount_1(uint256) := TMP_88(uint256)
Finance type key: (-1, -1)
[i]Type for amount

Name: amount Function: getTokensForShares
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
RETURN 0
[i]Type for TMP_90

Name: TMP_90 Function: getSharesForTokens
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_91(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_89', 'TMP_90'] 
[i]Type for TMP_91

Name: TMP_91 Function: getSharesForTokens
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
shares_1(uint256) := TMP_91(uint256)
Finance type key: (-1, -1)
[i]Type for shares

Name: shares Function: getSharesForTokens
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: 1000000000000000000
Fields: 
Finance Type: undef
Function count: 21
Executing Group 19
[*] Tested 6 warnings for Sublime
Group 19 complete
Elapsed time: 21.174409002 seconds
Testing complete
