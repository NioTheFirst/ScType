Switched global version to 0.8.1
Analyzed_contracts_count: 7
total compilations: 1, contracts: 7
contract name: HybridPool
Finance file: HybridPool_ftypes.txt
Add to address_to_label {'global:bento': 1}
Addr:global_bento : 0
Add to address_to_label {'global:bento': 1, 'global:token0': 2}
Addr:global_token0 : 6
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3}
Addr:global_token1 : 18
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4}
Addr:global_liquidity : 18
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5}
Addr:global_barFeeTo : 0
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6}
Addr:global_masterDeployer : 0
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999}
Addr:constructor__masterDeployer : 0
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998}
Addr:constructor__token0 : 6
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997}
Addr:constructor__token1 : 18
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996}
Addr:mint_recipient : 0
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995}
Addr:burnSingle_tokenOut : 0
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995, 'swap:tokenIn': -994}
Addr:swap_tokenIn : 0
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995, 'swap:tokenIn': -994, 'swap:recipient': -993}
Addr:swap_recipient : 0
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995, 'swap:tokenIn': -994, 'swap:recipient': -993, 'flashSwap:tokenIn': -992}
Addr:flashSwap_tokenIn : 0
Reading f file...
['[*c]', 'HybridPool']
['[t]', 'global', 'swapFee', 'f:12']
Adding global_swapFee: (-1, -1, 'u', None, 'u', 12)
['[t]', 'global', 'balanceOf', 'f:0']
Adding global_balanceOf: (-1, -1, 'u', None, 'u', 0)
['[t]', 'global', 'totalSupply', 'f:30']
Adding global_totalSupply: (-1, -1, 'u', None, 'u', 30)
['[t]', 'global', 'reserve0', 'f:0']
Adding global_reserve0: (-1, -1, 'u', None, 'u', 0)
['[t]', 'global', 'reserve1', 'f:0']
Adding global_reserve1: (-1, -1, 'u', None, 'u', 0)
['[t]', 'flashSwap', 'amountIn', 'f:0']
Adding flashSwap_amountIn: (-1, -1, 'u', None, 'u', 0)
['#[t]', '_nonOptimalMintFee', '_amount0', 'f:0']
['#[t]', '_nonOptimalMintFee', '_amount1', 'f:0']
['#[t]', '_nonOptimalMintFee', '_reserve0', 'f:30']
['#[t]', '_nonOptimalMintFee', '_reserve1', 'f:30']
['#[t]', '_handleFee', 'amountIn', 'f:0']
['#[t]', '_transfer', 'amount', 'f:0']
['']
Mark functions Adding: HybridPool, constructor, True
[*]Marked
Mark functions Adding: HybridPool, mint, True
[*]Marked
Mark functions Adding: HybridPool, burn, True
[*]Marked
Mark functions Adding: HybridPool, burnSingle, True
[*]Marked
Mark functions Adding: HybridPool, swap, True
[*]Marked
Mark functions Adding: HybridPool, flashSwap, True
[*]Marked
Mark functions Adding: HybridPool, updateBarFee, True
[X]No Binary
Mark functions Adding: HybridPool, _processSwap, True
[x] Not visible 
Mark functions Adding: HybridPool, _getReserves, True
[x] Not visible 
Mark functions Adding: HybridPool, _updateReserves, True
[x] Not visible 
Mark functions Adding: HybridPool, _balance, True
[x] Not visible 
Mark functions Adding: HybridPool, __balance, True
[x] Not visible 
Mark functions Adding: HybridPool, _toAmount, True
[x] Not visible 
Mark functions Adding: HybridPool, _toShare, True
[x] Not visible 
Mark functions Adding: HybridPool, _getAmountOut, True
[x] Not visible 
Mark functions Adding: HybridPool, _transfer, True
[x] Not visible 
Mark functions Adding: HybridPool, _computeLiquidity, True
[x] Not visible 
Mark functions Adding: HybridPool, _computeLiquidityFromAdjustedBalances, True
[x] Not visible 
Mark functions Adding: HybridPool, _getY, True
[x] Not visible 
Mark functions Adding: HybridPool, _getYD, True
[x] Not visible 
Mark functions Adding: HybridPool, _handleFee, True
[x] Not visible 
Mark functions Adding: HybridPool, _nonOptimalMintFee, True
[x] Not visible 
Mark functions Adding: HybridPool, getAssets, True
[X]No Binary
Mark functions Adding: HybridPool, getAmountOut, True
[*]Marked
Mark functions Adding: HybridPool, getReserves, True
[X]No Binary
Mark functions Adding: HybridPool, slitherConstructorConstantVariables, True
[x] Not visible 
State_var: A_PRECISION
Finding type for A_PRECISION(uint256 ... )
Value: u
Source address: u
State_var: MAX_LOOP_LIMIT
Finding type for MAX_LOOP_LIMIT(uint256 ... )
Value: u
Source address: u
State_var: N_A
Finding type for N_A(uint256 ... )
Value: u
Source address: u
State_var: bento
Finding type for bento(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Source address: 1
State_var: balanceOf
Finding type for balanceOf(mapping(address => uint256) ... )
[['global:liquidity'], ['-1'], 18, 'u', "'u'"]
global:liquidity
{'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995, 'swap:tokenIn': -994, 'swap:recipient': -993, 'flashSwap:tokenIn': -992}
{'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995, 'swap:tokenIn': -994, 'swap:recipient': -993, 'flashSwap:tokenIn': -992}
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995, 'swap:tokenIn': -994, 'swap:recipient': -993, 'flashSwap:tokenIn': -992, "global:'u'": 7}
([4], [-1], 18, 'u', 7)
[*]Type fetched successfully
Source address: u
State_var: totalSupply
Finding type for totalSupply(uint256 ... )
List: [-1, -1, 'u', None, 'u', 30]
{'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995, 'swap:tokenIn': -994, 'swap:recipient': -993, 'flashSwap:tokenIn': -992, "global:'u'": 7}
Add to address_to_label {'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995, 'swap:tokenIn': -994, 'swap:recipient': -993, 'flashSwap:tokenIn': -992, "global:'u'": 7, 'global:u': 8}
(-1, -1, 'u', None, 8, 30)
[*]Type fetched successfully
Source address: u
State_var: allowance
Finding type for allowance(mapping(address => mapping(address => uint256)) ... )
Value: u
Source address: u
State_var: name
Finding type for name(string ... )
Value: u
Source address: u
State_var: masterDeployer
Finding type for masterDeployer(address ... )
prev address? u
Head Addr: 6
    Norm: 0
    Set: {6}
    Fin: NULL
Source address: 6
State_var: token0
Finding type for token0(address ... )
prev address? u
Head Addr: 2
    Norm: 6
    Set: {2}
    Fin: NULL
Source address: 2
State_var: token1
Finding type for token1(address ... )
prev address? u
Head Addr: 3
    Norm: 18
    Set: {3}
    Fin: NULL
Source address: 3
State_var: MAX_FEE
Finding type for MAX_FEE(uint256 ... )
Value: u
Source address: u
State_var: decimals
Finding type for decimals(uint8 ... )
Value: u
Source address: u
State_var: token0PrecisionMultiplier
Finding type for token0PrecisionMultiplier(uint256 ... )
Value: u
Source address: u
State_var: token1PrecisionMultiplier
Finding type for token1PrecisionMultiplier(uint256 ... )
Value: u
Source address: u
State_var: unlocked
Finding type for unlocked(uint256 ... )
Value: u
Source address: u
State_var: swapFee
Finding type for swapFee(uint256 ... )
List: [-1, -1, 'u', None, 'u', 12]
{'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995, 'swap:tokenIn': -994, 'swap:recipient': -993, 'flashSwap:tokenIn': -992, "global:'u'": 7, 'global:u': 8}
(-1, -1, 'u', None, 8, 12)
[*]Type fetched successfully
Source address: u
State_var: barFee
Finding type for barFee(uint256 ... )
Value: u
Source address: u
State_var: barFeeTo
Finding type for barFeeTo(address ... )
prev address? u
Head Addr: 5
    Norm: 0
    Set: {5}
    Fin: NULL
Source address: 5
State_var: MINIMUM_LIQUIDITY
Finding type for MINIMUM_LIQUIDITY(uint256 ... )
Value: u
Source address: u
State_var: reserve0
Finding type for reserve0(uint128 ... )
List: [-1, -1, 'u', None, 'u', 0]
{'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995, 'swap:tokenIn': -994, 'swap:recipient': -993, 'flashSwap:tokenIn': -992, "global:'u'": 7, 'global:u': 8}
(-1, -1, 'u', None, 8, 0)
[*]Type fetched successfully
Source address: u
State_var: reserve1
Finding type for reserve1(uint128 ... )
List: [-1, -1, 'u', None, 'u', 0]
{'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995, 'swap:tokenIn': -994, 'swap:recipient': -993, 'flashSwap:tokenIn': -992, "global:'u'": 7, 'global:u': 8}
(-1, -1, 'u', None, 8, 0)
[*]Type fetched successfully
Source address: u
State_var: DOMAIN_SEPARATOR
Finding type for DOMAIN_SEPARATOR(bytes32 ... )
Value: u
Source address: u
State_var: PERMIT_TYPEHASH
Finding type for PERMIT_TYPEHASH(bytes32 ... )
Value: u
Source address: u
State_var: nonces
Finding type for nonces(mapping(address => uint256) ... )
Value: u
Source address: u
contract name: TridentERC20
contract name: IBentoBoxMinimal
Mark functions Adding: IBentoBoxMinimal, balanceOf, True
[x] Not visible 
Mark functions Adding: IBentoBoxMinimal, toShare, True
[x] Not visible 
Mark functions Adding: IBentoBoxMinimal, toAmount, True
[x] Not visible 
Mark functions Adding: IBentoBoxMinimal, registerProtocol, True
[x] Not visible 
Mark functions Adding: IBentoBoxMinimal, deposit, True
[x] Not visible 
Mark functions Adding: IBentoBoxMinimal, withdraw, True
[x] Not visible 
Mark functions Adding: IBentoBoxMinimal, transfer, True
[x] Not visible 
contract name: IMasterDeployer
contract name: IPool
contract name: ITridentCallee
contract name: MathUtils
Running check on HybridPool
Reading Function: constructor
Checking funcion...



constructor
Function name: constructor
Finding type for _deployData(bytes ... )
Finding type for _masterDeployer(address ... )
prev address? u
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, '_masterDeployer', [], -1, -999, 'u']]
FIND RETURN
ENTRY_POINT
constructor(bytes,address)


decimals_1(uint8) := ϕ(['decimals_0', 'decimals_6'])
MAX_FEE_1(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
TUPLE_0(address,address,uint256,uint256) = SOLIDITY_CALL abi.decode()(_deployData_1(address,address,uint256,uint256))
_token0_1(address)= UNPACK TUPLE_0 index: 0 
_token1_1(address)= UNPACK TUPLE_0 index: 1 
_swapFee_1(uint256)= UNPACK TUPLE_0 index: 2 
a_1(uint256)= UNPACK TUPLE_0 index: 3 
TMP_32 = CONVERT 0 to address
TMP_33(bool) = _token0_1 != TMP_32
TMP_34(None) = SOLIDITY_CALL require(bool,string)(TMP_33,ZERO_ADDRESS)
TMP_35(bool) = _token0_1 != _token1_1
TMP_36(None) = SOLIDITY_CALL require(bool,string)(TMP_35,IDENTICAL_ADDRESSES)
TMP_37(bool) = _swapFee_1 <= MAX_FEE_1
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,INVALID_SWAP_FEE)
TMP_39(bool) = a_1 != 0
TMP_40(None) = SOLIDITY_CALL require(bool,string)(TMP_39,ZERO_A)
REF_22 (->None) := 3242907650(uint256)
TMP_41(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_22)
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_41']  
decimals_2(uint8) := ϕ(['decimals_1', 'decimals_6'])
_barFee_1(bytes)= UNPACK TUPLE_1 index: 1 
REF_26 (->None) := 201985234(uint256)
TMP_42(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_26)
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_42']  
decimals_3(uint8) := ϕ(['decimals_6', 'decimals_2'])
_barFeeTo_1(bytes)= UNPACK TUPLE_2 index: 1 
REF_30 (->None) := 1302534183(uint256)
TMP_43(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_30)
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_43']  
decimals_4(uint8) := ϕ(['decimals_3', 'decimals_6'])
_bento_1(bytes)= UNPACK TUPLE_3 index: 1 
TMP_44(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(826074471)
TUPLE_4(bool,bytes) = LOW_LEVEL_CALL, dest:_token0_1, function:staticcall, arguments:['TMP_44']  
decimals_5(uint8) := ϕ(['decimals_4', 'decimals_6'])
_decimals0_1(bytes)= UNPACK TUPLE_4 index: 1 
TMP_45(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(826074471)
TUPLE_5(bool,bytes) = LOW_LEVEL_CALL, dest:_token1_1, function:staticcall, arguments:['TMP_45']  
decimals_6(uint8) := ϕ(['decimals_5', 'decimals_6'])
_decimals1_1(bytes)= UNPACK TUPLE_5 index: 1 
token0_1(address) := _token0_1(address)
token1_1(address) := _token1_1(address)
swapFee_1(uint256) := _swapFee_1(uint256)
TMP_46(uint256) = SOLIDITY_CALL abi.decode()(_barFee_1,uint256)
barFee_1(uint256) := TMP_46(uint256)
TMP_47(address) = SOLIDITY_CALL abi.decode()(_barFeeTo_1,address)
barFeeTo_1(address) := TMP_47(address)
TMP_48(address) = SOLIDITY_CALL abi.decode()(_bento_1,address)
bento_1(address) := TMP_48(address)
masterDeployer_1(address) := _masterDeployer_1(address)
A_1(uint256) := a_1(uint256)
TMP_49(uint256) = 2 (c)* a_1
N_A_1(uint256) := TMP_49(uint256)
TMP_50(uint8) = SOLIDITY_CALL abi.decode()(_decimals0_1,uint8)
TMP_51(uint8) = decimals_6 (c)- TMP_50
TMP_52(uint256) = 10 (c)** TMP_51
token0PrecisionMultiplier_1(uint256) := TMP_52(uint256)
TMP_53(uint8) = SOLIDITY_CALL abi.decode()(_decimals1_1,uint8)
TMP_54(uint8) = decimals_6 (c)- TMP_53
TMP_55(uint256) = 10 (c)** TMP_54
token1PrecisionMultiplier_1(uint256) := TMP_55(uint256)
unlocked_1(uint256) := 1(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: decimals_1, name: decimals

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: decimals, Num: 1
Globalname: decimals, contract_name: HybridPool
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MAX_FEE_1, name: MAX_FEE

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_FEE, Num: 1
Globalname: MAX_FEE, contract_name: HybridPool
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
decimals_1(uint8) := ϕ(['decimals_0', 'decimals_6'])
Phi
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_FEE_1(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _token0 cleared
[i] _token1 cleared
[i] _swapFee cleared
[i] a cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _deployData_1, name: _deployData

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _deployData_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _deployData, Num: 1
Globalname: _deployData, contract_name: HybridPool
Ssa_name: _deployData_1, name: _deployData

Name: _deployData_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _deployData_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _deployData, Num: 1
Globalname: _deployData, contract_name: HybridPool
Ssa_name: a_1, name: a

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: a, Num: 1
Globalname: a, contract_name: HybridPool
Ssa_name: _token0_1, name: _token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _token0, Num: 1
Globalname: _token0, contract_name: HybridPool
Ssa_name: _token1_1, name: _token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _token1, Num: 1
Globalname: _token1, contract_name: HybridPool
Ssa_name: _swapFee_1, name: _swapFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _swapFee, Num: 1
Globalname: _swapFee, contract_name: HybridPool
End popogation
TUPLE_0(address,address,uint256,uint256) = SOLIDITY_CALL abi.decode()(_deployData_1(address,address,uint256,uint256))
[i]Type for TUPLE_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_token0_1(address)= UNPACK TUPLE_0 index: 0 
Finding type for _token0(address ... )
prev address? u
Head Addr: -998
    Norm: 6
    Set: {-998}
    Fin: NULL
[i]Type for _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_token1_1(address)= UNPACK TUPLE_0 index: 1 
Finding type for _token1(address ... )
prev address? u
Head Addr: -997
    Norm: 18
    Set: {-997}
    Fin: NULL
[i]Type for _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_swapFee_1(uint256)= UNPACK TUPLE_0 index: 2 
Finding type for _swapFee(uint256 ... )
Value: u
[i]Type for _swapFee

Name: _swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
a_1(uint256)= UNPACK TUPLE_0 index: 3 
Finding type for a(uint256 ... )
Value: u
[i]Type for a

Name: a Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] TMP_33 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_32 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(bool) = _token0_1 != TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_34(None) = SOLIDITY_CALL require(bool,string)(TMP_33,ZERO_ADDRESS)
[i]Type for TMP_34

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_35 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token1_1, name: _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token1_1, name: _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_35(bool) = _token0_1 != _token1_1
[i]Type for TMP_35

Name: TMP_35 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_36(None) = SOLIDITY_CALL require(bool,string)(TMP_35,IDENTICAL_ADDRESSES)
[i]Type for TMP_36

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_37 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _swapFee_1, name: _swapFee

Name: _swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_1, name: MAX_FEE

Name: MAX_FEE Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_1, name: MAX_FEE

Name: MAX_FEE Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _swapFee_1, name: _swapFee

Name: _swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_37(bool) = _swapFee_1 <= MAX_FEE_1
lnorm: u rnorm: u
[i]Type for TMP_37

Name: TMP_37 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,INVALID_SWAP_FEE)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_39 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_39(bool) = a_1 != 0
[i]Type for TMP_39

Name: TMP_39 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(None) = SOLIDITY_CALL require(bool,string)(TMP_39,ZERO_A)
[i]Type for TMP_40

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
Ssa_name: decimals_2, name: decimals

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: decimals, Num: 2
Globalname: decimals, contract_name: HybridPool
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_22 (->None) := 3242907650(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_22

Name: REF_22 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3242907650
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_41(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_22)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_41']  
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
decimals_2(uint8) := ϕ(['decimals_1', 'decimals_6'])
Phi
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_barFee_1(bytes)= UNPACK TUPLE_1 index: 1 
Finding type for _barFee(bytes ... )
[i]Type for _barFee

Name: _barFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _barFeeTo cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFeeTo_1, name: _barFeeTo

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFeeTo, Num: 1
Globalname: _barFeeTo, contract_name: HybridPool
End popogation
Ssa_name: decimals_3, name: decimals

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: decimals, Num: 3
Globalname: decimals, contract_name: HybridPool
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_26 (->None) := 201985234(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_26

Name: REF_26 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 201985234
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_42(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_26)
[i]Type for TMP_42

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_42']  
[i]Type for TUPLE_2

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
decimals_3(uint8) := ϕ(['decimals_6', 'decimals_2'])
Phi
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_barFeeTo_1(bytes)= UNPACK TUPLE_2 index: 1 
Finding type for _barFeeTo(bytes ... )
[i]Type for _barFeeTo

Name: _barFeeTo Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _bento cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: _bento_1, name: _bento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _bento, Num: 1
Globalname: _bento, contract_name: HybridPool
End popogation
Ssa_name: decimals_4, name: decimals

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: decimals, Num: 4
Globalname: decimals, contract_name: HybridPool
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
REF_30 (->None) := 1302534183(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_30

Name: REF_30 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1302534183
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_43(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_30)
[i]Type for TMP_43

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_43']  
[i]Type for TUPLE_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
decimals_4(uint8) := ϕ(['decimals_3', 'decimals_6'])
Phi
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_bento_1(bytes)= UNPACK TUPLE_3 index: 1 
Finding type for _bento(bytes ... )
[i]Type for _bento

Name: _bento Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _decimals0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _decimals0_1, name: _decimals0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals0, Num: 1
Globalname: _decimals0, contract_name: HybridPool
End popogation
Ssa_name: decimals_5, name: decimals

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: decimals, Num: 5
Globalname: decimals, contract_name: HybridPool
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_44(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(826074471)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_4(bool,bytes) = LOW_LEVEL_CALL, dest:_token0_1, function:staticcall, arguments:['TMP_44']  
[i]Type for TUPLE_4

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
decimals_5(uint8) := ϕ(['decimals_4', 'decimals_6'])
Phi
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals0_1(bytes)= UNPACK TUPLE_4 index: 1 
Finding type for _decimals0(bytes ... )
[i]Type for _decimals0

Name: _decimals0 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _decimals1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token1_1, name: _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token1_1, name: _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _decimals1_1, name: _decimals1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals1, Num: 1
Globalname: _decimals1, contract_name: HybridPool
End popogation
Ssa_name: decimals_6, name: decimals

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: decimals, Num: 6
Globalname: decimals, contract_name: HybridPool
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_45(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(826074471)
[i]Type for TMP_45

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_5(bool,bytes) = LOW_LEVEL_CALL, dest:_token1_1, function:staticcall, arguments:['TMP_45']  
[i]Type for TUPLE_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
decimals_6(uint8) := ϕ(['decimals_5', 'decimals_6'])
Phi
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals1_1(bytes)= UNPACK TUPLE_5 index: 1 
Finding type for _decimals1(bytes ... )
[i]Type for _decimals1

Name: _decimals1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 1
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
End popogation
token0_1(address) := _token0_1(address)
asgn
Source address: -998
Finance type key: (-1, -1)
[i]Type for token0

Name: token0 Function: constructor
Num: -1
Den: -1
Address: -998
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
Copied token0
Propogating parameters and globals to SSA variables...
Ssa_name: _token1_1, name: _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token1_1, name: _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 1
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
End popogation
token1_1(address) := _token1_1(address)
asgn
Source address: -997
Finance type key: (-1, -1)
[i]Type for token1

Name: token1 Function: constructor
Num: -1
Den: -1
Address: -997
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
Copied token1
Propogating parameters and globals to SSA variables...
Ssa_name: _swapFee_1, name: _swapFee

Name: _swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _swapFee_1, name: _swapFee

Name: _swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_1, name: swapFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: swapFee, Num: 1
Globalname: swapFee, contract_name: HybridPool
global...

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: simple fee ratio
Source address: u
End popogation
swapFee_1(uint256) := _swapFee_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for swapFee

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied swapFee
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
Ssa_name: barFee_1, name: barFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: barFee, Num: 1
Globalname: barFee, contract_name: HybridPool
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_46(uint256) = SOLIDITY_CALL abi.decode()(_barFee_1,uint256)
[i]Type for TMP_46

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_1(uint256) := TMP_46(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for barFee

Name: barFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied barFee
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _barFeeTo_1, name: _barFeeTo

Name: _barFeeTo Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFeeTo, Num: 1
Globalname: _barFeeTo, contract_name: HybridPool
Ssa_name: _barFeeTo_1, name: _barFeeTo

Name: _barFeeTo Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFeeTo, Num: 1
Globalname: _barFeeTo, contract_name: HybridPool
Ssa_name: barFeeTo_1, name: barFeeTo

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: barFeeTo, Num: 1
Globalname: barFeeTo, contract_name: HybridPool
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5
End popogation
TMP_47(address) = SOLIDITY_CALL abi.decode()(_barFeeTo_1,address)
[i]Type for TMP_47

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_1(address) := TMP_47(address)
asgn
Finance type key: (-1, -1)
[i]Type for barFeeTo

Name: barFeeTo Function: constructor
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
Copied barFeeTo
Propogating parameters and globals to SSA variables...
Ssa_name: _bento_1, name: _bento

Name: _bento Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _bento, Num: 1
Globalname: _bento, contract_name: HybridPool
Ssa_name: _bento_1, name: _bento

Name: _bento Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _bento, Num: 1
Globalname: _bento, contract_name: HybridPool
Ssa_name: bento_1, name: bento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: bento, Num: 1
Globalname: bento, contract_name: HybridPool
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Source address: 1
End popogation
TMP_48(address) = SOLIDITY_CALL abi.decode()(_bento_1,address)
[i]Type for TMP_48

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_1(address) := TMP_48(address)
asgn
Finance type key: (-1, -1)
[i]Type for bento

Name: bento Function: constructor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Copied bento
Propogating parameters and globals to SSA variables...
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: masterDeployer_1, name: masterDeployer

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: masterDeployer, Num: 1
Globalname: masterDeployer, contract_name: HybridPool
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: masterDeployer
Value: u
Fields: 
Finance Type: undef
Source address: 6
End popogation
masterDeployer_1(address) := _masterDeployer_1(address)
asgn
Source address: -999
Finance type key: (-1, -1)
[i]Type for masterDeployer

Name: masterDeployer Function: constructor
Num: -1
Den: -1
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
XXXX
Copied masterDeployer
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: A_1, name: A

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: A, Num: 1
Globalname: A, contract_name: HybridPool
End popogation
A_1(uint256) := a_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for A

Name: A Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: a_1, name: a

Name: a Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_1, name: N_A

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: N_A, Num: 1
Globalname: N_A, contract_name: HybridPool
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_49(uint256) = 2 (c)* a_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_49

Name: TMP_49 Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
N_A_1(uint256) := TMP_49(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for N_A

Name: N_A Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Copied N_A
Source address: u
[i] TMP_51 cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _decimals0_1, name: _decimals0

Name: _decimals0 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals0, Num: 1
Globalname: _decimals0, contract_name: HybridPool
Ssa_name: decimals_6, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _decimals0_1, name: _decimals0

Name: _decimals0 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals0, Num: 1
Globalname: _decimals0, contract_name: HybridPool
Ssa_name: decimals_6, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_1, name: token0PrecisionMultiplier

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0PrecisionMultiplier, Num: 1
Globalname: token0PrecisionMultiplier, contract_name: HybridPool
global...

Name: PIC_14 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_50(uint8) = SOLIDITY_CALL abi.decode()(_decimals0_1,uint8)
[i]Type for TMP_50

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(uint8) = decimals_6 (c)- TMP_50
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(uint256) = 10 (c)** TMP_51
[i]Type for TMP_52

Name: TMP_52 Function: constructor
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_1(uint256) := TMP_52(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Copied token0PrecisionMultiplier
Source address: u
[i] TMP_54 cleared
[i] TMP_55 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _decimals1_1, name: _decimals1

Name: _decimals1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals1, Num: 1
Globalname: _decimals1, contract_name: HybridPool
Ssa_name: decimals_6, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _decimals1_1, name: _decimals1

Name: _decimals1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals1, Num: 1
Globalname: _decimals1, contract_name: HybridPool
Ssa_name: decimals_6, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_1, name: token1PrecisionMultiplier

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1PrecisionMultiplier, Num: 1
Globalname: token1PrecisionMultiplier, contract_name: HybridPool
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_53(uint8) = SOLIDITY_CALL abi.decode()(_decimals1_1,uint8)
[i]Type for TMP_53

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(uint8) = decimals_6 (c)- TMP_53
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = 10 (c)** TMP_54
[i]Type for TMP_55

Name: TMP_55 Function: constructor
Num: -1
Den: -1
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_1(uint256) := TMP_55(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Copied token1PrecisionMultiplier
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: unlocked_1, name: unlocked

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unlocked, Num: 1
Globalname: unlocked, contract_name: HybridPool
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
unlocked_1(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for unlocked

Name: unlocked Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Copied unlocked
Source address: u


decimals_1(uint8) := ϕ(['decimals_0', 'decimals_6'])
MAX_FEE_1(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
TUPLE_0(address,address,uint256,uint256) = SOLIDITY_CALL abi.decode()(_deployData_1(address,address,uint256,uint256))
_token0_1(address)= UNPACK TUPLE_0 index: 0 
_token1_1(address)= UNPACK TUPLE_0 index: 1 
_swapFee_1(uint256)= UNPACK TUPLE_0 index: 2 
a_1(uint256)= UNPACK TUPLE_0 index: 3 
TMP_32 = CONVERT 0 to address
TMP_33(bool) = _token0_1 != TMP_32
TMP_34(None) = SOLIDITY_CALL require(bool,string)(TMP_33,ZERO_ADDRESS)
TMP_35(bool) = _token0_1 != _token1_1
TMP_36(None) = SOLIDITY_CALL require(bool,string)(TMP_35,IDENTICAL_ADDRESSES)
TMP_37(bool) = _swapFee_1 <= MAX_FEE_1
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,INVALID_SWAP_FEE)
TMP_39(bool) = a_1 != 0
TMP_40(None) = SOLIDITY_CALL require(bool,string)(TMP_39,ZERO_A)
REF_22 (->None) := 3242907650(uint256)
TMP_41(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_22)
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_41']  
decimals_2(uint8) := ϕ(['decimals_1', 'decimals_6'])
_barFee_1(bytes)= UNPACK TUPLE_1 index: 1 
REF_26 (->None) := 201985234(uint256)
TMP_42(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_26)
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_42']  
decimals_3(uint8) := ϕ(['decimals_6', 'decimals_2'])
_barFeeTo_1(bytes)= UNPACK TUPLE_2 index: 1 
REF_30 (->None) := 1302534183(uint256)
TMP_43(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_30)
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_43']  
decimals_4(uint8) := ϕ(['decimals_3', 'decimals_6'])
_bento_1(bytes)= UNPACK TUPLE_3 index: 1 
TMP_44(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(826074471)
TUPLE_4(bool,bytes) = LOW_LEVEL_CALL, dest:_token0_1, function:staticcall, arguments:['TMP_44']  
decimals_5(uint8) := ϕ(['decimals_4', 'decimals_6'])
_decimals0_1(bytes)= UNPACK TUPLE_4 index: 1 
TMP_45(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(826074471)
TUPLE_5(bool,bytes) = LOW_LEVEL_CALL, dest:_token1_1, function:staticcall, arguments:['TMP_45']  
decimals_6(uint8) := ϕ(['decimals_5', 'decimals_6'])
_decimals1_1(bytes)= UNPACK TUPLE_5 index: 1 
token0_1(address) := _token0_1(address)
token1_1(address) := _token1_1(address)
swapFee_1(uint256) := _swapFee_1(uint256)
TMP_46(uint256) = SOLIDITY_CALL abi.decode()(_barFee_1,uint256)
barFee_1(uint256) := TMP_46(uint256)
TMP_47(address) = SOLIDITY_CALL abi.decode()(_barFeeTo_1,address)
barFeeTo_1(address) := TMP_47(address)
TMP_48(address) = SOLIDITY_CALL abi.decode()(_bento_1,address)
bento_1(address) := TMP_48(address)
masterDeployer_1(address) := _masterDeployer_1(address)
A_1(uint256) := a_1(uint256)
TMP_49(uint256) = 2 (c)* a_1
N_A_1(uint256) := TMP_49(uint256)
TMP_50(uint8) = SOLIDITY_CALL abi.decode()(_decimals0_1,uint8)
TMP_51(uint8) = decimals_6 (c)- TMP_50
TMP_52(uint256) = 10 (c)** TMP_51
token0PrecisionMultiplier_1(uint256) := TMP_52(uint256)
TMP_53(uint8) = SOLIDITY_CALL abi.decode()(_decimals1_1,uint8)
TMP_54(uint8) = decimals_6 (c)- TMP_53
TMP_55(uint256) = 10 (c)** TMP_54
token1PrecisionMultiplier_1(uint256) := TMP_55(uint256)
unlocked_1(uint256) := 1(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: decimals_1, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_1, name: MAX_FEE

Name: MAX_FEE Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
decimals_1(uint8) := ϕ(['decimals_0', 'decimals_6'])
Phi
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_FEE_1(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _token0 cleared
[i] _token1 cleared
[i] _swapFee cleared
[i] a cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _deployData_1, name: _deployData

Name: _deployData_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _deployData_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _deployData, Num: 1
Globalname: _deployData, contract_name: HybridPool
Ssa_name: _deployData_1, name: _deployData

Name: _deployData_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _deployData_1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _deployData, Num: 1
Globalname: _deployData, contract_name: HybridPool
Ssa_name: a_1, name: a

Name: a Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: a, Num: 1
Globalname: a, contract_name: HybridPool
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _token0, Num: 1
Globalname: _token0, contract_name: HybridPool
Ssa_name: _token1_1, name: _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _token1, Num: 1
Globalname: _token1, contract_name: HybridPool
Ssa_name: _swapFee_1, name: _swapFee

Name: _swapFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _swapFee, Num: 1
Globalname: _swapFee, contract_name: HybridPool
End popogation
TUPLE_0(address,address,uint256,uint256) = SOLIDITY_CALL abi.decode()(_deployData_1(address,address,uint256,uint256))
[i]Type for TUPLE_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_token0_1(address)= UNPACK TUPLE_0 index: 0 
Finding type for _token0(address ... )
prev address? u
Head Addr: -998
    Norm: 6
    Set: {-998}
    Fin: NULL
[i]Type for _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_token1_1(address)= UNPACK TUPLE_0 index: 1 
Finding type for _token1(address ... )
prev address? u
Head Addr: -997
    Norm: 18
    Set: {-997}
    Fin: NULL
[i]Type for _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_swapFee_1(uint256)= UNPACK TUPLE_0 index: 2 
Finding type for _swapFee(uint256 ... )
Value: u
[i]Type for _swapFee

Name: _swapFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
a_1(uint256)= UNPACK TUPLE_0 index: 3 
Finding type for a(uint256 ... )
Value: u
[i]Type for a

Name: a Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_32 cleared
[i] TMP_33 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_32 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_32

Name: TMP_32 Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_33(bool) = _token0_1 != TMP_32
[i]Type for TMP_33

Name: TMP_33 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_34(None) = SOLIDITY_CALL require(bool,string)(TMP_33,ZERO_ADDRESS)
[i]Type for TMP_34

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_35 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token1_1, name: _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token1_1, name: _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_35(bool) = _token0_1 != _token1_1
[i]Type for TMP_35

Name: TMP_35 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_36(None) = SOLIDITY_CALL require(bool,string)(TMP_35,IDENTICAL_ADDRESSES)
[i]Type for TMP_36

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_37 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _swapFee_1, name: _swapFee

Name: _swapFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _swapFee, Num: 1
Globalname: _swapFee, contract_name: HybridPool
Ssa_name: MAX_FEE_1, name: MAX_FEE

Name: MAX_FEE Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_1, name: MAX_FEE

Name: MAX_FEE Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _swapFee_1, name: _swapFee

Name: _swapFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _swapFee, Num: 1
Globalname: _swapFee, contract_name: HybridPool
End popogation
TMP_37(bool) = _swapFee_1 <= MAX_FEE_1
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_37

Name: TMP_37 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_38(None) = SOLIDITY_CALL require(bool,string)(TMP_37,INVALID_SWAP_FEE)
[i]Type for TMP_38

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_39 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: a, Num: 1
Globalname: a, contract_name: HybridPool
Ssa_name: a_1, name: a

Name: a Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: a, Num: 1
Globalname: a, contract_name: HybridPool
End popogation
TMP_39(bool) = a_1 != 0
[i]Type for TMP_39

Name: TMP_39 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_40(None) = SOLIDITY_CALL require(bool,string)(TMP_39,ZERO_A)
[i]Type for TMP_40

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
Ssa_name: decimals_2, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_22 (->None) := 3242907650(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_22

Name: REF_22 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3242907650
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_41(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_22)
[i]Type for TMP_41

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_41']  
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
decimals_2(uint8) := ϕ(['decimals_1', 'decimals_6'])
Phi
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_barFee_1(bytes)= UNPACK TUPLE_1 index: 1 
Finding type for _barFee(bytes ... )
[i]Type for _barFee

Name: _barFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _barFeeTo cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFeeTo_1, name: _barFeeTo

Name: _barFeeTo Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFeeTo, Num: 1
Globalname: _barFeeTo, contract_name: HybridPool
End popogation
Ssa_name: decimals_3, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_26 (->None) := 201985234(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_26

Name: REF_26 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 201985234
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_42(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_26)
[i]Type for TMP_42

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_42']  
[i]Type for TUPLE_2

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
decimals_3(uint8) := ϕ(['decimals_6', 'decimals_2'])
Phi
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_barFeeTo_1(bytes)= UNPACK TUPLE_2 index: 1 
Finding type for _barFeeTo(bytes ... )
[i]Type for _barFeeTo

Name: _barFeeTo Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _bento cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: _bento_1, name: _bento

Name: _bento Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _bento, Num: 1
Globalname: _bento, contract_name: HybridPool
End popogation
Ssa_name: decimals_4, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_30 (->None) := 1302534183(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_30

Name: REF_30 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1302534183
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_43(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_30)
[i]Type for TMP_43

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_3(bool,bytes) = LOW_LEVEL_CALL, dest:_masterDeployer_1, function:staticcall, arguments:['TMP_43']  
[i]Type for TUPLE_3

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
decimals_4(uint8) := ϕ(['decimals_3', 'decimals_6'])
Phi
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_bento_1(bytes)= UNPACK TUPLE_3 index: 1 
Finding type for _bento(bytes ... )
[i]Type for _bento

Name: _bento Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _decimals0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _decimals0_1, name: _decimals0

Name: _decimals0 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals0, Num: 1
Globalname: _decimals0, contract_name: HybridPool
End popogation
Ssa_name: decimals_5, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_44(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(826074471)
[i]Type for TMP_44

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_4(bool,bytes) = LOW_LEVEL_CALL, dest:_token0_1, function:staticcall, arguments:['TMP_44']  
[i]Type for TUPLE_4

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
decimals_5(uint8) := ϕ(['decimals_4', 'decimals_6'])
Phi
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals0_1(bytes)= UNPACK TUPLE_4 index: 1 
Finding type for _decimals0(bytes ... )
[i]Type for _decimals0

Name: _decimals0 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _decimals1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token1_1, name: _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token1_1, name: _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _decimals1_1, name: _decimals1

Name: _decimals1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals1, Num: 1
Globalname: _decimals1, contract_name: HybridPool
End popogation
Ssa_name: decimals_6, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_45(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(826074471)
[i]Type for TMP_45

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_5(bool,bytes) = LOW_LEVEL_CALL, dest:_token1_1, function:staticcall, arguments:['TMP_45']  
[i]Type for TUPLE_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
decimals_6(uint8) := ϕ(['decimals_5', 'decimals_6'])
Phi
[i]Type for decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_decimals1_1(bytes)= UNPACK TUPLE_5 index: 1 
Finding type for _decimals1(bytes ... )
[i]Type for _decimals1

Name: _decimals1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token0_1, name: _token0

Name: _token0 Function: constructor
Num: 
Den: 
Address: -998
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_1, name: token0

Name: token0 Function: constructor
Num: -1
Den: -1
Address: -998
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
End popogation
token0_1(address) := _token0_1(address)
asgn
Source address: -998
Finance type key: (-1, -1)
[i]Type for token0

Name: token0 Function: constructor
Num: -1
Den: -1
Address: -998
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
Copied token0
Propogating parameters and globals to SSA variables...
Ssa_name: _token1_1, name: _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token1_1, name: _token1

Name: _token1 Function: constructor
Num: 
Den: 
Address: -997
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_1, name: token1

Name: token1 Function: constructor
Num: -1
Den: -1
Address: -997
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
End popogation
token1_1(address) := _token1_1(address)
asgn
Source address: -997
Finance type key: (-1, -1)
[i]Type for token1

Name: token1 Function: constructor
Num: -1
Den: -1
Address: -997
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
Copied token1
Propogating parameters and globals to SSA variables...
Ssa_name: _swapFee_1, name: _swapFee

Name: _swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _swapFee_1, name: _swapFee

Name: _swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_1, name: swapFee

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
swapFee_1(uint256) := _swapFee_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for swapFee

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied swapFee
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
Ssa_name: barFee_1, name: barFee

Name: barFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_46(uint256) = SOLIDITY_CALL abi.decode()(_barFee_1,uint256)
[i]Type for TMP_46

Name: TMP_46 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_1(uint256) := TMP_46(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for barFee

Name: barFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Copied barFee
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _barFeeTo_1, name: _barFeeTo

Name: _barFeeTo Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFeeTo, Num: 1
Globalname: _barFeeTo, contract_name: HybridPool
Ssa_name: _barFeeTo_1, name: _barFeeTo

Name: _barFeeTo Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFeeTo, Num: 1
Globalname: _barFeeTo, contract_name: HybridPool
Ssa_name: barFeeTo_1, name: barFeeTo

Name: barFeeTo Function: constructor
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_47(address) = SOLIDITY_CALL abi.decode()(_barFeeTo_1,address)
[i]Type for TMP_47

Name: TMP_47 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_1(address) := TMP_47(address)
asgn
Finance type key: (-1, -1)
[i]Type for barFeeTo

Name: barFeeTo Function: constructor
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
Copied barFeeTo
Propogating parameters and globals to SSA variables...
Ssa_name: _bento_1, name: _bento

Name: _bento Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _bento, Num: 1
Globalname: _bento, contract_name: HybridPool
Ssa_name: _bento_1, name: _bento

Name: _bento Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _bento, Num: 1
Globalname: _bento, contract_name: HybridPool
Ssa_name: bento_1, name: bento

Name: bento Function: constructor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_48(address) = SOLIDITY_CALL abi.decode()(_bento_1,address)
[i]Type for TMP_48

Name: TMP_48 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_1(address) := TMP_48(address)
asgn
Finance type key: (-1, -1)
[i]Type for bento

Name: bento Function: constructor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Copied bento
Propogating parameters and globals to SSA variables...
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: _masterDeployer_1, name: _masterDeployer

Name: _masterDeployer_1 Function: constructor
Num: 
Den: 
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
Ssa_name: masterDeployer_1, name: masterDeployer

Name: masterDeployer Function: constructor
Num: -1
Den: -1
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
End popogation
masterDeployer_1(address) := _masterDeployer_1(address)
asgn
Source address: -999
Finance type key: (-1, -1)
[i]Type for masterDeployer

Name: masterDeployer Function: constructor
Num: -1
Den: -1
Address: -999
Norm: 0
LF: _masterDeployer
Value: u
Fields: 
Finance Type: undef
XXXX
Copied masterDeployer
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: a, Num: 1
Globalname: a, contract_name: HybridPool
Ssa_name: a_1, name: a

Name: a Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: a, Num: 1
Globalname: a, contract_name: HybridPool
Ssa_name: A_1, name: A

Name: A Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
A_1(uint256) := a_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for A

Name: A Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_49 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: a_1, name: a

Name: a Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: a, Num: 1
Globalname: a, contract_name: HybridPool
Ssa_name: a_1, name: a

Name: a Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: a, Num: 1
Globalname: a, contract_name: HybridPool
Ssa_name: N_A_1, name: N_A

Name: N_A Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
TMP_49(uint256) = 2 (c)* a_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_49

Name: TMP_49 Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
N_A_1(uint256) := TMP_49(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for N_A

Name: N_A Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Copied N_A
Source address: u
[i] TMP_51 cleared
[i] TMP_52 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _decimals0_1, name: _decimals0

Name: _decimals0 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals0, Num: 1
Globalname: _decimals0, contract_name: HybridPool
Ssa_name: decimals_6, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _decimals0_1, name: _decimals0

Name: _decimals0 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals0, Num: 1
Globalname: _decimals0, contract_name: HybridPool
Ssa_name: decimals_6, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_1, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
End popogation
TMP_50(uint8) = SOLIDITY_CALL abi.decode()(_decimals0_1,uint8)
[i]Type for TMP_50

Name: TMP_50 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_51(uint8) = decimals_6 (c)- TMP_50
Source address: u
[i]Type for TMP_51

Name: TMP_51 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_52(uint256) = 10 (c)** TMP_51
[i]Type for TMP_52

Name: TMP_52 Function: constructor
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_1(uint256) := TMP_52(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Copied token0PrecisionMultiplier
Source address: u
[i] TMP_54 cleared
[i] TMP_55 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _decimals1_1, name: _decimals1

Name: _decimals1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals1, Num: 1
Globalname: _decimals1, contract_name: HybridPool
Ssa_name: decimals_6, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _decimals1_1, name: _decimals1

Name: _decimals1 Function: constructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _decimals1, Num: 1
Globalname: _decimals1, contract_name: HybridPool
Ssa_name: decimals_6, name: decimals

Name: decimals Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_1, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
End popogation
TMP_53(uint8) = SOLIDITY_CALL abi.decode()(_decimals1_1,uint8)
[i]Type for TMP_53

Name: TMP_53 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_54(uint8) = decimals_6 (c)- TMP_53
Source address: u
[i]Type for TMP_54

Name: TMP_54 Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_55(uint256) = 10 (c)** TMP_54
[i]Type for TMP_55

Name: TMP_55 Function: constructor
Num: 
Den: 
Address: u
Norm: *
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_1(uint256) := TMP_55(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Copied token1PrecisionMultiplier
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: unlocked_1, name: unlocked

Name: unlocked Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
unlocked_1(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for unlocked

Name: unlocked Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Copied unlocked
Source address: u
Reading Function: mint
Checking funcion...



mint
Function name: mint
Finding type for data(bytes ... )
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
mint(bytes)


totalSupply_5(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
MINIMUM_LIQUIDITY_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'MINIMUM_LIQUIDITY_7', 'MINIMUM_LIQUIDITY_0'])
MODIFIER_CALL, HybridPool.lock()()
TMP_56(address) = SOLIDITY_CALL abi.decode()(data_1,address)
recipient_1(address) := TMP_56(address)
TUPLE_6(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
_reserve0_1(uint256)= UNPACK TUPLE_6 index: 0 
_reserve1_1(uint256)= UNPACK TUPLE_6 index: 1 
TUPLE_7(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
balance0_1(uint256)= UNPACK TUPLE_7 index: 0 
balance1_1(uint256)= UNPACK TUPLE_7 index: 1 
_totalSupply_1(uint256) := totalSupply_8(uint256)
TMP_57(uint256) = balance0_1 (c)- _reserve0_1
amount0_1(uint256) := TMP_57(uint256)
TMP_58(uint256) = balance1_1 (c)- _reserve1_1
amount1_1(uint256) := TMP_58(uint256)
TUPLE_8(uint256,uint256) = INTERNAL_CALL, HybridPool._nonOptimalMintFee(uint256,uint256,uint256,uint256)(amount0_1,amount1_1,_reserve0_1,_reserve1_1)
fee0_1(uint256)= UNPACK TUPLE_8 index: 0 
fee1_1(uint256)= UNPACK TUPLE_8 index: 1 
TMP_59(uint256) = balance0_1 (c)- fee0_1
TMP_60(uint256) = balance1_1 (c)- fee1_1
TMP_61(uint256) = INTERNAL_CALL, HybridPool._computeLiquidity(uint256,uint256)(TMP_59,TMP_60)
newLiq_1(uint256) := TMP_61(uint256)
TMP_62(bool) = _totalSupply_1 == 0
CONDITION TMP_62
TMP_63(uint256) = newLiq_1 (c)- MINIMUM_LIQUIDITY_6
liquidity_1(uint256) := TMP_63(uint256)
TMP_64 = CONVERT 0 to address
INTERNAL_CALL, TridentERC20._mint(address,uint256)(TMP_64,MINIMUM_LIQUIDITY_6)
TMP_66(uint256) = INTERNAL_CALL, HybridPool._computeLiquidity(uint256,uint256)(_reserve0_1,_reserve1_1)
oldLiq_1(uint256) := TMP_66(uint256)
TMP_67(uint256) = newLiq_1 (c)- oldLiq_1
TMP_68(uint256) = TMP_67 (c)* _totalSupply_1
TMP_69(uint256) = TMP_68 (c)/ oldLiq_1
liquidity_2(uint256) := TMP_69(uint256)
liquidity_3(uint256) := ϕ(['liquidity_1', 'liquidity_2'])
TMP_70(bool) = liquidity_3 != 0
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,INSUFFICIENT_LIQUIDITY_MINTED)
INTERNAL_CALL, TridentERC20._mint(address,uint256)(recipient_1,liquidity_3)
INTERNAL_CALL, HybridPool._updateReserves()()
Emit Mint(msg.sender,amount0_1,amount1_1,recipient_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: totalSupply_5, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 5
Globalname: totalSupply, contract_name: HybridPool
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u
Ssa_name: MINIMUM_LIQUIDITY_1, name: MINIMUM_LIQUIDITY

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MINIMUM_LIQUIDITY, Num: 1
Globalname: MINIMUM_LIQUIDITY, contract_name: HybridPool
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
totalSupply_5(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
MINIMUM_LIQUIDITY_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'MINIMUM_LIQUIDITY_7', 'MINIMUM_LIQUIDITY_0'])
Phi
[i]Type for MINIMUM_LIQUIDITY

Name: MINIMUM_LIQUIDITY Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, HybridPool.lock()()
New param cache []
FIND RETURN
ENTRY_POINT
lock()
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: unlocked_2, name: unlocked

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unlocked, Num: 2
Globalname: unlocked, contract_name: HybridPool
global...

Name: unlocked Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
unlocked_2(uint256) := ϕ(['unlocked_1', 'unlocked_4', 'unlocked_0'])
Phi
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] TMP_305 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: unlocked_2, name: unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: unlocked_2, name: unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
TMP_305(bool) = unlocked_2 == 1
[i]Type for TMP_305

Name: TMP_305 Function: lock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_306(None) = SOLIDITY_CALL require(bool,string)(TMP_305,LOCKED)
[i]Type for TMP_306

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unlocked_3, name: unlocked

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unlocked, Num: 3
Globalname: unlocked, contract_name: HybridPool
global...

Name: unlocked Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Source address: u
End popogation
unlocked_3(uint256) := 2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Copied unlocked
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: unlocked_4, name: unlocked

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unlocked, Num: 4
Globalname: unlocked, contract_name: HybridPool
global...

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
End popogation
unlocked_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Copied unlocked
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: unlocked_2, name: unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
unlocked_2(uint256) := ϕ(['unlocked_1', 'unlocked_4', 'unlocked_0'])
Phi
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] TMP_305 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: unlocked_2, name: unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: unlocked_2, name: unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
TMP_305(bool) = unlocked_2 == 1
[i]Type for TMP_305

Name: TMP_305 Function: lock
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_306(None) = SOLIDITY_CALL require(bool,string)(TMP_305,LOCKED)
[i]Type for TMP_306

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unlocked_3, name: unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
unlocked_3(uint256) := 2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Copied unlocked
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: unlocked_4, name: unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
unlocked_4(uint256) := 1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for unlocked

Name: unlocked Function: lock
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Copied unlocked
Source address: u
[i] recipient cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
End popogation
TMP_56(address) = SOLIDITY_CALL abi.decode()(data_1,address)
[i]Type for TMP_56

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
recipient_1(address) := TMP_56(address)
asgn
Finance type key: (-1, -1)
[i]Type for recipient

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
End popogation
TUPLE_6(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
New param cache []
FIND RETURN
ENTRY_POINT
_getReserves()
Propogating All
Propogating All
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_2
Ssa_name: _reserve0_2, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve1_2
Ssa_name: _reserve1_2, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0_38, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 38
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token1_38, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 38
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: reserve0_1, name: reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve0, Num: 1
Globalname: reserve0, contract_name: HybridPool
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
Ssa_name: reserve1_1, name: reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve1, Num: 1
Globalname: reserve1, contract_name: HybridPool
global...

Name: PIC_22 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
token0_38(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: _getReserves
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_38(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
Phi
[i]Type for token1

Name: token1 Function: _getReserves
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
reserve0_1(uint128) := ϕ(['reserve0_0', 'reserve0_2'])
Phi
[i]Type for reserve0

Name: reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
reserve1_1(uint128) := ϕ(['reserve1_2', 'reserve1_0'])
Phi
[i]Type for reserve1

Name: reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserve0_1, name: reserve0

Name: reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserve1_1, name: reserve1

Name: reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserve0_1, name: reserve0

Name: reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserve1_1, name: reserve1

Name: reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
End popogation
_reserve0_1(uint256) := reserve0_1(uint128)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserve1_1(uint256) := reserve1_1(uint128)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_171 cleared
[i] _reserve0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token0_38, name: token0

Name: token0 Function: _getReserves
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_38, name: token0

Name: token0 Function: _getReserves
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserve0_2, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve0, Num: 2
Globalname: _reserve0, contract_name: HybridPool
End popogation
TMP_171(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_38,_reserve0_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
new address made for this
prev address? u
global assignment: 9
9
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: -1
Den: -1
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_171

Name: TMP_171 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve0_2(uint256) := TMP_171(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_172 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token1_39, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 39
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: token1_39, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserve1_2, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve1, Num: 2
Globalname: _reserve1, contract_name: HybridPool
End popogation
TMP_172(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_39,_reserve1_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_172

Name: TMP_172 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_2(uint256) := TMP_172(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_2, name: _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_2, name: _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_2, name: _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_2, name: _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN _reserve0_2,_reserve1_2
RETURN

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0_38, name: token0

Name: token0 Function: _getReserves
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_38, name: token1

Name: token1 Function: _getReserves
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: reserve0_1, name: reserve0

Name: reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserve1_1, name: reserve1

Name: reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
token0_38(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: _getReserves
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_38(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
Phi
[i]Type for token1

Name: token1 Function: _getReserves
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
reserve0_1(uint128) := ϕ(['reserve0_0', 'reserve0_2'])
Phi
[i]Type for reserve0

Name: reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
reserve1_1(uint128) := ϕ(['reserve1_2', 'reserve1_0'])
Phi
[i]Type for reserve1

Name: reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: reserve0_1, name: reserve0

Name: reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserve1_1, name: reserve1

Name: reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserve0_1, name: reserve0

Name: reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: reserve1_1, name: reserve1

Name: reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
End popogation
_reserve0_1(uint256) := reserve0_1(uint128)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
_reserve1_1(uint256) := reserve1_1(uint128)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_171 cleared
[i] _reserve0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token0_38, name: token0

Name: token0 Function: _getReserves
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_38, name: token0

Name: token0 Function: _getReserves
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserve0_2, name: _reserve0

Name: _reserve0 Function: _getReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve0, Num: 2
Globalname: _reserve0, contract_name: HybridPool
End popogation
TMP_171(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_38,_reserve0_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
Source address: u
[i]Type for TMP_171

Name: TMP_171 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve0_2(uint256) := TMP_171(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_172 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token1_39, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_39, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _reserve1_2, name: _reserve1

Name: _reserve1 Function: _getReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve1, Num: 2
Globalname: _reserve1, contract_name: HybridPool
End popogation
TMP_172(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_39,_reserve1_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_172

Name: TMP_172 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_2(uint256) := TMP_172(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_2, name: _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_2, name: _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_2, name: _reserve0

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_2, name: _reserve1

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN _reserve0_2,_reserve1_2
RETURN

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i]Type for TUPLE_6

Name: TUPLE_6 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256)= UNPACK TUPLE_6 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256)= UNPACK TUPLE_6 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] balance0 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance0, Num: 1
Globalname: balance0, contract_name: HybridPool
Ssa_name: balance1_1, name: balance1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance1, Num: 1
Globalname: balance1, contract_name: HybridPool
End popogation
TUPLE_7(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
New param cache []
FIND RETURN
ENTRY_POINT
_balance()
Propogating All
Propogating All
Propogating All
Propogating All
balance1_1
Ssa_name: balance1_1, name: balance1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
balance0_1
Ssa_name: balance0_1, name: balance0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0_40, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 40
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token1_41, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 41
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
token0_40(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_41(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
Phi
[i]Type for token1

Name: token1 Function: _balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_184 cleared
[i] TMP_185 cleared
[i] balance0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_41, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 41
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token0_40, name: token0

Name: token0 Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_41, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_40, name: token0

Name: token0 Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance0, Num: 1
Globalname: balance0, contract_name: HybridPool
End popogation
TMP_184(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token0_40)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
__balance(address)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
___balance_1
Ssa_name: ___balance_1, name: ___balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_2, name: bento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: bento, Num: 2
Globalname: bento, contract_name: HybridPool
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Source address: 1
token_1(address) := ϕ(['token1_43', 'token1_35', 'token0_32', 'token0_40'])
Phi
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
bento_2(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_188 cleared
[i] ___balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: ___balance_1, name: ___balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
End popogation
Ssa_name: bento_3, name: bento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: bento, Num: 3
Globalname: bento, contract_name: HybridPool
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Source address: 1
REF_59 (->None) := 4152920812(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_188 = CONVERT this to address
Converting this
9
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_3(address) := ϕ(['bento_1', 'bento_2', 'bento_7', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
Finding type for ___balance(bytes ... )
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: balance_1, name: balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance, Num: 1
Globalname: balance, contract_name: HybridPool
End popogation
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance_1(uint256) := TMP_190(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token1_35', 'token0_32', 'token0_40'])
Phi
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
bento_2(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_188 cleared
[i] ___balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
End popogation
Ssa_name: bento_3, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_188 = CONVERT this to address
Converting this
9
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_3(address) := ϕ(['bento_1', 'bento_2', 'bento_7', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
Finding type for ___balance(bytes ... )
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: balance_1, name: balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance, Num: 1
Globalname: balance, contract_name: HybridPool
End popogation
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance_1(uint256) := TMP_190(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_184

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_185(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_41,TMP_184)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_185

Name: TMP_185 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance0_1(uint256) := TMP_185(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for balance0

Name: balance0 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_186 cleared
[i] TMP_187 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_43, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 43
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: token1_44, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 44
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: token1_43, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_44, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance1, Num: 1
Globalname: balance1, contract_name: HybridPool
End popogation
TMP_186(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token1_43)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2]]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
__balance(address)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
___balance_1
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token1_35', 'token0_32', 'token0_40'])
Phi
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
bento_2(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_188 cleared
[i] ___balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
End popogation
Ssa_name: bento_3, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_188 = CONVERT this to address
Converting this
9
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_3(address) := ϕ(['bento_1', 'bento_2', 'bento_7', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
Finding type for ___balance(bytes ... )
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: balance_1, name: balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance, Num: 1
Globalname: balance, contract_name: HybridPool
End popogation
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance_1(uint256) := TMP_190(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token1_35', 'token0_32', 'token0_40'])
Phi
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
bento_2(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_188 cleared
[i] ___balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
End popogation
Ssa_name: bento_3, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_188 = CONVERT this to address
Converting this
9
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_3(address) := ϕ(['bento_1', 'bento_2', 'bento_7', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
Finding type for ___balance(bytes ... )
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: balance_1, name: balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance, Num: 1
Globalname: balance, contract_name: HybridPool
End popogation
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance_1(uint256) := TMP_190(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_186

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_187(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_44,TMP_186)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_187

Name: TMP_187 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance1_1(uint256) := TMP_187(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for balance1

Name: balance1 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN balance0_1,balance1_1
RETURN

Name: balance0 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: balance1 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0_40, name: token0

Name: token0 Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_41, name: token1

Name: token1 Function: _balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
token0_40(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_41(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
Phi
[i]Type for token1

Name: token1 Function: _balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_184 cleared
[i] TMP_185 cleared
[i] balance0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_41, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_40, name: token0

Name: token0 Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_41, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_40, name: token0

Name: token0 Function: _balance
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: balance0, Num: 1
Globalname: balance0, contract_name: HybridPool
End popogation
TMP_184(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token0_40)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2]]
[i]Type for TMP_184

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_185(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_41,TMP_184)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_185

Name: TMP_185 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance0_1(uint256) := TMP_185(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for balance0

Name: balance0 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_186 cleared
[i] TMP_187 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_43, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_44, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_43, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_44, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: balance1, Num: 1
Globalname: balance1, contract_name: HybridPool
End popogation
TMP_186(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token1_43)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2]]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
__balance(address)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
___balance_1
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token1_35', 'token0_32', 'token0_40'])
Phi
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
bento_2(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_188 cleared
[i] ___balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
End popogation
Ssa_name: bento_3, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_188 = CONVERT this to address
Converting this
9
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_3(address) := ϕ(['bento_1', 'bento_2', 'bento_7', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
Finding type for ___balance(bytes ... )
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: balance_1, name: balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance, Num: 1
Globalname: balance, contract_name: HybridPool
End popogation
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance_1(uint256) := TMP_190(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token1_35', 'token0_32', 'token0_40'])
Phi
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
bento_2(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_188 cleared
[i] ___balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
End popogation
Ssa_name: bento_3, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_188 = CONVERT this to address
Converting this
9
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_3(address) := ϕ(['bento_1', 'bento_2', 'bento_7', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
Finding type for ___balance(bytes ... )
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: balance_1, name: balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance, Num: 1
Globalname: balance, contract_name: HybridPool
End popogation
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance_1(uint256) := TMP_190(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_186

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_187(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_44,TMP_186)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_187

Name: TMP_187 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance1_1(uint256) := TMP_187(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for balance1

Name: balance1 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN balance0_1,balance1_1
RETURN

Name: balance0 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: balance1 Function: _balance
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i]Type for TUPLE_7

Name: TUPLE_7 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance0_1(uint256)= UNPACK TUPLE_7 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance0

Name: balance0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance1_1(uint256)= UNPACK TUPLE_7 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance1

Name: balance1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalSupply_8, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 8
Globalname: totalSupply, contract_name: HybridPool
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u
Ssa_name: totalSupply_8, name: totalSupply

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _totalSupply_1, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 1
Globalname: _totalSupply, contract_name: HybridPool
End popogation
_totalSupply_1(uint256) := totalSupply_8(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_57 cleared
[i] amount0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount0, Num: 1
Globalname: amount0, contract_name: HybridPool
End popogation
TMP_57(uint256) = balance0_1 (c)- _reserve0_1
Source address: u
[i]Type for TMP_57

Name: TMP_57 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount0_1(uint256) := TMP_57(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amount0

Name: amount0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_58 cleared
[i] amount1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount1, Num: 1
Globalname: amount1, contract_name: HybridPool
End popogation
TMP_58(uint256) = balance1_1 (c)- _reserve1_1
Source address: u
[i]Type for TMP_58

Name: TMP_58 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount1_1(uint256) := TMP_58(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amount1

Name: amount1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] fee0 cleared
[i] fee1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee0_1, name: fee0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee0, Num: 1
Globalname: fee0, contract_name: HybridPool
Ssa_name: fee1_1, name: fee1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee1, Num: 1
Globalname: fee1, contract_name: HybridPool
End popogation
TUPLE_8(uint256,uint256) = INTERNAL_CALL, HybridPool._nonOptimalMintFee(uint256,uint256,uint256,uint256)(amount0_1,amount1_1,_reserve0_1,_reserve1_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"]]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _amount0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _amount1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_nonOptimalMintFee(uint256,uint256,uint256,uint256)
Propogating All
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
_amount0_1
Ssa_name: _amount0_1, name: _amount0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount0_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount1Optimal_1
Ssa_name: amount1Optimal_1, name: amount1Optimal

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount1_1
Ssa_name: _amount1_1, name: _amount1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
_amount1_1
Ssa_name: _amount1_1, name: _amount1

Name: _amount1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount1Optimal_1
Ssa_name: amount1Optimal_1, name: amount1Optimal

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount1_1
Ssa_name: _amount1_1, name: _amount1

Name: _amount1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_amount0_1
Ssa_name: _amount0_1, name: _amount0

Name: _amount0_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount0_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount0Optimal_1
Ssa_name: amount0Optimal_1, name: amount0Optimal

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token0Fee_2
Ssa_name: token0Fee_2, name: token0Fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token1Fee_2
Ssa_name: token1Fee_2, name: token1Fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] _amount0 cleared
[i] _amount1 cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _amount0_1, name: _amount0

Name: _amount0_1 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount0_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _amount1_1, name: _amount1

Name: _amount1_1 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_FEE_8, name: MAX_FEE

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_FEE, Num: 8
Globalname: MAX_FEE, contract_name: HybridPool
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: swapFee_8, name: swapFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: swapFee, Num: 8
Globalname: swapFee, contract_name: HybridPool
global...

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_amount0_1(uint256) := ϕ(['amount0_1'])
Phi
[i]Type for _amount0

Name: _amount0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount1_1(uint256) := ϕ(['amount1_1'])
Phi
[i]Type for _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
MAX_FEE_8(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_8(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_279 cleared
[i] TMP_280 cleared
[i] TMP_281 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_279(bool) = _reserve0_1 == 0
[i]Type for TMP_279

Name: TMP_279 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_280(bool) = _reserve1_1 == 0
[i]Type for TMP_280

Name: TMP_280 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_281(bool) = TMP_279 || TMP_280
[i]Type for TMP_281

Name: TMP_281 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_282 cleared
[i] TMP_283 cleared
[i] amount1Optimal cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount0_1, name: _amount0

Name: _amount0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _amount0_1, name: _amount0

Name: _amount0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1Optimal_1, name: amount1Optimal

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount1Optimal, Num: 1
Globalname: amount1Optimal, contract_name: HybridPool
End popogation
TMP_282(uint256) = _amount0_1 (c)* _reserve1_1
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_282

Name: TMP_282 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_283(uint256) = TMP_282 (c)/ _reserve0_1
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_283

Name: TMP_283 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount1Optimal_1(uint256) := TMP_283(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amount1Optimal

Name: amount1Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_284 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1Optimal_1, name: amount1Optimal

Name: amount1Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount1_1, name: _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1Optimal_1, name: amount1Optimal

Name: amount1Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount1_1, name: _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_284(bool) = amount1Optimal_1 <= _amount1_1
lnorm: 0 rnorm: u
[i]Type for TMP_284

Name: TMP_284 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_289 cleared
[i] TMP_290 cleared
[i] amount0Optimal cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _amount1_1, name: _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _amount1_1, name: _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0Optimal_1, name: amount0Optimal

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount0Optimal, Num: 1
Globalname: amount0Optimal, contract_name: HybridPool
End popogation
TMP_289(uint256) = _amount1_1 (c)* _reserve0_1
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_289

Name: TMP_289 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_290(uint256) = TMP_289 (c)/ _reserve1_1
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_290

Name: TMP_290 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount0Optimal_1(uint256) := TMP_290(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amount0Optimal

Name: amount0Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_285 cleared
[i] TMP_286 cleared
[i] TMP_287 cleared
[i] TMP_288 cleared
[i] token1Fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1Optimal_1, name: amount1Optimal

Name: amount1Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount1_1, name: _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_8, name: swapFee

Name: swapFee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_8, name: MAX_FEE

Name: MAX_FEE Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1Optimal_1, name: amount1Optimal

Name: amount1Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_8, name: swapFee

Name: swapFee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount1_1, name: _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_8, name: MAX_FEE

Name: MAX_FEE Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1Fee_1, name: token1Fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1Fee, Num: 1
Globalname: token1Fee, contract_name: HybridPool
End popogation
TMP_285(uint256) = _amount1_1 (c)- amount1Optimal_1
Source address: u
[i]Type for TMP_285

Name: TMP_285 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_286(uint256) = swapFee_8 (c)* TMP_285
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_286

Name: TMP_286 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_287(uint256) = 2 (c)* MAX_FEE_8
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_287

Name: TMP_287 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_288(uint256) = TMP_286 (c)/ TMP_287
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_288

Name: TMP_288 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
token1Fee_1(uint256) := TMP_288(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_291 cleared
[i] TMP_292 cleared
[i] TMP_293 cleared
[i] TMP_294 cleared
[i] token0Fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount0_1, name: _amount0

Name: _amount0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0Optimal_1, name: amount0Optimal

Name: amount0Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_8, name: swapFee

Name: swapFee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_8, name: MAX_FEE

Name: MAX_FEE Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount0_1, name: _amount0

Name: _amount0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_8, name: swapFee

Name: swapFee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0Optimal_1, name: amount0Optimal

Name: amount0Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_8, name: MAX_FEE

Name: MAX_FEE Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0Fee_1, name: token0Fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0Fee, Num: 1
Globalname: token0Fee, contract_name: HybridPool
End popogation
TMP_291(uint256) = _amount0_1 (c)- amount0Optimal_1
Source address: u
[i]Type for TMP_291

Name: TMP_291 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_292(uint256) = swapFee_8 (c)* TMP_291
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_292

Name: TMP_292 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_293(uint256) = 2 (c)* MAX_FEE_8
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_293

Name: TMP_293 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_294(uint256) = TMP_292 (c)/ TMP_293
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_294

Name: TMP_294 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
token0Fee_1(uint256) := TMP_294(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] token0Fee cleared
[i] token1Fee cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0Fee_2, name: token0Fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0Fee, Num: 2
Globalname: token0Fee, contract_name: HybridPool
Ssa_name: token1Fee_2, name: token1Fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1Fee, Num: 2
Globalname: token1Fee, contract_name: HybridPool
token0Fee_2(uint256) := ϕ(['token0Fee_0', 'token0Fee_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
token1Fee_2(uint256) := ϕ(['token1Fee_0', 'token1Fee_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0Fee_2, name: token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: token1Fee_2, name: token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: token0Fee_2, name: token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: token1Fee_2, name: token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN token0Fee_2,token1Fee_2
RETURN

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0,0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i] _amount0 cleared
[i] _amount1 cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _amount0_1, name: _amount0

Name: _amount0 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount0_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _amount1_1, name: _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_FEE_8, name: MAX_FEE

Name: MAX_FEE Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_8, name: swapFee

Name: swapFee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount0_1(uint256) := ϕ(['amount0_1'])
Phi
[i]Type for _amount0

Name: _amount0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_amount1_1(uint256) := ϕ(['amount1_1'])
Phi
[i]Type for _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
MAX_FEE_8(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_8(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_279 cleared
[i] TMP_280 cleared
[i] TMP_281 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_279(bool) = _reserve0_1 == 0
[i]Type for TMP_279

Name: TMP_279 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_280(bool) = _reserve1_1 == 0
[i]Type for TMP_280

Name: TMP_280 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_281(bool) = TMP_279 || TMP_280
[i]Type for TMP_281

Name: TMP_281 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_282 cleared
[i] TMP_283 cleared
[i] amount1Optimal cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount0_1, name: _amount0

Name: _amount0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _amount0_1, name: _amount0

Name: _amount0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1Optimal_1, name: amount1Optimal

Name: amount1Optimal Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount1Optimal, Num: 1
Globalname: amount1Optimal, contract_name: HybridPool
End popogation
TMP_282(uint256) = _amount0_1 (c)* _reserve1_1
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_282

Name: TMP_282 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_283(uint256) = TMP_282 (c)/ _reserve0_1
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_283

Name: TMP_283 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount1Optimal_1(uint256) := TMP_283(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amount1Optimal

Name: amount1Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_284 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1Optimal_1, name: amount1Optimal

Name: amount1Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount1_1, name: _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1Optimal_1, name: amount1Optimal

Name: amount1Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount1_1, name: _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_284(bool) = amount1Optimal_1 <= _amount1_1
lnorm: 0 rnorm: u
[i]Type for TMP_284

Name: TMP_284 Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_289 cleared
[i] TMP_290 cleared
[i] amount0Optimal cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _amount1_1, name: _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _amount1_1, name: _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0Optimal_1, name: amount0Optimal

Name: amount0Optimal Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount0Optimal, Num: 1
Globalname: amount0Optimal, contract_name: HybridPool
End popogation
TMP_289(uint256) = _amount1_1 (c)* _reserve0_1
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_289

Name: TMP_289 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_290(uint256) = TMP_289 (c)/ _reserve1_1
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_290

Name: TMP_290 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount0Optimal_1(uint256) := TMP_290(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amount0Optimal

Name: amount0Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_285 cleared
[i] TMP_286 cleared
[i] TMP_287 cleared
[i] TMP_288 cleared
[i] token1Fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1Optimal_1, name: amount1Optimal

Name: amount1Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount1_1, name: _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_8, name: swapFee

Name: swapFee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_8, name: MAX_FEE

Name: MAX_FEE Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1Optimal_1, name: amount1Optimal

Name: amount1Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_8, name: swapFee

Name: swapFee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount1_1, name: _amount1

Name: _amount1 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_8, name: MAX_FEE

Name: MAX_FEE Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1Fee_1, name: token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: token1Fee, Num: 1
Globalname: token1Fee, contract_name: HybridPool
End popogation
TMP_285(uint256) = _amount1_1 (c)- amount1Optimal_1
Source address: u
[i]Type for TMP_285

Name: TMP_285 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_286(uint256) = swapFee_8 (c)* TMP_285
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_286

Name: TMP_286 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_287(uint256) = 2 (c)* MAX_FEE_8
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_287

Name: TMP_287 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_288(uint256) = TMP_286 (c)/ TMP_287
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_288

Name: TMP_288 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
token1Fee_1(uint256) := TMP_288(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] TMP_291 cleared
[i] TMP_292 cleared
[i] TMP_293 cleared
[i] TMP_294 cleared
[i] token0Fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount0_1, name: _amount0

Name: _amount0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0Optimal_1, name: amount0Optimal

Name: amount0Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_8, name: swapFee

Name: swapFee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_8, name: MAX_FEE

Name: MAX_FEE Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount0_1, name: _amount0

Name: _amount0 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_8, name: swapFee

Name: swapFee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0Optimal_1, name: amount0Optimal

Name: amount0Optimal Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_8, name: MAX_FEE

Name: MAX_FEE Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0Fee_1, name: token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: token0Fee, Num: 1
Globalname: token0Fee, contract_name: HybridPool
End popogation
TMP_291(uint256) = _amount0_1 (c)- amount0Optimal_1
Source address: u
[i]Type for TMP_291

Name: TMP_291 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_292(uint256) = swapFee_8 (c)* TMP_291
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_292

Name: TMP_292 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_293(uint256) = 2 (c)* MAX_FEE_8
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_293

Name: TMP_293 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_294(uint256) = TMP_292 (c)/ TMP_293
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_294

Name: TMP_294 Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
token0Fee_1(uint256) := TMP_294(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
[i] token0Fee cleared
[i] token1Fee cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0Fee_2, name: token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: token0Fee, Num: 2
Globalname: token0Fee, contract_name: HybridPool
Ssa_name: token1Fee_2, name: token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: token1Fee, Num: 2
Globalname: token1Fee, contract_name: HybridPool
token0Fee_2(uint256) := ϕ(['token0Fee_0', 'token0Fee_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
token1Fee_2(uint256) := ϕ(['token1Fee_0', 'token1Fee_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0Fee_2, name: token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: token1Fee_2, name: token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: token0Fee_2, name: token0Fee

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: token1Fee_2, name: token1Fee

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
End popogation
RETURN token0Fee_2,token1Fee_2
RETURN

Name: token0Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: token1Fee Function: _nonOptimalMintFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0,0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TUPLE_8

Name: TUPLE_8 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee0_1(uint256)= UNPACK TUPLE_8 index: 0 
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for fee0

Name: fee0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee1_1(uint256)= UNPACK TUPLE_8 index: 1 
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for fee1

Name: fee1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_59 cleared
[i] TMP_60 cleared
[i] TMP_61 cleared
[i] newLiq cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee0_1, name: fee0

Name: fee0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee1_1, name: fee1

Name: fee1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee0_1, name: fee0

Name: fee0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee1_1, name: fee1

Name: fee1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: newLiq_1, name: newLiq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newLiq, Num: 1
Globalname: newLiq, contract_name: HybridPool
End popogation
TMP_59(uint256) = balance0_1 (c)- fee0_1
Source address: u
[i]Type for TMP_59

Name: TMP_59 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_60(uint256) = balance1_1 (c)- fee1_1
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(uint256) = INTERNAL_CALL, HybridPool._computeLiquidity(uint256,uint256)(TMP_59,TMP_60)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_computeLiquidity(uint256,uint256)
Propogating All
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
xp0_1
Ssa_name: xp0_1, name: xp0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp1_1
Ssa_name: xp1_1, name: xp1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0PrecisionMultiplier, Num: 5
Globalname: token0PrecisionMultiplier, contract_name: HybridPool
global...

Name: token0PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1PrecisionMultiplier, Num: 5
Globalname: token1PrecisionMultiplier, contract_name: HybridPool
global...

Name: token1PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u
_reserve0_1(uint256) := ϕ(['TMP_59', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['TMP_60', '_reserve1_1'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_5(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_5(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_212 cleared
[i] xp0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: xp0, Num: 1
Globalname: xp0, contract_name: HybridPool
End popogation
TMP_212(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_5
lnorm: u rnorm: 1
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp0_1(uint256) := TMP_212(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_213 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: xp1, Num: 1
Globalname: xp1, contract_name: HybridPool
End popogation
TMP_213(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_5
lnorm: u rnorm: 1
Source address: u
[i]Type for TMP_213

Name: TMP_213 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp1_1(uint256) := TMP_213(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_214 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_214(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xp0_1,xp1_1)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
[[-1], [-1], 1, None, [], -1, 'u', 10]

Name: xp0 Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
[[-1], [-1], 1, None, [], -1, 'u', 10]

Name: xp1 Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_computeLiquidityFromAdjustedBalances(uint256,uint256)
Propogating All
Propogating All
xp1_1
Ssa_name: xp1_1, name: xp1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Copied ftype
xp0_1
Ssa_name: xp0_1, name: xp0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Copied ftype
Propogating All
s_1
Ssa_name: s_1, name: s

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
Propogating All
s_1
Ssa_name: s_1, name: s

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
xp1_1
Ssa_name: xp1_1, name: xp1

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Copied ftype
xp0_1
Ssa_name: xp0_1, name: xp0

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Copied ftype
D_2
Ssa_name: D_2, name: D

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
D_2
Ssa_name: D_2, name: D

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
s_1
Ssa_name: s_1, name: s

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_2
Ssa_name: D_2, name: D

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
dP_1
Ssa_name: dP_1, name: dP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
D_3
Ssa_name: D_3, name: D

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
D_3
Ssa_name: D_3, name: D

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
prevD_1
Ssa_name: prevD_1, name: prevD

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] xp0 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: xp0_1, name: xp0

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: xp1_1, name: xp1

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_LOOP_LIMIT, Num: 1
Globalname: MAX_LOOP_LIMIT, contract_name: HybridPool
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: N_A_2, name: N_A

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: N_A, Num: 2
Globalname: N_A, contract_name: HybridPool
global...

Name: N_A Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: A_PRECISION, Num: 1
Globalname: A_PRECISION, contract_name: HybridPool
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
xp0_1(uint256) := ϕ(['xp0_1', 'xpIn_3'])
Phi
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
Phi
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
Phi
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
Phi
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
Phi
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_215 cleared
[i] s cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: s, Num: 1
Globalname: s, contract_name: HybridPool
End popogation
TMP_215(uint256) = xp0_1 (c)+ xp1_1
Source address: u
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
s_1(uint256) := TMP_215(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_216 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
End popogation
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: computed_1, name: computed

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: computed, Num: 1
Globalname: computed, contract_name: HybridPool
End popogation
computed_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
End popogation
D_1(uint256) := s_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: HybridPool
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
[i] i cleared
[i] TMP_217 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: D_2, name: D

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
End popogation
Ssa_name: D_2, name: D

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
D_2(uint256) := ϕ(['D_3', 'D_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
lnorm: u rnorm: u
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_218 cleared
[i] TMP_219 cleared
[i] TMP_220 cleared
[i] TMP_221 cleared
[i] TMP_222 cleared
[i] dP cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: dP, Num: 1
Globalname: dP, contract_name: HybridPool
End popogation
TMP_218(uint256) = D_2 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 400
Fields: 
Finance Type: undef
XXXX
TMP_219(uint256) = TMP_218 (c)/ xp0_1
lnorm: u rnorm: 1
lnorm: u rnorm: 1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_220(uint256) = TMP_219 (c)* D_2
lnorm: -1 rnorm: u
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 800
Fields: 
Finance Type: undef
XXXX
TMP_221(uint256) = TMP_220 (c)/ xp1_1
lnorm: -1 rnorm: 1
lnorm: -1 rnorm: 1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_222(uint256) = TMP_221 (c)/ 4
lnorm: -2 rnorm: 0
lnorm: -2 rnorm: 0
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
dP_1(uint256) := TMP_222(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] prevD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: prevD, Num: 1
Globalname: prevD, contract_name: HybridPool
End popogation
prevD_1(uint256) := D_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_223 cleared
[i] TMP_224 cleared
[i] TMP_225 cleared
[i] TMP_226 cleared
[i] TMP_227 cleared
[i] TMP_228 cleared
[i] TMP_229 cleared
[i] TMP_230 cleared
[i] TMP_231 cleared
[i] TMP_232 cleared
[i] TMP_233 cleared
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: D, Num: 3
Globalname: D, contract_name: HybridPool
End popogation
TMP_223(uint256) = N_A_2 (c)* s_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_225(uint256) = 2 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = TMP_224 (c)+ TMP_225
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_227(uint256) = TMP_226 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1600
Fields: 
Finance Type: undef
XXXX
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_229(uint256) = TMP_228 (c)- 1
Source address: u
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_230(uint256) = TMP_229 (c)* D_2
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
TMP_231(uint256) = 3 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 60
Fields: 
Finance Type: undef
XXXX
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Source address: u
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_233(uint256) = TMP_227 (c)/ TMP_232
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
D_3(uint256) := TMP_233(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: computed_2, name: computed

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: computed, Num: 2
Globalname: computed, contract_name: HybridPool
End popogation
computed_2(uint256) := D_3(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_234 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
End popogation
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_235 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: HybridPool
End popogation
TMP_235(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] xp0 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xp0_1', 'xpIn_3'])
Phi
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
Phi
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
Phi
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
Phi
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
Phi
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_215 cleared
[i] s cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: s, Num: 1
Globalname: s, contract_name: HybridPool
End popogation
TMP_215(uint256) = xp0_1 (c)+ xp1_1
Source address: u
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
s_1(uint256) := TMP_215(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_216 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
End popogation
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: computed_1, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: computed, Num: 1
Globalname: computed, contract_name: HybridPool
End popogation
computed_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
End popogation
D_1(uint256) := s_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: HybridPool
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
[i] i cleared
[i] TMP_217 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
End popogation
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
D_2(uint256) := ϕ(['D_3', 'D_1'])
Phi

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
lnorm: 0 rnorm: u
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_218 cleared
[i] TMP_219 cleared
[i] TMP_220 cleared
[i] TMP_221 cleared
[i] TMP_222 cleared
[i] dP cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: dP, Num: 1
Globalname: dP, contract_name: HybridPool
End popogation
TMP_218(uint256) = D_2 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 400
Fields: 
Finance Type: undef
XXXX
TMP_219(uint256) = TMP_218 (c)/ xp0_1
lnorm: u rnorm: 1
lnorm: u rnorm: 1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_220(uint256) = TMP_219 (c)* D_2
lnorm: -1 rnorm: u
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 800
Fields: 
Finance Type: undef
XXXX
TMP_221(uint256) = TMP_220 (c)/ xp1_1
lnorm: -1 rnorm: 1
lnorm: -1 rnorm: 1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_222(uint256) = TMP_221 (c)/ 4
lnorm: -2 rnorm: 0
lnorm: -2 rnorm: 0
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
dP_1(uint256) := TMP_222(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] prevD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: prevD, Num: 1
Globalname: prevD, contract_name: HybridPool
End popogation
prevD_1(uint256) := D_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_223 cleared
[i] TMP_224 cleared
[i] TMP_225 cleared
[i] TMP_226 cleared
[i] TMP_227 cleared
[i] TMP_228 cleared
[i] TMP_229 cleared
[i] TMP_230 cleared
[i] TMP_231 cleared
[i] TMP_232 cleared
[i] TMP_233 cleared
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 3
Globalname: D, contract_name: HybridPool
End popogation
TMP_223(uint256) = N_A_2 (c)* s_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_225(uint256) = 2 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = TMP_224 (c)+ TMP_225
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_227(uint256) = TMP_226 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1600
Fields: 
Finance Type: undef
XXXX
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_229(uint256) = TMP_228 (c)- 1
Source address: u
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_230(uint256) = TMP_229 (c)* D_2
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
TMP_231(uint256) = 3 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 60
Fields: 
Finance Type: undef
XXXX
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Source address: u
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_233(uint256) = TMP_227 (c)/ TMP_232
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
D_3(uint256) := TMP_233(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: computed_2, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: computed, Num: 2
Globalname: computed, contract_name: HybridPool
End popogation
computed_2(uint256) := D_3(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_234 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
End popogation
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_235 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: HybridPool
End popogation
TMP_235(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_214

Name: TMP_214 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidity_1(uint256) := TMP_214(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['TMP_59', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['TMP_60', '_reserve1_1'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_5(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_5(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_212 cleared
[i] xp0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xp0, Num: 1
Globalname: xp0, contract_name: HybridPool
End popogation
TMP_212(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_5
lnorm: u rnorm: 1
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp0_1(uint256) := TMP_212(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_213 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xp1, Num: 1
Globalname: xp1, contract_name: HybridPool
End popogation
TMP_213(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_5
lnorm: u rnorm: 1
Source address: u
[i]Type for TMP_213

Name: TMP_213 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp1_1(uint256) := TMP_213(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_214 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_214(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xp0_1,xp1_1)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_214

Name: TMP_214 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidity_1(uint256) := TMP_214(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_61

Name: TMP_61 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newLiq_1(uint256) := TMP_61(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for newLiq

Name: newLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_62 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
TMP_62(bool) = _totalSupply_1 == 0
[i]Type for TMP_62

Name: TMP_62 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: newLiq_1, name: newLiq

Name: newLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newLiq, Num: 1
Globalname: newLiq, contract_name: HybridPool
Ssa_name: MINIMUM_LIQUIDITY_6, name: MINIMUM_LIQUIDITY

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MINIMUM_LIQUIDITY, Num: 6
Globalname: MINIMUM_LIQUIDITY, contract_name: HybridPool
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: newLiq_1, name: newLiq

Name: newLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newLiq, Num: 1
Globalname: newLiq, contract_name: HybridPool
Ssa_name: MINIMUM_LIQUIDITY_6, name: MINIMUM_LIQUIDITY

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_63(uint256) = newLiq_1 (c)- MINIMUM_LIQUIDITY_6
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidity_1(uint256) := TMP_63(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_64 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: MINIMUM_LIQUIDITY_6, name: MINIMUM_LIQUIDITY

Name: MINIMUM_LIQUIDITY Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MINIMUM_LIQUIDITY_6, name: MINIMUM_LIQUIDITY

Name: MINIMUM_LIQUIDITY Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_64 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_64

Name: TMP_64 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, TridentERC20._mint(address,uint256)(TMP_64,MINIMUM_LIQUIDITY_6)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: recipient Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_mint(address,uint256)
Propogating All
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
recipient_1
Ssa_name: recipient_1, name: recipient

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: recipient_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
recipient_1
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: recipient_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] recipient cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: recipient_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: totalSupply_1, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 1
Globalname: totalSupply, contract_name: HybridPool
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u
Ssa_name: balanceOf_7, name: balanceOf

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balanceOf, Num: 7
Globalname: balanceOf, contract_name: HybridPool
global...

Name: PIC_5 Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
recipient_1(address) := ϕ(['TMP_64', 'recipient_1'])
Phi
[i]Type for recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'liquidity_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_1(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_7(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_2, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 2
Globalname: totalSupply, contract_name: HybridPool
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u
End popogation
totalSupply_2(uint256) = totalSupply_1 (c)+ amount_1
Source address: u
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Copied totalSupply
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balanceOf, Num: 8
Globalname: balanceOf, contract_name: HybridPool
global...

Name: PIC_5 Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: balanceOf_8, name: balanceOf

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_16(uint256) -> balanceOf_7[recipient_1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_16

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
balanceOf_8(mapping(address => uint256)) := ϕ(['balanceOf_7'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_16(-> balanceOf_8) = REF_16 + amount_1
4
-1
[i]Type for REF_16

Name: REF_16 Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied balanceOf
Source address: u
[i] TMP_28 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_28 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] recipient cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: recipient_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balanceOf_7, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address) := ϕ(['TMP_64', 'recipient_1'])
Phi
[i]Type for recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'liquidity_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_1(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_7(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_2, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
totalSupply_2(uint256) = totalSupply_1 (c)+ amount_1
Source address: u
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Copied totalSupply
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_16(uint256) -> balanceOf_7[recipient_1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_16

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
balanceOf_8(mapping(address => uint256)) := ϕ(['balanceOf_7'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_16(-> balanceOf_8) = REF_16 + amount_1
4
-1
[i]Type for REF_16

Name: REF_16 Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied balanceOf
Source address: u
[i] TMP_28 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_28 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_66 cleared
[i] oldLiq cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: oldLiq_1, name: oldLiq

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: oldLiq, Num: 1
Globalname: oldLiq, contract_name: HybridPool
End popogation
TMP_66(uint256) = INTERNAL_CALL, HybridPool._computeLiquidity(uint256,uint256)(_reserve0_1,_reserve1_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_computeLiquidity(uint256,uint256)
Propogating All
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
xp0_1
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xp1_1
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['TMP_59', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['TMP_60', '_reserve1_1'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_5(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_5(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_212 cleared
[i] xp0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xp0, Num: 1
Globalname: xp0, contract_name: HybridPool
End popogation
TMP_212(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_5
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp0_1(uint256) := TMP_212(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_213 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xp1, Num: 1
Globalname: xp1, contract_name: HybridPool
End popogation
TMP_213(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_5
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_213

Name: TMP_213 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp1_1(uint256) := TMP_213(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_214 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_214(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xp0_1,xp1_1)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_214

Name: TMP_214 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidity_1(uint256) := TMP_214(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['TMP_59', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['TMP_60', '_reserve1_1'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_5(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_5(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_212 cleared
[i] xp0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xp0, Num: 1
Globalname: xp0, contract_name: HybridPool
End popogation
TMP_212(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_5
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp0_1(uint256) := TMP_212(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_213 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xp1, Num: 1
Globalname: xp1, contract_name: HybridPool
End popogation
TMP_213(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_5
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_213

Name: TMP_213 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp1_1(uint256) := TMP_213(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_214 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_214(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xp0_1,xp1_1)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_214

Name: TMP_214 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidity_1(uint256) := TMP_214(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_66

Name: TMP_66 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
oldLiq_1(uint256) := TMP_66(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for oldLiq

Name: oldLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
[i] TMP_68 cleared
[i] TMP_69 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: oldLiq_1, name: oldLiq

Name: oldLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: oldLiq, Num: 1
Globalname: oldLiq, contract_name: HybridPool
Ssa_name: newLiq_1, name: newLiq

Name: newLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newLiq, Num: 1
Globalname: newLiq, contract_name: HybridPool
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: oldLiq_1, name: oldLiq

Name: oldLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: oldLiq, Num: 1
Globalname: oldLiq, contract_name: HybridPool
Ssa_name: newLiq_1, name: newLiq

Name: newLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newLiq, Num: 1
Globalname: newLiq, contract_name: HybridPool
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_2, name: liquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 2
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_67(uint256) = newLiq_1 (c)- oldLiq_1
[i]Type for TMP_67

Name: TMP_67 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(uint256) = TMP_67 (c)* _totalSupply_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_68

Name: TMP_68 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_69(uint256) = TMP_68 (c)/ oldLiq_1
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_69

Name: TMP_69 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
liquidity_2(uint256) := TMP_69(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: liquidity_3, name: liquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 3
Globalname: liquidity, contract_name: HybridPool
liquidity_3(uint256) := ϕ(['liquidity_1', 'liquidity_2'])
Phi

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve


END==================================
Source address: u
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_70 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_70(bool) = liquidity_3 != 0
[i]Type for TMP_70

Name: TMP_70 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,INSUFFICIENT_LIQUIDITY_MINTED)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, TridentERC20._mint(address,uint256)(recipient_1,liquidity_3)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: recipient Function: None
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_mint(address,uint256)
Propogating All
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
recipient_1
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: recipient_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
recipient_1
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: recipient_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] recipient cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: recipient_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balanceOf_7, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address) := ϕ(['TMP_64', 'recipient_1'])
Phi

Name: TMP_64 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'liquidity_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_1(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_7(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_2, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
totalSupply_2(uint256) = totalSupply_1 (c)+ amount_1
Source address: u
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Copied totalSupply
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_16(uint256) -> balanceOf_7[recipient_1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_16

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
balanceOf_8(mapping(address => uint256)) := ϕ(['balanceOf_7'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_16(-> balanceOf_8) = REF_16 + amount_1
4
-1
[i]Type for REF_16

Name: REF_16 Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied balanceOf
Source address: u
[i] TMP_28 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_28 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] recipient cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: recipient_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balanceOf_7, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address) := ϕ(['TMP_64', 'recipient_1'])
Phi

Name: TMP_64 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'liquidity_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_1(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_7(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_2, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
totalSupply_2(uint256) = totalSupply_1 (c)+ amount_1
Source address: u
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Copied totalSupply
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_16(uint256) -> balanceOf_7[recipient_1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_16

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
balanceOf_8(mapping(address => uint256)) := ϕ(['balanceOf_7'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_16(-> balanceOf_8) = REF_16 + amount_1
4
-1
[i]Type for REF_16

Name: REF_16 Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied balanceOf
Source address: u
[i] TMP_28 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_28 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, HybridPool._updateReserves()()
New param cache []
FIND RETURN
ENTRY_POINT
_updateReserves()
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
End popogation
TUPLE_20(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
New param cache []
Old param cache: []
[i]Type for TUPLE_20

Name: TUPLE_20 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256)= UNPACK TUPLE_20 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256)= UNPACK TUPLE_20 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_174 cleared
[i] TMP_175 cleared
[i] TMP_177 cleared
[i] TMP_178 cleared
[i] TMP_179 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_174(uint128) := 340282366920938463463374607431768211455(uint128)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_174

Name: TMP_174 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 340282366920938463463374607431768211455
Fields: 
Finance Type: undef
XXXX
TMP_175(bool) = _reserve0_1 < TMP_174
lnorm: 0 rnorm: 0
[i]Type for TMP_175

Name: TMP_175 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_177(uint128) := 340282366920938463463374607431768211455(uint128)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_177

Name: TMP_177 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 340282366920938463463374607431768211455
Fields: 
Finance Type: undef
XXXX
TMP_178(bool) = _reserve1_1 < TMP_177
lnorm: 0 rnorm: 0
[i]Type for TMP_178

Name: TMP_178 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_179(bool) = TMP_175 && TMP_178
[i]Type for TMP_179

Name: TMP_179 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,OVERFLOW)
[i]Type for TMP_180

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_181 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserve0_2, name: reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve0, Num: 2
Globalname: reserve0, contract_name: HybridPool
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
End popogation
TMP_181 = CONVERT _reserve0_1 to uint128
Converting _reserve0_1

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_181

Name: TMP_181 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
reserve0_2(uint128) := TMP_181(uint128)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Copied reserve0
Source address: u
[i] TMP_182 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserve1_2, name: reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: reserve1, Num: 2
Globalname: reserve1, contract_name: HybridPool
global...

Name: PIC_22 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
End popogation
TMP_182 = CONVERT _reserve1_1 to uint128
Converting _reserve1_1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_182

Name: TMP_182 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
reserve1_2(uint128) := TMP_182(uint128)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Copied reserve1
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
End popogation
TUPLE_20(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
New param cache []
Old param cache: []
[i]Type for TUPLE_20

Name: TUPLE_20 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256)= UNPACK TUPLE_20 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256)= UNPACK TUPLE_20 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_174 cleared
[i] TMP_175 cleared
[i] TMP_177 cleared
[i] TMP_178 cleared
[i] TMP_179 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_174(uint128) := 340282366920938463463374607431768211455(uint128)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_174

Name: TMP_174 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 340282366920938463463374607431768211455
Fields: 
Finance Type: undef
XXXX
TMP_175(bool) = _reserve0_1 < TMP_174
lnorm: 0 rnorm: 0
[i]Type for TMP_175

Name: TMP_175 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_177(uint128) := 340282366920938463463374607431768211455(uint128)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_177

Name: TMP_177 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 340282366920938463463374607431768211455
Fields: 
Finance Type: undef
XXXX
TMP_178(bool) = _reserve1_1 < TMP_177
lnorm: 0 rnorm: 0
[i]Type for TMP_178

Name: TMP_178 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_179(bool) = TMP_175 && TMP_178
[i]Type for TMP_179

Name: TMP_179 Function: _updateReserves
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,OVERFLOW)
[i]Type for TMP_180

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_181 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserve0_2, name: reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_181 = CONVERT _reserve0_1 to uint128
Converting _reserve0_1

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_181

Name: TMP_181 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
reserve0_2(uint128) := TMP_181(uint128)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for reserve0

Name: reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Copied reserve0
Source address: u
[i] TMP_182 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: reserve1_2, name: reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_182 = CONVERT _reserve1_1 to uint128
Converting _reserve1_1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_182

Name: TMP_182 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
reserve1_2(uint128) := TMP_182(uint128)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for reserve1

Name: reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Copied reserve1
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _updateReserves
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


totalSupply_5(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
MINIMUM_LIQUIDITY_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'MINIMUM_LIQUIDITY_7', 'MINIMUM_LIQUIDITY_0'])
MODIFIER_CALL, HybridPool.lock()()
TMP_56(address) = SOLIDITY_CALL abi.decode()(data_1,address)
recipient_1(address) := TMP_56(address)
TUPLE_6(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
_reserve0_1(uint256)= UNPACK TUPLE_6 index: 0 
_reserve1_1(uint256)= UNPACK TUPLE_6 index: 1 
TUPLE_7(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
balance0_1(uint256)= UNPACK TUPLE_7 index: 0 
balance1_1(uint256)= UNPACK TUPLE_7 index: 1 
_totalSupply_1(uint256) := totalSupply_8(uint256)
TMP_57(uint256) = balance0_1 (c)- _reserve0_1
amount0_1(uint256) := TMP_57(uint256)
TMP_58(uint256) = balance1_1 (c)- _reserve1_1
amount1_1(uint256) := TMP_58(uint256)
TUPLE_8(uint256,uint256) = INTERNAL_CALL, HybridPool._nonOptimalMintFee(uint256,uint256,uint256,uint256)(amount0_1,amount1_1,_reserve0_1,_reserve1_1)
fee0_1(uint256)= UNPACK TUPLE_8 index: 0 
fee1_1(uint256)= UNPACK TUPLE_8 index: 1 
TMP_59(uint256) = balance0_1 (c)- fee0_1
TMP_60(uint256) = balance1_1 (c)- fee1_1
TMP_61(uint256) = INTERNAL_CALL, HybridPool._computeLiquidity(uint256,uint256)(TMP_59,TMP_60)
newLiq_1(uint256) := TMP_61(uint256)
TMP_62(bool) = _totalSupply_1 == 0
CONDITION TMP_62
TMP_63(uint256) = newLiq_1 (c)- MINIMUM_LIQUIDITY_6
liquidity_1(uint256) := TMP_63(uint256)
TMP_64 = CONVERT 0 to address
INTERNAL_CALL, TridentERC20._mint(address,uint256)(TMP_64,MINIMUM_LIQUIDITY_6)
TMP_66(uint256) = INTERNAL_CALL, HybridPool._computeLiquidity(uint256,uint256)(_reserve0_1,_reserve1_1)
oldLiq_1(uint256) := TMP_66(uint256)
TMP_67(uint256) = newLiq_1 (c)- oldLiq_1
TMP_68(uint256) = TMP_67 (c)* _totalSupply_1
TMP_69(uint256) = TMP_68 (c)/ oldLiq_1
liquidity_2(uint256) := TMP_69(uint256)
liquidity_3(uint256) := ϕ(['liquidity_1', 'liquidity_2'])
TMP_70(bool) = liquidity_3 != 0
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,INSUFFICIENT_LIQUIDITY_MINTED)
INTERNAL_CALL, TridentERC20._mint(address,uint256)(recipient_1,liquidity_3)
INTERNAL_CALL, HybridPool._updateReserves()()
Emit Mint(msg.sender,amount0_1,amount1_1,recipient_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: totalSupply_5, name: totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: MINIMUM_LIQUIDITY_1, name: MINIMUM_LIQUIDITY

Name: MINIMUM_LIQUIDITY Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalSupply_5(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
MINIMUM_LIQUIDITY_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'MINIMUM_LIQUIDITY_7', 'MINIMUM_LIQUIDITY_0'])
Phi
[i]Type for MINIMUM_LIQUIDITY

Name: MINIMUM_LIQUIDITY Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, HybridPool.lock()()
New param cache []
Old param cache: []
[i] recipient cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
End popogation
TMP_56(address) = SOLIDITY_CALL abi.decode()(data_1,address)
[i]Type for TMP_56

Name: TMP_56 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
recipient_1(address) := TMP_56(address)
asgn
Finance type key: (-1, -1)
[i]Type for recipient

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
End popogation
TUPLE_6(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_6

Name: TUPLE_6 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256)= UNPACK TUPLE_6 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256)= UNPACK TUPLE_6 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] balance0 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: balance0, Num: 1
Globalname: balance0, contract_name: HybridPool
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: balance1, Num: 1
Globalname: balance1, contract_name: HybridPool
End popogation
TUPLE_7(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
New param cache []
Old param cache: []
[i]Type for TUPLE_7

Name: TUPLE_7 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance0_1(uint256)= UNPACK TUPLE_7 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance0

Name: balance0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance1_1(uint256)= UNPACK TUPLE_7 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance1

Name: balance1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalSupply_8, name: totalSupply

Name: totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_8, name: totalSupply

Name: totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 1
Globalname: _totalSupply, contract_name: HybridPool
End popogation
_totalSupply_1(uint256) := totalSupply_8(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_57 cleared
[i] amount0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount0, Num: 1
Globalname: amount0, contract_name: HybridPool
End popogation
TMP_57(uint256) = balance0_1 (c)- _reserve0_1
Source address: u
[i]Type for TMP_57

Name: TMP_57 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount0_1(uint256) := TMP_57(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amount0

Name: amount0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_58 cleared
[i] amount1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount1, Num: 1
Globalname: amount1, contract_name: HybridPool
End popogation
TMP_58(uint256) = balance1_1 (c)- _reserve1_1
Source address: u
[i]Type for TMP_58

Name: TMP_58 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount1_1(uint256) := TMP_58(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amount1

Name: amount1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] fee0 cleared
[i] fee1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee0_1, name: fee0

Name: fee0 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee0, Num: 1
Globalname: fee0, contract_name: HybridPool
Ssa_name: fee1_1, name: fee1

Name: fee1 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee1, Num: 1
Globalname: fee1, contract_name: HybridPool
End popogation
TUPLE_8(uint256,uint256) = INTERNAL_CALL, HybridPool._nonOptimalMintFee(uint256,uint256,uint256,uint256)(amount0_1,amount1_1,_reserve0_1,_reserve1_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[i]Type for TUPLE_8

Name: TUPLE_8 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee0_1(uint256)= UNPACK TUPLE_8 index: 0 
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for fee0

Name: fee0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee1_1(uint256)= UNPACK TUPLE_8 index: 1 
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for fee1

Name: fee1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_59 cleared
[i] TMP_60 cleared
[i] TMP_61 cleared
[i] newLiq cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee0_1, name: fee0

Name: fee0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee1_1, name: fee1

Name: fee1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee0_1, name: fee0

Name: fee0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee1_1, name: fee1

Name: fee1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: newLiq_1, name: newLiq

Name: newLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newLiq, Num: 1
Globalname: newLiq, contract_name: HybridPool
End popogation
TMP_59(uint256) = balance0_1 (c)- fee0_1
Source address: u
[i]Type for TMP_59

Name: TMP_59 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_60(uint256) = balance1_1 (c)- fee1_1
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(uint256) = INTERNAL_CALL, HybridPool._computeLiquidity(uint256,uint256)(TMP_59,TMP_60)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_61

Name: TMP_61 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
newLiq_1(uint256) := TMP_61(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for newLiq

Name: newLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_62 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
TMP_62(bool) = _totalSupply_1 == 0
[i]Type for TMP_62

Name: TMP_62 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: newLiq_1, name: newLiq

Name: newLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newLiq, Num: 1
Globalname: newLiq, contract_name: HybridPool
Ssa_name: MINIMUM_LIQUIDITY_6, name: MINIMUM_LIQUIDITY

Name: MINIMUM_LIQUIDITY Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: newLiq_1, name: newLiq

Name: newLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newLiq, Num: 1
Globalname: newLiq, contract_name: HybridPool
Ssa_name: MINIMUM_LIQUIDITY_6, name: MINIMUM_LIQUIDITY

Name: MINIMUM_LIQUIDITY Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_63(uint256) = newLiq_1 (c)- MINIMUM_LIQUIDITY_6
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidity_1(uint256) := TMP_63(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_64 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: MINIMUM_LIQUIDITY_6, name: MINIMUM_LIQUIDITY

Name: MINIMUM_LIQUIDITY Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MINIMUM_LIQUIDITY_6, name: MINIMUM_LIQUIDITY

Name: MINIMUM_LIQUIDITY Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_64 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_64

Name: TMP_64 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, TridentERC20._mint(address,uint256)(TMP_64,MINIMUM_LIQUIDITY_6)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i] TMP_66 cleared
[i] oldLiq cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: oldLiq_1, name: oldLiq

Name: oldLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: oldLiq, Num: 1
Globalname: oldLiq, contract_name: HybridPool
End popogation
TMP_66(uint256) = INTERNAL_CALL, HybridPool._computeLiquidity(uint256,uint256)(_reserve0_1,_reserve1_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"]]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_computeLiquidity(uint256,uint256)
Propogating All
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
xp0_1
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xp1_1
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['TMP_59', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['TMP_60', '_reserve1_1'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_5(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_5(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_212 cleared
[i] xp0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xp0, Num: 1
Globalname: xp0, contract_name: HybridPool
End popogation
TMP_212(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_5
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp0_1(uint256) := TMP_212(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_213 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xp1, Num: 1
Globalname: xp1, contract_name: HybridPool
End popogation
TMP_213(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_5
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_213

Name: TMP_213 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp1_1(uint256) := TMP_213(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_214 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_214(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xp0_1,xp1_1)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_214

Name: TMP_214 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidity_1(uint256) := TMP_214(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
_reserve0_1(uint256) := ϕ(['TMP_59', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['TMP_60', '_reserve1_1'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_5(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_5(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_212 cleared
[i] xp0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_5, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xp0, Num: 1
Globalname: xp0, contract_name: HybridPool
End popogation
TMP_212(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_5
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_212

Name: TMP_212 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp0_1(uint256) := TMP_212(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_213 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_5, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xp1, Num: 1
Globalname: xp1, contract_name: HybridPool
End popogation
TMP_213(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_5
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_213

Name: TMP_213 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp1_1(uint256) := TMP_213(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_214 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidity
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_214(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xp0_1,xp1_1)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_214

Name: TMP_214 Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
liquidity_1(uint256) := TMP_214(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: _computeLiquidity
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_66

Name: TMP_66 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
oldLiq_1(uint256) := TMP_66(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for oldLiq

Name: oldLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
[i] TMP_68 cleared
[i] TMP_69 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: oldLiq_1, name: oldLiq

Name: oldLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: oldLiq, Num: 1
Globalname: oldLiq, contract_name: HybridPool
Ssa_name: newLiq_1, name: newLiq

Name: newLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newLiq, Num: 1
Globalname: newLiq, contract_name: HybridPool
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: oldLiq_1, name: oldLiq

Name: oldLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: oldLiq, Num: 1
Globalname: oldLiq, contract_name: HybridPool
Ssa_name: newLiq_1, name: newLiq

Name: newLiq Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newLiq, Num: 1
Globalname: newLiq, contract_name: HybridPool
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_2, name: liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 2
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_67(uint256) = newLiq_1 (c)- oldLiq_1
[i]Type for TMP_67

Name: TMP_67 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_68(uint256) = TMP_67 (c)* _totalSupply_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_68

Name: TMP_68 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_69(uint256) = TMP_68 (c)/ oldLiq_1
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
[i]Type for TMP_69

Name: TMP_69 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
liquidity_2(uint256) := TMP_69(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 3
Globalname: liquidity, contract_name: HybridPool
liquidity_3(uint256) := ϕ(['liquidity_1', 'liquidity_2'])
Phi

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve


END==================================
Source address: u
[i]Type for liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_70 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_70(bool) = liquidity_3 != 0
[i]Type for TMP_70

Name: TMP_70 Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_71(None) = SOLIDITY_CALL require(bool,string)(TMP_70,INSUFFICIENT_LIQUIDITY_MINTED)
[i]Type for TMP_71

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: liquidity_3, name: liquidity

Name: liquidity Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, TridentERC20._mint(address,uint256)(recipient_1,liquidity_3)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: recipient Function: None
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_mint(address,uint256)
Propogating All
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
recipient_1
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: recipient_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
recipient_1
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: recipient_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] recipient cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: recipient_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balanceOf_7, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address) := ϕ(['TMP_64', 'recipient_1'])
Phi

Name: TMP_64 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'liquidity_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_1(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_7(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_2, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
totalSupply_2(uint256) = totalSupply_1 (c)+ amount_1
Source address: u
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Copied totalSupply
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_16(uint256) -> balanceOf_7[recipient_1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_16

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
balanceOf_8(mapping(address => uint256)) := ϕ(['balanceOf_7'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_16(-> balanceOf_8) = REF_16 + amount_1
4
-1
[i]Type for REF_16

Name: REF_16 Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied balanceOf
Source address: u
[i] TMP_28 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_28 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] recipient cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: recipient_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: recipient
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balanceOf_7, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
recipient_1(address) := ϕ(['TMP_64', 'recipient_1'])
Phi

Name: TMP_64 Function: mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['MINIMUM_LIQUIDITY_6', 'liquidity_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_1(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_7(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_1, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_2, name: totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
totalSupply_2(uint256) = totalSupply_1 (c)+ amount_1
Source address: u
[i]Type for totalSupply

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Copied totalSupply
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: balanceOf_8, name: balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_16(uint256) -> balanceOf_7[recipient_1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_16

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
balanceOf_8(mapping(address => uint256)) := ϕ(['balanceOf_7'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_16(-> balanceOf_8) = REF_16 + amount_1
4
-1
[i]Type for REF_16

Name: REF_16 Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied balanceOf
Source address: u
[i] TMP_28 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: recipient
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_28 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_28

Name: TMP_28 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, HybridPool._updateReserves()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Source address: u
Reading Function: burn
Checking funcion...



burn
Function name: burn
Finding type for data(bytes ... )
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
burn(bytes)


totalSupply_9(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
balanceOf_11(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
token0_2(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
token1_2(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
MODIFIER_CALL, HybridPool.lock()()
TUPLE_9(address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,bool))
recipient_1(address)= UNPACK TUPLE_9 index: 0 
unwrapBento_1(bool)= UNPACK TUPLE_9 index: 1 
TUPLE_10(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
token0_4(address) := ϕ(['token0_42'])
token1_4(address) := ϕ(['token1_45'])
balance0_1(uint256)= UNPACK TUPLE_10 index: 0 
balance1_1(uint256)= UNPACK TUPLE_10 index: 1 
_totalSupply_1(uint256) := totalSupply_11(uint256)
TMP_76 = CONVERT this to address
REF_42(uint256) -> balanceOf_13[TMP_76]
liquidity_1(uint256) := REF_42(uint256)
TMP_77(uint256) = liquidity_1 (c)* balance0_1
TMP_78(uint256) = TMP_77 (c)/ _totalSupply_1
amount0_1(uint256) := TMP_78(uint256)
TMP_79(uint256) = liquidity_1 (c)* balance1_1
TMP_80(uint256) = TMP_79 (c)/ _totalSupply_1
amount1_1(uint256) := TMP_80(uint256)
TMP_81 = CONVERT this to address
INTERNAL_CALL, TridentERC20._burn(address,uint256)(TMP_81,liquidity_1)
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token0_5,amount0_1,recipient_1,unwrapBento_1)
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token1_6,amount1_1,recipient_1,unwrapBento_1)
TMP_85(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token0_7,amount0_1)
balance0_2(uint256) = balance0_1 (c)- TMP_85
TMP_86(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token1_8,amount1_1)
balance1_2(uint256) = balance1_1 (c)- TMP_86
INTERNAL_CALL, HybridPool._updateReserves()()
TMP_89 = new IPool.TokenAmount[](2)
withdrawnAmounts_1(IPool.TokenAmount[]) := TMP_89(IPool.TokenAmount)
REF_43(IPool.TokenAmount) -> withdrawnAmounts_1[0]
TMP_90 = new TokenAmount(token0_10,amount0_1)
withdrawnAmounts_2(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_1'])
REF_43 (->withdrawnAmounts_2) := TMP_90(IPool.TokenAmount)
REF_44(IPool.TokenAmount) -> withdrawnAmounts_2[1]
TMP_91 = new TokenAmount(token1_10,amount1_1)
withdrawnAmounts_3(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_2'])
REF_44 (->withdrawnAmounts_3) := TMP_91(IPool.TokenAmount)
Emit Burn(msg.sender,amount0_1,amount1_1,recipient_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: totalSupply_9, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 9
Globalname: totalSupply, contract_name: HybridPool
global...

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u
Ssa_name: balanceOf_11, name: balanceOf

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balanceOf, Num: 11
Globalname: balanceOf, contract_name: HybridPool
global...

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: token0_2, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 2
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token1_2, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 2
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
totalSupply_9(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_11(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_2(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: burn
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_2(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
Phi
[i]Type for token1

Name: token1 Function: burn
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, HybridPool.lock()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] recipient cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
TUPLE_9(address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,bool))
[i]Type for TUPLE_9

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
recipient_1(address)= UNPACK TUPLE_9 index: 0 
Finding type for recipient(address ... )
Addr:burn_recipient : 0
prev address? u
-991
Head Addr: -991
    Norm: 0
    Set: {-991}
    Fin: NULL
[i]Type for recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool)= UNPACK TUPLE_9 index: 1 
Finding type for unwrapBento(bool ... )
[i]Type for unwrapBento

Name: unwrapBento Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] balance0 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance0, Num: 1
Globalname: balance0, contract_name: HybridPool
Ssa_name: balance1_1, name: balance1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance1, Num: 1
Globalname: balance1, contract_name: HybridPool
End popogation
Ssa_name: token0_4, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 4
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token1_4, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 4
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
TUPLE_10(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
New param cache []
Old param cache: []
[i]Type for TUPLE_10

Name: TUPLE_10 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_4(address) := ϕ(['token0_42'])
Phi
[i]Type for token0

Name: token0 Function: burn
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_4(address) := ϕ(['token1_45'])
Phi
[i]Type for token1

Name: token1 Function: burn
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
balance0_1(uint256)= UNPACK TUPLE_10 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance1_1(uint256)= UNPACK TUPLE_10 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalSupply_11, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 11
Globalname: totalSupply, contract_name: HybridPool
global...

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u
Ssa_name: totalSupply_11, name: totalSupply

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _totalSupply_1, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 1
Globalname: _totalSupply, contract_name: HybridPool
End popogation
_totalSupply_1(uint256) := totalSupply_11(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_76 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceOf_13, name: balanceOf

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balanceOf, Num: 13
Globalname: balanceOf, contract_name: HybridPool
global...

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: balanceOf_13, name: balanceOf

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_76 = CONVERT this to address
Converting this
9
[i]Type for TMP_76

Name: TMP_76 Function: burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
REF_42(uint256) -> balanceOf_13[TMP_76]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_42

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
liquidity_1(uint256) := REF_42(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_77 cleared
[i] TMP_78 cleared
[i] amount0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount0, Num: 1
Globalname: amount0, contract_name: HybridPool
End popogation
TMP_77(uint256) = liquidity_1 (c)* balance0_1
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_77

Name: TMP_77 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_78(uint256) = TMP_77 (c)/ _totalSupply_1
lnorm: 18 rnorm: u
Source address: u
lnorm: 18 rnorm: u
4
-1
[i]Type for TMP_78

Name: TMP_78 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
amount0_1(uint256) := TMP_78(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_79 cleared
[i] TMP_80 cleared
[i] amount1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount1, Num: 1
Globalname: amount1, contract_name: HybridPool
End popogation
TMP_79(uint256) = liquidity_1 (c)* balance1_1
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_79

Name: TMP_79 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_80(uint256) = TMP_79 (c)/ _totalSupply_1
lnorm: 18 rnorm: u
Source address: u
lnorm: 18 rnorm: u
4
-1
[i]Type for TMP_80

Name: TMP_80 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
amount1_1(uint256) := TMP_80(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_81 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_81 = CONVERT this to address
Converting this
9
[i]Type for TMP_81

Name: TMP_81 Function: burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, TridentERC20._burn(address,uint256)(TMP_81,liquidity_1)
New param cache [[[-1], [-1], 'u', 'HybridPool', [], -1, 9, 'u'], [[4], [-1], 18, None, [], -1, 'u', 'u']]
[[-1], [-1], 'u', 'HybridPool', [], -1, 9, 'u']

Name: sender Function: None
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_burn(address,uint256)
Propogating All
Propogating All
sender_1
Ssa_name: sender_1, name: sender

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 9

Name: sender_1 Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
sender_1
Ssa_name: sender_1, name: sender

Name: sender_1 Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9

Name: sender_1 Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] sender cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sender_1, name: sender

Name: sender_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9

Name: sender_1 Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: totalSupply_3, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 3
Globalname: totalSupply, contract_name: HybridPool
global...

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u
Ssa_name: balanceOf_9, name: balanceOf

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balanceOf, Num: 9
Globalname: balanceOf, contract_name: HybridPool
global...

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
sender_1(address) := ϕ(['TMP_81', 'TMP_99'])
Phi
[i]Type for sender

Name: sender Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['liquidity_1', 'liquidity_1'])
Phi
[i]Type for amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_3(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_9(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balanceOf, Num: 10
Globalname: balanceOf, contract_name: HybridPool
global...

Name: balanceOf Function: _mint
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: balanceOf_10, name: balanceOf

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: balanceOf_10, name: balanceOf

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_17(uint256) -> balanceOf_9[sender_1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_17

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
balanceOf_10(mapping(address => uint256)) := ϕ(['balanceOf_9'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_17(-> balanceOf_10) = REF_17 (c)- amount_1
4
-1
lnorm: 18 rnorm: 18
4
-1
[i]Type for REF_17

Name: REF_17 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied balanceOf
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_4, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 4
Globalname: totalSupply, contract_name: HybridPool
global...

Name: totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u
End popogation
totalSupply_4(uint256) = totalSupply_3 - amount_1
Source address: u
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Copied totalSupply
Source address: u
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_30

Name: TMP_30 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sender cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9

Name: sender_1 Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balanceOf_9, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
sender_1(address) := ϕ(['TMP_81', 'TMP_99'])
Phi
[i]Type for sender

Name: sender Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['liquidity_1', 'liquidity_1'])
Phi
[i]Type for amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_3(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_9(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_17(uint256) -> balanceOf_9[sender_1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_17

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
balanceOf_10(mapping(address => uint256)) := ϕ(['balanceOf_9'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_17(-> balanceOf_10) = REF_17 (c)- amount_1
4
-1
lnorm: 18 rnorm: 18
4
-1
[i]Type for REF_17

Name: REF_17 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied balanceOf
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_4, name: totalSupply

Name: totalSupply Function: _burn
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
totalSupply_4(uint256) = totalSupply_3 - amount_1
4
-1
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Copied totalSupply
Source address: u
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_30

Name: TMP_30 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_5, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 5
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_5, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token0_5,amount0_1,recipient_1,unwrapBento_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u'], [[], [], 0, None, [], -1, -991, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], 30, 'u', 'u']

Name: amount Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
[[], [], 0, None, [], -1, -991, 'u']

Name: to Function: None
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: bento, Num: 6
Globalname: bento, contract_name: HybridPool
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Source address: 1
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: bento, Num: 7
Globalname: bento, contract_name: HybridPool
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Source address: 1
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: bento, Num: 8
Globalname: bento, contract_name: HybridPool
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Source address: 1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: bento, Num: 9
Globalname: bento, contract_name: HybridPool
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Source address: 1
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: bento, Num: 4
Globalname: bento, contract_name: HybridPool
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Source address: 1
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: bento, Num: 5
Globalname: bento, contract_name: HybridPool
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Source address: 1
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_6, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 6
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_6, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token1_6,amount1_1,recipient_1,unwrapBento_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u'], [[], [], 0, None, [], -1, -991, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], 30, 'u', 'u']

Name: amount Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
[[], [], 0, None, [], -1, -991, 'u']

Name: to Function: None
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_85 cleared
[i] balance0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_7, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 7
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_7, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_2, name: balance0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance0, Num: 2
Globalname: balance0, contract_name: HybridPool
End popogation
TMP_85(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token0_7,amount0_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[i]Type for TMP_85

Name: TMP_85 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance0_2(uint256) = balance0_1 (c)- TMP_85
Source address: u
[i]Type for balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_86 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1_8, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 8
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: token1_8, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_2, name: balance1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance1, Num: 2
Globalname: balance1, contract_name: HybridPool
End popogation
TMP_86(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token1_8,amount1_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_86

Name: TMP_86 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance1_2(uint256) = balance1_1 (c)- TMP_86
Source address: u
[i]Type for balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, HybridPool._updateReserves()()
New param cache []
Old param cache: []
[i] withdrawnAmounts cleared
Propogating parameters and globals to SSA variables...
Ssa_name: withdrawnAmounts_1, name: withdrawnAmounts

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawnAmounts, Num: 1
Globalname: withdrawnAmounts, contract_name: HybridPool
End popogation
TMP_89 = new IPool.TokenAmount[](2)
[i]Type for TMP_89

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
withdrawnAmounts_1(IPool.TokenAmount[]) := TMP_89(IPool.TokenAmount)
asgn
Finance type key: (-1, -1)
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] withdrawnAmounts cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_10, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 10
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token0_10, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: withdrawnAmounts_2, name: withdrawnAmounts

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawnAmounts, Num: 2
Globalname: withdrawnAmounts, contract_name: HybridPool
End popogation
Ssa_name: withdrawnAmounts_2, name: withdrawnAmounts

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawnAmounts, Num: 2
Globalname: withdrawnAmounts, contract_name: HybridPool
REF_43(IPool.TokenAmount) -> withdrawnAmounts_1[0]
INDEX
[i]Type for REF_43

Name: withdrawnAmounts Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_90 = new TokenAmount(token0_10,amount0_1)
[i]Type for TMP_90

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
withdrawnAmounts_2(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_1'])
Phi

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_43 (->withdrawnAmounts_2) := TMP_90(IPool.TokenAmount)
asgn
Finance type key: (-1, -1)
[i]Type for REF_43

Name: REF_43 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
[i] withdrawnAmounts cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1_10, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 10
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1_10, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawnAmounts_3, name: withdrawnAmounts

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawnAmounts, Num: 3
Globalname: withdrawnAmounts, contract_name: HybridPool
End popogation
Ssa_name: withdrawnAmounts_3, name: withdrawnAmounts

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawnAmounts, Num: 3
Globalname: withdrawnAmounts, contract_name: HybridPool
REF_44(IPool.TokenAmount) -> withdrawnAmounts_2[1]
INDEX
[i]Type for REF_44

Name: withdrawnAmounts Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_91 = new TokenAmount(token1_10,amount1_1)
[i]Type for TMP_91

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
withdrawnAmounts_3(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_2'])
Phi

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44 (->withdrawnAmounts_3) := TMP_91(IPool.TokenAmount)
asgn
Finance type key: (-1, -1)
[i]Type for REF_44

Name: REF_44 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation


totalSupply_9(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
balanceOf_11(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
token0_2(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
token1_2(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
MODIFIER_CALL, HybridPool.lock()()
TUPLE_9(address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,bool))
recipient_1(address)= UNPACK TUPLE_9 index: 0 
unwrapBento_1(bool)= UNPACK TUPLE_9 index: 1 
TUPLE_10(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
token0_4(address) := ϕ(['token0_42'])
token1_4(address) := ϕ(['token1_45'])
balance0_1(uint256)= UNPACK TUPLE_10 index: 0 
balance1_1(uint256)= UNPACK TUPLE_10 index: 1 
_totalSupply_1(uint256) := totalSupply_11(uint256)
TMP_76 = CONVERT this to address
REF_42(uint256) -> balanceOf_13[TMP_76]
liquidity_1(uint256) := REF_42(uint256)
TMP_77(uint256) = liquidity_1 (c)* balance0_1
TMP_78(uint256) = TMP_77 (c)/ _totalSupply_1
amount0_1(uint256) := TMP_78(uint256)
TMP_79(uint256) = liquidity_1 (c)* balance1_1
TMP_80(uint256) = TMP_79 (c)/ _totalSupply_1
amount1_1(uint256) := TMP_80(uint256)
TMP_81 = CONVERT this to address
INTERNAL_CALL, TridentERC20._burn(address,uint256)(TMP_81,liquidity_1)
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token0_5,amount0_1,recipient_1,unwrapBento_1)
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token1_6,amount1_1,recipient_1,unwrapBento_1)
TMP_85(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token0_7,amount0_1)
balance0_2(uint256) = balance0_1 (c)- TMP_85
TMP_86(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token1_8,amount1_1)
balance1_2(uint256) = balance1_1 (c)- TMP_86
INTERNAL_CALL, HybridPool._updateReserves()()
TMP_89 = new IPool.TokenAmount[](2)
withdrawnAmounts_1(IPool.TokenAmount[]) := TMP_89(IPool.TokenAmount)
REF_43(IPool.TokenAmount) -> withdrawnAmounts_1[0]
TMP_90 = new TokenAmount(token0_10,amount0_1)
withdrawnAmounts_2(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_1'])
REF_43 (->withdrawnAmounts_2) := TMP_90(IPool.TokenAmount)
REF_44(IPool.TokenAmount) -> withdrawnAmounts_2[1]
TMP_91 = new TokenAmount(token1_10,amount1_1)
withdrawnAmounts_3(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_2'])
REF_44 (->withdrawnAmounts_3) := TMP_91(IPool.TokenAmount)
Emit Burn(msg.sender,amount0_1,amount1_1,recipient_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: totalSupply_9, name: totalSupply

Name: totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balanceOf_11, name: balanceOf

Name: balanceOf Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_2, name: token0

Name: token0 Function: burn
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_2, name: token1

Name: token1 Function: burn
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
totalSupply_9(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_11(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_2(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: burn
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_2(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
Phi
[i]Type for token1

Name: token1 Function: burn
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, HybridPool.lock()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] recipient cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
TUPLE_9(address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,bool))
[i]Type for TUPLE_9

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
recipient_1(address)= UNPACK TUPLE_9 index: 0 
Finding type for recipient(address ... )
prev address? u
Head Addr: -991
    Norm: 0
    Set: {-991}
    Fin: NULL
[i]Type for recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool)= UNPACK TUPLE_9 index: 1 
Finding type for unwrapBento(bool ... )
[i]Type for unwrapBento

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] balance0 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: balance0, Num: 1
Globalname: balance0, contract_name: HybridPool
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: balance1, Num: 1
Globalname: balance1, contract_name: HybridPool
End popogation
Ssa_name: token0_4, name: token0

Name: token0 Function: burn
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_4, name: token1

Name: token1 Function: burn
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TUPLE_10(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
New param cache []
Old param cache: []
[i]Type for TUPLE_10

Name: TUPLE_10 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_4(address) := ϕ(['token0_42'])
Phi
[i]Type for token0

Name: token0 Function: burn
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_4(address) := ϕ(['token1_45'])
Phi
[i]Type for token1

Name: token1 Function: burn
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
balance0_1(uint256)= UNPACK TUPLE_10 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance1_1(uint256)= UNPACK TUPLE_10 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalSupply_11, name: totalSupply

Name: totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_11, name: totalSupply

Name: totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 1
Globalname: _totalSupply, contract_name: HybridPool
End popogation
_totalSupply_1(uint256) := totalSupply_11(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_76 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceOf_13, name: balanceOf

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_13, name: balanceOf

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_76 = CONVERT this to address
Converting this
9
[i]Type for TMP_76

Name: TMP_76 Function: burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
REF_42(uint256) -> balanceOf_13[TMP_76]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_42

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
liquidity_1(uint256) := REF_42(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_77 cleared
[i] TMP_78 cleared
[i] amount0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount0, Num: 1
Globalname: amount0, contract_name: HybridPool
End popogation
TMP_77(uint256) = liquidity_1 (c)* balance0_1
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_77

Name: TMP_77 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_78(uint256) = TMP_77 (c)/ _totalSupply_1
lnorm: 18 rnorm: u
Source address: u
lnorm: 18 rnorm: u
4
-1
[i]Type for TMP_78

Name: TMP_78 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
amount0_1(uint256) := TMP_78(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_79 cleared
[i] TMP_80 cleared
[i] amount1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount1, Num: 1
Globalname: amount1, contract_name: HybridPool
End popogation
TMP_79(uint256) = liquidity_1 (c)* balance1_1
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_79

Name: TMP_79 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_80(uint256) = TMP_79 (c)/ _totalSupply_1
lnorm: 18 rnorm: u
Source address: u
lnorm: 18 rnorm: u
4
-1
[i]Type for TMP_80

Name: TMP_80 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
amount1_1(uint256) := TMP_80(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_81 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_81 = CONVERT this to address
Converting this
9
[i]Type for TMP_81

Name: TMP_81 Function: burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, TridentERC20._burn(address,uint256)(TMP_81,liquidity_1)
New param cache [[[], [], 'u', 'HybridPool', [], -1, 9, 'u'], [[4], [-1], 18, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'HybridPool', [], -1, 9], [[4], [-1], 18, None, [], -1, 'u']]
[[], [], 'u', 'HybridPool', [], -1, 9, 'u']

Name: sender Function: None
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_burn(address,uint256)
Propogating All
Propogating All
sender_1
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9

Name: sender_1 Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
sender_1
Ssa_name: sender_1, name: sender

Name: sender_1 Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9

Name: sender_1 Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] sender cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sender_1, name: sender

Name: sender_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9

Name: sender_1 Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balanceOf_9, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
sender_1(address) := ϕ(['TMP_81', 'TMP_99'])
Phi
[i]Type for sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['liquidity_1', 'liquidity_1'])
Phi
[i]Type for amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_3(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_9(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_17(uint256) -> balanceOf_9[sender_1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_17

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
balanceOf_10(mapping(address => uint256)) := ϕ(['balanceOf_9'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_17(-> balanceOf_10) = REF_17 (c)- amount_1
4
-1
lnorm: 18 rnorm: 18
4
-1
[i]Type for REF_17

Name: REF_17 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied balanceOf
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_4, name: totalSupply

Name: totalSupply Function: _burn
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
totalSupply_4(uint256) = totalSupply_3 - amount_1
4
-1
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Copied totalSupply
Source address: u
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_30

Name: TMP_30 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sender cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9

Name: sender_1 Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balanceOf_9, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
sender_1(address) := ϕ(['TMP_81', 'TMP_99'])
Phi
[i]Type for sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['liquidity_1', 'liquidity_1'])
Phi
[i]Type for amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_3(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_9(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_17(uint256) -> balanceOf_9[sender_1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_17

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
balanceOf_10(mapping(address => uint256)) := ϕ(['balanceOf_9'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_17(-> balanceOf_10) = REF_17 (c)- amount_1
4
-1
lnorm: 18 rnorm: 18
4
-1
[i]Type for REF_17

Name: REF_17 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied balanceOf
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_4, name: totalSupply

Name: totalSupply Function: _burn
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
totalSupply_4(uint256) = totalSupply_3 - amount_1
4
-1
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Copied totalSupply
Source address: u
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_30

Name: TMP_30 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_5, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_5, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token0_5,amount0_1,recipient_1,unwrapBento_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u'], [[], [], 0, None, [], -1, -991, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], 30, 'u', 'u']

Name: amount Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
[[], [], 0, None, [], -1, -991, 'u']

Name: to Function: None
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: token1_6, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: token1_6, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token1_6,amount1_1,recipient_1,unwrapBento_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u'], [[], [], 0, None, [], -1, -991, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], 30, 'u', 'u']

Name: amount Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
[[], [], 0, None, [], -1, -991, 'u']

Name: to Function: None
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_85 cleared
[i] balance0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_7, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_7, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_2, name: balance0

Name: balance0 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance0, Num: 2
Globalname: balance0, contract_name: HybridPool
End popogation
TMP_85(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token0_7,amount0_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[i]Type for TMP_85

Name: TMP_85 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance0_2(uint256) = balance0_1 (c)- TMP_85
Source address: u
[i]Type for balance0

Name: balance0 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_86 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1_8, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_8, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_2, name: balance1

Name: balance1 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance1, Num: 2
Globalname: balance1, contract_name: HybridPool
End popogation
TMP_86(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token1_8,amount1_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[4], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_86

Name: TMP_86 Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance1_2(uint256) = balance1_1 (c)- TMP_86
Source address: u
[i]Type for balance1

Name: balance1 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, HybridPool._updateReserves()()
New param cache []
Old param cache: []
[i] withdrawnAmounts cleared
Propogating parameters and globals to SSA variables...
Ssa_name: withdrawnAmounts_1, name: withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawnAmounts, Num: 1
Globalname: withdrawnAmounts, contract_name: HybridPool
End popogation
TMP_89 = new IPool.TokenAmount[](2)
[i]Type for TMP_89

Name: TMP_89 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
withdrawnAmounts_1(IPool.TokenAmount[]) := TMP_89(IPool.TokenAmount)
asgn
Finance type key: (-1, -1)
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] withdrawnAmounts cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_10, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_10, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: withdrawnAmounts_2, name: withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawnAmounts, Num: 2
Globalname: withdrawnAmounts, contract_name: HybridPool
End popogation
Ssa_name: withdrawnAmounts_2, name: withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawnAmounts, Num: 2
Globalname: withdrawnAmounts, contract_name: HybridPool
REF_43(IPool.TokenAmount) -> withdrawnAmounts_1[0]
INDEX
[i]Type for REF_43

Name: withdrawnAmounts Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_90 = new TokenAmount(token0_10,amount0_1)
[i]Type for TMP_90

Name: TMP_90 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
withdrawnAmounts_2(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_1'])
Phi

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_43 (->withdrawnAmounts_2) := TMP_90(IPool.TokenAmount)
asgn
Finance type key: (-1, -1)
[i]Type for REF_43

Name: REF_43 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
[i] withdrawnAmounts cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1_10, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1_10, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawnAmounts_3, name: withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawnAmounts, Num: 3
Globalname: withdrawnAmounts, contract_name: HybridPool
End popogation
Ssa_name: withdrawnAmounts_3, name: withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawnAmounts, Num: 3
Globalname: withdrawnAmounts, contract_name: HybridPool
REF_44(IPool.TokenAmount) -> withdrawnAmounts_2[1]
INDEX
[i]Type for REF_44

Name: withdrawnAmounts Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_91 = new TokenAmount(token1_10,amount1_1)
[i]Type for TMP_91

Name: TMP_91 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
withdrawnAmounts_3(IPool.TokenAmount[]) := ϕ(['withdrawnAmounts_2'])
Phi

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for withdrawnAmounts

Name: withdrawnAmounts Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_44 (->withdrawnAmounts_3) := TMP_91(IPool.TokenAmount)
asgn
Finance type key: (-1, -1)
[i]Type for REF_44

Name: REF_44 Function: burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burn
Num: 
Den: 
Address: -991
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
Source address: u
Reading Function: burnSingle
Checking funcion...



burnSingle
Function name: burnSingle
Finding type for data(bytes ... )
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
burnSingle(bytes)


totalSupply_12(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
balanceOf_14(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
token0_11(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
token1_11(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
MODIFIER_CALL, HybridPool.lock()()
TUPLE_11(address,address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool))
tokenOut_1(address)= UNPACK TUPLE_11 index: 0 
recipient_1(address)= UNPACK TUPLE_11 index: 1 
unwrapBento_1(bool)= UNPACK TUPLE_11 index: 2 
TUPLE_12(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
token0_13(address) := ϕ(['token0_39'])
token1_13(address) := ϕ(['token1_40'])
_reserve0_1(uint256)= UNPACK TUPLE_12 index: 0 
_reserve1_1(uint256)= UNPACK TUPLE_12 index: 1 
TUPLE_13(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
token0_14(address) := ϕ(['token0_42'])
token1_14(address) := ϕ(['token1_45'])
balance0_1(uint256)= UNPACK TUPLE_13 index: 0 
balance1_1(uint256)= UNPACK TUPLE_13 index: 1 
_totalSupply_1(uint256) := totalSupply_15(uint256)
TMP_94 = CONVERT this to address
REF_46(uint256) -> balanceOf_17[TMP_94]
liquidity_1(uint256) := REF_46(uint256)
TMP_95(uint256) = liquidity_1 (c)* balance0_1
TMP_96(uint256) = TMP_95 (c)/ _totalSupply_1
amount0_1(uint256) := TMP_96(uint256)
TMP_97(uint256) = liquidity_1 (c)* balance1_1
TMP_98(uint256) = TMP_97 (c)/ _totalSupply_1
amount1_1(uint256) := TMP_98(uint256)
TMP_99 = CONVERT this to address
INTERNAL_CALL, TridentERC20._burn(address,uint256)(TMP_99,liquidity_1)
TMP_101(bool) = tokenOut_1 == token1_15
CONDITION TMP_101
TMP_102(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(token0_15,amount0_1)
fee_1(uint256) := TMP_102(uint256)
TMP_109(bool) = tokenOut_1 == token0_15
TMP_110(None) = SOLIDITY_CALL require(bool,string)(TMP_109,INVALID_OUTPUT_TOKEN)
TMP_111(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(token1_15,amount1_1)
fee_scope_0_1(uint256) := TMP_111(uint256)
TMP_103(uint256) = amount0_1 (c)- fee_1
TMP_104(uint256) = _reserve0_1 (c)- amount0_1
TMP_105(uint256) = _reserve1_1 (c)- amount1_1
TMP_106(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_103,TMP_104,TMP_105,True)
amount1_2(uint256) = amount1_1 (c)+ TMP_106
TMP_112(uint256) = amount1_1 (c)- fee_scope_0_1
TMP_113(uint256) = _reserve0_1 (c)- amount0_1
TMP_114(uint256) = _reserve1_1 (c)- amount1_1
TMP_115(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_112,TMP_113,TMP_114,False)
amount0_3(uint256) = amount0_1 (c)+ TMP_115
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token1_17,amount1_2,recipient_1,unwrapBento_1)
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token0_21,amount0_3,recipient_1,unwrapBento_1)
TMP_108(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token0_18,amount0_1)
balance0_2(uint256) = balance0_1 (c)- TMP_108
TMP_117(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token1_21,amount1_1)
balance1_2(uint256) = balance1_1 (c)- TMP_117
amountOut_1(uint256) := amount1_2(uint256)
amountOut_2(uint256) := amount0_3(uint256)
amount0_2(uint256) := 0(uint256)
amount0_4(uint256) := ϕ(['amount0_2', 'amount0_3'])
amount1_4(uint256) := ϕ(['amount1_2', 'amount1_3'])
amount1_3(uint256) := 0(uint256)
INTERNAL_CALL, HybridPool._updateReserves()()
Emit Burn(msg.sender,amount0_4,amount1_4,recipient_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: totalSupply_12, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 12
Globalname: totalSupply, contract_name: HybridPool
global...

Name: totalSupply Function: _burn
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u
Ssa_name: balanceOf_14, name: balanceOf

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balanceOf, Num: 14
Globalname: balanceOf, contract_name: HybridPool
global...

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: token0_11, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 11
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token1_11, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 11
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
totalSupply_12(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_14(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_11(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_11(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
Phi
[i]Type for token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, HybridPool.lock()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] tokenOut cleared
[i] recipient cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: tokenOut_1, name: tokenOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 1
Globalname: tokenOut, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
TUPLE_11(address,address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool))
[i]Type for TUPLE_11

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenOut_1(address)= UNPACK TUPLE_11 index: 0 
Finding type for tokenOut(address ... )
prev address? u
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
[i]Type for tokenOut

Name: tokenOut Function: burnSingle
Num: 
Den: 
Address: -995
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
recipient_1(address)= UNPACK TUPLE_11 index: 1 
Finding type for recipient(address ... )
Addr:burnSingle_recipient : 0
prev address? u
-990
Head Addr: -990
    Norm: 0
    Set: {-990}
    Fin: NULL
[i]Type for recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool)= UNPACK TUPLE_11 index: 2 
Finding type for unwrapBento(bool ... )
[i]Type for unwrapBento

Name: unwrapBento Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
End popogation
Ssa_name: token0_13, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 13
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token1_13, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 13
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
TUPLE_12(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_12

Name: TUPLE_12 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_13(address) := ϕ(['token0_39'])
Phi
[i]Type for token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_13(address) := ϕ(['token1_40'])
Phi
[i]Type for token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256)= UNPACK TUPLE_12 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve0

Name: _reserve0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256)= UNPACK TUPLE_12 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve1

Name: _reserve1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] balance0 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance0, Num: 1
Globalname: balance0, contract_name: HybridPool
Ssa_name: balance1_1, name: balance1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance1, Num: 1
Globalname: balance1, contract_name: HybridPool
End popogation
Ssa_name: token0_14, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 14
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token1_14, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 14
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
TUPLE_13(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
New param cache []
Old param cache: []
[i]Type for TUPLE_13

Name: TUPLE_13 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_14(address) := ϕ(['token0_42'])
Phi
[i]Type for token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_14(address) := ϕ(['token1_45'])
Phi
[i]Type for token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
balance0_1(uint256)= UNPACK TUPLE_13 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance1_1(uint256)= UNPACK TUPLE_13 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalSupply_15, name: totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalSupply, Num: 15
Globalname: totalSupply, contract_name: HybridPool
global...

Name: totalSupply Function: _burn
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u
Ssa_name: totalSupply_15, name: totalSupply

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _totalSupply_1, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 1
Globalname: _totalSupply, contract_name: HybridPool
End popogation
_totalSupply_1(uint256) := totalSupply_15(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_94 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceOf_17, name: balanceOf

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balanceOf, Num: 17
Globalname: balanceOf, contract_name: HybridPool
global...

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: balanceOf_17, name: balanceOf

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_94 = CONVERT this to address
Converting this
9
[i]Type for TMP_94

Name: TMP_94 Function: burnSingle
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> balanceOf_17[TMP_94]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_46

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
liquidity_1(uint256) := REF_46(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_95 cleared
[i] TMP_96 cleared
[i] amount0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount0, Num: 1
Globalname: amount0, contract_name: HybridPool
End popogation
TMP_95(uint256) = liquidity_1 (c)* balance0_1
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_95

Name: TMP_95 Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_96(uint256) = TMP_95 (c)/ _totalSupply_1
lnorm: 18 rnorm: u
Source address: u
Source address: u
lnorm: 18 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_96

Name: TMP_96 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
amount0_1(uint256) := TMP_96(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_97 cleared
[i] TMP_98 cleared
[i] amount1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount1, Num: 1
Globalname: amount1, contract_name: HybridPool
End popogation
TMP_97(uint256) = liquidity_1 (c)* balance1_1
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_97

Name: TMP_97 Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_98(uint256) = TMP_97 (c)/ _totalSupply_1
lnorm: 18 rnorm: u
Source address: u
Source address: u
lnorm: 18 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_98

Name: TMP_98 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
amount1_1(uint256) := TMP_98(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_99 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_99 = CONVERT this to address
Converting this
9
[i]Type for TMP_99

Name: TMP_99 Function: burnSingle
Num: -1
Den: -1
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, TridentERC20._burn(address,uint256)(TMP_99,liquidity_1)
New param cache [[[-1], [-1], 'u', 'HybridPool', [], -1, 9, 'u'], [[4], [-1], 18, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'HybridPool', [], -1, 9], [[4], [-1], 18, None, [], -1, 'u']]
[i] TMP_101 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: burnSingle
Num: 
Den: 
Address: -995
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_15, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 15
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: burnSingle
Num: 
Den: 
Address: -995
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_15, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_101(bool) = tokenOut_1 == token1_15
[i]Type for TMP_101

Name: TMP_101 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_102 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_15, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 15
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token0_15, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: fee_1, name: fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_102(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(token0_15,amount0_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: tokenIn Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_handleFee(address,uint256)
Propogating All
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
fee_1
Ssa_name: fee_1, name: fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
tokenIn_1
Ssa_name: tokenIn_1, name: tokenIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: tokenIn_1 Function: _handleFee
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
_barFee_1
Ssa_name: _barFee_1, name: _barFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: tokenIn_1 Function: _handleFee
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_FEE, Num: 7
Globalname: MAX_FEE, contract_name: HybridPool
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: swapFee_7, name: swapFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: swapFee, Num: 7
Globalname: swapFee, contract_name: HybridPool
global...

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: barFeeTo_16, name: barFeeTo

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: barFeeTo, Num: 16
Globalname: barFeeTo, contract_name: HybridPool
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5
Ssa_name: barFee_3, name: barFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: barFee, Num: 3
Globalname: barFee, contract_name: HybridPool
global...

Name: barFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: 18 rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: 18 rnorm: u
lnorm: 18 rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _barFee_1, name: _barFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: 18 rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: 18 rnorm: u
lnorm: 18 rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -991
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: tokenIn_1 Function: _handleFee
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: 18 rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: 18 rnorm: u
lnorm: 18 rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: 18 rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: 18 rnorm: u
lnorm: 18 rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_102(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_109 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: burnSingle
Num: 
Den: 
Address: -995
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_15, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: burnSingle
Num: 
Den: 
Address: -995
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_15, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_109(bool) = tokenOut_1 == token0_15
[i]Type for TMP_109

Name: TMP_109 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110(None) = SOLIDITY_CALL require(bool,string)(TMP_109,INVALID_OUTPUT_TOKEN)
[i]Type for TMP_110

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_111 cleared
[i] fee_scope_0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1_15, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1_15, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_scope_0_1, name: fee_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee_scope_0, Num: 1
Globalname: fee_scope_0, contract_name: HybridPool
End popogation
TMP_111(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(token1_15,amount1_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: tokenIn Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_handleFee(address,uint256)
Propogating All
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
fee_1
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Propogating All
tokenIn_1
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: tokenIn_1 Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
_barFee_1
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: tokenIn_1 Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: 18 rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: 18 rnorm: u
lnorm: 18 rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: 18 rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: 18 rnorm: u
lnorm: 18 rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: tokenIn_1 Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: 18 rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: 18 rnorm: u
lnorm: 18 rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: 18 rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: 18 rnorm: u
lnorm: 18 rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_111

Name: TMP_111 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_scope_0_1(uint256) := TMP_111(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for fee_scope_0

Name: fee_scope_0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_103 cleared
[i] TMP_104 cleared
[i] TMP_105 cleared
[i] TMP_106 cleared
[i] amount1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: fee_1, name: fee

Name: fee Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount1_2, name: amount1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount1, Num: 2
Globalname: amount1, contract_name: HybridPool
End popogation
TMP_103(uint256) = amount0_1 (c)- fee_1
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_104(uint256) = _reserve0_1 (c)- amount0_1
Source address: u
[i]Type for TMP_104

Name: TMP_104 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_105(uint256) = _reserve1_1 (c)- amount1_1
Source address: u
[i]Type for TMP_105

Name: TMP_105 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_106(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_103,TMP_104,TMP_105,True)
New param cache [[[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: token0In Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getAmountOut(uint256,uint256,uint256,bool)
Propogating All
Propogating All
Propogating All
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
amountIn_4
Ssa_name: amountIn_4, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
x_1
Ssa_name: x_1, name: x

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
d_1
Ssa_name: d_1, name: d

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
y_1
Ssa_name: y_1, name: y

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0PrecisionMultiplier, Num: 2
Globalname: token0PrecisionMultiplier, contract_name: HybridPool
global...

Name: token0PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1PrecisionMultiplier, Num: 2
Globalname: token1PrecisionMultiplier, contract_name: HybridPool
global...

Name: token1PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: xpIn_1, name: xpIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: xpOut_1, name: xpOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amountIn_2, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: d_1, name: d

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], 30, 'u', 10], [[-1], [-1], 1, None, [], 30, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[[-1], [-1], 1, None, [], 30, 'u', 10]

Name: xp0 Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
[[-1], [-1], 1, None, [], 30, 'u', 10]

Name: xp1 Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_computeLiquidityFromAdjustedBalances(uint256,uint256)
Propogating All
Propogating All
xp1_1
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
xp0_1
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
s_1
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
Propogating All
s_1
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Propogating All
xp1_1
Ssa_name: xp1_1, name: xp1

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
xp0_1
Ssa_name: xp0_1, name: xp0

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
D_2
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
D_2
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
s_1
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
D_2
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
dP_1
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
Propogating All
D_3
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
D_3
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
prevD_1
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
[i] xp0 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: xp0_1, name: xp0

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: xp1_1, name: xp1

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xp0_1', 'xpIn_3'])
Phi
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
Phi
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
Phi
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
Phi
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
Phi
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_215 cleared
[i] s cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: s, Num: 1
Globalname: s, contract_name: HybridPool
End popogation
TMP_215(uint256) = xp0_1 (c)+ xp1_1
Finance type key: (30, 30)
Error with TMP_215 in function _computeLiquidityFromAdjustedBalances
Error with: TMP_215 in function _computeLiquidityFromAdjustedBalances
Source address: u
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
s_1(uint256) := TMP_215(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_216 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
End popogation
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: computed_1, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: computed, Num: 1
Globalname: computed, contract_name: HybridPool
End popogation
computed_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
End popogation
D_1(uint256) := s_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: HybridPool
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
[i] i cleared
[i] TMP_217 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
End popogation
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
D_2(uint256) := ϕ(['D_3', 'D_1'])
Phi

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
lnorm: 0 rnorm: u
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_218 cleared
[i] TMP_219 cleared
[i] TMP_220 cleared
[i] TMP_221 cleared
[i] TMP_222 cleared
[i] dP cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: dP, Num: 1
Globalname: dP, contract_name: HybridPool
End popogation
TMP_218(uint256) = D_2 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 400
Fields: 
Finance Type: undef
XXXX
TMP_219(uint256) = TMP_218 (c)/ xp0_1
lnorm: u rnorm: 1
lnorm: u rnorm: 1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 40
Fields: 
Finance Type: reserve
XXXX
TMP_220(uint256) = TMP_219 (c)* D_2
lnorm: -1 rnorm: u
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 800
Fields: 
Finance Type: reserve
XXXX
TMP_221(uint256) = TMP_220 (c)/ xp1_1
lnorm: -1 rnorm: 1
Finance type key: (30, 30)
Error with TMP_221 in function _computeLiquidityFromAdjustedBalances
Error with: TMP_221 in function _computeLiquidityFromAdjustedBalances
lnorm: -1 rnorm: 1
Finance type key: (30, 30)
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_222(uint256) = TMP_221 (c)/ 4
lnorm: -2 rnorm: 0
lnorm: -2 rnorm: 0
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
dP_1(uint256) := TMP_222(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] prevD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: prevD, Num: 1
Globalname: prevD, contract_name: HybridPool
End popogation
prevD_1(uint256) := D_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_223 cleared
[i] TMP_224 cleared
[i] TMP_225 cleared
[i] TMP_226 cleared
[i] TMP_227 cleared
[i] TMP_228 cleared
[i] TMP_229 cleared
[i] TMP_230 cleared
[i] TMP_231 cleared
[i] TMP_232 cleared
[i] TMP_233 cleared
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 3
Globalname: D, contract_name: HybridPool
End popogation
TMP_223(uint256) = N_A_2 (c)* s_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_225(uint256) = 2 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = TMP_224 (c)+ TMP_225
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_227(uint256) = TMP_226 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1600
Fields: 
Finance Type: undef
XXXX
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_229(uint256) = TMP_228 (c)- 1
Source address: u
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_230(uint256) = TMP_229 (c)* D_2
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
TMP_231(uint256) = 3 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 60
Fields: 
Finance Type: undef
XXXX
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Source address: u
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_233(uint256) = TMP_227 (c)/ TMP_232
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
D_3(uint256) := TMP_233(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: computed_2, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: computed, Num: 2
Globalname: computed, contract_name: HybridPool
End popogation
computed_2(uint256) := D_3(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_234 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
End popogation
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_235 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: HybridPool
End popogation
TMP_235(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
[i] xp0 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xp0_1', 'xpIn_3'])
Phi
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
Phi
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
Phi
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
Phi
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
Phi
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_215 cleared
[i] s cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: s, Num: 1
Globalname: s, contract_name: HybridPool
End popogation
TMP_215(uint256) = xp0_1 (c)+ xp1_1
Finance type key: (30, 30)
Source address: u
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
s_1(uint256) := TMP_215(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_216 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
End popogation
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: computed_1, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: computed, Num: 1
Globalname: computed, contract_name: HybridPool
End popogation
computed_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
End popogation
D_1(uint256) := s_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: HybridPool
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
[i] i cleared
[i] TMP_217 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
End popogation
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 2
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
D_2(uint256) := ϕ(['D_3', 'D_1'])
Phi

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
lnorm: 0 rnorm: u
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_218 cleared
[i] TMP_219 cleared
[i] TMP_220 cleared
[i] TMP_221 cleared
[i] TMP_222 cleared
[i] dP cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: dP, Num: 1
Globalname: dP, contract_name: HybridPool
End popogation
TMP_218(uint256) = D_2 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 400
Fields: 
Finance Type: undef
XXXX
TMP_219(uint256) = TMP_218 (c)/ xp0_1
lnorm: u rnorm: 1
lnorm: u rnorm: 1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 40
Fields: 
Finance Type: reserve
XXXX
TMP_220(uint256) = TMP_219 (c)* D_2
lnorm: -1 rnorm: u
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 800
Fields: 
Finance Type: reserve
XXXX
TMP_221(uint256) = TMP_220 (c)/ xp1_1
lnorm: -1 rnorm: 1
Finance type key: (30, 30)
lnorm: -1 rnorm: 1
Finance type key: (30, 30)
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_222(uint256) = TMP_221 (c)/ 4
lnorm: -2 rnorm: 0
lnorm: -2 rnorm: 0
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
dP_1(uint256) := TMP_222(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] prevD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: prevD, Num: 1
Globalname: prevD, contract_name: HybridPool
End popogation
prevD_1(uint256) := D_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_223 cleared
[i] TMP_224 cleared
[i] TMP_225 cleared
[i] TMP_226 cleared
[i] TMP_227 cleared
[i] TMP_228 cleared
[i] TMP_229 cleared
[i] TMP_230 cleared
[i] TMP_231 cleared
[i] TMP_232 cleared
[i] TMP_233 cleared
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 3
Globalname: D, contract_name: HybridPool
End popogation
TMP_223(uint256) = N_A_2 (c)* s_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_225(uint256) = 2 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = TMP_224 (c)+ TMP_225
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_227(uint256) = TMP_226 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1600
Fields: 
Finance Type: undef
XXXX
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_229(uint256) = TMP_228 (c)- 1
Source address: u
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_230(uint256) = TMP_229 (c)* D_2
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
TMP_231(uint256) = 3 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 60
Fields: 
Finance Type: undef
XXXX
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Source address: u
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_233(uint256) = TMP_227 (c)/ TMP_232
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
D_3(uint256) := TMP_233(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: computed_2, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: computed, Num: 2
Globalname: computed, contract_name: HybridPool
End popogation
computed_2(uint256) := D_3(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_234 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
End popogation
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_235 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: HybridPool
End popogation
TMP_235(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 3
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: x_1, name: x

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Finance type key: (30, 30)
Error with TMP_201 in function _getAmountOut
Error with: TMP_201 in function _getAmountOut
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: xpIn_2, name: xpIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 20]

Name: x Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: D Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getY(uint256,uint256)
Propogating All
Propogating All
x_1
Ssa_name: x_1, name: x

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: x_1 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Copied ftype
D_1
Ssa_name: D_1, name: D

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
D_1
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
c_1
Ssa_name: c_1, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
x_1
Ssa_name: x_1, name: x

Name: x_1 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Source address: u

Name: x_1 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Copied ftype
D_1
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
D_1
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
y_2
Ssa_name: y_2, name: y

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
b_1
Ssa_name: b_1, name: b

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_2
Ssa_name: y_2, name: y

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
D_1
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
c_2
Ssa_name: c_2, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
yPrev_1
Ssa_name: yPrev_1, name: yPrev

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
y_3
Ssa_name: y_3, name: y

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] x cleared
[i] D cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: x_1, name: x

Name: x_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Source address: u

Name: x_1 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_2, name: MAX_LOOP_LIMIT

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_LOOP_LIMIT, Num: 2
Globalname: MAX_LOOP_LIMIT, contract_name: HybridPool
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: N_A_3, name: N_A

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: N_A, Num: 3
Globalname: N_A, contract_name: HybridPool
global...

Name: N_A Function: constructor
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Source address: u
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: A_PRECISION, Num: 2
Globalname: A_PRECISION, contract_name: HybridPool
global...

Name: PIC_1 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
x_1(uint256) := ϕ(['x_1'])
Phi
[i]Type for x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
D_1(uint256) := ϕ(['d_1'])
Phi

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
Phi
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
Phi
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
Phi
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_236 cleared
[i] TMP_237 cleared
[i] TMP_238 cleared
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_1, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: HybridPool
End popogation
TMP_236(uint256) = D_1 (c)* D_1
lnorm: u rnorm: u
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = x_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_236 (c)/ TMP_237
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
c_1(uint256) := TMP_238(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
[i] TMP_239 cleared
[i] TMP_240 cleared
[i] TMP_241 cleared
[i] TMP_242 cleared
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_1, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_1, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_2, name: c

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: HybridPool
End popogation
TMP_239(uint256) = c_1 (c)* D_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_240(uint256) = N_A_3 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_242(uint256) = TMP_239 (c)/ TMP_241
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
c_2(uint256) := TMP_242(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_243 cleared
[i] TMP_244 cleared
[i] TMP_245 cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: b, Num: 1
Globalname: b, contract_name: HybridPool
End popogation
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244(uint256) = TMP_243 (c)/ N_A_3
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_245(uint256) = x_1 (c)+ TMP_244
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
b_1(uint256) := TMP_245(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
y_1(uint256) := D_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: HybridPool
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] y cleared
[i] i cleared
[i] TMP_246 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_2, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_LOOP_LIMIT_2, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: y_2, name: y

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 2
Globalname: y, contract_name: HybridPool
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
End popogation
Ssa_name: y_2, name: y

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 2
Globalname: y, contract_name: HybridPool
Ssa_name: i_2, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
y_2(uint256) := ϕ(['y_1', 'y_3'])
Phi

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_1', 'i_3'])
Phi

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
lnorm: u rnorm: u
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] yPrev cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 2
Globalname: y, contract_name: HybridPool
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 2
Globalname: y, contract_name: HybridPool
Ssa_name: yPrev_1, name: yPrev

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: yPrev, Num: 1
Globalname: yPrev, contract_name: HybridPool
End popogation
yPrev_1(uint256) := y_2(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_247 cleared
[i] TMP_248 cleared
[i] TMP_249 cleared
[i] TMP_250 cleared
[i] TMP_251 cleared
[i] TMP_252 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 2
Globalname: y, contract_name: HybridPool
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_2, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 2
Globalname: y, contract_name: HybridPool
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_2, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_3, name: y

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 3
Globalname: y, contract_name: HybridPool
End popogation
TMP_247(uint256) = y_2 (c)* y_2
lnorm: u rnorm: u
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_248(uint256) = TMP_247 (c)+ c_2
Source address: u
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_249(uint256) = y_2 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_250(uint256) = TMP_249 (c)+ b_1
Source address: u
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 24
Fields: 
Finance Type: undef
XXXX
TMP_251(uint256) = TMP_250 (c)- D_1
Source address: u
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 24
Fields: 
Finance Type: undef
XXXX
TMP_252(uint256) = TMP_248 (c)/ TMP_251
lnorm: 1 rnorm: 0
lnorm: 1 rnorm: 0
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
y_3(uint256) := TMP_252(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_253 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: yPrev_1, name: yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: yPrev, Num: 1
Globalname: yPrev, contract_name: HybridPool
Ssa_name: y_3, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: yPrev_1, name: yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: yPrev, Num: 1
Globalname: yPrev, contract_name: HybridPool
Ssa_name: y_3, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_254 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: HybridPool
End popogation
TMP_254(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
[i] x cleared
[i] D cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Source address: u

Name: x_1 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_2, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
Phi
[i]Type for x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
D_1(uint256) := ϕ(['d_1'])
Phi

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
Phi
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
Phi
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
Phi
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_236 cleared
[i] TMP_237 cleared
[i] TMP_238 cleared
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_1, name: c

Name: c Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 40
Fields: 
Finance Type: undef
Name: c, Num: 1
Globalname: c, contract_name: HybridPool
End popogation
TMP_236(uint256) = D_1 (c)* D_1
lnorm: u rnorm: u
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = x_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_236 (c)/ TMP_237
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
c_1(uint256) := TMP_238(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
[i] TMP_239 cleared
[i] TMP_240 cleared
[i] TMP_241 cleared
[i] TMP_242 cleared
[i] c cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_1, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_1, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_2, name: c

Name: c Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: c, Num: 2
Globalname: c, contract_name: HybridPool
End popogation
TMP_239(uint256) = c_1 (c)* D_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_240(uint256) = N_A_3 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_242(uint256) = TMP_239 (c)/ TMP_241
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
c_2(uint256) := TMP_242(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_243 cleared
[i] TMP_244 cleared
[i] TMP_245 cleared
[i] b cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 22
Fields: 
Finance Type: undef
Name: b, Num: 1
Globalname: b, contract_name: HybridPool
End popogation
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244(uint256) = TMP_243 (c)/ N_A_3
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_245(uint256) = x_1 (c)+ TMP_244
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
b_1(uint256) := TMP_245(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
y_1(uint256) := D_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: HybridPool
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] y cleared
[i] i cleared
[i] TMP_246 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_2, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_LOOP_LIMIT_2, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 2
Globalname: y, contract_name: HybridPool
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
End popogation
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 2
Globalname: y, contract_name: HybridPool
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
y_2(uint256) := ϕ(['y_1', 'y_3'])
Phi

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_1', 'i_3'])
Phi

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
lnorm: u rnorm: u
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] yPrev cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: yPrev_1, name: yPrev

Name: yPrev Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: yPrev, Num: 1
Globalname: yPrev, contract_name: HybridPool
End popogation
yPrev_1(uint256) := y_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_247 cleared
[i] TMP_248 cleared
[i] TMP_249 cleared
[i] TMP_250 cleared
[i] TMP_251 cleared
[i] TMP_252 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_2, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_2, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_3, name: y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: y, Num: 3
Globalname: y, contract_name: HybridPool
End popogation
TMP_247(uint256) = y_2 (c)* y_2
lnorm: 1 rnorm: 1
Source address: u
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 2
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_248(uint256) = TMP_247 (c)+ c_2
Source address: u
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_249(uint256) = y_2 (c)* 2
lnorm: 1 rnorm: 0
Source address: u
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_250(uint256) = TMP_249 (c)+ b_1
Source address: u
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
TMP_251(uint256) = TMP_250 (c)- D_1
Source address: u
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
TMP_252(uint256) = TMP_248 (c)/ TMP_251
lnorm: 1 rnorm: 0
lnorm: 1 rnorm: 0
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
y_3(uint256) := TMP_252(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_253 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: yPrev_1, name: yPrev

Name: yPrev Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: y_3, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: yPrev_1, name: yPrev

Name: yPrev Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: y_3, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_254 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: HybridPool
End popogation
TMP_254(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_2, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
Phi
[i]Type for x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
D_1(uint256) := ϕ(['d_1'])
Phi

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
Phi
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
Phi
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
Phi
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_1, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
End popogation
TMP_236(uint256) = D_1 (c)* D_1
lnorm: u rnorm: u
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = x_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_236 (c)/ TMP_237
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
c_1(uint256) := TMP_238(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_1, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_1, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_2, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
End popogation
TMP_239(uint256) = c_1 (c)* D_1
lnorm: 0 rnorm: u
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_240(uint256) = N_A_3 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_242(uint256) = TMP_239 (c)/ TMP_241
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
c_2(uint256) := TMP_242(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
End popogation
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
lnorm: u rnorm: u
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244(uint256) = TMP_243 (c)/ N_A_3
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_245(uint256) = x_1 (c)+ TMP_244
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
b_1(uint256) := TMP_245(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
y_1(uint256) := D_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: MAX_LOOP_LIMIT_2, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_LOOP_LIMIT_2, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
Phi
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_1', 'i_3'])
Phi
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
lnorm: u rnorm: u
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: yPrev_1, name: yPrev

Name: yPrev Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
yPrev_1(uint256) := y_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_2, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_2, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_3, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_247(uint256) = y_2 (c)* y_2
lnorm: 1 rnorm: 1
Source address: u
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 2
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_248(uint256) = TMP_247 (c)+ c_2
Source address: u
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_249(uint256) = y_2 (c)* 2
lnorm: 1 rnorm: 0
Source address: u
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_250(uint256) = TMP_249 (c)+ b_1
Source address: u
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
TMP_251(uint256) = TMP_250 (c)- D_1
Source address: u
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
TMP_252(uint256) = TMP_248 (c)/ TMP_251
lnorm: 1 rnorm: 0
lnorm: 1 rnorm: 0
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
y_3(uint256) := TMP_252(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: yPrev_1, name: yPrev

Name: yPrev Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: y_3, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: yPrev_1, name: yPrev

Name: yPrev Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: y_3, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
TMP_254(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_2, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
x_1(uint256) := ϕ(['x_1'])
Phi
[i]Type for x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
D_1(uint256) := ϕ(['d_1'])
Phi

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_LOOP_LIMIT_2(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
Phi
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
N_A_3(uint256) := ϕ(['N_A_0', 'N_A_1'])
Phi
[i]Type for N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
A_PRECISION_2(uint256) := ϕ(['A_PRECISION_0'])
Phi
[i]Type for A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_1, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
End popogation
TMP_236(uint256) = D_1 (c)* D_1
lnorm: u rnorm: u
[i]Type for TMP_236

Name: TMP_236 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(uint256) = x_1 (c)* 2
lnorm: u rnorm: 0
Source address: u
[i]Type for TMP_237

Name: TMP_237 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_238(uint256) = TMP_236 (c)/ TMP_237
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_238

Name: TMP_238 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
c_1(uint256) := TMP_238(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_1, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_1, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: c_2, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
End popogation
TMP_239(uint256) = c_1 (c)* D_1
lnorm: 0 rnorm: u
[i]Type for TMP_239

Name: TMP_239 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_240(uint256) = N_A_3 (c)* 2
lnorm: 0 rnorm: 0
Source address: u
[i]Type for TMP_240

Name: TMP_240 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_241(uint256) = TMP_240 (c)/ A_PRECISION_2
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_241

Name: TMP_241 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_242(uint256) = TMP_239 (c)/ TMP_241
lnorm: 0 rnorm: 0
lnorm: 0 rnorm: 0
[i]Type for TMP_242

Name: TMP_242 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
c_2(uint256) := TMP_242(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: N_A_3, name: N_A

Name: N_A Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: A_PRECISION_2, name: A_PRECISION

Name: A_PRECISION Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
End popogation
TMP_243(uint256) = D_1 (c)* A_PRECISION_2
lnorm: u rnorm: u
[i]Type for TMP_243

Name: TMP_243 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_244(uint256) = TMP_243 (c)/ N_A_3
lnorm: u rnorm: 0
lnorm: u rnorm: 0
[i]Type for TMP_244

Name: TMP_244 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_245(uint256) = x_1 (c)+ TMP_244
Source address: u
[i]Type for TMP_245

Name: TMP_245 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
b_1(uint256) := TMP_245(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
y_1(uint256) := D_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: MAX_LOOP_LIMIT_2, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_LOOP_LIMIT_2, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
y_2(uint256) := ϕ(['y_1', 'y_3'])
Phi
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_1', 'i_3'])
Phi
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_246(bool) = i_2 < MAX_LOOP_LIMIT_2
lnorm: u rnorm: u
[i]Type for TMP_246

Name: TMP_246 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: yPrev_1, name: yPrev

Name: yPrev Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
yPrev_1(uint256) := y_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for yPrev

Name: yPrev Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: b_1, name: b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_2, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: b_1, name: b

Name: b Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 22
Fields: 
Finance Type: undef
Ssa_name: y_2, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: D_1 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
Ssa_name: c_2, name: c

Name: c Function: _getY
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_3, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_247(uint256) = y_2 (c)* y_2
lnorm: 1 rnorm: 1
Source address: u
[i]Type for TMP_247

Name: TMP_247 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 2
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_248(uint256) = TMP_247 (c)+ c_2
Source address: u
[i]Type for TMP_248

Name: TMP_248 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_249(uint256) = y_2 (c)* 2
lnorm: 1 rnorm: 0
Source address: u
[i]Type for TMP_249

Name: TMP_249 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_250(uint256) = TMP_249 (c)+ b_1
Source address: u
[i]Type for TMP_250

Name: TMP_250 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
TMP_251(uint256) = TMP_250 (c)- D_1
Source address: u
[i]Type for TMP_251

Name: TMP_251 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 22
Fields: 
Finance Type: undef
XXXX
TMP_252(uint256) = TMP_248 (c)/ TMP_251
lnorm: 1 rnorm: 0
lnorm: 1 rnorm: 0
[i]Type for TMP_252

Name: TMP_252 Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
y_3(uint256) := TMP_252(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: yPrev_1, name: yPrev

Name: yPrev Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: y_3, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: yPrev_1, name: yPrev

Name: yPrev Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: y_3, name: y

Name: y Function: _getY
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_253(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['y_3', 'yPrev_1'] 
[i]Type for TMP_253

Name: TMP_253 Function: _getY
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
End popogation
TMP_254(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_254

Name: TMP_254 Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: _getY
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: xpOut_2, name: xpOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: dy_1, name: dy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: reserve
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1PrecisionMultiplier, Num: 4
Globalname: token1PrecisionMultiplier, contract_name: HybridPool
global...

Name: token1PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
Ssa_name: dy_3, name: dy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: reserve
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amountIn_3, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0PrecisionMultiplier, Num: 4
Globalname: token0PrecisionMultiplier, contract_name: HybridPool
global...

Name: token0PrecisionMultiplier Function: constructor
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: reserve
XXXX
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], 30, 'u', 10], [[-1], [-1], 1, None, [], 30, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[[-1], [-1], 1, None, [], 30, 'u', 10]

Name: xp0 Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
[[-1], [-1], 1, None, [], 30, 'u', 10]

Name: xp1 Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_computeLiquidityFromAdjustedBalances(uint256,uint256)
Propogating All
Propogating All
xp1_1
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
xp0_1
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
s_1
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
Propogating All
s_1
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Propogating All
xp1_1
Ssa_name: xp1_1, name: xp1

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
xp0_1
Ssa_name: xp0_1, name: xp0

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
D_2
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
D_2
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
s_1
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
D_2
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
dP_1
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
Propogating All
D_3
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
D_3
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
prevD_1
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
[i] xp0 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: xp0_1, name: xp0

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: xp1_1, name: xp1

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xp0_1', 'xpIn_3'])
Phi
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
Phi
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
Phi
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
Phi
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
Phi
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_215 cleared
[i] s cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: s, Num: 1
Globalname: s, contract_name: HybridPool
End popogation
TMP_215(uint256) = xp0_1 (c)+ xp1_1
Finance type key: (30, 30)
Source address: u
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
s_1(uint256) := TMP_215(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_216 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
End popogation
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: computed_1, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: computed, Num: 1
Globalname: computed, contract_name: HybridPool
End popogation
computed_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
End popogation
D_1(uint256) := s_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: HybridPool
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
[i] i cleared
[i] TMP_217 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
End popogation
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 3
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
D_2(uint256) := ϕ(['D_3', 'D_1'])
Phi

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
lnorm: 0 rnorm: u
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_218 cleared
[i] TMP_219 cleared
[i] TMP_220 cleared
[i] TMP_221 cleared
[i] TMP_222 cleared
[i] dP cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: dP, Num: 1
Globalname: dP, contract_name: HybridPool
End popogation
TMP_218(uint256) = D_2 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 400
Fields: 
Finance Type: undef
XXXX
TMP_219(uint256) = TMP_218 (c)/ xp0_1
lnorm: u rnorm: 1
lnorm: u rnorm: 1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 40
Fields: 
Finance Type: reserve
XXXX
TMP_220(uint256) = TMP_219 (c)* D_2
lnorm: -1 rnorm: u
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 800
Fields: 
Finance Type: reserve
XXXX
TMP_221(uint256) = TMP_220 (c)/ xp1_1
lnorm: -1 rnorm: 1
Finance type key: (30, 30)
lnorm: -1 rnorm: 1
Finance type key: (30, 30)
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_222(uint256) = TMP_221 (c)/ 4
lnorm: -2 rnorm: 0
lnorm: -2 rnorm: 0
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
dP_1(uint256) := TMP_222(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] prevD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: prevD, Num: 1
Globalname: prevD, contract_name: HybridPool
End popogation
prevD_1(uint256) := D_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_223 cleared
[i] TMP_224 cleared
[i] TMP_225 cleared
[i] TMP_226 cleared
[i] TMP_227 cleared
[i] TMP_228 cleared
[i] TMP_229 cleared
[i] TMP_230 cleared
[i] TMP_231 cleared
[i] TMP_232 cleared
[i] TMP_233 cleared
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 3
Globalname: D, contract_name: HybridPool
End popogation
TMP_223(uint256) = N_A_2 (c)* s_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_225(uint256) = 2 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = TMP_224 (c)+ TMP_225
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_227(uint256) = TMP_226 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1600
Fields: 
Finance Type: undef
XXXX
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_229(uint256) = TMP_228 (c)- 1
Source address: u
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_230(uint256) = TMP_229 (c)* D_2
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
TMP_231(uint256) = 3 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 60
Fields: 
Finance Type: undef
XXXX
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Source address: u
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_233(uint256) = TMP_227 (c)/ TMP_232
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
D_3(uint256) := TMP_233(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: computed_2, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: computed, Num: 2
Globalname: computed, contract_name: HybridPool
End popogation
computed_2(uint256) := D_3(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_234 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
End popogation
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_235 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: HybridPool
End popogation
TMP_235(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 4
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
[i] xp0 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xp0_1', 'xpIn_3'])
Phi
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
Phi
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
Phi
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
Phi
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
Phi
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_215 cleared
[i] s cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: s, Num: 1
Globalname: s, contract_name: HybridPool
End popogation
TMP_215(uint256) = xp0_1 (c)+ xp1_1
Finance type key: (30, 30)
Source address: u
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
s_1(uint256) := TMP_215(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_216 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
End popogation
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: computed_1, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: computed, Num: 1
Globalname: computed, contract_name: HybridPool
End popogation
computed_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_1, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
End popogation
D_1(uint256) := s_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: HybridPool
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
[i] i cleared
[i] TMP_217 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
End popogation
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 4
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
D_2(uint256) := ϕ(['D_3', 'D_1'])
Phi

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
lnorm: 0 rnorm: u
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_218 cleared
[i] TMP_219 cleared
[i] TMP_220 cleared
[i] TMP_221 cleared
[i] TMP_222 cleared
[i] dP cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: dP, Num: 1
Globalname: dP, contract_name: HybridPool
End popogation
TMP_218(uint256) = D_2 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 400
Fields: 
Finance Type: undef
XXXX
TMP_219(uint256) = TMP_218 (c)/ xp0_1
lnorm: u rnorm: 1
lnorm: u rnorm: 1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 40
Fields: 
Finance Type: reserve
XXXX
TMP_220(uint256) = TMP_219 (c)* D_2
lnorm: -1 rnorm: u
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 800
Fields: 
Finance Type: reserve
XXXX
TMP_221(uint256) = TMP_220 (c)/ xp1_1
lnorm: -1 rnorm: 1
Finance type key: (30, 30)
lnorm: -1 rnorm: 1
Finance type key: (30, 30)
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_222(uint256) = TMP_221 (c)/ 4
lnorm: -2 rnorm: 0
lnorm: -2 rnorm: 0
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
dP_1(uint256) := TMP_222(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] prevD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: prevD, Num: 1
Globalname: prevD, contract_name: HybridPool
End popogation
prevD_1(uint256) := D_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_223 cleared
[i] TMP_224 cleared
[i] TMP_225 cleared
[i] TMP_226 cleared
[i] TMP_227 cleared
[i] TMP_228 cleared
[i] TMP_229 cleared
[i] TMP_230 cleared
[i] TMP_231 cleared
[i] TMP_232 cleared
[i] TMP_233 cleared
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 3
Globalname: D, contract_name: HybridPool
End popogation
TMP_223(uint256) = N_A_2 (c)* s_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_225(uint256) = 2 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = TMP_224 (c)+ TMP_225
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_227(uint256) = TMP_226 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1600
Fields: 
Finance Type: undef
XXXX
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_229(uint256) = TMP_228 (c)- 1
Source address: u
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_230(uint256) = TMP_229 (c)* D_2
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
TMP_231(uint256) = 3 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 60
Fields: 
Finance Type: undef
XXXX
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Source address: u
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_233(uint256) = TMP_227 (c)/ TMP_232
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
D_3(uint256) := TMP_233(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: computed_2, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: computed, Num: 2
Globalname: computed, contract_name: HybridPool
End popogation
computed_2(uint256) := D_3(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_234 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
End popogation
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_235 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: HybridPool
End popogation
TMP_235(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 5
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Finance type key: (30, 30)
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: reserve
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: reserve
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: reserve
XXXX
Source address: u
Source address: u
[i]Type for TMP_106

Name: TMP_106 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount1_2(uint256) = amount1_1 (c)+ TMP_106
Source address: u
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_112 cleared
[i] TMP_113 cleared
[i] TMP_114 cleared
[i] TMP_115 cleared
[i] amount0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_scope_0_1, name: fee_scope_0

Name: fee_scope_0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee_scope_0, Num: 1
Globalname: fee_scope_0, contract_name: HybridPool
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_scope_0_1, name: fee_scope_0

Name: fee_scope_0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee_scope_0, Num: 1
Globalname: fee_scope_0, contract_name: HybridPool
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount0_3, name: amount0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount0, Num: 3
Globalname: amount0, contract_name: HybridPool
End popogation
TMP_112(uint256) = amount1_1 (c)- fee_scope_0_1
Source address: u
[i]Type for TMP_112

Name: TMP_112 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_113(uint256) = _reserve0_1 (c)- amount0_1
Source address: u
[i]Type for TMP_113

Name: TMP_113 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_114(uint256) = _reserve1_1 (c)- amount1_1
Source address: u
[i]Type for TMP_114

Name: TMP_114 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_115(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_112,TMP_113,TMP_114,False)
New param cache [[[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[i]Type for TMP_115

Name: TMP_115 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount0_3(uint256) = amount0_1 (c)+ TMP_115
Source address: u
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_2, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_17, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 17
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: amount1_2, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_17, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token1_17,amount1_2,recipient_1,unwrapBento_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[], [], 0, None, [], -1, -990, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
[[], [], 0, None, [], -1, -990, 'u']

Name: to Function: None
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_3, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_21, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 21
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_3, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_21, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token0_21,amount0_3,recipient_1,unwrapBento_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[], [], 0, None, [], -1, -990, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
[[], [], 0, None, [], -1, -990, 'u']

Name: to Function: None
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_108 cleared
[i] balance0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0_18, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 18
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0_18, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_2, name: balance0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance0, Num: 2
Globalname: balance0, contract_name: HybridPool
End popogation
TMP_108(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token0_18,amount0_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_108

Name: TMP_108 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance0_2(uint256) = balance0_1 (c)- TMP_108
Source address: u
[i]Type for balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_117 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1_21, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 21
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1_21, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_2, name: balance1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance1, Num: 2
Globalname: balance1, contract_name: HybridPool
End popogation
TMP_117(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token1_21,amount1_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_117

Name: TMP_117 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance1_2(uint256) = balance1_1 (c)- TMP_117
Source address: u
[i]Type for balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_2, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount1_2, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amountOut_1, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
End popogation
amountOut_1(uint256) := amount1_2(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for amountOut

Name: amountOut Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_3, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount0_3, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amountOut_2, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 2
Globalname: amountOut, contract_name: HybridPool
End popogation
amountOut_2(uint256) := amount0_3(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for amountOut

Name: amountOut Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] amount0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_2, name: amount0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount0, Num: 2
Globalname: amount0, contract_name: HybridPool
End popogation
amount0_2(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amount0 cleared
[i] amount1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amount0_4, name: amount0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount0, Num: 4
Globalname: amount0, contract_name: HybridPool
Ssa_name: amount1_4, name: amount1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount1, Num: 4
Globalname: amount1, contract_name: HybridPool
amount0_4(uint256) := ϕ(['amount0_2', 'amount0_3'])
Phi

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve


END==================================
Source address: u
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
amount1_4(uint256) := ϕ(['amount1_2', 'amount1_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] amount1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_3, name: amount1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount1, Num: 3
Globalname: amount1, contract_name: HybridPool
End popogation
amount1_3(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, HybridPool._updateReserves()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_4, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_4, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: amount1_4, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_4, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation


totalSupply_12(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
balanceOf_14(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
token0_11(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
token1_11(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
MODIFIER_CALL, HybridPool.lock()()
TUPLE_11(address,address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool))
tokenOut_1(address)= UNPACK TUPLE_11 index: 0 
recipient_1(address)= UNPACK TUPLE_11 index: 1 
unwrapBento_1(bool)= UNPACK TUPLE_11 index: 2 
TUPLE_12(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
token0_13(address) := ϕ(['token0_39'])
token1_13(address) := ϕ(['token1_40'])
_reserve0_1(uint256)= UNPACK TUPLE_12 index: 0 
_reserve1_1(uint256)= UNPACK TUPLE_12 index: 1 
TUPLE_13(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
token0_14(address) := ϕ(['token0_42'])
token1_14(address) := ϕ(['token1_45'])
balance0_1(uint256)= UNPACK TUPLE_13 index: 0 
balance1_1(uint256)= UNPACK TUPLE_13 index: 1 
_totalSupply_1(uint256) := totalSupply_15(uint256)
TMP_94 = CONVERT this to address
REF_46(uint256) -> balanceOf_17[TMP_94]
liquidity_1(uint256) := REF_46(uint256)
TMP_95(uint256) = liquidity_1 (c)* balance0_1
TMP_96(uint256) = TMP_95 (c)/ _totalSupply_1
amount0_1(uint256) := TMP_96(uint256)
TMP_97(uint256) = liquidity_1 (c)* balance1_1
TMP_98(uint256) = TMP_97 (c)/ _totalSupply_1
amount1_1(uint256) := TMP_98(uint256)
TMP_99 = CONVERT this to address
INTERNAL_CALL, TridentERC20._burn(address,uint256)(TMP_99,liquidity_1)
TMP_101(bool) = tokenOut_1 == token1_15
CONDITION TMP_101
TMP_102(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(token0_15,amount0_1)
fee_1(uint256) := TMP_102(uint256)
TMP_109(bool) = tokenOut_1 == token0_15
TMP_110(None) = SOLIDITY_CALL require(bool,string)(TMP_109,INVALID_OUTPUT_TOKEN)
TMP_111(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(token1_15,amount1_1)
fee_scope_0_1(uint256) := TMP_111(uint256)
TMP_103(uint256) = amount0_1 (c)- fee_1
TMP_104(uint256) = _reserve0_1 (c)- amount0_1
TMP_105(uint256) = _reserve1_1 (c)- amount1_1
TMP_106(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_103,TMP_104,TMP_105,True)
amount1_2(uint256) = amount1_1 (c)+ TMP_106
TMP_112(uint256) = amount1_1 (c)- fee_scope_0_1
TMP_113(uint256) = _reserve0_1 (c)- amount0_1
TMP_114(uint256) = _reserve1_1 (c)- amount1_1
TMP_115(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_112,TMP_113,TMP_114,False)
amount0_3(uint256) = amount0_1 (c)+ TMP_115
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token1_17,amount1_2,recipient_1,unwrapBento_1)
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token0_21,amount0_3,recipient_1,unwrapBento_1)
TMP_108(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token0_18,amount0_1)
balance0_2(uint256) = balance0_1 (c)- TMP_108
TMP_117(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token1_21,amount1_1)
balance1_2(uint256) = balance1_1 (c)- TMP_117
amountOut_1(uint256) := amount1_2(uint256)
amountOut_2(uint256) := amount0_3(uint256)
amount0_2(uint256) := 0(uint256)
amount0_4(uint256) := ϕ(['amount0_2', 'amount0_3'])
amount1_4(uint256) := ϕ(['amount1_2', 'amount1_3'])
amount1_3(uint256) := 0(uint256)
INTERNAL_CALL, HybridPool._updateReserves()()
Emit Burn(msg.sender,amount0_4,amount1_4,recipient_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: totalSupply_12, name: totalSupply

Name: totalSupply Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balanceOf_14, name: balanceOf

Name: balanceOf Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_11, name: token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_11, name: token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
totalSupply_12(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_14(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_11(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_11(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
Phi
[i]Type for token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, HybridPool.lock()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] tokenOut cleared
[i] recipient cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 1
Globalname: tokenOut, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
TUPLE_11(address,address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool))
[i]Type for TUPLE_11

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenOut_1(address)= UNPACK TUPLE_11 index: 0 
Finding type for tokenOut(address ... )
prev address? u
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
[i]Type for tokenOut

Name: tokenOut Function: burnSingle
Num: 
Den: 
Address: -995
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
recipient_1(address)= UNPACK TUPLE_11 index: 1 
Finding type for recipient(address ... )
prev address? u
Head Addr: -990
    Norm: 0
    Set: {-990}
    Fin: NULL
[i]Type for recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool)= UNPACK TUPLE_11 index: 2 
Finding type for unwrapBento(bool ... )
[i]Type for unwrapBento

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
End popogation
Ssa_name: token0_13, name: token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_13, name: token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TUPLE_12(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_12

Name: TUPLE_12 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_13(address) := ϕ(['token0_39'])
Phi
[i]Type for token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_13(address) := ϕ(['token1_40'])
Phi
[i]Type for token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256)= UNPACK TUPLE_12 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve0

Name: _reserve0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256)= UNPACK TUPLE_12 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve1

Name: _reserve1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] balance0 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: balance0, Num: 1
Globalname: balance0, contract_name: HybridPool
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: balance1, Num: 1
Globalname: balance1, contract_name: HybridPool
End popogation
Ssa_name: token0_14, name: token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_14, name: token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TUPLE_13(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
New param cache []
Old param cache: []
[i]Type for TUPLE_13

Name: TUPLE_13 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_14(address) := ϕ(['token0_42'])
Phi
[i]Type for token0

Name: token0 Function: burnSingle
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_14(address) := ϕ(['token1_45'])
Phi
[i]Type for token1

Name: token1 Function: burnSingle
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
balance0_1(uint256)= UNPACK TUPLE_13 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance1_1(uint256)= UNPACK TUPLE_13 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] _totalSupply cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalSupply_15, name: totalSupply

Name: totalSupply Function: None
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_15, name: totalSupply

Name: totalSupply Function: None
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 1
Globalname: _totalSupply, contract_name: HybridPool
End popogation
_totalSupply_1(uint256) := totalSupply_15(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for _totalSupply

Name: _totalSupply Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_94 cleared
[i] liquidity cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balanceOf_17, name: balanceOf

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_17, name: balanceOf

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: liquidity, Num: 1
Globalname: liquidity, contract_name: HybridPool
End popogation
TMP_94 = CONVERT this to address
Converting this
9
[i]Type for TMP_94

Name: TMP_94 Function: burnSingle
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
REF_46(uint256) -> balanceOf_17[TMP_94]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_46

Name: None Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
liquidity_1(uint256) := REF_46(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_95 cleared
[i] TMP_96 cleared
[i] amount0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount0, Num: 1
Globalname: amount0, contract_name: HybridPool
End popogation
TMP_95(uint256) = liquidity_1 (c)* balance0_1
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_95

Name: TMP_95 Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_96(uint256) = TMP_95 (c)/ _totalSupply_1
lnorm: 18 rnorm: u
Source address: u
Source address: u
lnorm: 18 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_96

Name: TMP_96 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
amount0_1(uint256) := TMP_96(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_97 cleared
[i] TMP_98 cleared
[i] amount1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount1, Num: 1
Globalname: amount1, contract_name: HybridPool
End popogation
TMP_97(uint256) = liquidity_1 (c)* balance1_1
lnorm: 18 rnorm: 0
Source address: u
[i]Type for TMP_97

Name: TMP_97 Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_98(uint256) = TMP_97 (c)/ _totalSupply_1
lnorm: 18 rnorm: u
Source address: u
Source address: u
lnorm: 18 rnorm: u
Source address: u
Source address: u
[i]Type for TMP_98

Name: TMP_98 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
amount1_1(uint256) := TMP_98(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_99 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: liquidity_1, name: liquidity

Name: liquidity Function: burnSingle
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_99 = CONVERT this to address
Converting this
9
[i]Type for TMP_99

Name: TMP_99 Function: burnSingle
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, TridentERC20._burn(address,uint256)(TMP_99,liquidity_1)
New param cache [[[], [], 'u', 'HybridPool', [], -1, 9, 'u'], [[4], [-1], 18, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', 'HybridPool', [], -1, 9], [[4], [-1], 18, None, [], -1, 'u']]
[[], [], 'u', 'HybridPool', [], -1, 9, 'u']

Name: sender Function: None
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
[[4], [-1], 18, None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_burn(address,uint256)
Propogating All
Propogating All
sender_1
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9

Name: sender_1 Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
sender_1
Ssa_name: sender_1, name: sender

Name: sender_1 Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9

Name: sender_1 Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] sender cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sender_1, name: sender

Name: sender_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9

Name: sender_1 Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balanceOf_9, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
sender_1(address) := ϕ(['TMP_81', 'TMP_99'])
Phi
[i]Type for sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['liquidity_1', 'liquidity_1'])
Phi
[i]Type for amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_3(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_9(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_17(uint256) -> balanceOf_9[sender_1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_17

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
balanceOf_10(mapping(address => uint256)) := ϕ(['balanceOf_9'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_17(-> balanceOf_10) = REF_17 (c)- amount_1
4
-1
lnorm: 18 rnorm: 18
4
-1
[i]Type for REF_17

Name: REF_17 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied balanceOf
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_4, name: totalSupply

Name: totalSupply Function: _burn
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
totalSupply_4(uint256) = totalSupply_3 - amount_1
4
-1
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Copied totalSupply
Source address: u
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_30

Name: TMP_30 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] sender cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9

Name: sender_1 Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balanceOf_9, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
sender_1(address) := ϕ(['TMP_81', 'TMP_99'])
Phi
[i]Type for sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['liquidity_1', 'liquidity_1'])
Phi
[i]Type for amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
totalSupply_3(uint256) := ϕ(['totalSupply_0', 'totalSupply_4', 'totalSupply_11', 'totalSupply_2', 'totalSupply_15', 'totalSupply_8'])
Phi
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
balanceOf_9(mapping(address => uint256)) := ϕ(['balanceOf_13', 'balanceOf_17', 'balanceOf_3', 'balanceOf_8', 'balanceOf_0', 'balanceOf_10', 'balanceOf_6'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: balanceOf_10, name: balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
REF_17(uint256) -> balanceOf_9[sender_1]
INDEX
REFERENCE LEFT VALUE PROPAGATION
Source address: u
[i]Type for REF_17

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
balanceOf_10(mapping(address => uint256)) := ϕ(['balanceOf_9'])
Phi
[i]Type for balanceOf

Name: balanceOf Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_17(-> balanceOf_10) = REF_17 (c)- amount_1
4
-1
lnorm: 18 rnorm: 18
4
-1
[i]Type for REF_17

Name: REF_17 Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
Copied balanceOf
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: totalSupply_3, name: totalSupply

Name: totalSupply Function: _burn
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: totalSupply_4, name: totalSupply

Name: totalSupply Function: _burn
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
End popogation
totalSupply_4(uint256) = totalSupply_3 - amount_1
4
-1
[i]Type for totalSupply

Name: totalSupply Function: _burn
Num: 4
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Copied totalSupply
Source address: u
[i] TMP_30 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: sender_1, name: sender

Name: sender Function: _burn
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_30 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_30

Name: TMP_30 Function: _burn
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_101 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: burnSingle
Num: 
Den: 
Address: -995
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_15, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: burnSingle
Num: 
Den: 
Address: -995
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_15, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_101(bool) = tokenOut_1 == token1_15
[i]Type for TMP_101

Name: TMP_101 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_102 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_15, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_15, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: fee_1, name: fee

Name: fee Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_102(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(token0_15,amount0_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 18, None, [], 30, 'u']]
[i]Type for TMP_102

Name: TMP_102 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_102(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_109 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: burnSingle
Num: 
Den: 
Address: -995
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_15, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: burnSingle
Num: 
Den: 
Address: -995
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_15, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_109(bool) = tokenOut_1 == token0_15
[i]Type for TMP_109

Name: TMP_109 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110(None) = SOLIDITY_CALL require(bool,string)(TMP_109,INVALID_OUTPUT_TOKEN)
[i]Type for TMP_110

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_111 cleared
[i] fee_scope_0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1_15, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1_15, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_scope_0_1, name: fee_scope_0

Name: fee_scope_0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee_scope_0, Num: 1
Globalname: fee_scope_0, contract_name: HybridPool
End popogation
TMP_111(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(token1_15,amount1_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: tokenIn Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_handleFee(address,uint256)
Propogating All
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
fee_1
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Propogating All
tokenIn_1
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: tokenIn_1 Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
_barFee_1
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: tokenIn_1 Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: 18 rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: 18 rnorm: u
lnorm: 18 rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: 18 rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: 18 rnorm: u
lnorm: 18 rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: tokenIn_1 Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: 18 rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: 18 rnorm: u
lnorm: 18 rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: 18 rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: 18 rnorm: u
lnorm: 18 rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_111

Name: TMP_111 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_scope_0_1(uint256) := TMP_111(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for fee_scope_0

Name: fee_scope_0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_103 cleared
[i] TMP_104 cleared
[i] TMP_105 cleared
[i] TMP_106 cleared
[i] amount1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: fee_1, name: fee

Name: fee Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount1_2, name: amount1

Name: amount1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount1, Num: 2
Globalname: amount1, contract_name: HybridPool
End popogation
TMP_103(uint256) = amount0_1 (c)- fee_1
Source address: u
[i]Type for TMP_103

Name: TMP_103 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_104(uint256) = _reserve0_1 (c)- amount0_1
Source address: u
[i]Type for TMP_104

Name: TMP_104 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_105(uint256) = _reserve1_1 (c)- amount1_1
Source address: u
[i]Type for TMP_105

Name: TMP_105 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_106(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_103,TMP_104,TMP_105,True)
New param cache [[[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[i]Type for TMP_106

Name: TMP_106 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount1_2(uint256) = amount1_1 (c)+ TMP_106
Source address: u
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] TMP_112 cleared
[i] TMP_113 cleared
[i] TMP_114 cleared
[i] TMP_115 cleared
[i] amount0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_scope_0_1, name: fee_scope_0

Name: fee_scope_0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee_scope_0, Num: 1
Globalname: fee_scope_0, contract_name: HybridPool
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_scope_0_1, name: fee_scope_0

Name: fee_scope_0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee_scope_0, Num: 1
Globalname: fee_scope_0, contract_name: HybridPool
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount0_3, name: amount0

Name: amount0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount0, Num: 3
Globalname: amount0, contract_name: HybridPool
End popogation
TMP_112(uint256) = amount1_1 (c)- fee_scope_0_1
Source address: u
[i]Type for TMP_112

Name: TMP_112 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_113(uint256) = _reserve0_1 (c)- amount0_1
Source address: u
[i]Type for TMP_113

Name: TMP_113 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_114(uint256) = _reserve1_1 (c)- amount1_1
Source address: u
[i]Type for TMP_114

Name: TMP_114 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
TMP_115(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_112,TMP_113,TMP_114,False)
New param cache [[[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[i]Type for TMP_115

Name: TMP_115 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amount0_3(uint256) = amount0_1 (c)+ TMP_115
Source address: u
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_2, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: token1_17, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_2, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_17, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token1_17,amount1_2,recipient_1,unwrapBento_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[], [], 0, None, [], -1, -990, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
[[], [], 0, None, [], -1, -990, 'u']

Name: to Function: None
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amount0_3, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_21, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amount0_3, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token0_21, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(token0_21,amount0_3,recipient_1,unwrapBento_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u'], [[], [], 0, None, [], -1, -990, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
[[], [], 0, None, [], -1, -990, 'u']

Name: to Function: None
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_108 cleared
[i] balance0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0_18, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_1, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0_18, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_2, name: balance0

Name: balance0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance0, Num: 2
Globalname: balance0, contract_name: HybridPool
End popogation
TMP_108(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token0_18,amount0_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_108

Name: TMP_108 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance0_2(uint256) = balance0_1 (c)- TMP_108
Source address: u
[i]Type for balance0

Name: balance0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_117 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1_21, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount1_1, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: token1_21, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_2, name: balance1

Name: balance1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance1, Num: 2
Globalname: balance1, contract_name: HybridPool
End popogation
TMP_117(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token1_21,amount1_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 18, None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 18, None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_117

Name: TMP_117 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance1_2(uint256) = balance1_1 (c)- TMP_117
Source address: u
[i]Type for balance1

Name: balance1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_2, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount1_2, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
End popogation
amountOut_1(uint256) := amount1_2(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for amountOut

Name: amountOut Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_3, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amount0_3, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: amountOut_2, name: amountOut

Name: amountOut Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 2
Globalname: amountOut, contract_name: HybridPool
End popogation
amountOut_2(uint256) := amount0_3(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for amountOut

Name: amountOut Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] amount0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount0_2, name: amount0

Name: amount0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: amount0, Num: 2
Globalname: amount0, contract_name: HybridPool
End popogation
amount0_2(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amount0 cleared
[i] amount1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amount0_4, name: amount0

Name: amount0 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: amount0, Num: 4
Globalname: amount0, contract_name: HybridPool
Ssa_name: amount1_4, name: amount1

Name: amount1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amount1, Num: 4
Globalname: amount1, contract_name: HybridPool
amount0_4(uint256) := ϕ(['amount0_2', 'amount0_3'])
Phi

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve


END==================================
Source address: u
[i]Type for amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
amount1_4(uint256) := ϕ(['amount1_2', 'amount1_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
[i] amount1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_3, name: amount1

Name: amount1 Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: amount1, Num: 3
Globalname: amount1, contract_name: HybridPool
End popogation
amount1_3(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, HybridPool._updateReserves()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: amount1_4, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_4, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: amount1_4, name: amount1

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: recipient_1, name: recipient

Name: recipient Function: burnSingle
Num: 
Den: 
Address: -990
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount0_4, name: amount0

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
Source address: u
Reading Function: swap
Checking funcion...



swap
Function name: swap
Finding type for data(bytes ... )
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
swap(bytes)


token0_23(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
token1_23(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
MODIFIER_CALL, HybridPool.lock()()
TUPLE_14(address,address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool))
tokenIn_1(address)= UNPACK TUPLE_14 index: 0 
recipient_1(address)= UNPACK TUPLE_14 index: 1 
unwrapBento_1(bool)= UNPACK TUPLE_14 index: 2 
TUPLE_15(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
token0_25(address) := ϕ(['token0_39'])
token1_25(address) := ϕ(['token1_40'])
_reserve0_1(uint256)= UNPACK TUPLE_15 index: 0 
_reserve1_1(uint256)= UNPACK TUPLE_15 index: 1 
TUPLE_16(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
token0_26(address) := ϕ(['token0_42'])
token1_26(address) := ϕ(['token1_45'])
balance0_1(uint256)= UNPACK TUPLE_16 index: 0 
balance1_1(uint256)= UNPACK TUPLE_16 index: 1 
TMP_121(bool) = tokenIn_1 == token0_26
CONDITION TMP_121
tokenOut_1(address) := token1_26(address)
TMP_122(uint256) = balance0_1 (c)- _reserve0_1
amountIn_1(uint256) := TMP_122(uint256)
TMP_126(bool) = tokenIn_1 == token1_26
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,INVALID_INPUT_TOKEN)
tokenOut_2(address) := token0_26(address)
TMP_123(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(tokenIn_1,amountIn_1)
fee_1(uint256) := TMP_123(uint256)
TMP_128(uint256) = balance1_1 (c)- _reserve1_1
amountIn_2(uint256) := TMP_128(uint256)
TMP_124(uint256) = amountIn_1 (c)- fee_1
TMP_125(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_124,_reserve0_1,_reserve1_1,True)
amountOut_1(uint256) := TMP_125(uint256)
TMP_129(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(tokenIn_1,amountIn_2)
fee_scope_0_1(uint256) := TMP_129(uint256)
amountOut_3(uint256) := ϕ(['amountOut_2', 'amountOut_1'])
amountIn_3(uint256) := ϕ(['amountIn_1', 'amountIn_2'])
tokenOut_3(address) := ϕ(['tokenOut_2', 'tokenOut_1'])
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_3,amountOut_3,recipient_1,unwrapBento_1)
INTERNAL_CALL, HybridPool._updateReserves()()
TMP_130(uint256) = amountIn_2 (c)- fee_scope_0_1
TMP_131(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_130,_reserve0_1,_reserve1_1,False)
amountOut_2(uint256) := TMP_131(uint256)
Emit Swap(recipient_1,tokenIn_1,tokenOut_3,amountIn_3,amountOut_3)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0_23, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 23
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token1_23, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 23
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
token0_23(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_23(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
Phi
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, HybridPool.lock()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] tokenIn cleared
[i] recipient cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: tokenIn_1, name: tokenIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenIn, Num: 1
Globalname: tokenIn, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
TUPLE_14(address,address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool))
[i]Type for TUPLE_14

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenIn_1(address)= UNPACK TUPLE_14 index: 0 
Finding type for tokenIn(address ... )
prev address? u
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
[i]Type for tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
recipient_1(address)= UNPACK TUPLE_14 index: 1 
Finding type for recipient(address ... )
prev address? u
Changed here
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
[i]Type for recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -993
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool)= UNPACK TUPLE_14 index: 2 
Finding type for unwrapBento(bool ... )
[i]Type for unwrapBento

Name: unwrapBento Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
End popogation
Ssa_name: token0_25, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 25
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token1_25, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 25
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
TUPLE_15(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_15

Name: TUPLE_15 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_25(address) := ϕ(['token0_39'])
Phi
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_25(address) := ϕ(['token1_40'])
Phi
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256)= UNPACK TUPLE_15 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256)= UNPACK TUPLE_15 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] balance0 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance0, Num: 1
Globalname: balance0, contract_name: HybridPool
Ssa_name: balance1_1, name: balance1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance1, Num: 1
Globalname: balance1, contract_name: HybridPool
End popogation
Ssa_name: token0_26, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 26
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token1_26, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 26
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
TUPLE_16(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
New param cache []
Old param cache: []
[i]Type for TUPLE_16

Name: TUPLE_16 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_26(address) := ϕ(['token0_42'])
Phi
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_26(address) := ϕ(['token1_45'])
Phi
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
balance0_1(uint256)= UNPACK TUPLE_16 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance0

Name: balance0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance1_1(uint256)= UNPACK TUPLE_16 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance1

Name: balance1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_121 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_26, name: token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_26, name: token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_121(bool) = tokenIn_1 == token0_26
[i]Type for TMP_121

Name: TMP_121 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_26, name: token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_26, name: token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 1
Globalname: tokenOut, contract_name: HybridPool
End popogation
tokenOut_1(address) := token1_26(address)
asgn
Source address: 3
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_122 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: HybridPool
End popogation
TMP_122(uint256) = balance0_1 (c)- _reserve0_1
Source address: u
[i]Type for TMP_122

Name: TMP_122 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_122(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_126 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_26, name: token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_26, name: token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = tokenIn_1 == token1_26
[i]Type for TMP_126

Name: TMP_126 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,INVALID_INPUT_TOKEN)
[i]Type for TMP_127

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_26, name: token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_26, name: token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_2, name: tokenOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 2
Globalname: tokenOut, contract_name: HybridPool
End popogation
tokenOut_2(address) := token0_26(address)
asgn
Source address: 2
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_123 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_123(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(tokenIn_1,amountIn_1)
New param cache [[[], [], 0, None, [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 18, None, [], 30, 'u']]
[[], [], 0, None, [], -1, -994, 'u']

Name: tokenIn Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_handleFee(address,uint256)
Propogating All
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
fee_1
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Propogating All
tokenIn_1
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
_barFee_1
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -990
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_123

Name: TMP_123 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_123(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_128 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
TMP_128(uint256) = balance1_1 (c)- _reserve1_1
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_2(uint256) := TMP_128(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_124 cleared
[i] TMP_125 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
Ssa_name: amountOut_1, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
End popogation
TMP_124(uint256) = amountIn_1 (c)- fee_1
Source address: u
[i]Type for TMP_124

Name: TMP_124 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_124,_reserve0_1,_reserve1_1,True)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: token0In Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getAmountOut(uint256,uint256,uint256,bool)
Propogating All
Propogating All
Propogating All
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Propogating All
amountIn_4
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
x_1
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
d_1
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y_1
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], 30, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[[-1], [-1], 1, None, [], -1, 'u', 10]

Name: xp0 Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
[[-1], [-1], 1, None, [], 30, 'u', 10]

Name: xp1 Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_computeLiquidityFromAdjustedBalances(uint256,uint256)
Propogating All
Propogating All
xp1_1
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
xp0_1
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Copied ftype
Propogating All
s_1
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
Propogating All
s_1
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Propogating All
xp1_1
Ssa_name: xp1_1, name: xp1

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
xp0_1
Ssa_name: xp0_1, name: xp0

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Copied ftype
D_2
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
D_2
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
s_1
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
D_2
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
dP_1
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
Propogating All
D_3
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
D_3
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
prevD_1
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
i_2
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
[i] xp0 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: xp0_1, name: xp0

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: xp1_1, name: xp1

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xp0_1', 'xpIn_3'])
Phi
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
Phi
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
Phi
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
Phi
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
Phi
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_215 cleared
[i] s cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: s, Num: 1
Globalname: s, contract_name: HybridPool
End popogation
TMP_215(uint256) = xp0_1 (c)+ xp1_1
Source address: u
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
s_1(uint256) := TMP_215(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
[i] TMP_216 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
End popogation
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: computed_1, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: computed, Num: 1
Globalname: computed, contract_name: HybridPool
End popogation
computed_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: D_1, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
End popogation
D_1(uint256) := s_1(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: HybridPool
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
[i] i cleared
[i] TMP_217 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
End popogation
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 5
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
D_2(uint256) := ϕ(['D_3', 'D_1'])
Phi

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve


END==================================
Source address: u
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
lnorm: 0 rnorm: u
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_218 cleared
[i] TMP_219 cleared
[i] TMP_220 cleared
[i] TMP_221 cleared
[i] TMP_222 cleared
[i] dP cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: dP, Num: 1
Globalname: dP, contract_name: HybridPool
End popogation
TMP_218(uint256) = D_2 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 400
Fields: 
Finance Type: undef
XXXX
TMP_219(uint256) = TMP_218 (c)/ xp0_1
lnorm: u rnorm: 1
lnorm: u rnorm: 1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_220(uint256) = TMP_219 (c)* D_2
lnorm: -1 rnorm: u
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 800
Fields: 
Finance Type: undef
XXXX
TMP_221(uint256) = TMP_220 (c)/ xp1_1
lnorm: -1 rnorm: 1
lnorm: -1 rnorm: 1
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 80
Fields: 
Finance Type: reserve
XXXX
TMP_222(uint256) = TMP_221 (c)/ 4
lnorm: -2 rnorm: 0
lnorm: -2 rnorm: 0
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
dP_1(uint256) := TMP_222(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
[i] prevD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: prevD, Num: 1
Globalname: prevD, contract_name: HybridPool
End popogation
prevD_1(uint256) := D_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_223 cleared
[i] TMP_224 cleared
[i] TMP_225 cleared
[i] TMP_226 cleared
[i] TMP_227 cleared
[i] TMP_228 cleared
[i] TMP_229 cleared
[i] TMP_230 cleared
[i] TMP_231 cleared
[i] TMP_232 cleared
[i] TMP_233 cleared
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 3
Globalname: D, contract_name: HybridPool
End popogation
TMP_223(uint256) = N_A_2 (c)* s_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: reserve
XXXX
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: reserve
XXXX
TMP_225(uint256) = 2 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 40
Fields: 
Finance Type: reserve
XXXX
TMP_226(uint256) = TMP_224 (c)+ TMP_225
Finance type key: (30, 30)
Error with TMP_226 in function _computeLiquidityFromAdjustedBalances
Error with: TMP_226 in function _computeLiquidityFromAdjustedBalances
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_227(uint256) = TMP_226 (c)* D_2
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1600
Fields: 
Finance Type: undef
XXXX
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_229(uint256) = TMP_228 (c)- 1
Source address: u
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_230(uint256) = TMP_229 (c)* D_2
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
TMP_231(uint256) = 3 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 60
Fields: 
Finance Type: reserve
XXXX
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Source address: u
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: reserve
XXXX
TMP_233(uint256) = TMP_227 (c)/ TMP_232
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
D_3(uint256) := TMP_233(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: computed_2, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: computed, Num: 2
Globalname: computed, contract_name: HybridPool
End popogation
computed_2(uint256) := D_3(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
[i] TMP_234 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
End popogation
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_235 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: HybridPool
End popogation
TMP_235(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 6
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
XXXX
[i] xp0 cleared
[i] xp1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp0_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Source address: u

Name: xp1_1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xp0_1(uint256) := ϕ(['xp0_1', 'xpIn_3'])
Phi
[i]Type for xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xp1_1(uint256) := ϕ(['xpOut_3', 'xp1_1'])
Phi
[i]Type for xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
MAX_LOOP_LIMIT_1(uint256) := ϕ(['MAX_LOOP_LIMIT_0'])
Phi
[i]Type for MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
N_A_2(uint256) := ϕ(['N_A_0', 'N_A_1'])
Phi
[i]Type for N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
A_PRECISION_1(uint256) := ϕ(['A_PRECISION_0'])
Phi
[i]Type for A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_215 cleared
[i] s cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: s, Num: 1
Globalname: s, contract_name: HybridPool
End popogation
TMP_215(uint256) = xp0_1 (c)+ xp1_1
Source address: u
[i]Type for TMP_215

Name: TMP_215 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
s_1(uint256) := TMP_215(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
[i] TMP_216 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
End popogation
TMP_216(bool) = s_1 == 0
[i]Type for TMP_216

Name: TMP_216 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: computed_1, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: computed, Num: 1
Globalname: computed, contract_name: HybridPool
End popogation
computed_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: D_1, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 1
Globalname: D, contract_name: HybridPool
End popogation
D_1(uint256) := s_1(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_1, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: i, Num: 1
Globalname: i, contract_name: HybridPool
End popogation
i_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] D cleared
[i] i cleared
[i] TMP_217 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: MAX_LOOP_LIMIT_1, name: MAX_LOOP_LIMIT

Name: MAX_LOOP_LIMIT Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
End popogation
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 2
Globalname: D, contract_name: HybridPool
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 6
Fields: 
Finance Type: undef
Name: i, Num: 2
Globalname: i, contract_name: HybridPool
D_2(uint256) := ϕ(['D_3', 'D_1'])
Phi

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve


END==================================
Source address: u
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
i_2(uint256) := ϕ(['i_3', 'i_1'])
Phi

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
XXXX
TMP_217(bool) = i_2 < MAX_LOOP_LIMIT_1
lnorm: 0 rnorm: u
[i]Type for TMP_217

Name: TMP_217 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_218 cleared
[i] TMP_219 cleared
[i] TMP_220 cleared
[i] TMP_221 cleared
[i] TMP_222 cleared
[i] dP cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: xp1_1, name: xp1

Name: xp1 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: xp0_1, name: xp0

Name: xp0 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: dP, Num: 1
Globalname: dP, contract_name: HybridPool
End popogation
TMP_218(uint256) = D_2 (c)* D_2
lnorm: u rnorm: u
Finance type key: (30, 30)
Error with TMP_218 in function _computeLiquidityFromAdjustedBalances
Error with: TMP_218 in function _computeLiquidityFromAdjustedBalances
Source address: u
[i]Type for TMP_218

Name: TMP_218 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 400
Fields: 
Finance Type: undef
XXXX
TMP_219(uint256) = TMP_218 (c)/ xp0_1
lnorm: u rnorm: 1
lnorm: u rnorm: 1
[i]Type for TMP_219

Name: TMP_219 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_220(uint256) = TMP_219 (c)* D_2
lnorm: -1 rnorm: u
Source address: u
[i]Type for TMP_220

Name: TMP_220 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 800
Fields: 
Finance Type: reserve
XXXX
TMP_221(uint256) = TMP_220 (c)/ xp1_1
lnorm: -1 rnorm: 1
Finance type key: (30, 30)
lnorm: -1 rnorm: 1
Finance type key: (30, 30)
[i]Type for TMP_221

Name: TMP_221 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 80
Fields: 
Finance Type: undef
XXXX
TMP_222(uint256) = TMP_221 (c)/ 4
lnorm: -2 rnorm: 0
lnorm: -2 rnorm: 0
[i]Type for TMP_222

Name: TMP_222 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
dP_1(uint256) := TMP_222(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] prevD cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: prevD, Num: 1
Globalname: prevD, contract_name: HybridPool
End popogation
prevD_1(uint256) := D_2(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
[i] TMP_223 cleared
[i] TMP_224 cleared
[i] TMP_225 cleared
[i] TMP_226 cleared
[i] TMP_227 cleared
[i] TMP_228 cleared
[i] TMP_229 cleared
[i] TMP_230 cleared
[i] TMP_231 cleared
[i] TMP_232 cleared
[i] TMP_233 cleared
[i] D cleared
Propogating parameters and globals to SSA variables...
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: A_PRECISION_1, name: A_PRECISION

Name: A_PRECISION Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: s_1, name: s

Name: s Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: D_2, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: dP_1, name: dP

Name: dP Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: N_A_2, name: N_A

Name: N_A Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: D, Num: 3
Globalname: D, contract_name: HybridPool
End popogation
TMP_223(uint256) = N_A_2 (c)* s_1
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_223

Name: TMP_223 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: reserve
XXXX
TMP_224(uint256) = TMP_223 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_224

Name: TMP_224 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 40
Fields: 
Finance Type: reserve
XXXX
TMP_225(uint256) = 2 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_225

Name: TMP_225 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 40
Fields: 
Finance Type: undef
XXXX
TMP_226(uint256) = TMP_224 (c)+ TMP_225
Source address: u
[i]Type for TMP_226

Name: TMP_226 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: reserve
XXXX
TMP_227(uint256) = TMP_226 (c)* D_2
lnorm: u rnorm: u
Finance type key: (30, 30)
Error with TMP_227 in function _computeLiquidityFromAdjustedBalances
Error with: TMP_227 in function _computeLiquidityFromAdjustedBalances
Source address: u
[i]Type for TMP_227

Name: TMP_227 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1600
Fields: 
Finance Type: undef
XXXX
TMP_228(uint256) = N_A_2 (c)/ A_PRECISION_1
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_228

Name: TMP_228 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 2
Fields: 
Finance Type: undef
XXXX
TMP_229(uint256) = TMP_228 (c)- 1
Source address: u
[i]Type for TMP_229

Name: TMP_229 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 1
Fields: 
Finance Type: undef
XXXX
TMP_230(uint256) = TMP_229 (c)* D_2
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
TMP_231(uint256) = 3 (c)* dP_1
lnorm: 0 rnorm: -2
Source address: u
[i]Type for TMP_231

Name: TMP_231 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: -2
LF: None
Value: 60
Fields: 
Finance Type: undef
XXXX
TMP_232(uint256) = TMP_230 (c)+ TMP_231
Source address: u
[i]Type for TMP_232

Name: TMP_232 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 80
Fields: 
Finance Type: reserve
XXXX
TMP_233(uint256) = TMP_227 (c)/ TMP_232
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_233

Name: TMP_233 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
D_3(uint256) := TMP_233(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] computed cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: computed_2, name: computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: computed, Num: 2
Globalname: computed, contract_name: HybridPool
End popogation
computed_2(uint256) := D_3(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for computed

Name: computed Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
XXXX
[i] TMP_234 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: D_3, name: D

Name: D Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
Ssa_name: prevD_1, name: prevD

Name: prevD Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: reserve
End popogation
TMP_234(bool) = LIBRARY_CALL, dest:MathUtils, function:MathUtils.within1(uint256,uint256), arguments:['D_3', 'prevD_1'] 
[i]Type for TMP_234

Name: TMP_234 Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_235 cleared
[i] i cleared
Propogating parameters and globals to SSA variables...
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Ssa_name: i_2, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Ssa_name: i_3, name: i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 7
Fields: 
Finance Type: undef
Name: i, Num: 3
Globalname: i, contract_name: HybridPool
End popogation
TMP_235(uint256) := i_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for TMP_235

Name: TMP_235 Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 7
Fields: 
Finance Type: undef
XXXX
i_3(uint256) = i_2 (c)+ 1
Source address: u
[i]Type for i

Name: i Function: _computeLiquidityFromAdjustedBalances
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 8
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: reserve
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: reserve
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: reserve
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (30, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: reserve
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: reserve
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: reserve
XXXX
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_125

Name: TMP_125 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_125(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_129 cleared
[i] fee_scope_0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_scope_0_1, name: fee_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee_scope_0, Num: 1
Globalname: fee_scope_0, contract_name: HybridPool
End popogation
TMP_129(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(tokenIn_1,amountIn_2)
New param cache [[[], [], 0, None, [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 18, None, [], 30, 'u']]
[[], [], 0, None, [], -1, -994, 'u']

Name: tokenIn Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_handleFee(address,uint256)
Propogating All
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
fee_1
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
tokenIn_1
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
_barFee_1
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_129

Name: TMP_129 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_scope_0_1(uint256) := TMP_129(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for fee_scope_0

Name: fee_scope_0 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountOut cleared
[i] amountIn cleared
[i] tokenOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountOut_3, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
Ssa_name: amountIn_3, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
Ssa_name: tokenOut_3, name: tokenOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 3
Globalname: tokenOut, contract_name: HybridPool
amountOut_3(uint256) := ϕ(['amountOut_2', 'amountOut_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_3(uint256) := ϕ(['amountIn_1', 'amountIn_2'])
Phi

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenOut_3(address) := ϕ(['tokenOut_2', 'tokenOut_1'])
Phi

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: 2
[i]Type for tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -993
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -993
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_3,amountOut_3,recipient_1,unwrapBento_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, None, [], -1, -993, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, None, [], -1, -993, 'u']

Name: to Function: None
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, HybridPool._updateReserves()()
New param cache []
Old param cache: []
[i] TMP_130 cleared
[i] TMP_131 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_scope_0_1, name: fee_scope_0

Name: fee_scope_0 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee_scope_0, Num: 1
Globalname: fee_scope_0, contract_name: HybridPool
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_scope_0_1, name: fee_scope_0

Name: fee_scope_0 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee_scope_0, Num: 1
Globalname: fee_scope_0, contract_name: HybridPool
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_2, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 2
Globalname: amountOut, contract_name: HybridPool
End popogation
TMP_130(uint256) = amountIn_2 (c)- fee_scope_0_1
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_131(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_130,_reserve0_1,_reserve1_1,False)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: token0In Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getAmountOut(uint256,uint256,uint256,bool)
Propogating All
Propogating All
Propogating All
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
amountIn_4
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
x_1
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
d_1
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y_1
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_131

Name: TMP_131 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_2(uint256) := TMP_131(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -993
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -993
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
End popogation


token0_23(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
token1_23(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
MODIFIER_CALL, HybridPool.lock()()
TUPLE_14(address,address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool))
tokenIn_1(address)= UNPACK TUPLE_14 index: 0 
recipient_1(address)= UNPACK TUPLE_14 index: 1 
unwrapBento_1(bool)= UNPACK TUPLE_14 index: 2 
TUPLE_15(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
token0_25(address) := ϕ(['token0_39'])
token1_25(address) := ϕ(['token1_40'])
_reserve0_1(uint256)= UNPACK TUPLE_15 index: 0 
_reserve1_1(uint256)= UNPACK TUPLE_15 index: 1 
TUPLE_16(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
token0_26(address) := ϕ(['token0_42'])
token1_26(address) := ϕ(['token1_45'])
balance0_1(uint256)= UNPACK TUPLE_16 index: 0 
balance1_1(uint256)= UNPACK TUPLE_16 index: 1 
TMP_121(bool) = tokenIn_1 == token0_26
CONDITION TMP_121
tokenOut_1(address) := token1_26(address)
TMP_122(uint256) = balance0_1 (c)- _reserve0_1
amountIn_1(uint256) := TMP_122(uint256)
TMP_126(bool) = tokenIn_1 == token1_26
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,INVALID_INPUT_TOKEN)
tokenOut_2(address) := token0_26(address)
TMP_123(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(tokenIn_1,amountIn_1)
fee_1(uint256) := TMP_123(uint256)
TMP_128(uint256) = balance1_1 (c)- _reserve1_1
amountIn_2(uint256) := TMP_128(uint256)
TMP_124(uint256) = amountIn_1 (c)- fee_1
TMP_125(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_124,_reserve0_1,_reserve1_1,True)
amountOut_1(uint256) := TMP_125(uint256)
TMP_129(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(tokenIn_1,amountIn_2)
fee_scope_0_1(uint256) := TMP_129(uint256)
amountOut_3(uint256) := ϕ(['amountOut_2', 'amountOut_1'])
amountIn_3(uint256) := ϕ(['amountIn_1', 'amountIn_2'])
tokenOut_3(address) := ϕ(['tokenOut_2', 'tokenOut_1'])
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_3,amountOut_3,recipient_1,unwrapBento_1)
INTERNAL_CALL, HybridPool._updateReserves()()
TMP_130(uint256) = amountIn_2 (c)- fee_scope_0_1
TMP_131(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_130,_reserve0_1,_reserve1_1,False)
amountOut_2(uint256) := TMP_131(uint256)
Emit Swap(recipient_1,tokenIn_1,tokenOut_3,amountIn_3,amountOut_3)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token0_23, name: token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_23, name: token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
token0_23(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_23(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
Phi
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, HybridPool.lock()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] tokenIn cleared
[i] recipient cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenIn, Num: 1
Globalname: tokenIn, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
TUPLE_14(address,address,bool) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool))
[i]Type for TUPLE_14

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenIn_1(address)= UNPACK TUPLE_14 index: 0 
Finding type for tokenIn(address ... )
prev address? u
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
[i]Type for tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
recipient_1(address)= UNPACK TUPLE_14 index: 1 
Finding type for recipient(address ... )
prev address? u
Changed here
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
[i]Type for recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -993
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool)= UNPACK TUPLE_14 index: 2 
Finding type for unwrapBento(bool ... )
[i]Type for unwrapBento

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
End popogation
Ssa_name: token0_25, name: token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_25, name: token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TUPLE_15(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_15

Name: TUPLE_15 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_25(address) := ϕ(['token0_39'])
Phi
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_25(address) := ϕ(['token1_40'])
Phi
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256)= UNPACK TUPLE_15 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256)= UNPACK TUPLE_15 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] balance0 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: balance0, Num: 1
Globalname: balance0, contract_name: HybridPool
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: balance1, Num: 1
Globalname: balance1, contract_name: HybridPool
End popogation
Ssa_name: token0_26, name: token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_26, name: token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TUPLE_16(uint256,uint256) = INTERNAL_CALL, HybridPool._balance()()
New param cache []
Old param cache: []
[i]Type for TUPLE_16

Name: TUPLE_16 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_26(address) := ϕ(['token0_42'])
Phi
[i]Type for token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_26(address) := ϕ(['token1_45'])
Phi
[i]Type for token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
balance0_1(uint256)= UNPACK TUPLE_16 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance0

Name: balance0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance1_1(uint256)= UNPACK TUPLE_16 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for balance1

Name: balance1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_121 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_26, name: token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_26, name: token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_121(bool) = tokenIn_1 == token0_26
[i]Type for TMP_121

Name: TMP_121 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_26, name: token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_26, name: token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 1
Globalname: tokenOut, contract_name: HybridPool
End popogation
tokenOut_1(address) := token1_26(address)
asgn
Source address: 3
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_122 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: HybridPool
End popogation
TMP_122(uint256) = balance0_1 (c)- _reserve0_1
Source address: u
[i]Type for TMP_122

Name: TMP_122 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := TMP_122(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_126 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_26, name: token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_26, name: token1

Name: token1 Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_126(bool) = tokenIn_1 == token1_26
[i]Type for TMP_126

Name: TMP_126 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,INVALID_INPUT_TOKEN)
[i]Type for TMP_127

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_26, name: token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_26, name: token0

Name: token0 Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_2, name: tokenOut

Name: tokenOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 2
Globalname: tokenOut, contract_name: HybridPool
End popogation
tokenOut_2(address) := token0_26(address)
asgn
Source address: 2
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_123 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_123(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(tokenIn_1,amountIn_1)
New param cache [[[], [], 0, None, [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 18, None, [], 30, 'u']]
[[], [], 0, None, [], -1, -994, 'u']

Name: tokenIn Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_handleFee(address,uint256)
Propogating All
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
fee_1
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
tokenIn_1
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
_barFee_1
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_123

Name: TMP_123 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_123(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_128 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
TMP_128(uint256) = balance1_1 (c)- _reserve1_1
Source address: u
[i]Type for TMP_128

Name: TMP_128 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_2(uint256) := TMP_128(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_124 cleared
[i] TMP_125 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
End popogation
TMP_124(uint256) = amountIn_1 (c)- fee_1
Source address: u
[i]Type for TMP_124

Name: TMP_124 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_124,_reserve0_1,_reserve1_1,True)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: token0In Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getAmountOut(uint256,uint256,uint256,bool)
Propogating All
Propogating All
Propogating All
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
amountIn_4
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
x_1
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
d_1
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y_1
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_125

Name: TMP_125 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_125(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_129 cleared
[i] fee_scope_0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_scope_0_1, name: fee_scope_0

Name: fee_scope_0 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee_scope_0, Num: 1
Globalname: fee_scope_0, contract_name: HybridPool
End popogation
TMP_129(uint256) = INTERNAL_CALL, HybridPool._handleFee(address,uint256)(tokenIn_1,amountIn_2)
New param cache [[[], [], 0, None, [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 18, None, [], 30, 'u']]
[[], [], 0, None, [], -1, -994, 'u']

Name: tokenIn Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_handleFee(address,uint256)
Propogating All
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
fee_1
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
tokenIn_1
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
_barFee_1
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: tokenIn_1 Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
tokenIn_1(address) := ϕ(['tokenIn_1', 'token0_15', 'token1_15'])
Phi
[i]Type for tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256) := ϕ(['amountIn_1', 'amount1_1', 'amount0_1', 'amountIn_2'])
Phi
[i]Type for amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_FEE_7(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_7(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_16(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
barFee_3(uint256) := ϕ(['barFee_1', 'barFee_2', 'barFee_0'])
Phi
[i]Type for barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_274 cleared
[i] TMP_275 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_7, name: swapFee

Name: swapFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_274(uint256) = amountIn_1 (c)* swapFee_7
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_274

Name: TMP_274 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_275(uint256) = TMP_274 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_275

Name: TMP_275 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_275(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_276 cleared
[i] TMP_277 cleared
[i] _barFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFee_3, name: barFee

Name: barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_7, name: MAX_FEE

Name: MAX_FEE Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _barFee, Num: 1
Globalname: _barFee, contract_name: HybridPool
End popogation
TMP_276(uint256) = fee_1 (c)* barFee_3
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_276

Name: TMP_276 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_277(uint256) = TMP_276 (c)/ MAX_FEE_7
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_277

Name: TMP_277 Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_barFee_1(uint256) := TMP_277(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: _handleFee
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: _barFee_1, name: _barFee

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_16, name: barFeeTo

Name: barFeeTo Function: _handleFee
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,_barFee_1,barFeeTo_16,False)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -994, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -994, 'u']

Name: token Function: None
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_129

Name: TMP_129 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_scope_0_1(uint256) := TMP_129(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for fee_scope_0

Name: fee_scope_0 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountOut cleared
[i] amountIn cleared
[i] tokenOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 3
Globalname: tokenOut, contract_name: HybridPool
amountOut_3(uint256) := ϕ(['amountOut_2', 'amountOut_1'])
Phi

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_3(uint256) := ϕ(['amountIn_1', 'amountIn_2'])
Phi

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenOut_3(address) := ϕ(['tokenOut_2', 'tokenOut_1'])
Phi

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: 2
[i]Type for tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -993
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -993
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_3,amountOut_3,recipient_1,unwrapBento_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, None, [], -1, -993, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, None, [], -1, -993, 'u']

Name: to Function: None
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -994
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, HybridPool._updateReserves()()
New param cache []
Old param cache: []
[i] TMP_130 cleared
[i] TMP_131 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_scope_0_1, name: fee_scope_0

Name: fee_scope_0 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee_scope_0, Num: 1
Globalname: fee_scope_0, contract_name: HybridPool
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_scope_0_1, name: fee_scope_0

Name: fee_scope_0 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee_scope_0, Num: 1
Globalname: fee_scope_0, contract_name: HybridPool
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: swap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_2, name: amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 2
Globalname: amountOut, contract_name: HybridPool
End popogation
TMP_130(uint256) = amountIn_2 (c)- fee_scope_0_1
Source address: u
[i]Type for TMP_130

Name: TMP_130 Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_131(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_130,_reserve0_1,_reserve1_1,False)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: token0In Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getAmountOut(uint256,uint256,uint256,bool)
Propogating All
Propogating All
Propogating All
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
amountIn_4
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
x_1
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
d_1
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y_1
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_131

Name: TMP_131 Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_2(uint256) := TMP_131(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -993
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: swap
Num: 
Den: 
Address: -994
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: swap
Num: 
Den: 
Address: -993
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: swap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: swap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
End popogation
Source address: u
Reading Function: flashSwap
Checking funcion...



flashSwap
Function name: flashSwap
Finding type for data(bytes ... )
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
flashSwap(bytes)


MAX_FEE_2(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
swapFee_2(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
barFeeTo_2(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
token0_27(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
token1_27(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
MODIFIER_CALL, HybridPool.lock()()
TUPLE_17(address,address,bool,uint256,bytes) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool,uint256,bytes))
tokenIn_1(address)= UNPACK TUPLE_17 index: 0 
recipient_1(address)= UNPACK TUPLE_17 index: 1 
unwrapBento_1(bool)= UNPACK TUPLE_17 index: 2 
amountIn_1(uint256)= UNPACK TUPLE_17 index: 3 
context_1(bytes)= UNPACK TUPLE_17 index: 4 
TUPLE_18(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
token0_29(address) := ϕ(['token0_39'])
token1_29(address) := ϕ(['token1_40'])
_reserve0_1(uint256)= UNPACK TUPLE_18 index: 0 
_reserve1_1(uint256)= UNPACK TUPLE_18 index: 1 
TMP_136(bool) = tokenIn_1 == token0_29
CONDITION TMP_136
TMP_148(bool) = tokenIn_1 == token1_29
TMP_149(None) = SOLIDITY_CALL require(bool,string)(TMP_148,INVALID_INPUT_TOKEN)
tokenOut_2(address) := token0_29(address)
tokenOut_1(address) := token1_29(address)
TMP_150(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_29,amountIn_1)
amountIn_3(uint256) := TMP_150(uint256)
TMP_137(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_29,amountIn_1)
amountIn_2(uint256) := TMP_137(uint256)
TMP_151(uint256) = amountIn_3 (c)* swapFee_6
TMP_152(uint256) = TMP_151 (c)/ MAX_FEE_6
fee_2(uint256) := TMP_152(uint256)
TMP_153(uint256) = amountIn_3 (c)- fee_2
TMP_154(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_153,_reserve0_1,_reserve1_1,False)
amountOut_2(uint256) := TMP_154(uint256)
TMP_138(uint256) = amountIn_2 (c)* swapFee_5
TMP_139(uint256) = TMP_138 (c)/ MAX_FEE_5
fee_1(uint256) := TMP_139(uint256)
INTERNAL_CALL, HybridPool._processSwap(address,address,uint256,bytes,bool)(token0_36,recipient_1,amountOut_2,context_1,unwrapBento_1)
TMP_156(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token1_35)
TMP_157(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_36,TMP_156)
balance1_1(uint256) := TMP_157(uint256)
TMP_140(uint256) = amountIn_2 (c)- fee_1
TMP_141(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_140,_reserve0_1,_reserve1_1,True)
amountOut_1(uint256) := TMP_141(uint256)
INTERNAL_CALL, HybridPool._processSwap(address,address,uint256,bytes,bool)(token1_31,recipient_1,amountOut_1,context_1,unwrapBento_1)
TMP_158(uint256) = balance1_1 (c)- _reserve1_1
TMP_159(bool) = TMP_158 >= amountIn_3
TMP_160(None) = SOLIDITY_CALL require(bool,string)(TMP_159,INSUFFICIENT_AMOUNT_IN)
amountOut_3(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
tokenOut_3(address) := ϕ(['tokenOut_1', 'tokenOut_2'])
fee_3(uint256) := ϕ(['fee_2', 'fee_1'])
TMP_143(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token0_32)
TMP_144(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_33,TMP_143)
balance0_1(uint256) := TMP_144(uint256)
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,fee_3,barFeeTo_14,False)
TMP_145(uint256) = balance0_1 (c)- _reserve0_1
TMP_146(bool) = TMP_145 >= amountIn_2
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,INSUFFICIENT_AMOUNT_IN)
INTERNAL_CALL, HybridPool._updateReserves()()
Emit Swap(recipient_1,tokenIn_1,tokenOut_3,amountIn_4,amountOut_3)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: MAX_FEE_2, name: MAX_FEE

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_FEE, Num: 2
Globalname: MAX_FEE, contract_name: HybridPool
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: swapFee_2, name: swapFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: swapFee, Num: 2
Globalname: swapFee, contract_name: HybridPool
global...

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: barFeeTo_2, name: barFeeTo

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: barFeeTo, Num: 2
Globalname: barFeeTo, contract_name: HybridPool
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5
Ssa_name: token0_27, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 27
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token1_27, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 27
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
MAX_FEE_2(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_2(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_2(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: flashSwap
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
token0_27(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_27(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
Phi
[i]Type for token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, HybridPool.lock()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] tokenIn cleared
[i] recipient cleared
[i] unwrapBento cleared
[i] amountIn cleared
[i] context cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: tokenIn_1, name: tokenIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenIn, Num: 1
Globalname: tokenIn, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: context_1, name: context

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: context, Num: 1
Globalname: context, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: amountIn_1, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: HybridPool
End popogation
TUPLE_17(address,address,bool,uint256,bytes) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool,uint256,bytes))
[i]Type for TUPLE_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenIn_1(address)= UNPACK TUPLE_17 index: 0 
Finding type for tokenIn(address ... )
prev address? u
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
[i]Type for tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
recipient_1(address)= UNPACK TUPLE_17 index: 1 
Finding type for recipient(address ... )
Addr:flashSwap_recipient : 0
prev address? u
-989
Head Addr: -989
    Norm: 0
    Set: {-989}
    Fin: NULL
[i]Type for recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool)= UNPACK TUPLE_17 index: 2 
Finding type for unwrapBento(bool ... )
[i]Type for unwrapBento

Name: unwrapBento Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256)= UNPACK TUPLE_17 index: 3 
Finding type for amountIn(uint256 ... )
List: [-1, -1, 'u', None, 'u', 0]
{'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995, 'swap:tokenIn': -994, 'swap:recipient': -993, 'flashSwap:tokenIn': -992, "global:'u'": 7, 'global:u': 8, '_toAmount:TMP_191': 9, 'global:this': 9, 'burn:recipient': -991, 'burnSingle:recipient': -990, 'flashSwap:recipient': -989}
(-1, -1, 'u', None, 8, 0)
[*]Type fetched successfully
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
context_1(bytes)= UNPACK TUPLE_17 index: 4 
Finding type for context(bytes ... )
[i]Type for context

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
End popogation
Ssa_name: token0_29, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 29
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token1_29, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 29
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
TUPLE_18(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_18

Name: TUPLE_18 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_29(address) := ϕ(['token0_39'])
Phi
[i]Type for token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_29(address) := ϕ(['token1_40'])
Phi
[i]Type for token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256)= UNPACK TUPLE_18 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256)= UNPACK TUPLE_18 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_136 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_29, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_29, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_136(bool) = tokenIn_1 == token0_29
[i]Type for TMP_136

Name: TMP_136 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_148 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_29, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_29, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_148(bool) = tokenIn_1 == token1_29
[i]Type for TMP_148

Name: TMP_148 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_149(None) = SOLIDITY_CALL require(bool,string)(TMP_148,INVALID_INPUT_TOKEN)
[i]Type for TMP_149

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_29, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_29, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_2, name: tokenOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 2
Globalname: tokenOut, contract_name: HybridPool
End popogation
tokenOut_2(address) := token0_29(address)
asgn
Source address: 2
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_29, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_29, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 1
Globalname: tokenOut, contract_name: HybridPool
End popogation
tokenOut_1(address) := token1_29(address)
asgn
Source address: 3
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_150 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token1_29, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_29, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: amountIn_3, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
TMP_150(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_29,amountIn_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_150

Name: TMP_150 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
amountIn_3(uint256) := TMP_150(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_137 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token0_29, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token0_29, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
TMP_137(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_29,amountIn_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
Source address: u
[i]Type for TMP_137

Name: TMP_137 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
amountIn_2(uint256) := TMP_137(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_151 cleared
[i] TMP_152 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_6, name: MAX_FEE

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_FEE, Num: 6
Globalname: MAX_FEE, contract_name: HybridPool
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: swapFee_6, name: swapFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: swapFee, Num: 6
Globalname: swapFee, contract_name: HybridPool
global...

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MAX_FEE_6, name: MAX_FEE

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_6, name: swapFee

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_2, name: fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 2
Globalname: fee, contract_name: HybridPool
End popogation
TMP_151(uint256) = amountIn_3 (c)* swapFee_6
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_151

Name: TMP_151 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_152(uint256) = TMP_151 (c)/ MAX_FEE_6
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_152

Name: TMP_152 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_152(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_153 cleared
[i] TMP_154 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_2, name: fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_2, name: fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_2, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 2
Globalname: amountOut, contract_name: HybridPool
End popogation
TMP_153(uint256) = amountIn_3 (c)- fee_2
Source address: u
[i]Type for TMP_153

Name: TMP_153 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_154(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_153,_reserve0_1,_reserve1_1,False)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: token0In Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getAmountOut(uint256,uint256,uint256,bool)
Propogating All
Propogating All
Propogating All
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
amountIn_4
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
x_1
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
d_1
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y_1
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_154

Name: TMP_154 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_2(uint256) := TMP_154(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_138 cleared
[i] TMP_139 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_5, name: MAX_FEE

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_FEE, Num: 5
Globalname: MAX_FEE, contract_name: HybridPool
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: swapFee_5, name: swapFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: swapFee, Num: 5
Globalname: swapFee, contract_name: HybridPool
global...

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MAX_FEE_5, name: MAX_FEE

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: swapFee_5, name: swapFee

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_138(uint256) = amountIn_2 (c)* swapFee_5
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_138

Name: TMP_138 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_139(uint256) = TMP_138 (c)/ MAX_FEE_5
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_139

Name: TMP_139 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_139(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_2, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 2
Globalname: amountOut, contract_name: HybridPool
Ssa_name: context_1, name: context

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: context, Num: 1
Globalname: context, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_36, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 36
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token0_36, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_2, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 2
Globalname: amountOut, contract_name: HybridPool
Ssa_name: context_1, name: context

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: context, Num: 1
Globalname: context, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._processSwap(address,address,uint256,bytes,bool)(token0_36,recipient_1,amountOut_2,context_1,unwrapBento_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[], [], 0, None, [], -1, -989, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: tokenOut Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 0, None, [], -1, -989, 'u']

Name: to Function: None
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: data Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_processSwap(address,address,uint256,bytes,bool)
Propogating All
Propogating All
tokenOut_1
Ssa_name: tokenOut_1, name: tokenOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: tokenOut_1 Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
data_1
Ssa_name: data_1, name: data

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
data_1
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] tokenOut cleared
[i] to cleared
[i] amountOut cleared
[i] data cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: tokenOut_1 Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
tokenOut_1(address) := ϕ(['token0_36', 'token1_31'])
Phi
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
data_1(bytes) := ϕ(['context_1'])
Phi

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -989, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -989, 'u']

Name: to Function: None
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -993
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_168 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_169 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
TMP_169 = CONVERT msg.sender to ITridentCallee
Converting msg.sender
new address made for msg.sender
prev address? u
global assignment: 10
10
10
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: -1
Den: -1
Address: 10
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
High Call: tridentSwapCallback
[i] tokenOut cleared
[i] to cleared
[i] amountOut cleared
[i] data cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: tokenOut_1 Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
tokenOut_1(address) := ϕ(['token0_36', 'token1_31'])
Phi
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
data_1(bytes) := ϕ(['context_1'])
Phi

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -989, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -989, 'u']

Name: to Function: None
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_168 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_169 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
TMP_169 = CONVERT msg.sender to ITridentCallee
Converting msg.sender
10
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 10
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
High Call: tridentSwapCallback
[i] TMP_156 cleared
[i] TMP_157 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_35, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 35
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: token1_36, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 36
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: token1_35, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_36, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance1, Num: 1
Globalname: balance1, contract_name: HybridPool
End popogation
TMP_156(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token1_35)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2]]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
__balance(address)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
___balance_1
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token1_35', 'token0_32', 'token0_40'])
Phi
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
bento_2(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_188 cleared
[i] ___balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
End popogation
Ssa_name: bento_3, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_188 = CONVERT this to address
Converting this
9
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_3(address) := ϕ(['bento_1', 'bento_2', 'bento_7', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
Finding type for ___balance(bytes ... )
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: balance_1, name: balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance, Num: 1
Globalname: balance, contract_name: HybridPool
End popogation
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance_1(uint256) := TMP_190(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token1_35', 'token0_32', 'token0_40'])
Phi
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
bento_2(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_188 cleared
[i] ___balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
End popogation
Ssa_name: bento_3, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_188 = CONVERT this to address
Converting this
9
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_3(address) := ϕ(['bento_1', 'bento_2', 'bento_7', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
Finding type for ___balance(bytes ... )
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: balance_1, name: balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance, Num: 1
Globalname: balance, contract_name: HybridPool
End popogation
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance_1(uint256) := TMP_190(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_156

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_157(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_36,TMP_156)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_157

Name: TMP_157 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance1_1(uint256) := TMP_157(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for balance1

Name: balance1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_140 cleared
[i] TMP_141 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
End popogation
TMP_140(uint256) = amountIn_2 (c)- fee_1
Source address: u
[i]Type for TMP_140

Name: TMP_140 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_141(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_140,_reserve0_1,_reserve1_1,True)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: token0In Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getAmountOut(uint256,uint256,uint256,bool)
Propogating All
Propogating All
Propogating All
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
amountIn_4
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
x_1
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
d_1
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y_1
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_141

Name: TMP_141 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_141(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: context_1, name: context

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: context, Num: 1
Globalname: context, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: token1_31, name: token1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token1, Num: 31
Globalname: token1, contract_name: HybridPool
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: token1_31, name: token1

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: context_1, name: context

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: context, Num: 1
Globalname: context, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
End popogation
INTERNAL_CALL, HybridPool._processSwap(address,address,uint256,bytes,bool)(token1_31,recipient_1,amountOut_1,context_1,unwrapBento_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[], [], 0, None, [], -1, -989, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[], [], 0, None, [], -1, -989], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: tokenOut Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[], [], 0, None, [], -1, -989, 'u']

Name: to Function: None
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: data Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_processSwap(address,address,uint256,bytes,bool)
Propogating All
Propogating All
tokenOut_1
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: tokenOut_1 Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
data_1
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
data_1
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] tokenOut cleared
[i] to cleared
[i] amountOut cleared
[i] data cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: tokenOut_1 Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
tokenOut_1(address) := ϕ(['token0_36', 'token1_31'])
Phi
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
Phi

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
data_1(bytes) := ϕ(['context_1'])
Phi

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -989, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -989, 'u']

Name: to Function: None
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_168 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_169 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
TMP_169 = CONVERT msg.sender to ITridentCallee
Converting msg.sender
10
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 10
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
High Call: tridentSwapCallback
[i] tokenOut cleared
[i] to cleared
[i] amountOut cleared
[i] data cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: tokenOut_1 Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
tokenOut_1(address) := ϕ(['token0_36', 'token1_31'])
Phi
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
Phi

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
data_1(bytes) := ϕ(['context_1'])
Phi

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -989, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -989, 'u']

Name: to Function: None
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_168 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_169 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
TMP_169 = CONVERT msg.sender to ITridentCallee
Converting msg.sender
10
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 10
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
High Call: tridentSwapCallback
[i] TMP_158 cleared
[i] TMP_159 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_158(uint256) = balance1_1 (c)- _reserve1_1
Source address: u
[i]Type for TMP_158

Name: TMP_158 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_159(bool) = TMP_158 >= amountIn_3
lnorm: u rnorm: 0
[i]Type for TMP_159

Name: TMP_159 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_160(None) = SOLIDITY_CALL require(bool,string)(TMP_159,INSUFFICIENT_AMOUNT_IN)
[i]Type for TMP_160

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountOut cleared
[i] amountIn cleared
[i] tokenOut cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountOut_3, name: amountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
Ssa_name: amountIn_4, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: tokenOut_3, name: tokenOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 3
Globalname: tokenOut, contract_name: HybridPool
Ssa_name: fee_3, name: fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 3
Globalname: fee, contract_name: HybridPool
amountOut_3(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
Phi

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenOut_3(address) := ϕ(['tokenOut_1', 'tokenOut_2'])
Phi

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: 3
[i]Type for tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
fee_3(uint256) := ϕ(['fee_2', 'fee_1'])
Phi

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_143 cleared
[i] TMP_144 cleared
[i] balance0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_33, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 33
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token0_32, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 32
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token0_33, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_32, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance0, Num: 1
Globalname: balance0, contract_name: HybridPool
End popogation
TMP_143(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token0_32)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2]]
[i]Type for TMP_143

Name: TMP_143 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_144(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_33,TMP_143)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_143 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_143 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_144

Name: TMP_144 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance0_1(uint256) := TMP_144(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for balance0

Name: balance0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_3, name: fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_14, name: barFeeTo

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: barFeeTo, Num: 14
Globalname: barFeeTo, contract_name: HybridPool
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_3, name: fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_14, name: barFeeTo

Name: None Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,fee_3,barFeeTo_14,False)
New param cache [[[], [], 0, None, [], -1, -992, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 0, None, [], -1, -992, 'u']

Name: token Function: None
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -992, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -992, 'u']

Name: token Function: None
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -992, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -992, 'u']

Name: token Function: None
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_145 cleared
[i] TMP_146 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_145(uint256) = balance0_1 (c)- _reserve0_1
Source address: u
[i]Type for TMP_145

Name: TMP_145 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_146(bool) = TMP_145 >= amountIn_2
lnorm: u rnorm: 0
[i]Type for TMP_146

Name: TMP_146 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,INSUFFICIENT_AMOUNT_IN)
[i]Type for TMP_147

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, HybridPool._updateReserves()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


MAX_FEE_2(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
swapFee_2(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
barFeeTo_2(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
token0_27(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
token1_27(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
MODIFIER_CALL, HybridPool.lock()()
TUPLE_17(address,address,bool,uint256,bytes) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool,uint256,bytes))
tokenIn_1(address)= UNPACK TUPLE_17 index: 0 
recipient_1(address)= UNPACK TUPLE_17 index: 1 
unwrapBento_1(bool)= UNPACK TUPLE_17 index: 2 
amountIn_1(uint256)= UNPACK TUPLE_17 index: 3 
context_1(bytes)= UNPACK TUPLE_17 index: 4 
TUPLE_18(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
token0_29(address) := ϕ(['token0_39'])
token1_29(address) := ϕ(['token1_40'])
_reserve0_1(uint256)= UNPACK TUPLE_18 index: 0 
_reserve1_1(uint256)= UNPACK TUPLE_18 index: 1 
TMP_136(bool) = tokenIn_1 == token0_29
CONDITION TMP_136
TMP_148(bool) = tokenIn_1 == token1_29
TMP_149(None) = SOLIDITY_CALL require(bool,string)(TMP_148,INVALID_INPUT_TOKEN)
tokenOut_2(address) := token0_29(address)
tokenOut_1(address) := token1_29(address)
TMP_150(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_29,amountIn_1)
amountIn_3(uint256) := TMP_150(uint256)
TMP_137(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_29,amountIn_1)
amountIn_2(uint256) := TMP_137(uint256)
TMP_151(uint256) = amountIn_3 (c)* swapFee_6
TMP_152(uint256) = TMP_151 (c)/ MAX_FEE_6
fee_2(uint256) := TMP_152(uint256)
TMP_153(uint256) = amountIn_3 (c)- fee_2
TMP_154(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_153,_reserve0_1,_reserve1_1,False)
amountOut_2(uint256) := TMP_154(uint256)
TMP_138(uint256) = amountIn_2 (c)* swapFee_5
TMP_139(uint256) = TMP_138 (c)/ MAX_FEE_5
fee_1(uint256) := TMP_139(uint256)
INTERNAL_CALL, HybridPool._processSwap(address,address,uint256,bytes,bool)(token0_36,recipient_1,amountOut_2,context_1,unwrapBento_1)
TMP_156(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token1_35)
TMP_157(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_36,TMP_156)
balance1_1(uint256) := TMP_157(uint256)
TMP_140(uint256) = amountIn_2 (c)- fee_1
TMP_141(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_140,_reserve0_1,_reserve1_1,True)
amountOut_1(uint256) := TMP_141(uint256)
INTERNAL_CALL, HybridPool._processSwap(address,address,uint256,bytes,bool)(token1_31,recipient_1,amountOut_1,context_1,unwrapBento_1)
TMP_158(uint256) = balance1_1 (c)- _reserve1_1
TMP_159(bool) = TMP_158 >= amountIn_3
TMP_160(None) = SOLIDITY_CALL require(bool,string)(TMP_159,INSUFFICIENT_AMOUNT_IN)
amountOut_3(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
tokenOut_3(address) := ϕ(['tokenOut_1', 'tokenOut_2'])
fee_3(uint256) := ϕ(['fee_2', 'fee_1'])
TMP_143(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token0_32)
TMP_144(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_33,TMP_143)
balance0_1(uint256) := TMP_144(uint256)
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,fee_3,barFeeTo_14,False)
TMP_145(uint256) = balance0_1 (c)- _reserve0_1
TMP_146(bool) = TMP_145 >= amountIn_2
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,INSUFFICIENT_AMOUNT_IN)
INTERNAL_CALL, HybridPool._updateReserves()()
Emit Swap(recipient_1,tokenIn_1,tokenOut_3,amountIn_4,amountOut_3)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: MAX_FEE_2, name: MAX_FEE

Name: MAX_FEE Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_2, name: swapFee

Name: swapFee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_2, name: barFeeTo

Name: barFeeTo Function: flashSwap
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_27, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_27, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
MAX_FEE_2(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_2(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
barFeeTo_2(address) := ϕ(['barFeeTo_17', 'barFeeTo_15', 'barFeeTo_1', 'barFeeTo_0'])
Phi
[i]Type for barFeeTo

Name: barFeeTo Function: flashSwap
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
token0_27(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_27(address) := ϕ(['token1_0', 'token1_10', 'token1_40', 'token1_26', 'token1_45', 'token1_18', 'token1_1', 'token1_37', 'token1_32', 'token1_22'])
Phi
[i]Type for token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, HybridPool.lock()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] tokenIn cleared
[i] recipient cleared
[i] unwrapBento cleared
[i] amountIn cleared
[i] context cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenIn, Num: 1
Globalname: tokenIn, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: context_1, name: context

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: context, Num: 1
Globalname: context, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: recipient, Num: 1
Globalname: recipient, contract_name: HybridPool
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: HybridPool
End popogation
TUPLE_17(address,address,bool,uint256,bytes) = SOLIDITY_CALL abi.decode()(data_1(address,address,bool,uint256,bytes))
[i]Type for TUPLE_17

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenIn_1(address)= UNPACK TUPLE_17 index: 0 
Finding type for tokenIn(address ... )
prev address? u
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
[i]Type for tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
recipient_1(address)= UNPACK TUPLE_17 index: 1 
Finding type for recipient(address ... )
prev address? u
Head Addr: -989
    Norm: 0
    Set: {-989}
    Fin: NULL
[i]Type for recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool)= UNPACK TUPLE_17 index: 2 
Finding type for unwrapBento(bool ... )
[i]Type for unwrapBento

Name: unwrapBento Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256)= UNPACK TUPLE_17 index: 3 
Finding type for amountIn(uint256 ... )
List: [-1, -1, 'u', None, 'u', 0]
{'global:bento': 1, 'global:token0': 2, 'global:token1': 3, 'global:liquidity': 4, 'global:barFeeTo': 5, 'global:masterDeployer': 6, 'constructor:_masterDeployer': -999, 'constructor:_token0': -998, 'constructor:_token1': -997, 'mint:recipient': -996, 'burnSingle:tokenOut': -995, 'swap:tokenIn': -994, 'swap:recipient': -993, 'flashSwap:tokenIn': -992, "global:'u'": 7, 'global:u': 8, '_toAmount:TMP_191': 9, 'global:this': 9, 'burn:recipient': -991, 'burnSingle:recipient': -990, 'flashSwap:recipient': -989, '_processSwap:TMP_169': 10, 'global:msg.sender': 10}
(-1, -1, 'u', None, 8, 0)
[*]Type fetched successfully
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
context_1(bytes)= UNPACK TUPLE_17 index: 4 
Finding type for context(bytes ... )
[i]Type for context

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
End popogation
Ssa_name: token0_29, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_29, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
TUPLE_18(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_18

Name: TUPLE_18 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_29(address) := ϕ(['token0_39'])
Phi
[i]Type for token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
token1_29(address) := ϕ(['token1_40'])
Phi
[i]Type for token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256)= UNPACK TUPLE_18 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256)= UNPACK TUPLE_18 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_136 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_29, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_29, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_136(bool) = tokenIn_1 == token0_29
[i]Type for TMP_136

Name: TMP_136 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_148 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_29, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_29, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_148(bool) = tokenIn_1 == token1_29
[i]Type for TMP_148

Name: TMP_148 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_149(None) = SOLIDITY_CALL require(bool,string)(TMP_148,INVALID_INPUT_TOKEN)
[i]Type for TMP_149

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_29, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_29, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_2, name: tokenOut

Name: tokenOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 2
Globalname: tokenOut, contract_name: HybridPool
End popogation
tokenOut_2(address) := token0_29(address)
asgn
Source address: 2
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
[i] tokenOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_29, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_29, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 1
Globalname: tokenOut, contract_name: HybridPool
End popogation
tokenOut_1(address) := token1_29(address)
asgn
Source address: 3
Finance type key: (-1, -1)
[i]Type for tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_150 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token1_29, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_29, name: token1

Name: token1 Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
TMP_150(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_29,amountIn_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_150

Name: TMP_150 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
amountIn_3(uint256) := TMP_150(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_137 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token0_29, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token0_29, name: token0

Name: token0 Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
TMP_137(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_29,amountIn_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
Source address: u
[i]Type for TMP_137

Name: TMP_137 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
amountIn_2(uint256) := TMP_137(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_151 cleared
[i] TMP_152 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_6, name: MAX_FEE

Name: MAX_FEE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_6, name: swapFee

Name: swapFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_6, name: MAX_FEE

Name: MAX_FEE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_6, name: swapFee

Name: swapFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_2, name: fee

Name: fee Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 2
Globalname: fee, contract_name: HybridPool
End popogation
TMP_151(uint256) = amountIn_3 (c)* swapFee_6
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_151

Name: TMP_151 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_152(uint256) = TMP_151 (c)/ MAX_FEE_6
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_152

Name: TMP_152 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_2(uint256) := TMP_152(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_153 cleared
[i] TMP_154 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_2, name: fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_2, name: fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_2, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 2
Globalname: amountOut, contract_name: HybridPool
End popogation
TMP_153(uint256) = amountIn_3 (c)- fee_2
Source address: u
[i]Type for TMP_153

Name: TMP_153 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_154(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_153,_reserve0_1,_reserve1_1,False)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: token0In Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getAmountOut(uint256,uint256,uint256,bool)
Propogating All
Propogating All
Propogating All
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
amountIn_4
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
x_1
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
d_1
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y_1
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_154

Name: TMP_154 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_2(uint256) := TMP_154(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_138 cleared
[i] TMP_139 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_5, name: MAX_FEE

Name: MAX_FEE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_5, name: swapFee

Name: swapFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_5, name: MAX_FEE

Name: MAX_FEE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: swapFee_5, name: swapFee

Name: swapFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: HybridPool
End popogation
TMP_138(uint256) = amountIn_2 (c)* swapFee_5
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_138

Name: TMP_138 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_139(uint256) = TMP_138 (c)/ MAX_FEE_5
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_139

Name: TMP_139 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_139(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amountOut_2, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 2
Globalname: amountOut, contract_name: HybridPool
Ssa_name: context_1, name: context

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: context, Num: 1
Globalname: context, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_36, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_36, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amountOut_2, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 2
Globalname: amountOut, contract_name: HybridPool
Ssa_name: context_1, name: context

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: context, Num: 1
Globalname: context, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._processSwap(address,address,uint256,bytes,bool)(token0_36,recipient_1,amountOut_2,context_1,unwrapBento_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[], [], 0, None, [], -1, -989, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[], [], 0, None, [], -1, -989], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: tokenOut Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 0, None, [], -1, -989, 'u']

Name: to Function: None
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: data Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_processSwap(address,address,uint256,bytes,bool)
Propogating All
Propogating All
tokenOut_1
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: tokenOut_1 Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
data_1
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
data_1
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] tokenOut cleared
[i] to cleared
[i] amountOut cleared
[i] data cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: tokenOut_1 Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
tokenOut_1(address) := ϕ(['token0_36', 'token1_31'])
Phi
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
Phi

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
data_1(bytes) := ϕ(['context_1'])
Phi

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
Phi

Name: unwrapBento Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -989, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -989, 'u']

Name: to Function: None
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_168 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_169 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
TMP_169 = CONVERT msg.sender to ITridentCallee
Converting msg.sender
10
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 10
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
High Call: tridentSwapCallback
[i] tokenOut cleared
[i] to cleared
[i] amountOut cleared
[i] data cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: tokenOut_1 Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
tokenOut_1(address) := ϕ(['token0_36', 'token1_31'])
Phi
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
Phi

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
data_1(bytes) := ϕ(['context_1'])
Phi

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
Phi

Name: unwrapBento Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -989, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -989, 'u']

Name: to Function: None
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_168 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_169 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
TMP_169 = CONVERT msg.sender to ITridentCallee
Converting msg.sender
10
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 10
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
High Call: tridentSwapCallback
[i] TMP_156 cleared
[i] TMP_157 cleared
[i] balance1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token1_35, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_36, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_35, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_36, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: balance1, Num: 1
Globalname: balance1, contract_name: HybridPool
End popogation
TMP_156(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token1_35)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2]]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
__balance(address)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
___balance_1
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token1_35', 'token0_32', 'token0_40'])
Phi
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
bento_2(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_188 cleared
[i] ___balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
End popogation
Ssa_name: bento_3, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_188 = CONVERT this to address
Converting this
9
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_3(address) := ϕ(['bento_1', 'bento_2', 'bento_7', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
Finding type for ___balance(bytes ... )
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: balance_1, name: balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance, Num: 1
Globalname: balance, contract_name: HybridPool
End popogation
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance_1(uint256) := TMP_190(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token1_43', 'token1_35', 'token0_32', 'token0_40'])
Phi
[i]Type for token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
bento_2(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_188 cleared
[i] ___balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: __balance
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_2, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
End popogation
Ssa_name: bento_3, name: bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_59 (->None) := 4152920812(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_59

Name: REF_59 Function: __balance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4152920812
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_188 = CONVERT this to address
Converting this
9
[i]Type for TMP_188

Name: TMP_188 Function: __balance
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_189(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_59,token_1,TMP_188)
[i]Type for TMP_189

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_21(bool,bytes) = LOW_LEVEL_CALL, dest:bento_2, function:staticcall, arguments:['TMP_189']  
[i]Type for TUPLE_21

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_3(address) := ϕ(['bento_1', 'bento_2', 'bento_7', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: __balance
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
___balance_1(bytes)= UNPACK TUPLE_21 index: 1 
Finding type for ___balance(bytes ... )
[i]Type for ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] balance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: ___balance_1, name: ___balance

Name: ___balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ___balance, Num: 1
Globalname: ___balance, contract_name: HybridPool
Ssa_name: balance_1, name: balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: balance, Num: 1
Globalname: balance, contract_name: HybridPool
End popogation
TMP_190(uint256) = SOLIDITY_CALL abi.decode()(___balance_1,uint256)
[i]Type for TMP_190

Name: TMP_190 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
balance_1(uint256) := TMP_190(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for balance

Name: balance Function: __balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_156

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_157(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token1_36,TMP_156)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_143 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_143 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_157

Name: TMP_157 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance1_1(uint256) := TMP_157(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for balance1

Name: balance1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_140 cleared
[i] TMP_141 cleared
[i] amountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
End popogation
TMP_140(uint256) = amountIn_2 (c)- fee_1
Source address: u
[i]Type for TMP_140

Name: TMP_140 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_141(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(TMP_140,_reserve0_1,_reserve1_1,True)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: token0In Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getAmountOut(uint256,uint256,uint256,bool)
Propogating All
Propogating All
Propogating All
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
amountIn_4
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
x_1
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
d_1
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y_1
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_141

Name: TMP_141 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := TMP_141(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: context_1, name: context

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: context, Num: 1
Globalname: context, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: token1_31, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1_31, name: token1

Name: token1 Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: context_1, name: context

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: context, Num: 1
Globalname: context, contract_name: HybridPool
Ssa_name: recipient_1, name: recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
End popogation
INTERNAL_CALL, HybridPool._processSwap(address,address,uint256,bytes,bool)(token1_31,recipient_1,amountOut_1,context_1,unwrapBento_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[], [], 0, None, [], -1, -989, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[], [], 0, None, [], -1, -989], [[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: tokenOut Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[], [], 0, None, [], -1, -989, 'u']

Name: to Function: None
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amountOut Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: data Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_processSwap(address,address,uint256,bytes,bool)
Propogating All
Propogating All
tokenOut_1
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: tokenOut_1 Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
amountOut_1
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
data_1
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
data_1
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] tokenOut cleared
[i] to cleared
[i] amountOut cleared
[i] data cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: tokenOut_1 Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
tokenOut_1(address) := ϕ(['token0_36', 'token1_31'])
Phi
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
Phi

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
data_1(bytes) := ϕ(['context_1'])
Phi

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
Phi

Name: unwrapBento Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -989, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -989, 'u']

Name: to Function: None
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_168 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_169 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
TMP_169 = CONVERT msg.sender to ITridentCallee
Converting msg.sender
10
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 10
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
High Call: tridentSwapCallback
[i] tokenOut cleared
[i] to cleared
[i] amountOut cleared
[i] data cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: tokenOut_1 Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
tokenOut_1(address) := ϕ(['token0_36', 'token1_31'])
Phi
[i]Type for tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
amountOut_1(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
Phi

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
data_1(bytes) := ϕ(['context_1'])
Phi

Name: context Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1'])
Phi

Name: unwrapBento Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amountOut_1, name: amountOut

Name: amountOut Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_1, name: tokenOut

Name: tokenOut Function: _processSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: amountOut_1, name: amountOut

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amountOut, Num: 1
Globalname: amountOut, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _processSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenOut_1,amountOut_1,to_1,unwrapBento_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 0, 'to', [], -1, -989, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 0, 'to', [], -1, -989, 'u']

Name: to Function: None
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: HybridPool
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: to_1 Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi

Name: amount1 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burnSingle
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amount1 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: amountOut_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amount0 Function: burn
Num: 4
Den: -1
Address: u
Norm: 18
LF: None
Value: u
Fields: 
Finance Type: reserve

Name: _barFee Function: _handleFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi

Name: unwrapBento_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burn
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: swap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: unwrapBento Function: burnSingle
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: unwrapBento, Num: 1
Globalname: unwrapBento, contract_name: HybridPool
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[-1], [-1], 18, 'token1', [], -1, 3, 'u'], [[-1], [-1], 'u', None, [], 30, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[-1], [-1], 18, 'token1', [], -1, 3, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 30, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 3

Name: token_1 Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_168 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
REF_54 -> LENGTH data_1
[i]Type for REF_54

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_168(bool) = REF_54 != 0
[i]Type for TMP_168

Name: TMP_168 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_169 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: _processSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
End popogation
TMP_169 = CONVERT msg.sender to ITridentCallee
Converting msg.sender
10
[i]Type for TMP_169

Name: TMP_169 Function: _processSwap
Num: 
Den: 
Address: 10
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:TMP_169(ITridentCallee), function:tridentSwapCallback, arguments:['data_1']  
High Call: tridentSwapCallback
[i] TMP_158 cleared
[i] TMP_159 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance1_1, name: balance1

Name: balance1 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_158(uint256) = balance1_1 (c)- _reserve1_1
Source address: u
[i]Type for TMP_158

Name: TMP_158 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_159(bool) = TMP_158 >= amountIn_3
lnorm: u rnorm: 0
[i]Type for TMP_159

Name: TMP_159 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_160(None) = SOLIDITY_CALL require(bool,string)(TMP_159,INSUFFICIENT_AMOUNT_IN)
[i]Type for TMP_160

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] amountOut cleared
[i] amountIn cleared
[i] tokenOut cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Name: tokenOut, Num: 3
Globalname: tokenOut, contract_name: HybridPool
Ssa_name: fee_3, name: fee

Name: fee Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 3
Globalname: fee, contract_name: HybridPool
amountOut_3(uint256) := ϕ(['amountOut_1', 'amountOut_2'])
Phi

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
tokenOut_3(address) := ϕ(['tokenOut_1', 'tokenOut_2'])
Phi

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: 3
[i]Type for tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
fee_3(uint256) := ϕ(['fee_2', 'fee_1'])
Phi

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_143 cleared
[i] TMP_144 cleared
[i] balance0 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token0_33, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_32, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_33, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_32, name: token0

Name: token0 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: balance0, Num: 1
Globalname: balance0, contract_name: HybridPool
End popogation
TMP_143(uint256) = INTERNAL_CALL, HybridPool.__balance(address)(token0_32)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2]]
[i]Type for TMP_143

Name: TMP_143 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_144(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(token0_33,TMP_143)
New param cache [[[-1], [-1], 6, 'token0', [], -1, 2, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 6, 'token0', [], -1, 2, 'u']

Name: token Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_143 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: token_1 Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_143 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_144

Name: TMP_144 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
balance0_1(uint256) := TMP_144(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for balance0

Name: balance0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_3, name: fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_14, name: barFeeTo

Name: barFeeTo Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_3, name: fee

Name: fee Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: barFeeTo_14, name: barFeeTo

Name: barFeeTo Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, HybridPool._transfer(address,uint256,address,bool)(tokenIn_1,fee_3,barFeeTo_14,False)
New param cache [[[], [], 0, None, [], -1, -992, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u'], [[], [], 0, None, [], -1, -991], [[-1], [-1], 'u', None, [], -1, 'u']]
[[], [], 0, None, [], -1, -992, 'u']

Name: token Function: None
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'barFeeTo', [], -1, 5, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: unwrapBento Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_transfer(address,uint256,address,bool)
Propogating All
Propogating All
unwrapBento_1
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: -989
Norm: 0
LF: to
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
success_1
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
to_1
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
success_scope_0_0
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento_1 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -992, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -992, 'u']

Name: token Function: None
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: reserve
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] amount cleared
[i] to cleared
[i] unwrapBento cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Source address: 5

Name: to_1 Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: unwrapBento_1 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['tokenIn_1', 'token0_21', 'tokenOut_1', 'tokenOut_3', 'tokenIn_1', 'token1_17', 'token1_6', 'token0_5'])
Phi
[i]Type for token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount1_2', 'fee_3', 'amount0_3', 'amount1_1', 'amountOut_1', 'amount0_1', '_barFee_1', 'amountOut_3'])
Phi
[i]Type for amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['barFeeTo_14', 'to_1', 'recipient_1', 'recipient_1', 'recipient_1', 'barFeeTo_16'])
Phi
[i]Type for to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
XXXX
unwrapBento_1(bool) := ϕ(['unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1', 'unwrapBento_1'])
Phi
[i]Type for unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_6(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: unwrapBento_1, name: unwrapBento

Name: unwrapBento Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_205 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_6, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_7, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_70 (->None) := 2547674416(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_70

Name: REF_70 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 2547674416
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_205 = CONVERT this to address
Converting this
9
[i]Type for TMP_205

Name: TMP_205 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_206(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_70,token_1,TMP_205,to_1,amount_1,0)
[i]Type for TMP_206

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_23(bool,bytes) = LOW_LEVEL_CALL, dest:bento_6, function:call, arguments:['TMP_206']  
[i]Type for TUPLE_23

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_7(address) := ϕ(['bento_1', 'bento_7', 'bento_6', 'bento_3', 'bento_9', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_1(bool)= UNPACK TUPLE_23 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
Ssa_name: success_1, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 1
Globalname: success, contract_name: HybridPool
End popogation
TMP_207(None) = SOLIDITY_CALL require(bool,string)(success_1,WITHDRAW_FAILED)
[i]Type for TMP_207

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_208 cleared
[i] TMP_209 cleared
[i] success cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _transfer
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: to_1, name: to

Name: to Function: _transfer
Num: -1
Den: -1
Address: 5
Norm: 0
LF: barFeeTo
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _transfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: success_2, name: success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success, Num: 2
Globalname: success, contract_name: HybridPool
End popogation
Ssa_name: bento_8, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_9, name: bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_74 (->None) := 4052550604(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_74

Name: REF_74 Function: _transfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 4052550604
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_208 = CONVERT this to address
Converting this
9
[i]Type for TMP_208

Name: TMP_208 Function: _transfer
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_209(uint256) = INTERNAL_CALL, HybridPool._toShare(address,uint256)(token_1,amount_1)
New param cache [[[], [], 0, 'token1', [], -1, -992, 'u'], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[4], [-1], 18, None, [], 30, 'u']]
[[], [], 0, 'token1', [], -1, -992, 'u']

Name: token Function: None
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toShare(address,uint256)
Propogating All
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_output_1
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: token1
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: token_1 Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
token_1(address) := ϕ(['token0_7', 'token_1', 'token1_21', 'token1_8', 'token0_18'])
Phi
[i]Type for token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['amount_1', 'amount1_1', 'amount1_1', 'amount0_1', 'amount0_1'])
Phi
[i]Type for input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_4(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_0', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] _output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: bento_4, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toShare
Num: 
Den: 
Address: -992
Norm: 0
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toShare
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
End popogation
Ssa_name: bento_5, name: bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
REF_65 (->None) := 3662756298(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for REF_65

Name: REF_65 Function: _toShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 3662756298
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_194(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_65,token_1,input_1,False)
[i]Type for TMP_194

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_22(bool,bytes) = LOW_LEVEL_CALL, dest:bento_4, function:staticcall, arguments:['TMP_194']  
[i]Type for TUPLE_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_5(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_4', 'bento_5'])
Phi
[i]Type for bento

Name: bento Function: _toShare
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
_output_1(bytes)= UNPACK TUPLE_22 index: 1 
Finding type for _output(bytes ... )
[i]Type for _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: _output_1, name: _output

Name: _output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _output, Num: 1
Globalname: _output, contract_name: HybridPool
Ssa_name: output_1, name: output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_195(uint256) = SOLIDITY_CALL abi.decode()(_output_1,uint256)
[i]Type for TMP_195

Name: TMP_195 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_195(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_8(address) := ϕ(['bento_5'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_210(bytes) = SOLIDITY_CALL abi.encodeWithSelector()(REF_74,token_1,TMP_208,to_1,TMP_209)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TUPLE_24(bool,bytes) = LOW_LEVEL_CALL, dest:bento_8, function:call, arguments:['TMP_210']  
[i]Type for TUPLE_24

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
bento_9(address) := ϕ(['bento_1', 'bento_7', 'bento_3', 'bento_9', 'bento_5', 'bento_8'])
Phi
[i]Type for bento

Name: bento Function: _transfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: bento
Value: u
Fields: 
Finance Type: undef
XXXX
success_2(bool)= UNPACK TUPLE_24 index: 0 
Finding type for success(bool ... )
[i]Type for success

Name: success Function: _transfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
Ssa_name: success_scope_0_0, name: success_scope_0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: success_scope_0, Num: 0
Globalname: success_scope_0, contract_name: HybridPool
End popogation
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_scope_0_0,TRANSFER_FAILED)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_145 cleared
[i] TMP_146 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: balance0_1, name: balance0

Name: balance0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
TMP_145(uint256) = balance0_1 (c)- _reserve0_1
Source address: u
[i]Type for TMP_145

Name: TMP_145 Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_146(bool) = TMP_145 >= amountIn_2
lnorm: u rnorm: 0
[i]Type for TMP_146

Name: TMP_146 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_147(None) = SOLIDITY_CALL require(bool,string)(TMP_146,INSUFFICIENT_AMOUNT_IN)
[i]Type for TMP_147

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, HybridPool._updateReserves()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenOut_3, name: tokenOut

Name: tokenOut Function: flashSwap
Num: -1
Den: -1
Address: 3
Norm: 18
LF: token1
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: flashSwap
Num: 
Den: 
Address: -992
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountOut_3, name: amountOut

Name: amountOut Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountOut, Num: 3
Globalname: amountOut, contract_name: HybridPool
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: flashSwap
Num: 
Den: 
Address: -989
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Source address: u
Reading Function: updateBarFee
Function updateBarFee not marked
Reading Function: _processSwap
Function _processSwap not marked
Reading Function: _getReserves
Function _getReserves not marked
Reading Function: _updateReserves
Function _updateReserves not marked
Reading Function: _balance
Function _balance not marked
Reading Function: __balance
Function __balance not marked
Reading Function: _toAmount
Function _toAmount not marked
Reading Function: _toShare
Function _toShare not marked
Reading Function: _getAmountOut
Function _getAmountOut not marked
Reading Function: _transfer
Function _transfer not marked
Reading Function: _computeLiquidity
Function _computeLiquidity not marked
Reading Function: _computeLiquidityFromAdjustedBalances
Function _computeLiquidityFromAdjustedBalances not marked
Reading Function: _getY
Function _getY not marked
Reading Function: _getYD
Function _getYD not marked
Reading Function: _handleFee
Function _handleFee not marked
Reading Function: _nonOptimalMintFee
Function _nonOptimalMintFee not marked
Reading Function: getAssets
Function getAssets not marked
Reading Function: getAmountOut
Checking funcion...



getAmountOut
Function name: getAmountOut
Finding type for data(bytes ... )
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
getAmountOut(bytes)


MAX_FEE_9(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
swapFee_9(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
token0_44(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
TUPLE_25(address,uint256) = SOLIDITY_CALL abi.decode()(data_1(address,uint256))
tokenIn_1(address)= UNPACK TUPLE_25 index: 0 
amountIn_1(uint256)= UNPACK TUPLE_25 index: 1 
TUPLE_26(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
_reserve0_1(uint256)= UNPACK TUPLE_26 index: 0 
_reserve1_1(uint256)= UNPACK TUPLE_26 index: 1 
TMP_297(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(tokenIn_1,amountIn_1)
amountIn_2(uint256) := TMP_297(uint256)
TMP_298(uint256) = amountIn_2 (c)* swapFee_11
TMP_299(uint256) = TMP_298 (c)/ MAX_FEE_11
amountIn_3(uint256) = amountIn_2 (c)- TMP_299
TMP_300(bool) = tokenIn_1 == token0_46
CONDITION TMP_300
TMP_302(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(amountIn_3,_reserve0_1,_reserve1_1,False)
finalAmountOut_1(uint256) := TMP_302(uint256)
TMP_301(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(amountIn_3,_reserve0_1,_reserve1_1,True)
finalAmountOut_2(uint256) := TMP_301(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: MAX_FEE_9, name: MAX_FEE

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_FEE, Num: 9
Globalname: MAX_FEE, contract_name: HybridPool
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: swapFee_9, name: swapFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: swapFee, Num: 9
Globalname: swapFee, contract_name: HybridPool
global...

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: token0_44, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 44
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
MAX_FEE_9(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_9(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_44(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: getAmountOut
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: tokenIn_1, name: tokenIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenIn, Num: 1
Globalname: tokenIn, contract_name: HybridPool
Ssa_name: amountIn_1, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: HybridPool
End popogation
TUPLE_25(address,uint256) = SOLIDITY_CALL abi.decode()(data_1(address,uint256))
[i]Type for TUPLE_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenIn_1(address)= UNPACK TUPLE_25 index: 0 
Finding type for tokenIn(address ... )
Addr:getAmountOut_tokenIn : 0
prev address? u
-988
Head Addr: -988
    Norm: 0
    Set: {-988}
    Fin: NULL
[i]Type for tokenIn

Name: tokenIn Function: getAmountOut
Num: 
Den: 
Address: -988
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256)= UNPACK TUPLE_25 index: 1 
Finding type for amountIn(uint256 ... )
Value: u
[i]Type for amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
Ssa_name: _reserve0_1, name: _reserve0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
End popogation
TUPLE_26(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_26

Name: TUPLE_26 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256)= UNPACK TUPLE_26 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve0

Name: _reserve0 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256)= UNPACK TUPLE_26 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve1

Name: _reserve1 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_297 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: getAmountOut
Num: 
Den: 
Address: -988
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: getAmountOut
Num: 
Den: 
Address: -988
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
TMP_297(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(tokenIn_1,amountIn_1)
New param cache [[[], [], 0, None, [], -1, -988, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[], [], 0, None, [], -1, -988, 'u']

Name: token Function: None
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -988

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -988

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -988

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_297

Name: TMP_297 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
amountIn_2(uint256) := TMP_297(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_298 cleared
[i] TMP_299 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_11, name: MAX_FEE

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_FEE, Num: 11
Globalname: MAX_FEE, contract_name: HybridPool
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: swapFee_11, name: swapFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: swapFee, Num: 11
Globalname: swapFee, contract_name: HybridPool
global...

Name: swapFee Function: constructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MAX_FEE_11, name: MAX_FEE

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: swapFee_11, name: swapFee

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
TMP_298(uint256) = amountIn_2 (c)* swapFee_11
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_298

Name: TMP_298 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_299(uint256) = TMP_298 (c)/ MAX_FEE_11
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_299

Name: TMP_299 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_3(uint256) = amountIn_2 (c)- TMP_299
Source address: u
[i]Type for amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_300 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: getAmountOut
Num: 
Den: 
Address: -988
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_46, name: token0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token0, Num: 46
Globalname: token0, contract_name: HybridPool
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: token0_46, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: getAmountOut
Num: 
Den: 
Address: -988
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_300(bool) = tokenIn_1 == token0_46
[i]Type for TMP_300

Name: TMP_300 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_302 cleared
[i] finalAmountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: finalAmountOut_1, name: finalAmountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: finalAmountOut, Num: 1
Globalname: finalAmountOut, contract_name: HybridPool
End popogation
TMP_302(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(amountIn_3,_reserve0_1,_reserve1_1,False)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: token0In Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getAmountOut(uint256,uint256,uint256,bool)
Propogating All
Propogating All
Propogating All
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
amountIn_4
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
x_1
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
d_1
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y_1
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_302

Name: TMP_302 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
finalAmountOut_1(uint256) := TMP_302(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for finalAmountOut

Name: finalAmountOut Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_301 cleared
[i] finalAmountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: finalAmountOut_2, name: finalAmountOut

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: finalAmountOut, Num: 2
Globalname: finalAmountOut, contract_name: HybridPool
End popogation
TMP_301(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(amountIn_3,_reserve0_1,_reserve1_1,True)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: token0In Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getAmountOut(uint256,uint256,uint256,bool)
Propogating All
Propogating All
Propogating All
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
amountIn_4
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
x_1
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
d_1
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y_1
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_301

Name: TMP_301 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
finalAmountOut_2(uint256) := TMP_301(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for finalAmountOut

Name: finalAmountOut Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation


MAX_FEE_9(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
swapFee_9(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
token0_44(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
TUPLE_25(address,uint256) = SOLIDITY_CALL abi.decode()(data_1(address,uint256))
tokenIn_1(address)= UNPACK TUPLE_25 index: 0 
amountIn_1(uint256)= UNPACK TUPLE_25 index: 1 
TUPLE_26(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
_reserve0_1(uint256)= UNPACK TUPLE_26 index: 0 
_reserve1_1(uint256)= UNPACK TUPLE_26 index: 1 
TMP_297(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(tokenIn_1,amountIn_1)
amountIn_2(uint256) := TMP_297(uint256)
TMP_298(uint256) = amountIn_2 (c)* swapFee_11
TMP_299(uint256) = TMP_298 (c)/ MAX_FEE_11
amountIn_3(uint256) = amountIn_2 (c)- TMP_299
TMP_300(bool) = tokenIn_1 == token0_46
CONDITION TMP_300
TMP_302(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(amountIn_3,_reserve0_1,_reserve1_1,False)
finalAmountOut_1(uint256) := TMP_302(uint256)
TMP_301(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(amountIn_3,_reserve0_1,_reserve1_1,True)
finalAmountOut_2(uint256) := TMP_301(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: MAX_FEE_9, name: MAX_FEE

Name: MAX_FEE Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_9, name: swapFee

Name: swapFee Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_44, name: token0

Name: token0 Function: getAmountOut
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
MAX_FEE_9(uint256) := ϕ(['MAX_FEE_0', 'MAX_FEE_11', 'MAX_FEE_5', 'MAX_FEE_6'])
Phi
[i]Type for MAX_FEE

Name: MAX_FEE Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
swapFee_9(uint256) := ϕ(['swapFee_5', 'swapFee_1', 'swapFee_11', 'swapFee_6', 'swapFee_0'])
Phi
[i]Type for swapFee

Name: swapFee Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
token0_44(address) := ϕ(['token0_1', 'token0_46', 'token0_22', 'token0_34', 'token0_37', 'token0_10', 'token0_0', 'token0_26', 'token0_19', 'token0_42', 'token0_39'])
Phi
[i]Type for token0

Name: token0 Function: getAmountOut
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] tokenIn cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: data_1, name: data

Name: data_1 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: data_1, name: data

Name: data_1 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: data_1 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: data, Num: 1
Globalname: data, contract_name: HybridPool
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenIn, Num: 1
Globalname: tokenIn, contract_name: HybridPool
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: HybridPool
End popogation
TUPLE_25(address,uint256) = SOLIDITY_CALL abi.decode()(data_1(address,uint256))
[i]Type for TUPLE_25

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenIn_1(address)= UNPACK TUPLE_25 index: 0 
Finding type for tokenIn(address ... )
prev address? u
Head Addr: -988
    Norm: 0
    Set: {-988}
    Fin: NULL
[i]Type for tokenIn

Name: tokenIn Function: getAmountOut
Num: 
Den: 
Address: -988
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_1(uint256)= UNPACK TUPLE_25 index: 1 
Finding type for amountIn(uint256 ... )
Value: u
[i]Type for amountIn

Name: amountIn Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve1, Num: 1
Globalname: _reserve1, contract_name: HybridPool
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: _reserve0, Num: 1
Globalname: _reserve0, contract_name: HybridPool
End popogation
TUPLE_26(uint256,uint256) = INTERNAL_CALL, HybridPool._getReserves()()
New param cache []
Old param cache: []
[i]Type for TUPLE_26

Name: TUPLE_26 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256)= UNPACK TUPLE_26 index: 0 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve0

Name: _reserve0 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256)= UNPACK TUPLE_26 index: 1 
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for _reserve1

Name: _reserve1 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_297 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: getAmountOut
Num: 
Den: 
Address: -988
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: HybridPool
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: getAmountOut
Num: 
Den: 
Address: -988
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 1
Globalname: amountIn, contract_name: HybridPool
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
TMP_297(uint256) = INTERNAL_CALL, HybridPool._toAmount(address,uint256)(tokenIn_1,amountIn_1)
New param cache [[[], [], 0, None, [], -1, -988, 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 6, 'token0', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[], [], 0, None, [], -1, -988, 'u']

Name: token Function: None
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: input Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_toAmount(address,uint256)
Propogating All
Propogating All
token_1
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -988

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
input_1
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
output_1
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -988

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_143 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: amountIn Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[i] token cleared
[i] input cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: token0
Value: u
Fields: 
Finance Type: undef
Source address: -988

Name: token_1 Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: input_1 Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: input, Num: 1
Globalname: input, contract_name: HybridPool
token_1(address) := ϕ(['token1_29', 'token0_41', 'token1_44', 'token1_39', 'tokenIn_1', 'token0_29', 'token0_33', 'token0_38', 'token1_36'])
Phi
[i]Type for token

Name: token Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
XXXX
input_1(uint256) := ϕ(['TMP_156', '_reserve0_1', 'TMP_143', 'TMP_186', '_reserve1_1', 'TMP_184', 'amountIn_1', 'amountIn_1'])
Phi

Name: TMP_156 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve0 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_143 Function: flashSwap
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: TMP_186 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: _reserve1 Function: _getReserves
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: TMP_184 Function: _balance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: amountIn Function: flashSwap
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance

Name: amountIn Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_191 cleared
[i] TMP_192 cleared
[i] TMP_193 cleared
[i] output cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: token_1, name: token

Name: token Function: _toAmount
Num: 
Den: 
Address: -988
Norm: 0
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: input_1, name: input

Name: input Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Name: output, Num: 1
Globalname: output, contract_name: HybridPool
End popogation
TMP_191 = CONVERT this to address
Converting this
9
[i]Type for TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_192 = CONVERT TMP_191 to IBentoBoxMinimal
Converting TMP_191

Name: TMP_191 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: HybridPool
Value: u
Fields: 
Finance Type: undef
Source address: 9
BentoBoxMinimal
[i]Type for TMP_192

Name: TMP_192 Function: _toAmount
Num: 
Den: 
Address: 9
Norm: u
LF: BentoBoxMinimal
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_193(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IBentoBoxMinimal), function:toAmount, arguments:['token_1', 'input_1', 'False']  
High Call: toAmount
Running querryfc
Found: None
Written func info: IBentoBoxMinimal, toAmount
Retvar: ('c', ['-1'], ['-1'], 0, "'u'", 'u')
token
input
False
([-1], [-1], 0, "'u'", 'u', -1)
[i]Type for TMP_193

Name: TMP_193 Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
output_1(uint256) := TMP_193(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: output_1, name: output

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
End popogation
RETURN output_1
RETURN

Name: output Function: _toAmount
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_297

Name: TMP_297 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
amountIn_2(uint256) := TMP_297(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
[i] TMP_298 cleared
[i] TMP_299 cleared
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_11, name: MAX_FEE

Name: MAX_FEE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: swapFee_11, name: swapFee

Name: swapFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_FEE_11, name: MAX_FEE

Name: MAX_FEE Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: swapFee_11, name: swapFee

Name: swapFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
TMP_298(uint256) = amountIn_2 (c)* swapFee_11
lnorm: 0 rnorm: u
Source address: u
[i]Type for TMP_298

Name: TMP_298 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_299(uint256) = TMP_298 (c)/ MAX_FEE_11
lnorm: 0 rnorm: u
lnorm: 0 rnorm: u
[i]Type for TMP_299

Name: TMP_299 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
amountIn_3(uint256) = amountIn_2 (c)- TMP_299
Source address: u
[i]Type for amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_300 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: getAmountOut
Num: 
Den: 
Address: -988
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_46, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0_46, name: token0

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 6
LF: token0
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenIn_1, name: tokenIn

Name: tokenIn Function: getAmountOut
Num: 
Den: 
Address: -988
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_300(bool) = tokenIn_1 == token0_46
[i]Type for TMP_300

Name: TMP_300 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_302 cleared
[i] finalAmountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: finalAmountOut_1, name: finalAmountOut

Name: finalAmountOut Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: finalAmountOut, Num: 1
Globalname: finalAmountOut, contract_name: HybridPool
End popogation
TMP_302(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(amountIn_3,_reserve0_1,_reserve1_1,False)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: token0In Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getAmountOut(uint256,uint256,uint256,bool)
Propogating All
Propogating All
Propogating All
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
amountIn_4
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
x_1
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
d_1
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y_1
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_302

Name: TMP_302 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
finalAmountOut_1(uint256) := TMP_302(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for finalAmountOut

Name: finalAmountOut Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_301 cleared
[i] finalAmountOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: finalAmountOut_2, name: finalAmountOut

Name: finalAmountOut Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: finalAmountOut, Num: 2
Globalname: finalAmountOut, contract_name: HybridPool
End popogation
TMP_301(uint256) = INTERNAL_CALL, HybridPool._getAmountOut(uint256,uint256,uint256,bool)(amountIn_3,_reserve0_1,_reserve1_1,True)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', "'u'"], [[-1], [-1], 0, None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 'u', None, [], 30, 'u'], [[-1], [-1], 0, None, [], -1, 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: amountIn Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', "'u'"]

Name: _reserve1 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: token0In Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_getAmountOut(uint256,uint256,uint256,bool)
Propogating All
Propogating All
Propogating All
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
amountIn_4
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
xpIn_3
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
_reserve1_1
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
x_1
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
d_1
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_reserve0_1
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Propogating All
y_1
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
xpOut_3
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Propogating All
token0In_1
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Propogating All
amountIn_1
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
dy_1
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1_1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] _reserve0 cleared
[i] _reserve1 cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amountIn_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve0_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Source address: u

Name: _reserve1_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
amountIn_1(uint256) := ϕ(['TMP_153', 'amountIn_3', 'TMP_124', 'TMP_103', 'TMP_112', 'TMP_130', 'TMP_140'])
Phi
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_reserve0_1(uint256) := ϕ(['_reserve0_1', 'TMP_104', 'TMP_113', '_reserve0_1', '_reserve0_1'])
Phi
[i]Type for _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
_reserve1_1(uint256) := ϕ(['_reserve1_1', '_reserve1_1', '_reserve1_1', 'TMP_105', 'TMP_114'])
Phi
[i]Type for _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
XXXX
token0PrecisionMultiplier_2(uint256) := ϕ(['token0PrecisionMultiplier_1', 'token0PrecisionMultiplier_4', 'token0PrecisionMultiplier_0'])
Phi
[i]Type for token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
token1PrecisionMultiplier_2(uint256) := ϕ(['token1PrecisionMultiplier_1', 'token1PrecisionMultiplier_4', 'token1PrecisionMultiplier_0'])
Phi
[i]Type for token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] TMP_196 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_1, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 1
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_196(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_196

Name: TMP_196 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_1(uint256) := TMP_196(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_1, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 1
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_197(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_197

Name: TMP_197 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_1(uint256) := TMP_197(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_2, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 2
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_2(uint256) = amountIn_1 (c)* token0PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
[i] xpIn cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 4
Globalname: amountIn, contract_name: HybridPool
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 3
Globalname: xpIn, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 3
Globalname: xpOut, contract_name: HybridPool
amountIn_4(uint256) := ϕ(['amountIn_2', 'amountIn_3'])
Phi

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_3(uint256) := ϕ(['xpIn_1', 'xpIn_2'])
Phi

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_3(uint256) := ϕ(['xpOut_2', 'xpOut_1'])
Phi

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_200 cleared
[i] d cleared
Propogating parameters and globals to SSA variables...
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
End popogation
TMP_200(uint256) = INTERNAL_CALL, HybridPool._computeLiquidityFromAdjustedBalances(uint256,uint256)(xpIn_3,xpOut_3)
New param cache [[[-1], [-1], 1, None, [], -1, 'u', 10], [[-1], [-1], 1, None, [], -1, 'u', 10]]
Old param cache: [[[-1], [-1], 1, None, [], -1, 'u'], [[-1], [-1], 1, None, [], -1, 'u']]
[i]Type for TMP_200

Name: TMP_200 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
d_1(uint256) := TMP_200(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_201 cleared
[i] x cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_4, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: xpIn_3, name: xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Name: x, Num: 1
Globalname: x, contract_name: HybridPool
End popogation
TMP_201(uint256) = xpIn_3 (c)+ amountIn_4
Source address: u
[i]Type for TMP_201

Name: TMP_201 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
x_1(uint256) := TMP_201(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
XXXX
[i] TMP_198 cleared
[i] xpIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve1_1, name: _reserve1

Name: _reserve1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpIn_2, name: xpIn

Name: xpIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpIn, Num: 2
Globalname: xpIn, contract_name: HybridPool
End popogation
TMP_198(uint256) = _reserve1_1 (c)* token1PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpIn_2(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpIn

Name: xpIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_202 cleared
[i] y cleared
Propogating parameters and globals to SSA variables...
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: x_1, name: x

Name: x Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 20
Fields: 
Finance Type: undef
Ssa_name: d_1, name: d

Name: d Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: d, Num: 1
Globalname: d, contract_name: HybridPool
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
End popogation
TMP_202(uint256) = INTERNAL_CALL, HybridPool._getY(uint256,uint256)(x_1,d_1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 20], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
[i]Type for TMP_202

Name: TMP_202 Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
y_1(uint256) := TMP_202(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_199 cleared
[i] xpOut cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_2, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: _reserve0_1, name: _reserve0

Name: _reserve0 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 'u'
Fields: 
Finance Type: undef
Ssa_name: xpOut_2, name: xpOut

Name: xpOut Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: xpOut, Num: 2
Globalname: xpOut, contract_name: HybridPool
End popogation
TMP_199(uint256) = _reserve0_1 (c)* token0PrecisionMultiplier_2
lnorm: 0 rnorm: 1
Source address: u
[i]Type for TMP_199

Name: TMP_199 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
xpOut_2(uint256) := TMP_199(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
[i] TMP_203 cleared
[i] TMP_204 cleared
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: y_1, name: y

Name: y Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: y, Num: 1
Globalname: y, contract_name: HybridPool
Ssa_name: xpOut_3, name: xpOut

Name: xpOut Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
Name: dy, Num: 1
Globalname: dy, contract_name: HybridPool
End popogation
TMP_203(uint256) = xpOut_3 (c)- y_1
Source address: u
[i]Type for TMP_203

Name: TMP_203 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
TMP_204(uint256) = TMP_203 (c)- 1
Source address: u
[i]Type for TMP_204

Name: TMP_204 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
dy_1(uint256) := TMP_204(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token0In_1, name: token0In

Name: token0In_1 Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_4, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: dy_3, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 3
Globalname: dy, contract_name: HybridPool
End popogation
dy_3(uint256) = dy_1 (c)/ token1PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] amountIn cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: token1PrecisionMultiplier_2, name: token1PrecisionMultiplier

Name: token1PrecisionMultiplier Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: amountIn_1, name: amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amountIn_3, name: amountIn

Name: amountIn Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 10
Fields: 
Finance Type: undef
Name: amountIn, Num: 3
Globalname: amountIn, contract_name: HybridPool
End popogation
amountIn_3(uint256) = amountIn_1 (c)* token1PrecisionMultiplier_2
lnorm: u rnorm: 1
Source address: u
[i]Type for amountIn

Name: amountIn Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] dy cleared
Propogating parameters and globals to SSA variables...
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_1, name: dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: 9
Fields: 
Finance Type: undef
Ssa_name: token0PrecisionMultiplier_4, name: token0PrecisionMultiplier

Name: token0PrecisionMultiplier Function: None
Num: -1
Den: -1
Address: u
Norm: 1
LF: None
Value: 10
Fields: 
Finance Type: undef
Ssa_name: dy_2, name: dy

Name: dy Function: _getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: dy, Num: 2
Globalname: dy, contract_name: HybridPool
End popogation
dy_2(uint256) = dy_1 (c)/ token0PrecisionMultiplier_4
lnorm: 0 rnorm: 1
lnorm: 0 rnorm: 1
[i]Type for dy

Name: dy Function: _getAmountOut
Num: -1
Den: -1
Address: u
Norm: -1
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Source address: u
[i]Type for TMP_301

Name: TMP_301 Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
finalAmountOut_2(uint256) := TMP_301(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for finalAmountOut

Name: finalAmountOut Function: getAmountOut
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Source address: u
Reading Function: getReserves
Function getReserves not marked
Reading Function: slitherConstructorConstantVariables
Function slitherConstructorConstantVariables not marked
Address: 1, Label: global:bento
Address: 2, Label: global:token0
Address: 3, Label: global:token1
Address: 4, Label: global:liquidity
Address: 5, Label: global:barFeeTo
Address: 6, Label: global:masterDeployer
Address: -999, Label: constructor:_masterDeployer
Address: -998, Label: constructor:_token0
Address: -997, Label: constructor:_token1
Address: -996, Label: mint:recipient
Address: -995, Label: burnSingle:tokenOut
Address: -994, Label: swap:tokenIn
Address: -993, Label: swap:recipient
Address: -992, Label: flashSwap:tokenIn
Address: 7, Label: global:'u'
Address: 8, Label: global:u
Address: 9, Label: _toAmount:TMP_191
Address: 9, Label: global:this
Address: -991, Label: burn:recipient
Address: -990, Label: burnSingle:recipient
Address: -989, Label: flashSwap:recipient
Address: 10, Label: _processSwap:TMP_169
Address: 10, Label: global:msg.sender
Address: -988, Label: getAmountOut:tokenIn
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Head Addr: 2
    Norm: 6
    Set: {2}
    Fin: NULL
Head Addr: 3
    Norm: 18
    Set: {3}
    Fin: NULL
Head Addr: 4
    Norm: u
    Set: {4}
    Fin: NULL
Head Addr: 5
    Norm: 0
    Set: {5}
    Fin: NULL
Head Addr: 6
    Norm: 0
    Set: {6}
    Fin: NULL
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Head Addr: -998
    Norm: 6
    Set: {-998}
    Fin: NULL
Head Addr: -997
    Norm: 18
    Set: {-997}
    Fin: NULL
Head Addr: -996
    Norm: u
    Set: {-996}
    Fin: NULL
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Head Addr: 7
    Norm: u
    Set: {7}
    Fin: NULL
Head Addr: 8
    Norm: u
    Set: {8}
    Fin: NULL
Head Addr: 9
    Norm: u
    Set: {9}
    Fin: NULL
Head Addr: -991
    Norm: 0
    Set: {-991}
    Fin: NULL
Head Addr: -990
    Norm: 0
    Set: {-990}
    Fin: NULL
Head Addr: -989
    Norm: 0
    Set: {-989}
    Fin: NULL
Head Addr: 10
    Norm: u
    Set: {10}
    Fin: NULL
Head Addr: -988
    Norm: 0
    Set: {-988}
    Fin: NULL
Running check on IBentoBoxMinimal
Reading Function: balanceOf
Function balanceOf not marked
Reading Function: toShare
Function toShare not marked
Reading Function: toAmount
Function toAmount not marked
Reading Function: registerProtocol
Function registerProtocol not marked
Reading Function: deposit
Function deposit not marked
Reading Function: withdraw
Function withdraw not marked
Reading Function: transfer
Function transfer not marked
Address: 1, Label: global:bento
Address: 2, Label: global:token0
Address: 3, Label: global:token1
Address: 4, Label: global:liquidity
Address: 5, Label: global:barFeeTo
Address: 6, Label: global:masterDeployer
Address: -999, Label: constructor:_masterDeployer
Address: -998, Label: constructor:_token0
Address: -997, Label: constructor:_token1
Address: -996, Label: mint:recipient
Address: -995, Label: burnSingle:tokenOut
Address: -994, Label: swap:tokenIn
Address: -993, Label: swap:recipient
Address: -992, Label: flashSwap:tokenIn
Address: 7, Label: global:'u'
Address: 8, Label: global:u
Address: 9, Label: _toAmount:TMP_191
Address: 9, Label: global:this
Address: -991, Label: burn:recipient
Address: -990, Label: burnSingle:recipient
Address: -989, Label: flashSwap:recipient
Address: 10, Label: _processSwap:TMP_169
Address: 10, Label: global:msg.sender
Address: -988, Label: getAmountOut:tokenIn
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Head Addr: 2
    Norm: 6
    Set: {2}
    Fin: NULL
Head Addr: 3
    Norm: 18
    Set: {3}
    Fin: NULL
Head Addr: 4
    Norm: u
    Set: {4}
    Fin: NULL
Head Addr: 5
    Norm: 0
    Set: {5}
    Fin: NULL
Head Addr: 6
    Norm: 0
    Set: {6}
    Fin: NULL
Head Addr: -999
    Norm: 0
    Set: {-999}
    Fin: NULL
Head Addr: -998
    Norm: 6
    Set: {-998}
    Fin: NULL
Head Addr: -997
    Norm: 18
    Set: {-997}
    Fin: NULL
Head Addr: -996
    Norm: u
    Set: {-996}
    Fin: NULL
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Head Addr: 7
    Norm: u
    Set: {7}
    Fin: NULL
Head Addr: 8
    Norm: u
    Set: {8}
    Fin: NULL
Head Addr: 9
    Norm: u
    Set: {9}
    Fin: NULL
Head Addr: -991
    Norm: 0
    Set: {-991}
    Fin: NULL
Head Addr: -990
    Norm: 0
    Set: {-990}
    Fin: NULL
Head Addr: -989
    Norm: 0
    Set: {-989}
    Fin: NULL
Head Addr: 10
    Norm: u
    Set: {10}
    Fin: NULL
Head Addr: -988
    Norm: 0
    Set: {-988}
    Fin: NULL
Function count: 175
Time elapsed: 1.6983425617218018
Executing Group 6
[*] Tested 0 warnings for Sushi Tridnet
Group 6 complete
Elapsed time: 13.107448835 seconds
Testing complete
