Switched global version to 0.8.12
Analyzed_contracts_count: 16
total compilations: 1, contracts: 16
contract name: StakedCitadel
Add to address_to_label {'global:strategist': 1}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992, 'reportAdditionalToken:_token': -991}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992, 'reportAdditionalToken:_token': -991, 'setTreasury:_treasury': -990}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992, 'reportAdditionalToken:_token': -991, 'setTreasury:_treasury': -990, 'setStrategy:_strategy': -989}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992, 'reportAdditionalToken:_token': -991, 'setTreasury:_treasury': -990, 'setStrategy:_strategy': -989, 'setGuardian:_guardian': -988}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992, 'reportAdditionalToken:_token': -991, 'setTreasury:_treasury': -990, 'setStrategy:_strategy': -989, 'setGuardian:_guardian': -988, 'setVesting:_vesting': -987}
Add to address_to_label {'global:strategist': 1, 'global:treasury': 2, 'global:governance': 3, 'global:keeper': 4, 'global:badgerTree': 5, 'global:strategy': 6, 'global:guardian': 7, 'global:vesting': 8, 'initialize:_token': -999, 'initialize:_governance': -998, 'initialize:_keeper': -997, 'initialize:_guardian': -996, 'initialize:_treasury': -995, 'initialize:_strategist': -994, 'initialize:_badgerTree': -993, 'initialize:_vesting': -992, 'reportAdditionalToken:_token': -991, 'setTreasury:_treasury': -990, 'setStrategy:_strategy': -989, 'setGuardian:_guardian': -988, 'setVesting:_vesting': -987, 'sweepExtraToken:_token': -986}
Mark functions Adding: StakedCitadel, initialize, True
[*]Marked
Mark functions Adding: StakedCitadel, _onlyAuthorizedPausers, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _onlyStrategy, True
[x] Not visible 
Mark functions Adding: StakedCitadel, version, True
[X]No Binary
Mark functions Adding: StakedCitadel, getPricePerFullShare, True
[*]Marked
Mark functions Adding: StakedCitadel, balance, True
[X]No Binary
Mark functions Adding: StakedCitadel, available, True
[*]Marked
Mark functions Adding: StakedCitadel, deposit, True
[X]No Binary
Mark functions Adding: StakedCitadel, deposit, True
[X]No Binary
Mark functions Adding: StakedCitadel, depositAll, True
[X]No Binary
Mark functions Adding: StakedCitadel, depositAll, True
[X]No Binary
Mark functions Adding: StakedCitadel, depositFor, True
[X]No Binary
Mark functions Adding: StakedCitadel, depositFor, True
[X]No Binary
Mark functions Adding: StakedCitadel, withdraw, True
[X]No Binary
Mark functions Adding: StakedCitadel, withdrawAll, True
[X]No Binary
Mark functions Adding: StakedCitadel, reportHarvest, True
[*]Marked
Mark functions Adding: StakedCitadel, reportAdditionalToken, True
[*]Marked
Mark functions Adding: StakedCitadel, setTreasury, True
[*]Marked
Mark functions Adding: StakedCitadel, setStrategy, True
[*]Marked
Mark functions Adding: StakedCitadel, setMaxWithdrawalFee, True
[*]Marked
Mark functions Adding: StakedCitadel, setMaxPerformanceFee, True
[*]Marked
Mark functions Adding: StakedCitadel, setMaxManagementFee, True
[*]Marked
Mark functions Adding: StakedCitadel, setGuardian, True
[*]Marked
Mark functions Adding: StakedCitadel, setVesting, True
[*]Marked
Mark functions Adding: StakedCitadel, setToEarnBps, True
[*]Marked
Mark functions Adding: StakedCitadel, setGuestList, True
[X]No Binary
Mark functions Adding: StakedCitadel, setWithdrawalFee, True
[*]Marked
Mark functions Adding: StakedCitadel, setPerformanceFeeStrategist, True
[*]Marked
Mark functions Adding: StakedCitadel, setPerformanceFeeGovernance, True
[*]Marked
Mark functions Adding: StakedCitadel, setManagementFee, True
[*]Marked
Mark functions Adding: StakedCitadel, withdrawToVault, True
[X]No Binary
Mark functions Adding: StakedCitadel, emitNonProtectedToken, True
[X]No Binary
Mark functions Adding: StakedCitadel, sweepExtraToken, True
[*]Marked
Mark functions Adding: StakedCitadel, earn, True
[X]No Binary
Mark functions Adding: StakedCitadel, pauseDeposits, True
[X]No Binary
Mark functions Adding: StakedCitadel, unpauseDeposits, True
[X]No Binary
Mark functions Adding: StakedCitadel, pause, True
[X]No Binary
Mark functions Adding: StakedCitadel, unpause, True
[X]No Binary
Mark functions Adding: StakedCitadel, _depositFor, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _depositWithAuthorization, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _depositForWithAuthorization, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _withdraw, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _calculateFee, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _calculatePerformanceFee, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _mintSharesFor, True
[x] Not visible 
Mark functions Adding: StakedCitadel, _handleFees, True
[x] Not visible 
Mark functions Adding: StakedCitadel, slitherConstructorConstantVariables, True
[x] Not visible 
State_var: guestList
Finding type for guestList(IBadgerGuestlist ... )
Value: u
Source address: u
State_var: lifeTimeEarned
Finding type for lifeTimeEarned(uint256 ... )
Value: u
Source address: u
State_var: token
Finding type for token(IERC20Upgradeable ... )
Value: u
Source address: u
State_var: strategy
Finding type for strategy(address ... )
prev address? u
Head Addr: 6
    Norm: 0
    Set: {6}
    Fin: NULL
Source address: 6
State_var: treasury
Finding type for treasury(address ... )
prev address? u
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
Source address: 2
State_var: vesting
Finding type for vesting(address ... )
prev address? u
Head Addr: 8
    Norm: 0
    Set: {8}
    Fin: NULL
Source address: 8
State_var: withdrawalFee
Finding type for withdrawalFee(uint256 ... )
Value: u
Source address: u
State_var: additionalTokensEarned
Finding type for additionalTokensEarned(mapping(address => uint256) ... )
Value: u
Source address: u
State_var: badgerTree
Finding type for badgerTree(address ... )
prev address? u
Head Addr: 5
    Norm: 0
    Set: {5}
    Fin: NULL
Source address: 5
State_var: performanceFeeGovernance
Finding type for performanceFeeGovernance(uint256 ... )
Value: u
Source address: u
State_var: performanceFeeStrategist
Finding type for performanceFeeStrategist(uint256 ... )
Value: u
Source address: u
State_var: strategist
Finding type for strategist(address ... )
prev address? u
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Source address: 1
State_var: _ENTERED
Finding type for _ENTERED(uint256 ... )
Value: u
Source address: u
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED(uint256 ... )
Value: u
Source address: u
State_var: _status
Finding type for _status(uint256 ... )
Value: u
Source address: u
State_var: _initialized
Finding type for _initialized(bool ... )
Source address: u
State_var: _initializing
Finding type for _initializing(bool ... )
Source address: u
State_var: ONE_ETH
Finding type for ONE_ETH(uint256 ... )
Value: u
Source address: u
State_var: MAX_BPS
Finding type for MAX_BPS(uint256 ... )
Value: u
Source address: u
State_var: _paused
Finding type for _paused(bool ... )
Source address: u
State_var: toEarnBps
Finding type for toEarnBps(uint256 ... )
Value: u
Source address: u
State_var: WITHDRAWAL_FEE_HARD_CAP
Finding type for WITHDRAWAL_FEE_HARD_CAP(uint256 ... )
Value: u
Source address: u
State_var: pausedDeposit
Finding type for pausedDeposit(bool ... )
Source address: u
State_var: SECS_PER_YEAR
Finding type for SECS_PER_YEAR(uint256 ... )
Value: u
Source address: u
State_var: lastHarvestedAt
Finding type for lastHarvestedAt(uint256 ... )
Value: u
Source address: u
State_var: managementFee
Finding type for managementFee(uint256 ... )
Value: u
Source address: u
State_var: governance
Finding type for governance(address ... )
prev address? u
Head Addr: 3
    Norm: 0
    Set: {3}
    Fin: NULL
Source address: 3
State_var: guardian
Finding type for guardian(address ... )
prev address? u
Head Addr: 7
    Norm: 0
    Set: {7}
    Fin: NULL
Source address: 7
State_var: PERFORMANCE_FEE_HARD_CAP
Finding type for PERFORMANCE_FEE_HARD_CAP(uint256 ... )
Value: u
Source address: u
State_var: MANAGEMENT_FEE_HARD_CAP
Finding type for MANAGEMENT_FEE_HARD_CAP(uint256 ... )
Value: u
Source address: u
State_var: maxPerformanceFee
Finding type for maxPerformanceFee(uint256 ... )
Value: u
Source address: u
State_var: _balances
Finding type for _balances(mapping(address => uint256) ... )
Value: u
Source address: u
State_var: _totalSupply
Finding type for _totalSupply(uint256 ... )
Value: u
Source address: u
State_var: _symbol
Finding type for _symbol(string ... )
Value: u
Source address: u
State_var: _defaultNamePrefix
Finding type for _defaultNamePrefix(string ... )
Value: u
Source address: u
State_var: _symbolSymbolPrefix
Finding type for _symbolSymbolPrefix(string ... )
Value: u
Source address: u
State_var: maxManagementFee
Finding type for maxManagementFee(uint256 ... )
Value: u
Source address: u
State_var: _allowances
Finding type for _allowances(mapping(address => mapping(address => uint256)) ... )
Value: u
Source address: u
State_var: maxWithdrawalFee
Finding type for maxWithdrawalFee(uint256 ... )
Value: u
Source address: u
State_var: _name
Finding type for _name(string ... )
Value: u
Source address: u
State_var: keeper
Finding type for keeper(address ... )
prev address? u
Head Addr: 4
    Norm: 0
    Set: {4}
    Fin: NULL
Source address: 4
contract name: IBadgerGuestlist
contract name: IStrategy
contract name: IVault
contract name: IVesting
contract name: IERC20
contract name: SettAccessControl
contract name: Initializable
contract name: PausableUpgradeable
contract name: ReentrancyGuardUpgradeable
contract name: ERC20Upgradeable
contract name: IERC20Upgradeable
contract name: IERC20MetadataUpgradeable
contract name: SafeERC20Upgradeable
contract name: AddressUpgradeable
contract name: ContextUpgradeable
Running check on StakedCitadel
Reading Function: initialize
Checking funcion...



initialize
Function name: initialize
Finding type for _token(address ... )
prev address? u
Head Addr: -999
    Norm: 6
    Set: {-999}
    Fin: NULL
Finding type for _governance(address ... )
prev address? u
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Finding type for _keeper(address ... )
prev address? u
Head Addr: -997
    Norm: 0
    Set: {-997}
    Fin: NULL
Finding type for _guardian(address ... )
prev address? u
Head Addr: -996
    Norm: 0
    Set: {-996}
    Fin: NULL
Finding type for _treasury(address ... )
prev address? u
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Finding type for _strategist(address ... )
prev address? u
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Finding type for _badgerTree(address ... )
prev address? u
Changed here
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Finding type for _vesting(address ... )
prev address? u
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Finding type for _name(string ... )
Value: u
Finding type for _symbol(string ... )
Value: u
Finding type for _feeConfig(uint256[4] ... )
Value: u
New param cache [[[], [], 6, '_token', [], -1, -999, 'u'], [[], [], 0, '_governance', [], -1, -998, 'u'], [[], [], 0, '_keeper', [], -1, -997, 'u'], [[], [], 0, '_guardian', [], -1, -996, 'u'], [[], [], 0, '_treasury', [], -1, -995, 'u'], [[], [], 0, '_strategist', [], -1, -994, 'u'], [[], [], 0, '_badgerTree', [], -1, -993, 'u'], [[], [], 0, '_vesting', [], -1, -992, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
initialize(address,address,address,address,address,address,address,address,string,string,uint256[4])


_defaultNamePrefix_1(string) := ϕ(['_defaultNamePrefix_0', '_defaultNamePrefix_4', '_defaultNamePrefix_3'])
_symbolSymbolPrefix_1(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5', '_symbolSymbolPrefix_0'])
WITHDRAWAL_FEE_HARD_CAP_1(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_0', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
PERFORMANCE_FEE_HARD_CAP_1(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_0', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
MANAGEMENT_FEE_HARD_CAP_1(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_0', 'MANAGEMENT_FEE_HARD_CAP_8'])
MODIFIER_CALL, Initializable.initializer()()
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
TMP_96 = CONVERT 0 to address
TMP_97(bool) = _token_1 != TMP_96
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)
TMP_99 = CONVERT 0 to address
TMP_100(bool) = _governance_1 != TMP_99
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)
TMP_102 = CONVERT 0 to address
TMP_103(bool) = _keeper_1 != TMP_102
TMP_104(None) = SOLIDITY_CALL require(bool)(TMP_103)
TMP_105 = CONVERT 0 to address
TMP_106(bool) = _guardian_1 != TMP_105
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)
TMP_108 = CONVERT 0 to address
TMP_109(bool) = _treasury_1 != TMP_108
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)
TMP_111 = CONVERT 0 to address
TMP_112(bool) = _strategist_1 != TMP_111
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)
TMP_114 = CONVERT 0 to address
TMP_115(bool) = _badgerTree_1 != TMP_114
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)
TMP_117 = CONVERT 0 to address
TMP_118(bool) = _vesting_1 != TMP_117
TMP_119(None) = SOLIDITY_CALL require(bool)(TMP_118)
REF_16(uint256) -> _feeConfig_1[0]
TMP_120(bool) = REF_16 <= PERFORMANCE_FEE_HARD_CAP_3
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,performanceFeeGovernance too high)
REF_17(uint256) -> _feeConfig_1[1]
TMP_122(bool) = REF_17 <= PERFORMANCE_FEE_HARD_CAP_3
TMP_123(None) = SOLIDITY_CALL require(bool,string)(TMP_122,performanceFeeStrategist too high)
REF_18(uint256) -> _feeConfig_1[2]
TMP_124(bool) = REF_18 <= WITHDRAWAL_FEE_HARD_CAP_3
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,withdrawalFee too high)
REF_19(uint256) -> _feeConfig_1[3]
TMP_126(bool) = REF_19 <= MANAGEMENT_FEE_HARD_CAP_3
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,managementFee too high)
TMP_128 = CONVERT _token_1 to IERC20
namedToken_1(IERC20) := TMP_128(IERC20)
TMP_129(bytes) = SOLIDITY_CALL abi.encodePacked()(_name_1)
TMP_130(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_129)
TMP_131(bytes32) = SOLIDITY_CALL keccak256(bytes)()
TMP_132(bool) = TMP_130 != TMP_131
CONDITION TMP_132
TMP_133(string) = HIGH_LEVEL_CALL, dest:namedToken_1(IERC20), function:name, arguments:[]  
_defaultNamePrefix_4(string) := ϕ(['_defaultNamePrefix_3', '_defaultNamePrefix_4'])
_symbolSymbolPrefix_4(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5'])
WITHDRAWAL_FEE_HARD_CAP_4(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10', 'WITHDRAWAL_FEE_HARD_CAP_3'])
PERFORMANCE_FEE_HARD_CAP_4(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_3', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
MANAGEMENT_FEE_HARD_CAP_4(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_3', 'MANAGEMENT_FEE_HARD_CAP_8'])
TMP_134(bytes) = SOLIDITY_CALL abi.encodePacked()(_defaultNamePrefix_4,TMP_133)
TMP_135 = CONVERT TMP_134 to string
name_1(string) := TMP_135(string)
name_2(string) := _name_1(string)
name_3(string) := ϕ(['name_2', 'name_1'])
TMP_136(bytes) = SOLIDITY_CALL abi.encodePacked()(_symbol_1)
TMP_137(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_136)
TMP_138(bytes32) = SOLIDITY_CALL keccak256(bytes)()
TMP_139(bool) = TMP_137 != TMP_138
CONDITION TMP_139
symbol_2(string) := _symbol_1(string)
TMP_140(string) = HIGH_LEVEL_CALL, dest:namedToken_1(IERC20), function:symbol, arguments:[]  
_symbolSymbolPrefix_5(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5'])
WITHDRAWAL_FEE_HARD_CAP_5(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_4', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
PERFORMANCE_FEE_HARD_CAP_5(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8', 'PERFORMANCE_FEE_HARD_CAP_4'])
MANAGEMENT_FEE_HARD_CAP_5(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_4', 'MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_8'])
TMP_141(bytes) = SOLIDITY_CALL abi.encodePacked()(_symbolSymbolPrefix_5,TMP_140)
TMP_142 = CONVERT TMP_141 to string
symbol_1(string) := TMP_142(string)
symbol_3(string) := ϕ(['symbol_2', 'symbol_1'])
INTERNAL_CALL, ERC20Upgradeable.__ERC20_init(string,string)(name_3,symbol_3)
INTERNAL_CALL, PausableUpgradeable.__Pausable_init()()
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init()()
TMP_146 = CONVERT _token_1 to IERC20Upgradeable
token_1(IERC20Upgradeable) := TMP_146(IERC20Upgradeable)
governance_5(address) := _governance_1(address)
treasury_1(address) := _treasury_1(address)
strategist_3(address) := _strategist_1(address)
keeper_3(address) := _keeper_1(address)
guardian_1(address) := _guardian_1(address)
badgerTree_1(address) := _badgerTree_1(address)
vesting_1(address) := _vesting_1(address)
lastHarvestedAt_1(uint256) := block.timestamp(uint256)
REF_26(uint256) -> _feeConfig_1[0]
performanceFeeGovernance_1(uint256) := REF_26(uint256)
REF_27(uint256) -> _feeConfig_1[1]
performanceFeeStrategist_1(uint256) := REF_27(uint256)
REF_28(uint256) -> _feeConfig_1[2]
withdrawalFee_1(uint256) := REF_28(uint256)
REF_29(uint256) -> _feeConfig_1[3]
managementFee_1(uint256) := REF_29(uint256)
maxPerformanceFee_1(uint256) := PERFORMANCE_FEE_HARD_CAP_8(uint256)
maxWithdrawalFee_1(uint256) := WITHDRAWAL_FEE_HARD_CAP_8(uint256)
maxManagementFee_1(uint256) := MANAGEMENT_FEE_HARD_CAP_8(uint256)
toEarnBps_1(uint256) := 9500(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _defaultNamePrefix_1, name: _defaultNamePrefix

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _defaultNamePrefix, Num: 1
Globalname: _defaultNamePrefix, contract_name: StakedCitadel
global...

Name: PIC_35 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _symbolSymbolPrefix_1, name: _symbolSymbolPrefix

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _symbolSymbolPrefix, Num: 1
Globalname: _symbolSymbolPrefix, contract_name: StakedCitadel
global...

Name: PIC_36 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_1, name: WITHDRAWAL_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: WITHDRAWAL_FEE_HARD_CAP, Num: 1
Globalname: WITHDRAWAL_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_22 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: PERFORMANCE_FEE_HARD_CAP_1, name: PERFORMANCE_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: PERFORMANCE_FEE_HARD_CAP, Num: 1
Globalname: PERFORMANCE_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_29 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MANAGEMENT_FEE_HARD_CAP_1, name: MANAGEMENT_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MANAGEMENT_FEE_HARD_CAP, Num: 1
Globalname: MANAGEMENT_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_defaultNamePrefix_1(string) := ϕ(['_defaultNamePrefix_0', '_defaultNamePrefix_4', '_defaultNamePrefix_3'])
Phi
[i]Type for _defaultNamePrefix

Name: _defaultNamePrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_symbolSymbolPrefix_1(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5', '_symbolSymbolPrefix_0'])
Phi
[i]Type for _symbolSymbolPrefix

Name: _symbolSymbolPrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
WITHDRAWAL_FEE_HARD_CAP_1(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_0', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
Phi
[i]Type for WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
PERFORMANCE_FEE_HARD_CAP_1(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_0', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
Phi
[i]Type for PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MANAGEMENT_FEE_HARD_CAP_1(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_0', 'MANAGEMENT_FEE_HARD_CAP_8'])
Phi
[i]Type for MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
New param cache []
FIND RETURN
ENTRY_POINT
initializer()
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
isTopLevelCall_1
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
Propogating All
isTopLevelCall_1
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _initialized_1, name: _initialized

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _initialized, Num: 1
Globalname: _initialized, contract_name: StakedCitadel
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _initializing_1, name: _initializing

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _initializing, Num: 1
Globalname: _initializing, contract_name: StakedCitadel
global...

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_initialized_1(bool) := ϕ(['_initialized_2', '_initialized_0'])
Phi
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_initializing_1(bool) := ϕ(['_initializing_3', '_initializing_4', '_initializing_2', '_initializing_0'])
Phi
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_1, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _initializing_1, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initialized_1, name: _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _initialized_1, name: _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_412 = ! _initialized_1 
[i]Type for TMP_412

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_413(None) = SOLIDITY_CALL require(bool,string)(TMP_412,Initializable: contract is already initialized)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_410 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_410(bool) = INTERNAL_CALL, Initializable._isConstructor()()
New param cache []
FIND RETURN
ENTRY_POINT
_isConstructor()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_3 cleared
[i] TMP_4 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_3 = CONVERT this to address
Converting this
new address made for this
prev address? u
global assignment: 9
9
9
[i]Type for TMP_3

Name: TMP_3 Function: _isConstructor
Num: -1
Den: -1
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(bool) = LIBRARY_CALL, dest:AddressUpgradeable, function:AddressUpgradeable.isContract(address), arguments:['TMP_3'] 
[i]Type for TMP_4

Name: TMP_4 Function: _isConstructor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5 = ! TMP_4 
[i]Type for TMP_5

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN

Name: TMP_5 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_3 cleared
[i] TMP_4 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_3 = CONVERT this to address
Converting this
9
[i]Type for TMP_3

Name: TMP_3 Function: _isConstructor
Num: 
Den: 
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_4(bool) = LIBRARY_CALL, dest:AddressUpgradeable, function:AddressUpgradeable.isContract(address), arguments:['TMP_3'] 
[i]Type for TMP_4

Name: TMP_4 Function: _isConstructor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_5 = ! TMP_4 
[i]Type for TMP_5

Name: TMP_5 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_5
RETURN

Name: TMP_5 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_410

Name: TMP_410 Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_411(None) = SOLIDITY_CALL require(bool,string)(TMP_410,Initializable: contract is already initialized)
[i]Type for TMP_411

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] isTopLevelCall cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_2, name: _initializing

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _initializing, Num: 2
Globalname: _initializing, contract_name: StakedCitadel
global...

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _initializing_2, name: _initializing

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
End popogation
TMP_409 = ! _initializing_2 
[i]Type for TMP_409

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
isTopLevelCall_1(bool) := TMP_409(bool)
asgn
Finance type key: (-1, -1)
[i]Type for isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_3, name: _initializing

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _initializing, Num: 3
Globalname: _initializing, contract_name: StakedCitadel
global...

Name: PIC_17 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_initializing_3(bool) := True(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initialized_2, name: _initialized

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _initialized, Num: 2
Globalname: _initialized, contract_name: StakedCitadel
global...

Name: PIC_16 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_initialized_2(bool) := True(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_4, name: _initializing

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _initializing, Num: 4
Globalname: _initializing, contract_name: StakedCitadel
global...

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
Source address: u
End popogation
_initializing_4(bool) := False(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _initialized_1, name: _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _initializing_1, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_initialized_1(bool) := ϕ(['_initialized_2', '_initialized_0'])
Phi
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_initializing_1(bool) := ϕ(['_initializing_3', '_initializing_4', '_initializing_2', '_initializing_0'])
Phi
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_1, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _initializing_1, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initialized_1, name: _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _initialized_1, name: _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_412 = ! _initialized_1 
[i]Type for TMP_412

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_413(None) = SOLIDITY_CALL require(bool,string)(TMP_412,Initializable: contract is already initialized)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_410 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_410(bool) = INTERNAL_CALL, Initializable._isConstructor()()
New param cache []
Old param cache: []
[i]Type for TMP_410

Name: TMP_410 Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_411(None) = SOLIDITY_CALL require(bool,string)(TMP_410,Initializable: contract is already initialized)
[i]Type for TMP_411

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] isTopLevelCall cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_2, name: _initializing

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _initializing_2, name: _initializing

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
End popogation
TMP_409 = ! _initializing_2 
[i]Type for TMP_409

Name: TMP_409 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
isTopLevelCall_1(bool) := TMP_409(bool)
asgn
Finance type key: (-1, -1)
[i]Type for isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_3, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
End popogation
_initializing_3(bool) := True(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
Ssa_name: isTopLevelCall_1, name: isTopLevelCall

Name: isTopLevelCall Function: initializer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: isTopLevelCall, Num: 1
Globalname: isTopLevelCall, contract_name: StakedCitadel
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initialized_2, name: _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
End popogation
_initialized_2(bool) := True(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _initialized

Name: _initialized Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: True
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_4, name: _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
End popogation
_initializing_4(bool) := False(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _initializing

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
FIND RETURN
ENTRY_POINT
whenNotPaused()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_415 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_415(bool) = INTERNAL_CALL, PausableUpgradeable.paused()()
New param cache []
FIND RETURN
ENTRY_POINT
paused()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _paused_2, name: _paused

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _paused, Num: 2
Globalname: _paused, contract_name: StakedCitadel
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_paused_2(bool) := ϕ(['_paused_4', '_paused_1', '_paused_3', '_paused_0'])
Phi
[i]Type for _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _paused_2, name: _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _paused_2, name: _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _paused_2
RETURN

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _paused_2, name: _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_paused_2(bool) := ϕ(['_paused_4', '_paused_1', '_paused_3', '_paused_0'])
Phi
[i]Type for _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _paused_2, name: _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _paused_2, name: _paused

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _paused_2
RETURN

Name: _paused Function: paused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_415

Name: TMP_415 Function: whenNotPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_416 = ! TMP_415 
[i]Type for TMP_416

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_417(None) = SOLIDITY_CALL require(bool,string)(TMP_416,Pausable: paused)
[i]Type for TMP_417

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_415 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_415(bool) = INTERNAL_CALL, PausableUpgradeable.paused()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_415

Name: TMP_415 Function: whenNotPaused
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_416 = ! TMP_415 
[i]Type for TMP_416

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_417(None) = SOLIDITY_CALL require(bool,string)(TMP_416,Pausable: paused)
[i]Type for TMP_417

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_96 cleared
[i] TMP_97 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -999

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _token_1, name: _token

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_96 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_96

Name: TMP_96 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_97(bool) = _token_1 != TMP_96
[i]Type for TMP_97

Name: TMP_97 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)
[i]Type for TMP_98

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_99 cleared
[i] TMP_100 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _governance_1, name: _governance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -998

Name: _governance_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _governance
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _governance_1, name: _governance

Name: _governance_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _governance
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_99 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_99

Name: TMP_99 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_100(bool) = _governance_1 != TMP_99
[i]Type for TMP_100

Name: TMP_100 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)
[i]Type for TMP_101

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_102 cleared
[i] TMP_103 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _keeper_1, name: _keeper

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -997

Name: _keeper_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _keeper
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _keeper_1, name: _keeper

Name: _keeper_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _keeper
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_102 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_103(bool) = _keeper_1 != TMP_102
[i]Type for TMP_103

Name: TMP_103 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_104(None) = SOLIDITY_CALL require(bool)(TMP_103)
[i]Type for TMP_104

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_105 cleared
[i] TMP_106 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _guardian_1, name: _guardian

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -996

Name: _guardian_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_105 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_105

Name: TMP_105 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_106(bool) = _guardian_1 != TMP_105
[i]Type for TMP_106

Name: TMP_106 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_108 cleared
[i] TMP_109 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _treasury_1, name: _treasury

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -995

Name: _treasury_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_108 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_108

Name: TMP_108 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_109(bool) = _treasury_1 != TMP_108
[i]Type for TMP_109

Name: TMP_109 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)
[i]Type for TMP_110

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_111 cleared
[i] TMP_112 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _strategist_1, name: _strategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -994

Name: _strategist_1 Function: initialize
Num: 
Den: 
Address: -994
Norm: 0
LF: _strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _strategist_1, name: _strategist

Name: _strategist_1 Function: initialize
Num: 
Den: 
Address: -994
Norm: 0
LF: _strategist
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_111 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_111

Name: TMP_111 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_112(bool) = _strategist_1 != TMP_111
[i]Type for TMP_112

Name: TMP_112 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)
[i]Type for TMP_113

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_114 cleared
[i] TMP_115 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _badgerTree_1, name: _badgerTree

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -993

Name: _badgerTree_1 Function: initialize
Num: 
Den: 
Address: -993
Norm: 0
LF: _badgerTree
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _badgerTree_1, name: _badgerTree

Name: _badgerTree_1 Function: initialize
Num: 
Den: 
Address: -993
Norm: 0
LF: _badgerTree
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_114 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_114

Name: TMP_114 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_115(bool) = _badgerTree_1 != TMP_114
[i]Type for TMP_115

Name: TMP_115 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)
[i]Type for TMP_116

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_117 cleared
[i] TMP_118 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _vesting_1, name: _vesting

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -992

Name: _vesting_1 Function: initialize
Num: 
Den: 
Address: -992
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: initialize
Num: 
Den: 
Address: -992
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_117 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_117

Name: TMP_117 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_118(bool) = _vesting_1 != TMP_117
[i]Type for TMP_118

Name: TMP_118 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_119(None) = SOLIDITY_CALL require(bool)(TMP_118)
[i]Type for TMP_119

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_120 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: PERFORMANCE_FEE_HARD_CAP_3, name: PERFORMANCE_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: PERFORMANCE_FEE_HARD_CAP, Num: 3
Globalname: PERFORMANCE_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_29 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: PERFORMANCE_FEE_HARD_CAP_3, name: PERFORMANCE_FEE_HARD_CAP

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
End popogation
REF_16(uint256) -> _feeConfig_1[0]
INDEX
[i]Type for REF_16

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_120(bool) = REF_16 <= PERFORMANCE_FEE_HARD_CAP_3
lnorm: u rnorm: u
[i]Type for TMP_120

Name: TMP_120 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,performanceFeeGovernance too high)
[i]Type for TMP_121

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_122 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: PERFORMANCE_FEE_HARD_CAP_3, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: PERFORMANCE_FEE_HARD_CAP_3, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
End popogation
REF_17(uint256) -> _feeConfig_1[1]
INDEX
[i]Type for REF_17

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_122(bool) = REF_17 <= PERFORMANCE_FEE_HARD_CAP_3
lnorm: u rnorm: u
[i]Type for TMP_122

Name: TMP_122 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_123(None) = SOLIDITY_CALL require(bool,string)(TMP_122,performanceFeeStrategist too high)
[i]Type for TMP_123

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_124 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_3, name: WITHDRAWAL_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: WITHDRAWAL_FEE_HARD_CAP, Num: 3
Globalname: WITHDRAWAL_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_22 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_3, name: WITHDRAWAL_FEE_HARD_CAP

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_18(uint256) -> _feeConfig_1[2]
INDEX
[i]Type for REF_18

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_124(bool) = REF_18 <= WITHDRAWAL_FEE_HARD_CAP_3
lnorm: u rnorm: u
[i]Type for TMP_124

Name: TMP_124 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,withdrawalFee too high)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_126 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: MANAGEMENT_FEE_HARD_CAP_3, name: MANAGEMENT_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MANAGEMENT_FEE_HARD_CAP, Num: 3
Globalname: MANAGEMENT_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: MANAGEMENT_FEE_HARD_CAP_3, name: MANAGEMENT_FEE_HARD_CAP

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_19(uint256) -> _feeConfig_1[3]
INDEX
[i]Type for REF_19

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_126(bool) = REF_19 <= MANAGEMENT_FEE_HARD_CAP_3
lnorm: u rnorm: u
[i]Type for TMP_126

Name: TMP_126 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,managementFee too high)
[i]Type for TMP_127

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_128 cleared
[i] namedToken cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: namedToken_1, name: namedToken

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: namedToken, Num: 1
Globalname: namedToken, contract_name: StakedCitadel
End popogation
TMP_128 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -999
ERC20
[i]Type for TMP_128

Name: TMP_128 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
namedToken_1(IERC20) := TMP_128(IERC20)
asgn
Source address: -999
Finance type key: (-1, -1)
[i]Type for namedToken

Name: namedToken Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_132 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _name_1, name: _name

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _name_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _name, Num: 1
Globalname: _name, contract_name: StakedCitadel
global...

Name: PIC_40 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _name_1, name: _name

Name: _name_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_129(bytes) = SOLIDITY_CALL abi.encodePacked()(_name_1)
[i]Type for TMP_129

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_129)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_131(bytes32) = SOLIDITY_CALL keccak256(bytes)()
[i]Type for TMP_131

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_132(bool) = TMP_130 != TMP_131
[i]Type for TMP_132

Name: TMP_132 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_133 cleared
[i] TMP_135 cleared
[i] name cleared
Propogating parameters and globals to SSA variables...
Ssa_name: namedToken_1, name: namedToken

Name: namedToken Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
Ssa_name: _defaultNamePrefix_4, name: _defaultNamePrefix

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _defaultNamePrefix, Num: 4
Globalname: _defaultNamePrefix, contract_name: StakedCitadel
global...

Name: PIC_35 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: namedToken_1, name: namedToken

Name: namedToken Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
Ssa_name: _defaultNamePrefix_4, name: _defaultNamePrefix

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name_1, name: name

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: name, Num: 1
Globalname: name, contract_name: StakedCitadel
End popogation
Ssa_name: _defaultNamePrefix_4, name: _defaultNamePrefix

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbolSymbolPrefix_4, name: _symbolSymbolPrefix

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _symbolSymbolPrefix, Num: 4
Globalname: _symbolSymbolPrefix, contract_name: StakedCitadel
global...

Name: PIC_36 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_4, name: WITHDRAWAL_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: WITHDRAWAL_FEE_HARD_CAP, Num: 4
Globalname: WITHDRAWAL_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_22 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: PERFORMANCE_FEE_HARD_CAP_4, name: PERFORMANCE_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: PERFORMANCE_FEE_HARD_CAP, Num: 4
Globalname: PERFORMANCE_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_29 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MANAGEMENT_FEE_HARD_CAP_4, name: MANAGEMENT_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MANAGEMENT_FEE_HARD_CAP, Num: 4
Globalname: MANAGEMENT_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_133(string) = HIGH_LEVEL_CALL, dest:namedToken_1(IERC20), function:name, arguments:[]  
High Call: name
Running querryfc
Found: None
Written func info: IERC20, name
Handling balance function!
-999
Finding type for hlc_0(string ... )
Value: u
[i]Type for TMP_133

Name: TMP_133 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_defaultNamePrefix_4(string) := ϕ(['_defaultNamePrefix_3', '_defaultNamePrefix_4'])
Phi
[i]Type for _defaultNamePrefix

Name: _defaultNamePrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_symbolSymbolPrefix_4(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5'])
Phi
[i]Type for _symbolSymbolPrefix

Name: _symbolSymbolPrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
WITHDRAWAL_FEE_HARD_CAP_4(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10', 'WITHDRAWAL_FEE_HARD_CAP_3'])
Phi
[i]Type for WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
PERFORMANCE_FEE_HARD_CAP_4(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_3', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
Phi
[i]Type for PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MANAGEMENT_FEE_HARD_CAP_4(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_3', 'MANAGEMENT_FEE_HARD_CAP_8'])
Phi
[i]Type for MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(bytes) = SOLIDITY_CALL abi.encodePacked()(_defaultNamePrefix_4,TMP_133)
[i]Type for TMP_134

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_135 = CONVERT TMP_134 to string
Converting TMP_134

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_135

Name: TMP_135 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
name_1(string) := TMP_135(string)
asgn
Finance type key: (-1, -1)
[i]Type for name

Name: name Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] name cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _name_1, name: _name

Name: _name_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _name_1, name: _name

Name: _name_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name_2, name: name

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: name, Num: 2
Globalname: name, contract_name: StakedCitadel
End popogation
name_2(string) := _name_1(string)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for name

Name: name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] name cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: name_3, name: name

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: name, Num: 3
Globalname: name, contract_name: StakedCitadel
name_3(string) := ϕ(['name_2', 'name_1'])
Phi

Name: name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: name Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for name

Name: name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_139 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _symbol_1, name: _symbol

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _symbol_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _symbol, Num: 1
Globalname: _symbol, contract_name: StakedCitadel
global...

Name: PIC_34 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _symbol_1, name: _symbol

Name: _symbol_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_136(bytes) = SOLIDITY_CALL abi.encodePacked()(_symbol_1)
[i]Type for TMP_136

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_137(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_136)
[i]Type for TMP_137

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_138(bytes32) = SOLIDITY_CALL keccak256(bytes)()
[i]Type for TMP_138

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_139(bool) = TMP_137 != TMP_138
[i]Type for TMP_139

Name: TMP_139 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] symbol cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _symbol_1, name: _symbol

Name: _symbol_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbol_1, name: _symbol

Name: _symbol_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: symbol_2, name: symbol

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: symbol, Num: 2
Globalname: symbol, contract_name: StakedCitadel
End popogation
symbol_2(string) := _symbol_1(string)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for symbol

Name: symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_140 cleared
[i] TMP_142 cleared
[i] symbol cleared
Propogating parameters and globals to SSA variables...
Ssa_name: namedToken_1, name: namedToken

Name: namedToken Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbolSymbolPrefix_5, name: _symbolSymbolPrefix

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _symbolSymbolPrefix, Num: 5
Globalname: _symbolSymbolPrefix, contract_name: StakedCitadel
global...

Name: PIC_36 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: namedToken_1, name: namedToken

Name: namedToken Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbolSymbolPrefix_5, name: _symbolSymbolPrefix

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: symbol_1, name: symbol

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: symbol, Num: 1
Globalname: symbol, contract_name: StakedCitadel
End popogation
Ssa_name: _symbolSymbolPrefix_5, name: _symbolSymbolPrefix

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_5, name: WITHDRAWAL_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: WITHDRAWAL_FEE_HARD_CAP, Num: 5
Globalname: WITHDRAWAL_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_22 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: PERFORMANCE_FEE_HARD_CAP_5, name: PERFORMANCE_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: PERFORMANCE_FEE_HARD_CAP, Num: 5
Globalname: PERFORMANCE_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_29 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MANAGEMENT_FEE_HARD_CAP_5, name: MANAGEMENT_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MANAGEMENT_FEE_HARD_CAP, Num: 5
Globalname: MANAGEMENT_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_140(string) = HIGH_LEVEL_CALL, dest:namedToken_1(IERC20), function:symbol, arguments:[]  
High Call: symbol
Running querryfc
Found: None
Written func info: IERC20, symbol
Handling balance function!
-999
Finding type for hlc_1(string ... )
Value: u
[i]Type for TMP_140

Name: TMP_140 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_symbolSymbolPrefix_5(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5'])
Phi
[i]Type for _symbolSymbolPrefix

Name: _symbolSymbolPrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
WITHDRAWAL_FEE_HARD_CAP_5(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_4', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
Phi
[i]Type for WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
PERFORMANCE_FEE_HARD_CAP_5(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8', 'PERFORMANCE_FEE_HARD_CAP_4'])
Phi
[i]Type for PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MANAGEMENT_FEE_HARD_CAP_5(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_4', 'MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_8'])
Phi
[i]Type for MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_141(bytes) = SOLIDITY_CALL abi.encodePacked()(_symbolSymbolPrefix_5,TMP_140)
[i]Type for TMP_141

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_142 = CONVERT TMP_141 to string
Converting TMP_141

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_142

Name: TMP_142 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
symbol_1(string) := TMP_142(string)
asgn
Finance type key: (-1, -1)
[i]Type for symbol

Name: symbol Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] symbol cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: symbol_3, name: symbol

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: symbol, Num: 3
Globalname: symbol, contract_name: StakedCitadel
symbol_3(string) := ϕ(['symbol_2', 'symbol_1'])
Phi

Name: symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: symbol Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for symbol

Name: symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: symbol_3, name: symbol

Name: symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name_3, name: name

Name: name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: symbol_3, name: symbol

Name: symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name_3, name: name

Name: name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20Upgradeable.__ERC20_init(string,string)(name_3,symbol_3)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: name_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: symbol_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
__ERC20_init(string,string)
Propogating All
Propogating All
Propogating All
symbol__1
Ssa_name: symbol__1, name: symbol_

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: symbol__1 Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
name__1
Ssa_name: name__1, name: name_

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: name__1 Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] name_ cleared
[i] symbol_ cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: name__1, name: name_

Name: name__1 Function: __ERC20_init
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: name__1 Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: symbol__1, name: symbol_

Name: symbol__1 Function: __ERC20_init
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: symbol__1 Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
name__1(string) := ϕ(['name_3'])
Phi
[i]Type for name_

Name: name_ Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
symbol__1(string) := ϕ(['symbol_3'])
Phi
[i]Type for symbol_

Name: symbol_ Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.onlyInitializing()()
New param cache []
FIND RETURN
ENTRY_POINT
onlyInitializing()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _initializing_5, name: _initializing

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _initializing, Num: 5
Globalname: _initializing, contract_name: StakedCitadel
global...

Name: _initializing Function: initializer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
Source address: u
_initializing_5(bool) := ϕ(['_initializing_3', '_initializing_4', '_initializing_2', '_initializing_0'])
Phi
[i]Type for _initializing

Name: _initializing Function: onlyInitializing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_5, name: _initializing

Name: _initializing Function: onlyInitializing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
Ssa_name: _initializing_5, name: _initializing

Name: _initializing Function: onlyInitializing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
End popogation
TMP_414(None) = SOLIDITY_CALL require(bool,string)(_initializing_5,Initializable: contract is not initializing)
[i]Type for TMP_414

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _initializing_5, name: _initializing

Name: _initializing Function: onlyInitializing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
_initializing_5(bool) := ϕ(['_initializing_3', '_initializing_4', '_initializing_2', '_initializing_0'])
Phi
[i]Type for _initializing

Name: _initializing Function: onlyInitializing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _initializing_5, name: _initializing

Name: _initializing Function: onlyInitializing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
Ssa_name: _initializing_5, name: _initializing

Name: _initializing Function: onlyInitializing
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
End popogation
TMP_414(None) = SOLIDITY_CALL require(bool,string)(_initializing_5,Initializable: contract is not initializing)
[i]Type for TMP_414

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name__1, name: name_

Name: name_ Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name__1, name: name_

Name: name_ Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20Upgradeable.__ERC20_init_unchained(string,string)(name__1,symbol__1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: name_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: symbol_ Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
__ERC20_init_unchained(string,string)
Propogating All
Propogating All
Propogating All
name__1
Ssa_name: name__1, name: name_

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: name__1 Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
symbol__1
Ssa_name: symbol__1, name: symbol_

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: symbol__1 Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] name_ cleared
[i] symbol_ cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: name__1, name: name_

Name: name__1 Function: __ERC20_init_unchained
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: name__1 Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: symbol__1, name: symbol_

Name: symbol__1 Function: __ERC20_init_unchained
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: symbol__1 Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
name__1(string) := ϕ(['name__1'])
Phi
[i]Type for name_

Name: name_ Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
symbol__1(string) := ϕ(['symbol__1'])
Phi
[i]Type for symbol_

Name: symbol_ Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.onlyInitializing()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: name__1, name: name_

Name: name_ Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name__1, name: name_

Name: name_ Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _name_1, name: _name

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _name, Num: 1
Globalname: _name, contract_name: StakedCitadel
global...

Name: PIC_40 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_name_1(string) := name__1(string)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _name

Name: _name Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbol_1, name: _symbol

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _symbol, Num: 1
Globalname: _symbol, contract_name: StakedCitadel
global...

Name: PIC_34 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_symbol_1(string) := symbol__1(string)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _symbol

Name: _symbol Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] name_ cleared
[i] symbol_ cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: name__1, name: name_

Name: name_ Function: __ERC20_init_unchained
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: name__1 Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: __ERC20_init_unchained
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: symbol__1 Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
name__1(string) := ϕ(['name__1'])
Phi
[i]Type for name_

Name: name_ Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
symbol__1(string) := ϕ(['symbol__1'])
Phi
[i]Type for symbol_

Name: symbol_ Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.onlyInitializing()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: name__1, name: name_

Name: name_ Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name__1, name: name_

Name: name_ Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _name_1, name: _name

Name: _name Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_name_1(string) := name__1(string)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _name

Name: _name Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbol_1, name: _symbol

Name: _symbol Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_symbol_1(string) := symbol__1(string)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _symbol

Name: _symbol Function: __ERC20_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] name_ cleared
[i] symbol_ cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: name__1, name: name_

Name: name_ Function: __ERC20_init
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: name__1 Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: __ERC20_init
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: symbol__1 Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
name__1(string) := ϕ(['name_3'])
Phi
[i]Type for name_

Name: name_ Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
symbol__1(string) := ϕ(['symbol_3'])
Phi
[i]Type for symbol_

Name: symbol_ Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.onlyInitializing()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name__1, name: name_

Name: name_ Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: symbol__1, name: symbol_

Name: symbol_ Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name__1, name: name_

Name: name_ Function: __ERC20_init
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20Upgradeable.__ERC20_init_unchained(string,string)(name__1,symbol__1)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, PausableUpgradeable.__Pausable_init()()
New param cache []
FIND RETURN
ENTRY_POINT
__Pausable_init()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.onlyInitializing()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, PausableUpgradeable.__Pausable_init_unchained()()
New param cache []
FIND RETURN
ENTRY_POINT
__Pausable_init_unchained()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.onlyInitializing()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: _paused_1, name: _paused

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _paused, Num: 1
Globalname: _paused, contract_name: StakedCitadel
global...

Name: PIC_20 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_paused_1(bool) := False(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _paused

Name: _paused Function: __Pausable_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.onlyInitializing()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: _paused_1, name: _paused

Name: _paused Function: __Pausable_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
End popogation
_paused_1(bool) := False(bool)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _paused

Name: _paused Function: __Pausable_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: False
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.onlyInitializing()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, PausableUpgradeable.__Pausable_init_unchained()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init()()
New param cache []
FIND RETURN
ENTRY_POINT
__ReentrancyGuard_init()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.onlyInitializing()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained()()
New param cache []
FIND RETURN
ENTRY_POINT
__ReentrancyGuard_init_unchained()
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _NOT_ENTERED_1, name: _NOT_ENTERED

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _NOT_ENTERED, Num: 1
Globalname: _NOT_ENTERED, contract_name: StakedCitadel
global...

Name: PIC_14 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_NOT_ENTERED_1(uint256) := ϕ(['_NOT_ENTERED_0', '_NOT_ENTERED_2'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.onlyInitializing()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: _NOT_ENTERED_2, name: _NOT_ENTERED

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _NOT_ENTERED, Num: 2
Globalname: _NOT_ENTERED, contract_name: StakedCitadel
global...

Name: PIC_14 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _NOT_ENTERED_2, name: _NOT_ENTERED

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_1, name: _status

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _status, Num: 1
Globalname: _status, contract_name: StakedCitadel
global...

Name: PIC_15 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_status_1(uint256) := _NOT_ENTERED_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _NOT_ENTERED_1, name: _NOT_ENTERED

Name: _NOT_ENTERED Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_NOT_ENTERED_1(uint256) := ϕ(['_NOT_ENTERED_0', '_NOT_ENTERED_2'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.onlyInitializing()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: _NOT_ENTERED_2, name: _NOT_ENTERED

Name: _NOT_ENTERED Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _NOT_ENTERED_2, name: _NOT_ENTERED

Name: _NOT_ENTERED Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_1, name: _status

Name: _status Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_status_1(uint256) := _NOT_ENTERED_2(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.onlyInitializing()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init_unchained()()
New param cache []
Old param cache: []
[i] TMP_146 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token, Num: 1
Globalname: token, contract_name: StakedCitadel
global...

Name: PIC_3 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_146 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -999
ERC20Upgradeable
[i]Type for TMP_146

Name: TMP_146 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
token_1(IERC20Upgradeable) := TMP_146(IERC20Upgradeable)
asgn
Source address: -999
Finance type key: (-1, -1)
[i]Type for token

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: -999
Propogating parameters and globals to SSA variables...
Ssa_name: _governance_1, name: _governance

Name: _governance_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: _governance_1, name: _governance

Name: _governance_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: governance_5, name: governance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: governance, Num: 5
Globalname: governance, contract_name: StakedCitadel
global...

Name: PIC_27 Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Source address: 3
End popogation
governance_5(address) := _governance_1(address)
asgn
Source address: -998
Finance type key: (-1, -1)
[i]Type for governance

Name: governance Function: initialize
Num: -1
Den: -1
Address: -998
Norm: 0
LF: _governance
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: treasury_1, name: treasury

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: treasury, Num: 1
Globalname: treasury, contract_name: StakedCitadel
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2
End popogation
treasury_1(address) := _treasury_1(address)
asgn
Source address: -995
Finance type key: (-1, -1)
[i]Type for treasury

Name: treasury Function: initialize
Num: -1
Den: -1
Address: -995
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _strategist_1, name: _strategist

Name: _strategist_1 Function: initialize
Num: 
Den: 
Address: -994
Norm: 0
LF: _strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: _strategist_1, name: _strategist

Name: _strategist_1 Function: initialize
Num: 
Den: 
Address: -994
Norm: 0
LF: _strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategist_3, name: strategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategist, Num: 3
Globalname: strategist, contract_name: StakedCitadel
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1
End popogation
strategist_3(address) := _strategist_1(address)
asgn
Source address: -994
Finance type key: (-1, -1)
[i]Type for strategist

Name: strategist Function: initialize
Num: -1
Den: -1
Address: -994
Norm: 0
LF: _strategist
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _keeper_1, name: _keeper

Name: _keeper_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _keeper
Value: u
Fields: 
Finance Type: undef
Ssa_name: _keeper_1, name: _keeper

Name: _keeper_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _keeper
Value: u
Fields: 
Finance Type: undef
Ssa_name: keeper_3, name: keeper

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: keeper, Num: 3
Globalname: keeper, contract_name: StakedCitadel
global...

Name: PIC_41 Function: None
Num: -1
Den: -1
Address: 4
Norm: 0
LF: keeper
Value: u
Fields: 
Finance Type: undef
Source address: 4
End popogation
keeper_3(address) := _keeper_1(address)
asgn
Source address: -997
Finance type key: (-1, -1)
[i]Type for keeper

Name: keeper Function: initialize
Num: -1
Den: -1
Address: -997
Norm: 0
LF: _keeper
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Ssa_name: guardian_1, name: guardian

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: guardian, Num: 1
Globalname: guardian, contract_name: StakedCitadel
global...

Name: PIC_28 Function: None
Num: -1
Den: -1
Address: 7
Norm: 0
LF: guardian
Value: u
Fields: 
Finance Type: undef
Source address: 7
End popogation
guardian_1(address) := _guardian_1(address)
asgn
Source address: -996
Finance type key: (-1, -1)
[i]Type for guardian

Name: guardian Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _badgerTree_1, name: _badgerTree

Name: _badgerTree_1 Function: initialize
Num: 
Den: 
Address: -993
Norm: 0
LF: _badgerTree
Value: u
Fields: 
Finance Type: undef
Ssa_name: _badgerTree_1, name: _badgerTree

Name: _badgerTree_1 Function: initialize
Num: 
Den: 
Address: -993
Norm: 0
LF: _badgerTree
Value: u
Fields: 
Finance Type: undef
Ssa_name: badgerTree_1, name: badgerTree

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: badgerTree, Num: 1
Globalname: badgerTree, contract_name: StakedCitadel
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
Source address: 5
End popogation
badgerTree_1(address) := _badgerTree_1(address)
asgn
Source address: -993
Finance type key: (-1, -1)
[i]Type for badgerTree

Name: badgerTree Function: initialize
Num: -1
Den: -1
Address: -993
Norm: 0
LF: _badgerTree
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: initialize
Num: 
Den: 
Address: -992
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: initialize
Num: 
Den: 
Address: -992
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Ssa_name: vesting_1, name: vesting

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vesting, Num: 1
Globalname: vesting, contract_name: StakedCitadel
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: 8
Norm: 0
LF: vesting
Value: u
Fields: 
Finance Type: undef
Source address: 8
End popogation
vesting_1(address) := _vesting_1(address)
asgn
Source address: -992
Finance type key: (-1, -1)
[i]Type for vesting

Name: vesting Function: initialize
Num: -1
Den: -1
Address: -992
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: lastHarvestedAt_1, name: lastHarvestedAt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastHarvestedAt, Num: 1
Globalname: lastHarvestedAt, contract_name: StakedCitadel
global...

Name: PIC_25 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
lastHarvestedAt_1(uint256) := block.timestamp(uint256)
asgn
[i]Type for lastHarvestedAt

Name: lastHarvestedAt Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: performanceFeeGovernance_1, name: performanceFeeGovernance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: performanceFeeGovernance, Num: 1
Globalname: performanceFeeGovernance, contract_name: StakedCitadel
global...

Name: PIC_10 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
REF_26(uint256) -> _feeConfig_1[0]
INDEX
[i]Type for REF_26

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
performanceFeeGovernance_1(uint256) := REF_26(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for performanceFeeGovernance

Name: performanceFeeGovernance Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: performanceFeeStrategist_1, name: performanceFeeStrategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: performanceFeeStrategist, Num: 1
Globalname: performanceFeeStrategist, contract_name: StakedCitadel
global...

Name: PIC_11 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
REF_27(uint256) -> _feeConfig_1[1]
INDEX
[i]Type for REF_27

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
performanceFeeStrategist_1(uint256) := REF_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for performanceFeeStrategist

Name: performanceFeeStrategist Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: withdrawalFee_1, name: withdrawalFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalFee, Num: 1
Globalname: withdrawalFee, contract_name: StakedCitadel
global...

Name: PIC_7 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
REF_28(uint256) -> _feeConfig_1[2]
INDEX
[i]Type for REF_28

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
withdrawalFee_1(uint256) := REF_28(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for withdrawalFee

Name: withdrawalFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: managementFee_1, name: managementFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: managementFee, Num: 1
Globalname: managementFee, contract_name: StakedCitadel
global...

Name: PIC_26 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
REF_29(uint256) -> _feeConfig_1[3]
INDEX
[i]Type for REF_29

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
managementFee_1(uint256) := REF_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for managementFee

Name: managementFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: PERFORMANCE_FEE_HARD_CAP_8, name: PERFORMANCE_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: PERFORMANCE_FEE_HARD_CAP, Num: 8
Globalname: PERFORMANCE_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_29 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: PERFORMANCE_FEE_HARD_CAP_8, name: PERFORMANCE_FEE_HARD_CAP

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxPerformanceFee_1, name: maxPerformanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxPerformanceFee, Num: 1
Globalname: maxPerformanceFee, contract_name: StakedCitadel
global...

Name: PIC_31 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
maxPerformanceFee_1(uint256) := PERFORMANCE_FEE_HARD_CAP_8(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxPerformanceFee

Name: maxPerformanceFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_8, name: WITHDRAWAL_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: WITHDRAWAL_FEE_HARD_CAP, Num: 8
Globalname: WITHDRAWAL_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_22 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_8, name: WITHDRAWAL_FEE_HARD_CAP

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxWithdrawalFee_1, name: maxWithdrawalFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxWithdrawalFee, Num: 1
Globalname: maxWithdrawalFee, contract_name: StakedCitadel
global...

Name: PIC_39 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
maxWithdrawalFee_1(uint256) := WITHDRAWAL_FEE_HARD_CAP_8(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxWithdrawalFee

Name: maxWithdrawalFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: MANAGEMENT_FEE_HARD_CAP_8, name: MANAGEMENT_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MANAGEMENT_FEE_HARD_CAP, Num: 8
Globalname: MANAGEMENT_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MANAGEMENT_FEE_HARD_CAP_8, name: MANAGEMENT_FEE_HARD_CAP

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxManagementFee_1, name: maxManagementFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxManagementFee, Num: 1
Globalname: maxManagementFee, contract_name: StakedCitadel
global...

Name: PIC_37 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
maxManagementFee_1(uint256) := MANAGEMENT_FEE_HARD_CAP_8(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxManagementFee

Name: maxManagementFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: toEarnBps_1, name: toEarnBps

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: toEarnBps, Num: 1
Globalname: toEarnBps, contract_name: StakedCitadel
global...

Name: PIC_21 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
toEarnBps_1(uint256) := 9500(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for toEarnBps

Name: toEarnBps Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
XXXX
Source address: u


_defaultNamePrefix_1(string) := ϕ(['_defaultNamePrefix_0', '_defaultNamePrefix_4', '_defaultNamePrefix_3'])
_symbolSymbolPrefix_1(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5', '_symbolSymbolPrefix_0'])
WITHDRAWAL_FEE_HARD_CAP_1(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_0', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
PERFORMANCE_FEE_HARD_CAP_1(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_0', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
MANAGEMENT_FEE_HARD_CAP_1(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_0', 'MANAGEMENT_FEE_HARD_CAP_8'])
MODIFIER_CALL, Initializable.initializer()()
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
TMP_96 = CONVERT 0 to address
TMP_97(bool) = _token_1 != TMP_96
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)
TMP_99 = CONVERT 0 to address
TMP_100(bool) = _governance_1 != TMP_99
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)
TMP_102 = CONVERT 0 to address
TMP_103(bool) = _keeper_1 != TMP_102
TMP_104(None) = SOLIDITY_CALL require(bool)(TMP_103)
TMP_105 = CONVERT 0 to address
TMP_106(bool) = _guardian_1 != TMP_105
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)
TMP_108 = CONVERT 0 to address
TMP_109(bool) = _treasury_1 != TMP_108
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)
TMP_111 = CONVERT 0 to address
TMP_112(bool) = _strategist_1 != TMP_111
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)
TMP_114 = CONVERT 0 to address
TMP_115(bool) = _badgerTree_1 != TMP_114
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)
TMP_117 = CONVERT 0 to address
TMP_118(bool) = _vesting_1 != TMP_117
TMP_119(None) = SOLIDITY_CALL require(bool)(TMP_118)
REF_16(uint256) -> _feeConfig_1[0]
TMP_120(bool) = REF_16 <= PERFORMANCE_FEE_HARD_CAP_3
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,performanceFeeGovernance too high)
REF_17(uint256) -> _feeConfig_1[1]
TMP_122(bool) = REF_17 <= PERFORMANCE_FEE_HARD_CAP_3
TMP_123(None) = SOLIDITY_CALL require(bool,string)(TMP_122,performanceFeeStrategist too high)
REF_18(uint256) -> _feeConfig_1[2]
TMP_124(bool) = REF_18 <= WITHDRAWAL_FEE_HARD_CAP_3
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,withdrawalFee too high)
REF_19(uint256) -> _feeConfig_1[3]
TMP_126(bool) = REF_19 <= MANAGEMENT_FEE_HARD_CAP_3
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,managementFee too high)
TMP_128 = CONVERT _token_1 to IERC20
namedToken_1(IERC20) := TMP_128(IERC20)
TMP_129(bytes) = SOLIDITY_CALL abi.encodePacked()(_name_1)
TMP_130(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_129)
TMP_131(bytes32) = SOLIDITY_CALL keccak256(bytes)()
TMP_132(bool) = TMP_130 != TMP_131
CONDITION TMP_132
TMP_133(string) = HIGH_LEVEL_CALL, dest:namedToken_1(IERC20), function:name, arguments:[]  
_defaultNamePrefix_4(string) := ϕ(['_defaultNamePrefix_3', '_defaultNamePrefix_4'])
_symbolSymbolPrefix_4(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5'])
WITHDRAWAL_FEE_HARD_CAP_4(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10', 'WITHDRAWAL_FEE_HARD_CAP_3'])
PERFORMANCE_FEE_HARD_CAP_4(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_3', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
MANAGEMENT_FEE_HARD_CAP_4(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_3', 'MANAGEMENT_FEE_HARD_CAP_8'])
TMP_134(bytes) = SOLIDITY_CALL abi.encodePacked()(_defaultNamePrefix_4,TMP_133)
TMP_135 = CONVERT TMP_134 to string
name_1(string) := TMP_135(string)
name_2(string) := _name_1(string)
name_3(string) := ϕ(['name_2', 'name_1'])
TMP_136(bytes) = SOLIDITY_CALL abi.encodePacked()(_symbol_1)
TMP_137(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_136)
TMP_138(bytes32) = SOLIDITY_CALL keccak256(bytes)()
TMP_139(bool) = TMP_137 != TMP_138
CONDITION TMP_139
symbol_2(string) := _symbol_1(string)
TMP_140(string) = HIGH_LEVEL_CALL, dest:namedToken_1(IERC20), function:symbol, arguments:[]  
_symbolSymbolPrefix_5(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5'])
WITHDRAWAL_FEE_HARD_CAP_5(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_4', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
PERFORMANCE_FEE_HARD_CAP_5(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8', 'PERFORMANCE_FEE_HARD_CAP_4'])
MANAGEMENT_FEE_HARD_CAP_5(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_4', 'MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_8'])
TMP_141(bytes) = SOLIDITY_CALL abi.encodePacked()(_symbolSymbolPrefix_5,TMP_140)
TMP_142 = CONVERT TMP_141 to string
symbol_1(string) := TMP_142(string)
symbol_3(string) := ϕ(['symbol_2', 'symbol_1'])
INTERNAL_CALL, ERC20Upgradeable.__ERC20_init(string,string)(name_3,symbol_3)
INTERNAL_CALL, PausableUpgradeable.__Pausable_init()()
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init()()
TMP_146 = CONVERT _token_1 to IERC20Upgradeable
token_1(IERC20Upgradeable) := TMP_146(IERC20Upgradeable)
governance_5(address) := _governance_1(address)
treasury_1(address) := _treasury_1(address)
strategist_3(address) := _strategist_1(address)
keeper_3(address) := _keeper_1(address)
guardian_1(address) := _guardian_1(address)
badgerTree_1(address) := _badgerTree_1(address)
vesting_1(address) := _vesting_1(address)
lastHarvestedAt_1(uint256) := block.timestamp(uint256)
REF_26(uint256) -> _feeConfig_1[0]
performanceFeeGovernance_1(uint256) := REF_26(uint256)
REF_27(uint256) -> _feeConfig_1[1]
performanceFeeStrategist_1(uint256) := REF_27(uint256)
REF_28(uint256) -> _feeConfig_1[2]
withdrawalFee_1(uint256) := REF_28(uint256)
REF_29(uint256) -> _feeConfig_1[3]
managementFee_1(uint256) := REF_29(uint256)
maxPerformanceFee_1(uint256) := PERFORMANCE_FEE_HARD_CAP_8(uint256)
maxWithdrawalFee_1(uint256) := WITHDRAWAL_FEE_HARD_CAP_8(uint256)
maxManagementFee_1(uint256) := MANAGEMENT_FEE_HARD_CAP_8(uint256)
toEarnBps_1(uint256) := 9500(uint256)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _defaultNamePrefix_1, name: _defaultNamePrefix

Name: _defaultNamePrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbolSymbolPrefix_1, name: _symbolSymbolPrefix

Name: _symbolSymbolPrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_1, name: WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: PERFORMANCE_FEE_HARD_CAP_1, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MANAGEMENT_FEE_HARD_CAP_1, name: MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_defaultNamePrefix_1(string) := ϕ(['_defaultNamePrefix_0', '_defaultNamePrefix_4', '_defaultNamePrefix_3'])
Phi
[i]Type for _defaultNamePrefix

Name: _defaultNamePrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_symbolSymbolPrefix_1(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5', '_symbolSymbolPrefix_0'])
Phi
[i]Type for _symbolSymbolPrefix

Name: _symbolSymbolPrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
WITHDRAWAL_FEE_HARD_CAP_1(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_0', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
Phi
[i]Type for WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
PERFORMANCE_FEE_HARD_CAP_1(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_0', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
Phi
[i]Type for PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MANAGEMENT_FEE_HARD_CAP_1(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_0', 'MANAGEMENT_FEE_HARD_CAP_8'])
Phi
[i]Type for MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, Initializable.initializer()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
[i] TMP_96 cleared
[i] TMP_97 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_96 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_96

Name: TMP_96 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_97(bool) = _token_1 != TMP_96
[i]Type for TMP_97

Name: TMP_97 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_98(None) = SOLIDITY_CALL require(bool)(TMP_97)
[i]Type for TMP_98

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_99 cleared
[i] TMP_100 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _governance_1, name: _governance

Name: _governance_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: _governance_1, name: _governance

Name: _governance_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _governance
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_99 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_99

Name: TMP_99 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_100(bool) = _governance_1 != TMP_99
[i]Type for TMP_100

Name: TMP_100 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_101(None) = SOLIDITY_CALL require(bool)(TMP_100)
[i]Type for TMP_101

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_102 cleared
[i] TMP_103 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _keeper_1, name: _keeper

Name: _keeper_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _keeper
Value: u
Fields: 
Finance Type: undef
Ssa_name: _keeper_1, name: _keeper

Name: _keeper_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _keeper
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_102 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_102

Name: TMP_102 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_103(bool) = _keeper_1 != TMP_102
[i]Type for TMP_103

Name: TMP_103 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_104(None) = SOLIDITY_CALL require(bool)(TMP_103)
[i]Type for TMP_104

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_105 cleared
[i] TMP_106 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_105 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_105

Name: TMP_105 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_106(bool) = _guardian_1 != TMP_105
[i]Type for TMP_106

Name: TMP_106 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_107(None) = SOLIDITY_CALL require(bool)(TMP_106)
[i]Type for TMP_107

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_108 cleared
[i] TMP_109 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_108 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_108

Name: TMP_108 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_109(bool) = _treasury_1 != TMP_108
[i]Type for TMP_109

Name: TMP_109 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_110(None) = SOLIDITY_CALL require(bool)(TMP_109)
[i]Type for TMP_110

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_111 cleared
[i] TMP_112 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _strategist_1, name: _strategist

Name: _strategist_1 Function: initialize
Num: 
Den: 
Address: -994
Norm: 0
LF: _strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: _strategist_1, name: _strategist

Name: _strategist_1 Function: initialize
Num: 
Den: 
Address: -994
Norm: 0
LF: _strategist
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_111 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_111

Name: TMP_111 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_112(bool) = _strategist_1 != TMP_111
[i]Type for TMP_112

Name: TMP_112 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_113(None) = SOLIDITY_CALL require(bool)(TMP_112)
[i]Type for TMP_113

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_114 cleared
[i] TMP_115 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _badgerTree_1, name: _badgerTree

Name: _badgerTree_1 Function: initialize
Num: 
Den: 
Address: -993
Norm: 0
LF: _badgerTree
Value: u
Fields: 
Finance Type: undef
Ssa_name: _badgerTree_1, name: _badgerTree

Name: _badgerTree_1 Function: initialize
Num: 
Den: 
Address: -993
Norm: 0
LF: _badgerTree
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_114 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_114

Name: TMP_114 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_115(bool) = _badgerTree_1 != TMP_114
[i]Type for TMP_115

Name: TMP_115 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_116(None) = SOLIDITY_CALL require(bool)(TMP_115)
[i]Type for TMP_116

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_117 cleared
[i] TMP_118 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: initialize
Num: 
Den: 
Address: -992
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: initialize
Num: 
Den: 
Address: -992
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_117 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_117

Name: TMP_117 Function: initialize
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_118(bool) = _vesting_1 != TMP_117
[i]Type for TMP_118

Name: TMP_118 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_119(None) = SOLIDITY_CALL require(bool)(TMP_118)
[i]Type for TMP_119

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_120 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: PERFORMANCE_FEE_HARD_CAP_3, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: PERFORMANCE_FEE_HARD_CAP_3, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
End popogation
REF_16(uint256) -> _feeConfig_1[0]
INDEX
[i]Type for REF_16

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_120(bool) = REF_16 <= PERFORMANCE_FEE_HARD_CAP_3
lnorm: u rnorm: u
[i]Type for TMP_120

Name: TMP_120 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,performanceFeeGovernance too high)
[i]Type for TMP_121

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_122 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: PERFORMANCE_FEE_HARD_CAP_3, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: PERFORMANCE_FEE_HARD_CAP_3, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
End popogation
REF_17(uint256) -> _feeConfig_1[1]
INDEX
[i]Type for REF_17

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_122(bool) = REF_17 <= PERFORMANCE_FEE_HARD_CAP_3
lnorm: u rnorm: u
[i]Type for TMP_122

Name: TMP_122 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_123(None) = SOLIDITY_CALL require(bool,string)(TMP_122,performanceFeeStrategist too high)
[i]Type for TMP_123

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_124 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_3, name: WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_3, name: WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_18(uint256) -> _feeConfig_1[2]
INDEX
[i]Type for REF_18

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_124(bool) = REF_18 <= WITHDRAWAL_FEE_HARD_CAP_3
lnorm: u rnorm: u
[i]Type for TMP_124

Name: TMP_124 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,withdrawalFee too high)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_126 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: MANAGEMENT_FEE_HARD_CAP_3, name: MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: MANAGEMENT_FEE_HARD_CAP_3, name: MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_19(uint256) -> _feeConfig_1[3]
INDEX
[i]Type for REF_19

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_126(bool) = REF_19 <= MANAGEMENT_FEE_HARD_CAP_3
lnorm: u rnorm: u
[i]Type for TMP_126

Name: TMP_126 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_127(None) = SOLIDITY_CALL require(bool,string)(TMP_126,managementFee too high)
[i]Type for TMP_127

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_128 cleared
[i] namedToken cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: namedToken_1, name: namedToken

Name: namedToken Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: ERC20
Value: u
Fields: 
Finance Type: undef
Name: namedToken, Num: 1
Globalname: namedToken, contract_name: StakedCitadel
End popogation
TMP_128 = CONVERT _token_1 to IERC20
Converting _token_1

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -999
ERC20
[i]Type for TMP_128

Name: TMP_128 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
namedToken_1(IERC20) := TMP_128(IERC20)
asgn
Source address: -999
Finance type key: (-1, -1)
[i]Type for namedToken

Name: namedToken Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_132 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _name_1, name: _name

Name: _name_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _name_1, name: _name

Name: _name_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_129(bytes) = SOLIDITY_CALL abi.encodePacked()(_name_1)
[i]Type for TMP_129

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_130(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_129)
[i]Type for TMP_130

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_131(bytes32) = SOLIDITY_CALL keccak256(bytes)()
[i]Type for TMP_131

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_132(bool) = TMP_130 != TMP_131
[i]Type for TMP_132

Name: TMP_132 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_133 cleared
[i] TMP_135 cleared
[i] name cleared
Propogating parameters and globals to SSA variables...
Ssa_name: namedToken_1, name: namedToken

Name: namedToken Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
Ssa_name: _defaultNamePrefix_4, name: _defaultNamePrefix

Name: _defaultNamePrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: namedToken_1, name: namedToken

Name: namedToken Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
Ssa_name: _defaultNamePrefix_4, name: _defaultNamePrefix

Name: _defaultNamePrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name_1, name: name

Name: name Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: name, Num: 1
Globalname: name, contract_name: StakedCitadel
End popogation
Ssa_name: _defaultNamePrefix_4, name: _defaultNamePrefix

Name: _defaultNamePrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbolSymbolPrefix_4, name: _symbolSymbolPrefix

Name: _symbolSymbolPrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_4, name: WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: PERFORMANCE_FEE_HARD_CAP_4, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MANAGEMENT_FEE_HARD_CAP_4, name: MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_133(string) = HIGH_LEVEL_CALL, dest:namedToken_1(IERC20), function:name, arguments:[]  
High Call: name
Running querryfc
Found: None
Written func info: IERC20, name
Handling balance function!
-999
Finding type for hlc_0(string ... )
Value: u
[i]Type for TMP_133

Name: TMP_133 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_defaultNamePrefix_4(string) := ϕ(['_defaultNamePrefix_3', '_defaultNamePrefix_4'])
Phi
[i]Type for _defaultNamePrefix

Name: _defaultNamePrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_symbolSymbolPrefix_4(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5'])
Phi
[i]Type for _symbolSymbolPrefix

Name: _symbolSymbolPrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
WITHDRAWAL_FEE_HARD_CAP_4(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10', 'WITHDRAWAL_FEE_HARD_CAP_3'])
Phi
[i]Type for WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
PERFORMANCE_FEE_HARD_CAP_4(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_3', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
Phi
[i]Type for PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MANAGEMENT_FEE_HARD_CAP_4(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_3', 'MANAGEMENT_FEE_HARD_CAP_8'])
Phi
[i]Type for MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_134(bytes) = SOLIDITY_CALL abi.encodePacked()(_defaultNamePrefix_4,TMP_133)
[i]Type for TMP_134

Name: TMP_134 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_135 = CONVERT TMP_134 to string
Converting TMP_134

Name: TMP_134 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_135

Name: TMP_135 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
name_1(string) := TMP_135(string)
asgn
Finance type key: (-1, -1)
[i]Type for name

Name: name Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] name cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _name_1, name: _name

Name: _name_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _name_1, name: _name

Name: _name_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name_2, name: name

Name: name Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: name, Num: 2
Globalname: name, contract_name: StakedCitadel
End popogation
name_2(string) := _name_1(string)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for name

Name: name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] name cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: name_3, name: name

Name: name Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: name, Num: 3
Globalname: name, contract_name: StakedCitadel
name_3(string) := ϕ(['name_2', 'name_1'])
Phi

Name: name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: name Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for name

Name: name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_139 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _symbol_1, name: _symbol

Name: _symbol_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbol_1, name: _symbol

Name: _symbol_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_136(bytes) = SOLIDITY_CALL abi.encodePacked()(_symbol_1)
[i]Type for TMP_136

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_137(bytes32) = SOLIDITY_CALL keccak256(bytes)(TMP_136)
[i]Type for TMP_137

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_138(bytes32) = SOLIDITY_CALL keccak256(bytes)()
[i]Type for TMP_138

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_139(bool) = TMP_137 != TMP_138
[i]Type for TMP_139

Name: TMP_139 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] symbol cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _symbol_1, name: _symbol

Name: _symbol_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbol_1, name: _symbol

Name: _symbol_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: symbol_2, name: symbol

Name: symbol Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: symbol, Num: 2
Globalname: symbol, contract_name: StakedCitadel
End popogation
symbol_2(string) := _symbol_1(string)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for symbol

Name: symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_140 cleared
[i] TMP_142 cleared
[i] symbol cleared
Propogating parameters and globals to SSA variables...
Ssa_name: namedToken_1, name: namedToken

Name: namedToken Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbolSymbolPrefix_5, name: _symbolSymbolPrefix

Name: _symbolSymbolPrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: namedToken_1, name: namedToken

Name: namedToken Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20
Value: u
Fields: 
Finance Type: undef
Ssa_name: _symbolSymbolPrefix_5, name: _symbolSymbolPrefix

Name: _symbolSymbolPrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: symbol_1, name: symbol

Name: symbol Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: symbol, Num: 1
Globalname: symbol, contract_name: StakedCitadel
End popogation
Ssa_name: _symbolSymbolPrefix_5, name: _symbolSymbolPrefix

Name: _symbolSymbolPrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_5, name: WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: PERFORMANCE_FEE_HARD_CAP_5, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MANAGEMENT_FEE_HARD_CAP_5, name: MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_140(string) = HIGH_LEVEL_CALL, dest:namedToken_1(IERC20), function:symbol, arguments:[]  
High Call: symbol
Running querryfc
Found: None
Written func info: IERC20, symbol
Handling balance function!
-999
Finding type for hlc_1(string ... )
Value: u
[i]Type for TMP_140

Name: TMP_140 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_symbolSymbolPrefix_5(string) := ϕ(['_symbolSymbolPrefix_3', '_symbolSymbolPrefix_4', '_symbolSymbolPrefix_5'])
Phi
[i]Type for _symbolSymbolPrefix

Name: _symbolSymbolPrefix Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
WITHDRAWAL_FEE_HARD_CAP_5(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_4', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
Phi
[i]Type for WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
PERFORMANCE_FEE_HARD_CAP_5(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8', 'PERFORMANCE_FEE_HARD_CAP_4'])
Phi
[i]Type for PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MANAGEMENT_FEE_HARD_CAP_5(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_4', 'MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_8'])
Phi
[i]Type for MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_141(bytes) = SOLIDITY_CALL abi.encodePacked()(_symbolSymbolPrefix_5,TMP_140)
[i]Type for TMP_141

Name: TMP_141 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_142 = CONVERT TMP_141 to string
Converting TMP_141

Name: TMP_141 Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TMP_142

Name: TMP_142 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
symbol_1(string) := TMP_142(string)
asgn
Finance type key: (-1, -1)
[i]Type for symbol

Name: symbol Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] symbol cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: symbol_3, name: symbol

Name: symbol Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: symbol, Num: 3
Globalname: symbol, contract_name: StakedCitadel
symbol_3(string) := ϕ(['symbol_2', 'symbol_1'])
Phi

Name: symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: symbol Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for symbol

Name: symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: symbol_3, name: symbol

Name: symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name_3, name: name

Name: name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: symbol_3, name: symbol

Name: symbol Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: name_3, name: name

Name: name Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20Upgradeable.__ERC20_init(string,string)(name_3,symbol_3)
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, PausableUpgradeable.__Pausable_init()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, ReentrancyGuardUpgradeable.__ReentrancyGuard_init()()
New param cache []
Old param cache: []
[i] TMP_146 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_1, name: token

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_146 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -999
ERC20Upgradeable
[i]Type for TMP_146

Name: TMP_146 Function: initialize
Num: 
Den: 
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
token_1(IERC20Upgradeable) := TMP_146(IERC20Upgradeable)
asgn
Source address: -999
Finance type key: (-1, -1)
[i]Type for token

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: -999
Propogating parameters and globals to SSA variables...
Ssa_name: _governance_1, name: _governance

Name: _governance_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: _governance_1, name: _governance

Name: _governance_1 Function: initialize
Num: 
Den: 
Address: -998
Norm: 0
LF: _governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: governance_5, name: governance

Name: governance Function: initialize
Num: -1
Den: -1
Address: -998
Norm: 0
LF: _governance
Value: u
Fields: 
Finance Type: undef
End popogation
governance_5(address) := _governance_1(address)
asgn
Source address: -998
Finance type key: (-1, -1)
[i]Type for governance

Name: governance Function: initialize
Num: -1
Den: -1
Address: -998
Norm: 0
LF: _governance
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: initialize
Num: 
Den: 
Address: -995
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: treasury_1, name: treasury

Name: treasury Function: initialize
Num: -1
Den: -1
Address: -995
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
End popogation
treasury_1(address) := _treasury_1(address)
asgn
Source address: -995
Finance type key: (-1, -1)
[i]Type for treasury

Name: treasury Function: initialize
Num: -1
Den: -1
Address: -995
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _strategist_1, name: _strategist

Name: _strategist_1 Function: initialize
Num: 
Den: 
Address: -994
Norm: 0
LF: _strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: _strategist_1, name: _strategist

Name: _strategist_1 Function: initialize
Num: 
Den: 
Address: -994
Norm: 0
LF: _strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategist_3, name: strategist

Name: strategist Function: initialize
Num: -1
Den: -1
Address: -994
Norm: 0
LF: _strategist
Value: u
Fields: 
Finance Type: undef
End popogation
strategist_3(address) := _strategist_1(address)
asgn
Source address: -994
Finance type key: (-1, -1)
[i]Type for strategist

Name: strategist Function: initialize
Num: -1
Den: -1
Address: -994
Norm: 0
LF: _strategist
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _keeper_1, name: _keeper

Name: _keeper_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _keeper
Value: u
Fields: 
Finance Type: undef
Ssa_name: _keeper_1, name: _keeper

Name: _keeper_1 Function: initialize
Num: 
Den: 
Address: -997
Norm: 0
LF: _keeper
Value: u
Fields: 
Finance Type: undef
Ssa_name: keeper_3, name: keeper

Name: keeper Function: initialize
Num: -1
Den: -1
Address: -997
Norm: 0
LF: _keeper
Value: u
Fields: 
Finance Type: undef
End popogation
keeper_3(address) := _keeper_1(address)
asgn
Source address: -997
Finance type key: (-1, -1)
[i]Type for keeper

Name: keeper Function: initialize
Num: -1
Den: -1
Address: -997
Norm: 0
LF: _keeper
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: initialize
Num: 
Den: 
Address: -996
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Ssa_name: guardian_1, name: guardian

Name: guardian Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
End popogation
guardian_1(address) := _guardian_1(address)
asgn
Source address: -996
Finance type key: (-1, -1)
[i]Type for guardian

Name: guardian Function: initialize
Num: -1
Den: -1
Address: -996
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _badgerTree_1, name: _badgerTree

Name: _badgerTree_1 Function: initialize
Num: 
Den: 
Address: -993
Norm: 0
LF: _badgerTree
Value: u
Fields: 
Finance Type: undef
Ssa_name: _badgerTree_1, name: _badgerTree

Name: _badgerTree_1 Function: initialize
Num: 
Den: 
Address: -993
Norm: 0
LF: _badgerTree
Value: u
Fields: 
Finance Type: undef
Ssa_name: badgerTree_1, name: badgerTree

Name: badgerTree Function: initialize
Num: -1
Den: -1
Address: -993
Norm: 0
LF: _badgerTree
Value: u
Fields: 
Finance Type: undef
End popogation
badgerTree_1(address) := _badgerTree_1(address)
asgn
Source address: -993
Finance type key: (-1, -1)
[i]Type for badgerTree

Name: badgerTree Function: initialize
Num: -1
Den: -1
Address: -993
Norm: 0
LF: _badgerTree
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: initialize
Num: 
Den: 
Address: -992
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: initialize
Num: 
Den: 
Address: -992
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Ssa_name: vesting_1, name: vesting

Name: vesting Function: initialize
Num: -1
Den: -1
Address: -992
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
End popogation
vesting_1(address) := _vesting_1(address)
asgn
Source address: -992
Finance type key: (-1, -1)
[i]Type for vesting

Name: vesting Function: initialize
Num: -1
Den: -1
Address: -992
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: lastHarvestedAt_1, name: lastHarvestedAt

Name: lastHarvestedAt Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
lastHarvestedAt_1(uint256) := block.timestamp(uint256)
asgn
[i]Type for lastHarvestedAt

Name: lastHarvestedAt Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: performanceFeeGovernance_1, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_26(uint256) -> _feeConfig_1[0]
INDEX
[i]Type for REF_26

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
performanceFeeGovernance_1(uint256) := REF_26(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for performanceFeeGovernance

Name: performanceFeeGovernance Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: performanceFeeStrategist_1, name: performanceFeeStrategist

Name: performanceFeeStrategist Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_27(uint256) -> _feeConfig_1[1]
INDEX
[i]Type for REF_27

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
performanceFeeStrategist_1(uint256) := REF_27(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for performanceFeeStrategist

Name: performanceFeeStrategist Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: withdrawalFee_1, name: withdrawalFee

Name: withdrawalFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_28(uint256) -> _feeConfig_1[2]
INDEX
[i]Type for REF_28

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
withdrawalFee_1(uint256) := REF_28(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for withdrawalFee

Name: withdrawalFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: _feeConfig_1, name: _feeConfig

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _feeConfig_1 Function: initialize
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _feeConfig, Num: 1
Globalname: _feeConfig, contract_name: StakedCitadel
Ssa_name: managementFee_1, name: managementFee

Name: managementFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
REF_29(uint256) -> _feeConfig_1[3]
INDEX
[i]Type for REF_29

Name: _feeConfig_1 Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
managementFee_1(uint256) := REF_29(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for managementFee

Name: managementFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: PERFORMANCE_FEE_HARD_CAP_8, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: PERFORMANCE_FEE_HARD_CAP_8, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxPerformanceFee_1, name: maxPerformanceFee

Name: maxPerformanceFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
maxPerformanceFee_1(uint256) := PERFORMANCE_FEE_HARD_CAP_8(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxPerformanceFee

Name: maxPerformanceFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_8, name: WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_8, name: WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxWithdrawalFee_1, name: maxWithdrawalFee

Name: maxWithdrawalFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
maxWithdrawalFee_1(uint256) := WITHDRAWAL_FEE_HARD_CAP_8(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxWithdrawalFee

Name: maxWithdrawalFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: MANAGEMENT_FEE_HARD_CAP_8, name: MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MANAGEMENT_FEE_HARD_CAP_8, name: MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxManagementFee_1, name: maxManagementFee

Name: maxManagementFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
maxManagementFee_1(uint256) := MANAGEMENT_FEE_HARD_CAP_8(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxManagementFee

Name: maxManagementFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: toEarnBps_1, name: toEarnBps

Name: toEarnBps Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
End popogation
toEarnBps_1(uint256) := 9500(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for toEarnBps

Name: toEarnBps Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
XXXX
Source address: u
Reading Function: _onlyAuthorizedPausers
Function _onlyAuthorizedPausers not marked
Reading Function: _onlyStrategy
Function _onlyStrategy not marked
Reading Function: version
Function version not marked
Reading Function: getPricePerFullShare
Checking funcion...



getPricePerFullShare
Function name: getPricePerFullShare
New param cache []
FIND RETURN
ENTRY_POINT
getPricePerFullShare()


ONE_ETH_1(uint256) := ϕ(['ONE_ETH_2', 'ONE_ETH_4', 'ONE_ETH_0'])
TMP_155(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
TMP_156(bool) = TMP_155 == 0
CONDITION TMP_156
RETURN ONE_ETH_2
TMP_157(uint256) = INTERNAL_CALL, StakedCitadel.balance()()
TMP_158(uint256) = TMP_157 (c)* ONE_ETH_3
TMP_159(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
TMP_160(uint256) = TMP_158 (c)/ TMP_159
RETURN TMP_160


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: ONE_ETH_1, name: ONE_ETH

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ONE_ETH, Num: 1
Globalname: ONE_ETH, contract_name: StakedCitadel
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
ONE_ETH_1(uint256) := ϕ(['ONE_ETH_2', 'ONE_ETH_4', 'ONE_ETH_0'])
Phi
[i]Type for ONE_ETH

Name: ONE_ETH Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_155 cleared
[i] TMP_156 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_155(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
FIND RETURN
ENTRY_POINT
totalSupply()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _totalSupply_1, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 1
Globalname: _totalSupply, contract_name: StakedCitadel
global...

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_totalSupply_1(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _totalSupply_1
RETURN

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_totalSupply_1(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_1, name: _totalSupply

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN _totalSupply_1
RETURN

Name: _totalSupply Function: totalSupply
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Source address: u
[i]Type for TMP_155

Name: TMP_155 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_156(bool) = TMP_155 == 0
[i]Type for TMP_156

Name: TMP_156 Function: getPricePerFullShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: ONE_ETH_2, name: ONE_ETH

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ONE_ETH, Num: 2
Globalname: ONE_ETH, contract_name: StakedCitadel
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: ONE_ETH_2, name: ONE_ETH

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN ONE_ETH_2
RETURN

Name: ONE_ETH Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_157 cleared
[i] TMP_158 cleared
[i] TMP_159 cleared
[i] TMP_160 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: ONE_ETH_3, name: ONE_ETH

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: ONE_ETH, Num: 3
Globalname: ONE_ETH, contract_name: StakedCitadel
global...

Name: PIC_18 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: ONE_ETH_3, name: ONE_ETH

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_157(uint256) = INTERNAL_CALL, StakedCitadel.balance()()
New param cache []
FIND RETURN
ENTRY_POINT
balance()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_2, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token, Num: 2
Globalname: token, contract_name: StakedCitadel
global...

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
token_2(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
Phi
[i]Type for token

Name: token Function: balance
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_161 cleared
[i] TMP_162 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_2, name: token

Name: token Function: balance
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_2, name: token

Name: token Function: balance
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: token_3, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token, Num: 3
Globalname: token, contract_name: StakedCitadel
global...

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
TMP_161 = CONVERT this to address
Converting this
9
[i]Type for TMP_161

Name: TMP_161 Function: balance
Num: -1
Den: -1
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_162(uint256) = HIGH_LEVEL_CALL, dest:token_2(IERC20Upgradeable), function:balanceOf, arguments:['TMP_161']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20Upgradeable, balanceOf
Handling balance function!
-999
[i]Type for TMP_162

Name: TMP_162 Function: balance
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
token_3(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_31', 'token_5', 'token_2'])
Phi
[i]Type for token

Name: token Function: balance
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_162
RETURN

Name: TMP_162 Function: balance
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_2, name: token

Name: token Function: balance
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
token_2(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
Phi
[i]Type for token

Name: token Function: balance
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_161 cleared
[i] TMP_162 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_2, name: token

Name: token Function: balance
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_2, name: token

Name: token Function: balance
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: token_3, name: token

Name: token Function: balance
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
TMP_161 = CONVERT this to address
Converting this
9
[i]Type for TMP_161

Name: TMP_161 Function: balance
Num: 
Den: 
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_162(uint256) = HIGH_LEVEL_CALL, dest:token_2(IERC20Upgradeable), function:balanceOf, arguments:['TMP_161']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20Upgradeable, balanceOf
Handling balance function!
-999
[i]Type for TMP_162

Name: TMP_162 Function: balance
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
token_3(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_31', 'token_5', 'token_2'])
Phi
[i]Type for token

Name: token Function: balance
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
RETURN TMP_162
RETURN

Name: TMP_162 Function: balance
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u
Source address: u
[i]Type for TMP_157

Name: TMP_157 Function: getPricePerFullShare
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_158(uint256) = TMP_157 (c)* ONE_ETH_3
lnorm: 6 rnorm: u
Source address: u
[i]Type for TMP_158

Name: TMP_158 Function: getPricePerFullShare
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_159(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_159

Name: TMP_159 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_160(uint256) = TMP_158 (c)/ TMP_159
lnorm: 6 rnorm: u
Source address: u
lnorm: 6 rnorm: u
-999
-1
[i]Type for TMP_160

Name: TMP_160 Function: getPricePerFullShare
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_160
RETURN

Name: TMP_160 Function: getPricePerFullShare
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance


ONE_ETH_1(uint256) := ϕ(['ONE_ETH_2', 'ONE_ETH_4', 'ONE_ETH_0'])
TMP_155(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
TMP_156(bool) = TMP_155 == 0
CONDITION TMP_156
RETURN ONE_ETH_2
TMP_157(uint256) = INTERNAL_CALL, StakedCitadel.balance()()
TMP_158(uint256) = TMP_157 (c)* ONE_ETH_3
TMP_159(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
TMP_160(uint256) = TMP_158 (c)/ TMP_159
RETURN TMP_160


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: ONE_ETH_1, name: ONE_ETH

Name: ONE_ETH Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
ONE_ETH_1(uint256) := ϕ(['ONE_ETH_2', 'ONE_ETH_4', 'ONE_ETH_0'])
Phi
[i]Type for ONE_ETH

Name: ONE_ETH Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_155 cleared
[i] TMP_156 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_155(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_155

Name: TMP_155 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_156(bool) = TMP_155 == 0
[i]Type for TMP_156

Name: TMP_156 Function: getPricePerFullShare
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: ONE_ETH_2, name: ONE_ETH

Name: ONE_ETH Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_ETH_2, name: ONE_ETH

Name: ONE_ETH Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN ONE_ETH_2
RETURN

Name: ONE_ETH Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_157 cleared
[i] TMP_158 cleared
[i] TMP_159 cleared
[i] TMP_160 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: ONE_ETH_3, name: ONE_ETH

Name: ONE_ETH Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: ONE_ETH_3, name: ONE_ETH

Name: ONE_ETH Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_157(uint256) = INTERNAL_CALL, StakedCitadel.balance()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_157

Name: TMP_157 Function: getPricePerFullShare
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_158(uint256) = TMP_157 (c)* ONE_ETH_3
lnorm: 6 rnorm: u
Source address: u
[i]Type for TMP_158

Name: TMP_158 Function: getPricePerFullShare
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_159(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_159

Name: TMP_159 Function: getPricePerFullShare
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_160(uint256) = TMP_158 (c)/ TMP_159
lnorm: 6 rnorm: u
Source address: u
lnorm: 6 rnorm: u
-999
-1
[i]Type for TMP_160

Name: TMP_160 Function: getPricePerFullShare
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_160
RETURN

Name: TMP_160 Function: getPricePerFullShare
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Reading Function: balance
Function balance not marked
Reading Function: available
Checking funcion...



available
Function name: available
New param cache []
FIND RETURN
ENTRY_POINT
available()


token_4(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
toEarnBps_2(uint256) := ϕ(['toEarnBps_1', 'toEarnBps_3', 'toEarnBps_4', 'toEarnBps_0'])
MAX_BPS_1(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
TMP_163 = CONVERT this to address
TMP_164(uint256) = HIGH_LEVEL_CALL, dest:token_4(IERC20Upgradeable), function:balanceOf, arguments:['TMP_163']  
token_5(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_4', 'token_41', 'token_31', 'token_5'])
toEarnBps_3(uint256) := ϕ(['toEarnBps_1', 'toEarnBps_2', 'toEarnBps_4', 'toEarnBps_3'])
MAX_BPS_2(uint256) := ϕ(['MAX_BPS_9', 'MAX_BPS_1', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
TMP_165(uint256) = TMP_164 (c)* toEarnBps_3
TMP_166(uint256) = TMP_165 (c)/ MAX_BPS_2
RETURN TMP_166


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_4, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token, Num: 4
Globalname: token, contract_name: StakedCitadel
global...

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
Ssa_name: toEarnBps_2, name: toEarnBps

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: toEarnBps, Num: 2
Globalname: toEarnBps, contract_name: StakedCitadel
global...

Name: toEarnBps Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MAX_BPS_1, name: MAX_BPS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_BPS, Num: 1
Globalname: MAX_BPS, contract_name: StakedCitadel
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
token_4(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
Phi
[i]Type for token

Name: token Function: available
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
toEarnBps_2(uint256) := ϕ(['toEarnBps_1', 'toEarnBps_3', 'toEarnBps_4', 'toEarnBps_0'])
Phi
[i]Type for toEarnBps

Name: toEarnBps Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
XXXX
MAX_BPS_1(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_163 cleared
[i] TMP_164 cleared
[i] TMP_165 cleared
[i] TMP_166 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_4, name: token

Name: token Function: available
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: toEarnBps_3, name: toEarnBps

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: toEarnBps, Num: 3
Globalname: toEarnBps, contract_name: StakedCitadel
global...

Name: toEarnBps Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MAX_BPS_2, name: MAX_BPS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_BPS, Num: 2
Globalname: MAX_BPS, contract_name: StakedCitadel
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: token_4, name: token

Name: token Function: available
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: toEarnBps_3, name: toEarnBps

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_2, name: MAX_BPS

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: token_5, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token, Num: 5
Globalname: token, contract_name: StakedCitadel
global...

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
Ssa_name: toEarnBps_3, name: toEarnBps

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_2, name: MAX_BPS

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_163 = CONVERT this to address
Converting this
9
[i]Type for TMP_163

Name: TMP_163 Function: available
Num: -1
Den: -1
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_164(uint256) = HIGH_LEVEL_CALL, dest:token_4(IERC20Upgradeable), function:balanceOf, arguments:['TMP_163']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20Upgradeable, balanceOf
Handling balance function!
-999
[i]Type for TMP_164

Name: TMP_164 Function: available
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
token_5(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_4', 'token_41', 'token_31', 'token_5'])
Phi
[i]Type for token

Name: token Function: available
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
toEarnBps_3(uint256) := ϕ(['toEarnBps_1', 'toEarnBps_2', 'toEarnBps_4', 'toEarnBps_3'])
Phi
[i]Type for toEarnBps

Name: toEarnBps Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
XXXX
MAX_BPS_2(uint256) := ϕ(['MAX_BPS_9', 'MAX_BPS_1', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_165(uint256) = TMP_164 (c)* toEarnBps_3
lnorm: 6 rnorm: u
Source address: u
[i]Type for TMP_165

Name: TMP_165 Function: available
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: 9500
Fields: 
Finance Type: raw balance
XXXX
TMP_166(uint256) = TMP_165 (c)/ MAX_BPS_2
lnorm: 6 rnorm: u
Source address: u
lnorm: 6 rnorm: u
-999
-1
[i]Type for TMP_166

Name: TMP_166 Function: available
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: 9500
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_166
RETURN

Name: TMP_166 Function: available
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: 9500
Fields: 
Finance Type: raw balance


token_4(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
toEarnBps_2(uint256) := ϕ(['toEarnBps_1', 'toEarnBps_3', 'toEarnBps_4', 'toEarnBps_0'])
MAX_BPS_1(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
TMP_163 = CONVERT this to address
TMP_164(uint256) = HIGH_LEVEL_CALL, dest:token_4(IERC20Upgradeable), function:balanceOf, arguments:['TMP_163']  
token_5(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_4', 'token_41', 'token_31', 'token_5'])
toEarnBps_3(uint256) := ϕ(['toEarnBps_1', 'toEarnBps_2', 'toEarnBps_4', 'toEarnBps_3'])
MAX_BPS_2(uint256) := ϕ(['MAX_BPS_9', 'MAX_BPS_1', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
TMP_165(uint256) = TMP_164 (c)* toEarnBps_3
TMP_166(uint256) = TMP_165 (c)/ MAX_BPS_2
RETURN TMP_166


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_4, name: token

Name: token Function: available
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: toEarnBps_2, name: toEarnBps

Name: toEarnBps Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_1, name: MAX_BPS

Name: MAX_BPS Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_4(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
Phi
[i]Type for token

Name: token Function: available
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
toEarnBps_2(uint256) := ϕ(['toEarnBps_1', 'toEarnBps_3', 'toEarnBps_4', 'toEarnBps_0'])
Phi
[i]Type for toEarnBps

Name: toEarnBps Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
XXXX
MAX_BPS_1(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_163 cleared
[i] TMP_164 cleared
[i] TMP_165 cleared
[i] TMP_166 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: token_4, name: token

Name: token Function: available
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: toEarnBps_3, name: toEarnBps

Name: toEarnBps Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_2, name: MAX_BPS

Name: MAX_BPS Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_4, name: token

Name: token Function: available
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: toEarnBps_3, name: toEarnBps

Name: toEarnBps Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_2, name: MAX_BPS

Name: MAX_BPS Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: token_5, name: token

Name: token Function: available
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: toEarnBps_3, name: toEarnBps

Name: toEarnBps Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_2, name: MAX_BPS

Name: MAX_BPS Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_163 = CONVERT this to address
Converting this
9
[i]Type for TMP_163

Name: TMP_163 Function: available
Num: 
Den: 
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_164(uint256) = HIGH_LEVEL_CALL, dest:token_4(IERC20Upgradeable), function:balanceOf, arguments:['TMP_163']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20Upgradeable, balanceOf
Handling balance function!
-999
[i]Type for TMP_164

Name: TMP_164 Function: available
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
token_5(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_4', 'token_41', 'token_31', 'token_5'])
Phi
[i]Type for token

Name: token Function: available
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
toEarnBps_3(uint256) := ϕ(['toEarnBps_1', 'toEarnBps_2', 'toEarnBps_4', 'toEarnBps_3'])
Phi
[i]Type for toEarnBps

Name: toEarnBps Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
XXXX
MAX_BPS_2(uint256) := ϕ(['MAX_BPS_9', 'MAX_BPS_1', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: available
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_165(uint256) = TMP_164 (c)* toEarnBps_3
lnorm: 6 rnorm: u
Source address: u
[i]Type for TMP_165

Name: TMP_165 Function: available
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: 9500
Fields: 
Finance Type: raw balance
XXXX
TMP_166(uint256) = TMP_165 (c)/ MAX_BPS_2
lnorm: 6 rnorm: u
Source address: u
lnorm: 6 rnorm: u
-999
-1
[i]Type for TMP_166

Name: TMP_166 Function: available
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: 9500
Fields: 
Finance Type: raw balance
XXXX
RETURN TMP_166
RETURN

Name: TMP_166 Function: available
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: 9500
Fields: 
Finance Type: raw balance
Source address: u
Reading Function: deposit
Function deposit not marked
Reading Function: deposit
Function deposit not marked
Reading Function: depositAll
Function depositAll not marked
Reading Function: depositAll
Function depositAll not marked
Reading Function: depositFor
Function depositFor not marked
Reading Function: depositFor
Function depositFor not marked
Reading Function: withdraw
Function withdraw not marked
Reading Function: withdrawAll
Function withdrawAll not marked
Reading Function: reportHarvest
Checking funcion...



reportHarvest
Function name: reportHarvest
Finding type for _harvestedAmount(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
reportHarvest(uint256)


token_14(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
lifeTimeEarned_1(uint256) := ϕ(['lifeTimeEarned_6', 'lifeTimeEarned_0'])
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
INTERNAL_CALL, StakedCitadel._onlyStrategy()()
harvestTime_1(uint256) := block.timestamp(uint256)
TMP_193(uint256) = INTERNAL_CALL, StakedCitadel.balance()()
token_17(IERC20Upgradeable) := ϕ(['token_3'])
TMP_194(uint256) = TMP_193 (c)- _harvestedAmount_1
assetsAtHarvest_1(uint256) := TMP_194(uint256)
INTERNAL_CALL, StakedCitadel._handleFees(uint256,uint256)(_harvestedAmount_1,harvestTime_1)
lastHarvestAmount_1(uint256) := _harvestedAmount_1(uint256)
TMP_196(bool) = assetsAtHarvest_1 != 0
CONDITION TMP_196
TMP_197(bool) = _harvestedAmount_1 == 0
CONDITION TMP_197
assetsAtLastHarvest_2(uint256) := assetsAtHarvest_1(uint256)
assetsAtLastHarvest_1(uint256) := 0(uint256)
TMP_198(uint256) = lifeTimeEarned_5 (c)+ _harvestedAmount_1
lifeTimeEarned_6(uint256) := TMP_198(uint256)
lastHarvestedAt_2(uint256) := harvestTime_1(uint256)
TMP_199 = CONVERT token_18 to address
Emit Harvested(TMP_199,_harvestedAmount_1,block.number,block.timestamp)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_14, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token, Num: 14
Globalname: token, contract_name: StakedCitadel
global...

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
Ssa_name: lifeTimeEarned_1, name: lifeTimeEarned

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lifeTimeEarned, Num: 1
Globalname: lifeTimeEarned, contract_name: StakedCitadel
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
token_14(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
Phi
[i]Type for token

Name: token Function: reportHarvest
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
lifeTimeEarned_1(uint256) := ϕ(['lifeTimeEarned_6', 'lifeTimeEarned_0'])
Phi
[i]Type for lifeTimeEarned

Name: lifeTimeEarned Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
New param cache []
FIND RETURN
ENTRY_POINT
nonReentrant()
Propogating All
Propogating All
Propogating All
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _NOT_ENTERED_3, name: _NOT_ENTERED

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _NOT_ENTERED, Num: 3
Globalname: _NOT_ENTERED, contract_name: StakedCitadel
global...

Name: PIC_14 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _ENTERED_1, name: _ENTERED

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _ENTERED, Num: 1
Globalname: _ENTERED, contract_name: StakedCitadel
global...

Name: PIC_13 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _status_2, name: _status

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _status, Num: 2
Globalname: _status, contract_name: StakedCitadel
global...

Name: _status Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_NOT_ENTERED_3(uint256) := ϕ(['_NOT_ENTERED_0', '_NOT_ENTERED_2'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
Phi
[i]Type for _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_status_2(uint256) := ϕ(['_status_0', '_status_1', '_status_4'])
Phi
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_407 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_2, name: _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_2, name: _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_407(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_407

Name: TMP_407 Function: nonReentrant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_408(None) = SOLIDITY_CALL require(bool,string)(TMP_407,ReentrancyGuard: reentrant call)
[i]Type for TMP_408

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_3, name: _status

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _status, Num: 3
Globalname: _status, contract_name: StakedCitadel
global...

Name: _status Function: __ReentrancyGuard_init_unchained
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_status_3(uint256) := _ENTERED_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _NOT_ENTERED_3, name: _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _NOT_ENTERED_3, name: _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_4, name: _status

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _status, Num: 4
Globalname: _status, contract_name: StakedCitadel
global...

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_status_4(uint256) := _NOT_ENTERED_3(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _NOT_ENTERED_3, name: _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_2, name: _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_NOT_ENTERED_3(uint256) := ϕ(['_NOT_ENTERED_0', '_NOT_ENTERED_2'])
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
Phi
[i]Type for _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_status_2(uint256) := ϕ(['_status_0', '_status_1', '_status_4'])
Phi
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_407 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_2, name: _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_2, name: _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_407(bool) = _status_2 != _ENTERED_1
[i]Type for TMP_407

Name: TMP_407 Function: nonReentrant
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_408(None) = SOLIDITY_CALL require(bool,string)(TMP_407,ReentrancyGuard: reentrant call)
[i]Type for TMP_408

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _ENTERED_1, name: _ENTERED

Name: _ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_3, name: _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_status_3(uint256) := _ENTERED_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _NOT_ENTERED_3, name: _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _NOT_ENTERED_3, name: _NOT_ENTERED

Name: _NOT_ENTERED Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _status_4, name: _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
_status_4(uint256) := _NOT_ENTERED_3(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, StakedCitadel._onlyStrategy()()
New param cache []
FIND RETURN
ENTRY_POINT
_onlyStrategy()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: strategy_1, name: strategy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategy, Num: 1
Globalname: strategy, contract_name: StakedCitadel
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Source address: 6
strategy_1(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_0', 'strategy_9', 'strategy_26', 'strategy_15', 'strategy_25'])
Phi
[i]Type for strategy

Name: strategy Function: _onlyStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_153 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: strategy_1, name: strategy

Name: strategy Function: _onlyStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategy_1, name: strategy

Name: strategy Function: _onlyStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_153(bool) = msg.sender == strategy_1
[i]Type for TMP_153

Name: TMP_153 Function: _onlyStrategy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_154(None) = SOLIDITY_CALL require(bool,string)(TMP_153,onlyStrategy)
[i]Type for TMP_154

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: strategy_1, name: strategy

Name: strategy Function: _onlyStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
strategy_1(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_0', 'strategy_9', 'strategy_26', 'strategy_15', 'strategy_25'])
Phi
[i]Type for strategy

Name: strategy Function: _onlyStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_153 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: strategy_1, name: strategy

Name: strategy Function: _onlyStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategy_1, name: strategy

Name: strategy Function: _onlyStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_153(bool) = msg.sender == strategy_1
[i]Type for TMP_153

Name: TMP_153 Function: _onlyStrategy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_154(None) = SOLIDITY_CALL require(bool,string)(TMP_153,onlyStrategy)
[i]Type for TMP_154

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] harvestTime cleared
Propogating parameters and globals to SSA variables...
Ssa_name: harvestTime_1, name: harvestTime

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
End popogation
harvestTime_1(uint256) := block.timestamp(uint256)
asgn
[i]Type for harvestTime

Name: harvestTime Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_193 cleared
[i] TMP_194 cleared
[i] assetsAtHarvest cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: assetsAtHarvest_1, name: assetsAtHarvest

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetsAtHarvest, Num: 1
Globalname: assetsAtHarvest, contract_name: StakedCitadel
End popogation
Ssa_name: token_17, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token, Num: 17
Globalname: token, contract_name: StakedCitadel
global...

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
TMP_193(uint256) = INTERNAL_CALL, StakedCitadel.balance()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_193

Name: TMP_193 Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
token_17(IERC20Upgradeable) := ϕ(['token_3'])
Phi
[i]Type for token

Name: token Function: reportHarvest
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_194(uint256) = TMP_193 (c)- _harvestedAmount_1
Source address: u
[i]Type for TMP_194

Name: TMP_194 Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetsAtHarvest_1(uint256) := TMP_194(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for assetsAtHarvest

Name: assetsAtHarvest Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
End popogation
INTERNAL_CALL, StakedCitadel._handleFees(uint256,uint256)(_harvestedAmount_1,harvestTime_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _harvestedAmount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: harvestTime Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_handleFees(uint256,uint256)
Propogating All
Propogating All
Propogating All
Propogating All
_harvestedAmount_1
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
harvestTime_1
Ssa_name: harvestTime_1, name: harvestTime

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: harvestTime_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
_harvestedAmount_1
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
duration_1
Ssa_name: duration_1, name: duration

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
feeGovernance_1
Ssa_name: feeGovernance_1, name: feeGovernance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
management_fee_3
Ssa_name: management_fee_3, name: management_fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
feeStrategist_1
Ssa_name: feeStrategist_1, name: feeStrategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalGovernanceFee_1
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
totalGovernanceFee_1
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
feeStrategist_1
Ssa_name: feeStrategist_1, name: feeStrategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_pool_1
Ssa_name: _pool_1, name: _pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalGovernanceFee_1
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
Propogating All
_pool_1
Ssa_name: _pool_1, name: _pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
totalGovernanceFee_1
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
feeStrategist_1
Ssa_name: feeStrategist_1, name: feeStrategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] _harvestedAmount cleared
[i] harvestTime cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: harvestTime_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
Ssa_name: strategist_10, name: strategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategist, Num: 10
Globalname: strategist, contract_name: StakedCitadel
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1
Ssa_name: treasury_21, name: treasury

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: treasury, Num: 21
Globalname: treasury, contract_name: StakedCitadel
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: lastHarvestedAt_3, name: lastHarvestedAt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastHarvestedAt, Num: 3
Globalname: lastHarvestedAt, contract_name: StakedCitadel
global...

Name: lastHarvestedAt Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: managementFee_3, name: managementFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: managementFee, Num: 3
Globalname: managementFee, contract_name: StakedCitadel
global...

Name: managementFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MAX_BPS_7, name: MAX_BPS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_BPS, Num: 7
Globalname: MAX_BPS, contract_name: StakedCitadel
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: SECS_PER_YEAR_1, name: SECS_PER_YEAR

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: SECS_PER_YEAR, Num: 1
Globalname: SECS_PER_YEAR, contract_name: StakedCitadel
global...

Name: PIC_24 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_harvestedAmount_1(uint256) := ϕ(['_harvestedAmount_1'])
Phi

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for _harvestedAmount

Name: _harvestedAmount Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
harvestTime_1(uint256) := ϕ(['harvestTime_1'])
Phi

Name: harvestTime Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for harvestTime

Name: harvestTime Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
strategist_10(address) := ϕ(['strategist_14', 'strategist_15', 'strategist_3', 'strategist_13', 'strategist_0', 'strategist_9', 'strategist_2'])
Phi
[i]Type for strategist

Name: strategist Function: _handleFees
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
treasury_21(address) := ϕ(['treasury_0', 'treasury_18', 'treasury_7', 'treasury_1', 'treasury_24', 'treasury_25', 'treasury_8', 'treasury_20'])
Phi
[i]Type for treasury

Name: treasury Function: _handleFees
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
lastHarvestedAt_3(uint256) := ϕ(['lastHarvestedAt_2', 'lastHarvestedAt_1', 'lastHarvestedAt_0', 'lastHarvestedAt_4'])
Phi
[i]Type for lastHarvestedAt

Name: lastHarvestedAt Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
managementFee_3(uint256) := ϕ(['managementFee_2', 'managementFee_1', 'managementFee_4', 'managementFee_5', 'managementFee_0'])
Phi
[i]Type for managementFee

Name: managementFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_BPS_7(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
SECS_PER_YEAR_1(uint256) := ϕ(['SECS_PER_YEAR_0', 'SECS_PER_YEAR_2', 'SECS_PER_YEAR_3'])
Phi
[i]Type for SECS_PER_YEAR

Name: SECS_PER_YEAR Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] feeGovernance cleared
[i] feeStrategist cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: feeGovernance_1, name: feeGovernance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeGovernance, Num: 1
Globalname: feeGovernance, contract_name: StakedCitadel
Ssa_name: feeStrategist_1, name: feeStrategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
End popogation
TUPLE_0(uint256,uint256) = INTERNAL_CALL, StakedCitadel._calculatePerformanceFee(uint256)(_harvestedAmount_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_calculatePerformanceFee(uint256)
Propogating All
Propogating All
_amount_1
Ssa_name: _amount_1, name: _amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
_amount_1
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
governancePerformanceFee_1
Ssa_name: governancePerformanceFee_1, name: governancePerformanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
strategistPerformanceFee_1
Ssa_name: strategistPerformanceFee_1, name: strategistPerformanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] _amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: performanceFeeGovernance_8, name: performanceFeeGovernance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: performanceFeeGovernance, Num: 8
Globalname: performanceFeeGovernance, contract_name: StakedCitadel
global...

Name: performanceFeeGovernance Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: performanceFeeStrategist_9, name: performanceFeeStrategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: performanceFeeStrategist, Num: 9
Globalname: performanceFeeStrategist, contract_name: StakedCitadel
global...

Name: performanceFeeStrategist Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
_amount_1(uint256) := ϕ(['_harvestedAmount_1'])
Phi

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for _amount

Name: _amount Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
performanceFeeGovernance_8(uint256) := ϕ(['performanceFeeGovernance_0', 'performanceFeeGovernance_6', 'performanceFeeGovernance_1', 'performanceFeeGovernance_9', 'performanceFeeGovernance_7'])
Phi
[i]Type for performanceFeeGovernance

Name: performanceFeeGovernance Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
performanceFeeStrategist_9(uint256) := ϕ(['performanceFeeStrategist_11', 'performanceFeeStrategist_1', 'performanceFeeStrategist_7', 'performanceFeeStrategist_8', 'performanceFeeStrategist_0'])
Phi
[i]Type for performanceFeeStrategist

Name: performanceFeeStrategist Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_379 cleared
[i] governancePerformanceFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: performanceFeeGovernance_8, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeGovernance_8, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: governancePerformanceFee_1, name: governancePerformanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: governancePerformanceFee, Num: 1
Globalname: governancePerformanceFee, contract_name: StakedCitadel
End popogation
TMP_379(uint256) = INTERNAL_CALL, StakedCitadel._calculateFee(uint256,uint256)(_amount_1,performanceFeeGovernance_8)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
[[], [], 'u', None, [], -1, 'u', 'u']

Name: amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: feeBps Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_calculateFee(uint256,uint256)
Propogating All
Propogating All
feeBps_1
Ssa_name: feeBps_1, name: feeBps

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
feeBps_1
Ssa_name: feeBps_1, name: feeBps

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
fee_1
Ssa_name: fee_1, name: fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amount cleared
[i] feeBps cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: StakedCitadel
Ssa_name: feeBps_1, name: feeBps

Name: feeBps_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_BPS, Num: 6
Globalname: MAX_BPS, contract_name: StakedCitadel
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
amount_1(uint256) := ϕ(['_amount_1', 'r_3', 'tokenBalance_1'])
Phi

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
feeBps_1(uint256) := ϕ(['withdrawalFee_10', 'performanceFeeStrategist_10', 'performanceFeeGovernance_8', 'performanceFeeGovernance_5', 'performanceFeeStrategist_6'])
Phi
[i]Type for feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_BPS_6(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_376 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_376(bool) = feeBps_1 == 0
[i]Type for TMP_376

Name: TMP_376 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_377 cleared
[i] TMP_378 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: StakedCitadel
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: StakedCitadel
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: StakedCitadel
End popogation
TMP_377(uint256) = amount_1 (c)* feeBps_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_377

Name: TMP_377 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_378(uint256) = TMP_377 (c)/ MAX_BPS_6
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_378

Name: TMP_378 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_378(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN fee_1
RETURN

Name: fee Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amount cleared
[i] feeBps cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: StakedCitadel
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_amount_1', 'r_3', 'tokenBalance_1'])
Phi

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for amount

Name: amount Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
feeBps_1(uint256) := ϕ(['withdrawalFee_10', 'performanceFeeStrategist_10', 'performanceFeeGovernance_8', 'performanceFeeGovernance_5', 'performanceFeeStrategist_6'])
Phi
[i]Type for feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_BPS_6(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_376 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_376(bool) = feeBps_1 == 0
[i]Type for TMP_376

Name: TMP_376 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_377 cleared
[i] TMP_378 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: StakedCitadel
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: amount, Num: 1
Globalname: amount, contract_name: StakedCitadel
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: StakedCitadel
End popogation
TMP_377(uint256) = amount_1 (c)* feeBps_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_377

Name: TMP_377 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_378(uint256) = TMP_377 (c)/ MAX_BPS_6
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_378

Name: TMP_378 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
fee_1(uint256) := TMP_378(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for fee

Name: fee Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
RETURN fee_1
RETURN

Name: fee Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_379

Name: TMP_379 Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
governancePerformanceFee_1(uint256) := TMP_379(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for governancePerformanceFee

Name: governancePerformanceFee Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_380 cleared
[i] strategistPerformanceFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: performanceFeeStrategist_10, name: performanceFeeStrategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: performanceFeeStrategist, Num: 10
Globalname: performanceFeeStrategist, contract_name: StakedCitadel
global...

Name: performanceFeeStrategist Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: performanceFeeStrategist_10, name: performanceFeeStrategist

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: strategistPerformanceFee_1, name: strategistPerformanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategistPerformanceFee, Num: 1
Globalname: strategistPerformanceFee, contract_name: StakedCitadel
End popogation
TMP_380(uint256) = INTERNAL_CALL, StakedCitadel._calculateFee(uint256,uint256)(_amount_1,performanceFeeStrategist_10)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_380

Name: TMP_380 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
strategistPerformanceFee_1(uint256) := TMP_380(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for strategistPerformanceFee

Name: strategistPerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: governancePerformanceFee_1, name: governancePerformanceFee

Name: governancePerformanceFee Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategistPerformanceFee_1, name: strategistPerformanceFee

Name: strategistPerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategistPerformanceFee, Num: 1
Globalname: strategistPerformanceFee, contract_name: StakedCitadel
Ssa_name: governancePerformanceFee_1, name: governancePerformanceFee

Name: governancePerformanceFee Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategistPerformanceFee_1, name: strategistPerformanceFee

Name: strategistPerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategistPerformanceFee, Num: 1
Globalname: strategistPerformanceFee, contract_name: StakedCitadel
End popogation
RETURN governancePerformanceFee_1,strategistPerformanceFee_1
RETURN

Name: governancePerformanceFee Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef

Name: strategistPerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] _amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: performanceFeeGovernance_8, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeStrategist_9, name: performanceFeeStrategist

Name: performanceFeeStrategist Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_amount_1(uint256) := ϕ(['_harvestedAmount_1'])
Phi

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for _amount

Name: _amount Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
performanceFeeGovernance_8(uint256) := ϕ(['performanceFeeGovernance_0', 'performanceFeeGovernance_6', 'performanceFeeGovernance_1', 'performanceFeeGovernance_9', 'performanceFeeGovernance_7'])
Phi
[i]Type for performanceFeeGovernance

Name: performanceFeeGovernance Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
performanceFeeStrategist_9(uint256) := ϕ(['performanceFeeStrategist_11', 'performanceFeeStrategist_1', 'performanceFeeStrategist_7', 'performanceFeeStrategist_8', 'performanceFeeStrategist_0'])
Phi
[i]Type for performanceFeeStrategist

Name: performanceFeeStrategist Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_379 cleared
[i] governancePerformanceFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: performanceFeeGovernance_8, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeGovernance_8, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: _calculatePerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: governancePerformanceFee_1, name: governancePerformanceFee

Name: governancePerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: governancePerformanceFee, Num: 1
Globalname: governancePerformanceFee, contract_name: StakedCitadel
End popogation
TMP_379(uint256) = INTERNAL_CALL, StakedCitadel._calculateFee(uint256,uint256)(_amount_1,performanceFeeGovernance_8)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_379

Name: TMP_379 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
governancePerformanceFee_1(uint256) := TMP_379(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for governancePerformanceFee

Name: governancePerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_380 cleared
[i] strategistPerformanceFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: performanceFeeStrategist_10, name: performanceFeeStrategist

Name: performanceFeeStrategist Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeStrategist_10, name: performanceFeeStrategist

Name: performanceFeeStrategist Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: strategistPerformanceFee_1, name: strategistPerformanceFee

Name: strategistPerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategistPerformanceFee, Num: 1
Globalname: strategistPerformanceFee, contract_name: StakedCitadel
End popogation
TMP_380(uint256) = INTERNAL_CALL, StakedCitadel._calculateFee(uint256,uint256)(_amount_1,performanceFeeStrategist_10)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[i]Type for TMP_380

Name: TMP_380 Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
strategistPerformanceFee_1(uint256) := TMP_380(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for strategistPerformanceFee

Name: strategistPerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: governancePerformanceFee_1, name: governancePerformanceFee

Name: governancePerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: governancePerformanceFee, Num: 1
Globalname: governancePerformanceFee, contract_name: StakedCitadel
Ssa_name: strategistPerformanceFee_1, name: strategistPerformanceFee

Name: strategistPerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategistPerformanceFee, Num: 1
Globalname: strategistPerformanceFee, contract_name: StakedCitadel
Ssa_name: governancePerformanceFee_1, name: governancePerformanceFee

Name: governancePerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: governancePerformanceFee, Num: 1
Globalname: governancePerformanceFee, contract_name: StakedCitadel
Ssa_name: strategistPerformanceFee_1, name: strategistPerformanceFee

Name: strategistPerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategistPerformanceFee, Num: 1
Globalname: strategistPerformanceFee, contract_name: StakedCitadel
End popogation
RETURN governancePerformanceFee_1,strategistPerformanceFee_1
RETURN

Name: governancePerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: strategistPerformanceFee Function: _calculatePerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i]Type for TUPLE_0

Name: TUPLE_0 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
feeGovernance_1(uint256)= UNPACK TUPLE_0 index: 0 
([], [], 'u', 'u', 'u', -1)
[i]Type for feeGovernance

Name: feeGovernance Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
feeStrategist_1(uint256)= UNPACK TUPLE_0 index: 1 
([], [], 'u', 'u', 'u', -1)
[i]Type for feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_387 cleared
[i] duration cleared
Propogating parameters and globals to SSA variables...
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: harvestTime_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
Ssa_name: lastHarvestedAt_4, name: lastHarvestedAt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastHarvestedAt, Num: 4
Globalname: lastHarvestedAt, contract_name: StakedCitadel
global...

Name: lastHarvestedAt Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: harvestTime_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
Ssa_name: lastHarvestedAt_4, name: lastHarvestedAt

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: duration_1, name: duration

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: duration, Num: 1
Globalname: duration, contract_name: StakedCitadel
End popogation
TMP_387(uint256) = harvestTime_1 (c)- lastHarvestedAt_4
Source address: u
[i]Type for TMP_387

Name: TMP_387 Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
duration_1(uint256) := TMP_387(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for duration

Name: duration Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_400 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: managementFee_4, name: managementFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: managementFee, Num: 4
Globalname: managementFee, contract_name: StakedCitadel
global...

Name: managementFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: managementFee_4, name: managementFee

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_400(bool) = managementFee_4 > 0
lnorm: u rnorm: 0
[i]Type for TMP_400

Name: TMP_400 Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] management_fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: management_fee_1, name: management_fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: management_fee, Num: 1
Globalname: management_fee, contract_name: StakedCitadel
End popogation
management_fee_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for management_fee

Name: management_fee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_401 cleared
[i] TMP_402 cleared
[i] TMP_403 cleared
[i] TMP_404 cleared
[i] TMP_405 cleared
[i] TMP_406 cleared
[i] management_fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: duration_1, name: duration

Name: duration Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_9, name: MAX_BPS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_BPS, Num: 9
Globalname: MAX_BPS, contract_name: StakedCitadel
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: managementFee_5, name: managementFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: managementFee, Num: 5
Globalname: managementFee, contract_name: StakedCitadel
global...

Name: managementFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: SECS_PER_YEAR_3, name: SECS_PER_YEAR

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: SECS_PER_YEAR, Num: 3
Globalname: SECS_PER_YEAR, contract_name: StakedCitadel
global...

Name: PIC_24 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MAX_BPS_9, name: MAX_BPS

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: duration_1, name: duration

Name: duration Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: managementFee_5, name: managementFee

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: SECS_PER_YEAR_3, name: SECS_PER_YEAR

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: management_fee_2, name: management_fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: management_fee, Num: 2
Globalname: management_fee, contract_name: StakedCitadel
End popogation
TMP_401(uint256) = INTERNAL_CALL, StakedCitadel.balance()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_401

Name: TMP_401 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_402(uint256) = TMP_401 (c)- _harvestedAmount_1
Source address: u
[i]Type for TMP_402

Name: TMP_402 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_403(uint256) = managementFee_5 (c)* TMP_402
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_403

Name: TMP_403 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_404(uint256) = TMP_403 (c)* duration_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_404

Name: TMP_404 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_405(uint256) = TMP_404 (c)/ SECS_PER_YEAR_3
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
-999
-1
[i]Type for TMP_405

Name: TMP_405 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_406(uint256) = TMP_405 (c)/ MAX_BPS_9
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
-999
-1
[i]Type for TMP_406

Name: TMP_406 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
management_fee_2(uint256) := TMP_406(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for management_fee

Name: management_fee Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] management_fee cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: management_fee_3, name: management_fee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: management_fee, Num: 3
Globalname: management_fee, contract_name: StakedCitadel
management_fee_3(uint256) := ϕ(['management_fee_1', 'management_fee_2'])
Phi

Name: management_fee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: management_fee Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance


END==================================
Source address: u
[i]Type for management_fee

Name: management_fee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_388 cleared
[i] totalGovernanceFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeGovernance_1, name: feeGovernance

Name: feeGovernance Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeGovernance, Num: 1
Globalname: feeGovernance, contract_name: StakedCitadel
Ssa_name: management_fee_3, name: management_fee

Name: management_fee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: feeGovernance_1, name: feeGovernance

Name: feeGovernance Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeGovernance, Num: 1
Globalname: feeGovernance, contract_name: StakedCitadel
Ssa_name: management_fee_3, name: management_fee

Name: management_fee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: totalGovernanceFee, Num: 1
Globalname: totalGovernanceFee, contract_name: StakedCitadel
End popogation
TMP_388(uint256) = feeGovernance_1 (c)+ management_fee_3
Source address: u
[i]Type for TMP_388

Name: TMP_388 Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
totalGovernanceFee_1(uint256) := TMP_388(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_389 cleared
[i] TMP_390 cleared
[i] TMP_391 cleared
[i] _pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeStrategist_1, name: feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: feeStrategist_1, name: feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _pool, Num: 1
Globalname: _pool, contract_name: StakedCitadel
End popogation
TMP_389(uint256) = INTERNAL_CALL, StakedCitadel.balance()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_389

Name: TMP_389 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_390(uint256) = TMP_389 (c)- totalGovernanceFee_1
Source address: u
[i]Type for TMP_390

Name: TMP_390 Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
TMP_391(uint256) = TMP_390 (c)- feeStrategist_1
Source address: u
[i]Type for TMP_391

Name: TMP_391 Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
_pool_1(uint256) := TMP_391(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for _pool

Name: _pool Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_392 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_392(bool) = totalGovernanceFee_1 != 0
[i]Type for TMP_392

Name: TMP_392 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_394 cleared
[i] TMP_395 cleared
[i] TMP_396 cleared
[i] TMP_397 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeStrategist_1, name: feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
Ssa_name: strategist_14, name: strategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategist, Num: 14
Globalname: strategist, contract_name: StakedCitadel
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1
Ssa_name: strategist_14, name: strategist

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: feeStrategist_1, name: feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
End popogation
TMP_394(bool) = feeStrategist_1 != 0
[i]Type for TMP_394

Name: TMP_394 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_395 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_395

Name: TMP_395 Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_396(bool) = strategist_14 != TMP_395
[i]Type for TMP_396

Name: TMP_396 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_397(bool) = TMP_394 && TMP_396
[i]Type for TMP_397

Name: TMP_397 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: treasury_24, name: treasury

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: treasury, Num: 24
Globalname: treasury, contract_name: StakedCitadel
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: treasury_24, name: treasury

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, StakedCitadel._mintSharesFor(address,uint256,uint256)(treasury_24,totalGovernanceFee_1,_pool_1)
New param cache [[[-1], [-1], 0, 'treasury', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0], [[-1], [-1], 'u', None, [], 0, 'u', 0]]
[[-1], [-1], 0, 'treasury', [], -1, 2, 'u']

Name: recipient Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: _amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 0]

Name: _pool Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
_mintSharesFor(address,uint256,uint256)
Propogating All
Propogating All
Propogating All
Propogating All
_amount_1
Ssa_name: _amount_1, name: _amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
_pool_1
Ssa_name: _pool_1, name: _pool

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
Propogating All
recipient_1
Ssa_name: recipient_1, name: recipient

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: recipient_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
shares_3
Ssa_name: shares_3, name: shares

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Propogating All
_amount_1
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
[i] recipient cleared
[i] _amount cleared
[i] _pool cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: recipient_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _pool_1, name: _pool

Name: _pool_1 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
recipient_1(address) := ϕ(['_recipient_1', 'treasury_24', 'treasury_19', 'strategist_14'])
Phi
[i]Type for recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_338', 'feeStrategist_1', 'totalGovernanceFee_1', '_fee_1'])
Phi
[i]Type for _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_pool_1(uint256) := ϕ(['_pool_1', '_pool_1', 'TMP_373', 'TMP_398'])
Phi
[i]Type for _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_381 cleared
[i] TMP_382 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_381(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_381

Name: TMP_381 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_382(bool) = TMP_381 == 0
[i]Type for TMP_382

Name: TMP_382 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_383 cleared
[i] TMP_384 cleared
[i] TMP_385 cleared
[i] shares cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: shares_1, name: shares

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: shares, Num: 1
Globalname: shares, contract_name: StakedCitadel
End popogation
TMP_383(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_383

Name: TMP_383 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_384(uint256) = _amount_1 (c)* TMP_383
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_384

Name: TMP_384 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_385(uint256) = TMP_384 (c)/ _pool_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_385

Name: TMP_385 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
shares_1(uint256) := TMP_385(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
[i] shares cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: shares_3, name: shares

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: shares, Num: 3
Globalname: shares, contract_name: StakedCitadel
shares_3(uint256) := ϕ(['shares_2', 'shares_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance


END==================================
Source address: u
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
End popogation
INTERNAL_CALL, ERC20Upgradeable._mint(address,uint256)(recipient_1,shares_3)
New param cache [[[-1], [-1], 0, 'treasury', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 0]]
[[-1], [-1], 0, 'treasury', [], -1, 2, 'u']

Name: account Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
_mint(address,uint256)
Propogating All
Propogating All
account_1
Ssa_name: account_1, name: account

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
[i] account cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: _balances_6, name: _balances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 6
Globalname: _balances, contract_name: StakedCitadel
global...

Name: PIC_32 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _totalSupply_2, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 2
Globalname: _totalSupply, contract_name: StakedCitadel
global...

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
account_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['shares_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_0', '_balances_1', '_balances_11', '_balances_5', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] TMP_61 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(bool) = account_1 != TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(None) = SOLIDITY_CALL require(bool,string)(TMP_61,ERC20: mint to the zero address)
[i]Type for TMP_62

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
End popogation
TMP_63 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._beforeTokenTransfer(address,address,uint256)(TMP_63,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 0]]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'treasury', [], -1, 2, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _totalSupply_3, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 3
Globalname: _totalSupply, contract_name: StakedCitadel
global...

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _totalSupply_3, name: _totalSupply

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _totalSupply, Num: 4
Globalname: _totalSupply, contract_name: StakedCitadel
global...

Name: PIC_33 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
Source address: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _balances_8, name: _balances

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: _balances, Num: 8
Globalname: _balances, contract_name: StakedCitadel
global...

Name: PIC_32 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _balances_8, name: _balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _balances_8, name: _balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_11

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(-> _balances_8) = REF_11 (c)+ amount_1
Source address: u
[i]Type for REF_11

Name: REF_11 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
[i] TMP_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
End popogation
TMP_65 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._afterTokenTransfer(address,address,uint256)(TMP_67,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 0]]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'treasury', [], -1, 2, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
[i] account cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['shares_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_0', '_balances_1', '_balances_11', '_balances_5', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] TMP_61 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(bool) = account_1 != TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(None) = SOLIDITY_CALL require(bool,string)(TMP_61,ERC20: mint to the zero address)
[i]Type for TMP_62

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
End popogation
TMP_63 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._beforeTokenTransfer(address,address,uint256)(TMP_63,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
Source address: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_11

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(-> _balances_8) = REF_11 (c)+ amount_1
Finance type key: (0, 0)
Source address: u
[i]Type for REF_11

Name: REF_11 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
[i] TMP_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
End popogation
TMP_65 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._afterTokenTransfer(address,address,uint256)(TMP_67,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[i] shares cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: shares_2, name: shares

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: shares, Num: 2
Globalname: shares, contract_name: StakedCitadel
End popogation
shares_2(uint256) := _amount_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] recipient cleared
[i] _amount cleared
[i] _pool cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: recipient_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
recipient_1(address) := ϕ(['_recipient_1', 'treasury_24', 'treasury_19', 'strategist_14'])
Phi
[i]Type for recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_338', 'feeStrategist_1', 'totalGovernanceFee_1', '_fee_1'])
Phi
[i]Type for _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_pool_1(uint256) := ϕ(['_pool_1', '_pool_1', 'TMP_373', 'TMP_398'])
Phi
[i]Type for _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_381 cleared
[i] TMP_382 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_381(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_381

Name: TMP_381 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_382(bool) = TMP_381 == 0
[i]Type for TMP_382

Name: TMP_382 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_383 cleared
[i] TMP_384 cleared
[i] TMP_385 cleared
[i] shares cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: shares_1, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 1
Globalname: shares, contract_name: StakedCitadel
End popogation
TMP_383(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_383

Name: TMP_383 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_384(uint256) = _amount_1 (c)* TMP_383
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_384

Name: TMP_384 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_385(uint256) = TMP_384 (c)/ _pool_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_385

Name: TMP_385 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
shares_1(uint256) := TMP_385(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
[i] shares cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 3
Globalname: shares, contract_name: StakedCitadel
shares_3(uint256) := ϕ(['shares_2', 'shares_1'])
Phi

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance


END==================================
Source address: u
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20Upgradeable._mint(address,uint256)(recipient_1,shares_3)
New param cache [[[-1], [-1], 0, 'treasury', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, 'treasury', [], -1, 2, 'u']

Name: account Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_mint(address,uint256)
Propogating All
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
[i] account cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['shares_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_0', '_balances_1', '_balances_11', '_balances_5', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] TMP_61 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(bool) = account_1 != TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(None) = SOLIDITY_CALL require(bool,string)(TMP_61,ERC20: mint to the zero address)
[i]Type for TMP_62

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_63 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._beforeTokenTransfer(address,address,uint256)(TMP_63,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'treasury', [], -1, 2, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
Source address: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_11

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(-> _balances_8) = REF_11 (c)+ amount_1
Source address: u
[i]Type for REF_11

Name: REF_11 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
[i] TMP_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_65 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._afterTokenTransfer(address,address,uint256)(TMP_67,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'treasury', [], -1, 2, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] account cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['shares_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_0', '_balances_1', '_balances_11', '_balances_5', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] TMP_61 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(bool) = account_1 != TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(None) = SOLIDITY_CALL require(bool,string)(TMP_61,ERC20: mint to the zero address)
[i]Type for TMP_62

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_63 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._beforeTokenTransfer(address,address,uint256)(TMP_63,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'treasury', [], -1, 2, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
Source address: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_11

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(-> _balances_8) = REF_11 (c)+ amount_1
Source address: u
[i]Type for REF_11

Name: REF_11 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
[i] TMP_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_65 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._afterTokenTransfer(address,address,uint256)(TMP_67,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'treasury', [], -1, 2, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] shares cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: shares_2, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 2
Globalname: shares, contract_name: StakedCitadel
End popogation
shares_2(uint256) := _amount_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_398 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: feeStrategist_1, name: feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
Ssa_name: strategist_14, name: strategist

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategist_14, name: strategist

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: feeStrategist_1, name: feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
End popogation
TMP_398(uint256) = _pool_1 (c)+ totalGovernanceFee_1
Source address: u
[i]Type for TMP_398

Name: TMP_398 Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
INTERNAL_CALL, StakedCitadel._mintSharesFor(address,uint256,uint256)(strategist_14,feeStrategist_1,TMP_398)
New param cache [[[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 0]]
Old param cache: [[[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: recipient Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 0]

Name: _pool Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
_mintSharesFor(address,uint256,uint256)
Propogating All
Propogating All
Propogating All
Propogating All
_amount_1
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
_pool_1
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Source address: u

Name: _pool_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
Propogating All
recipient_1
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: recipient_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
shares_3
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
_amount_1
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] recipient cleared
[i] _amount cleared
[i] _pool cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: recipient_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: _pool_1, name: _pool

Name: _pool_1 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
recipient_1(address) := ϕ(['_recipient_1', 'treasury_24', 'treasury_19', 'strategist_14'])
Phi
[i]Type for recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_338', 'feeStrategist_1', 'totalGovernanceFee_1', '_fee_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_pool_1(uint256) := ϕ(['_pool_1', '_pool_1', 'TMP_373', 'TMP_398'])
Phi
[i]Type for _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_381 cleared
[i] TMP_382 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_381(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_381

Name: TMP_381 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_382(bool) = TMP_381 == 0
[i]Type for TMP_382

Name: TMP_382 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_383 cleared
[i] TMP_384 cleared
[i] TMP_385 cleared
[i] shares cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: shares_1, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 1
Globalname: shares, contract_name: StakedCitadel
End popogation
TMP_383(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_383

Name: TMP_383 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_384(uint256) = _amount_1 (c)* TMP_383
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_384

Name: TMP_384 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_385(uint256) = TMP_384 (c)/ _pool_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_385

Name: TMP_385 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
shares_1(uint256) := TMP_385(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
[i] shares cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 3
Globalname: shares, contract_name: StakedCitadel
shares_3(uint256) := ϕ(['shares_2', 'shares_1'])
Phi

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance


END==================================
Source address: u
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20Upgradeable._mint(address,uint256)(recipient_1,shares_3)
New param cache [[[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: account Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_mint(address,uint256)
Propogating All
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
[i] account cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['shares_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_0', '_balances_1', '_balances_11', '_balances_5', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] TMP_61 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(bool) = account_1 != TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(None) = SOLIDITY_CALL require(bool,string)(TMP_61,ERC20: mint to the zero address)
[i]Type for TMP_62

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_63 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._beforeTokenTransfer(address,address,uint256)(TMP_63,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
Source address: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_11

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(-> _balances_8) = REF_11 (c)+ amount_1
Source address: u
[i]Type for REF_11

Name: REF_11 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
[i] TMP_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_65 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._afterTokenTransfer(address,address,uint256)(TMP_67,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] account cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['shares_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_0', '_balances_1', '_balances_11', '_balances_5', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] TMP_61 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(bool) = account_1 != TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(None) = SOLIDITY_CALL require(bool,string)(TMP_61,ERC20: mint to the zero address)
[i]Type for TMP_62

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_63 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._beforeTokenTransfer(address,address,uint256)(TMP_63,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
Source address: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_11

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(-> _balances_8) = REF_11 (c)+ amount_1
Source address: u
[i]Type for REF_11

Name: REF_11 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
[i] TMP_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_65 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._afterTokenTransfer(address,address,uint256)(TMP_67,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] shares cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: shares_2, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 2
Globalname: shares, contract_name: StakedCitadel
End popogation
shares_2(uint256) := _amount_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] recipient cleared
[i] _amount cleared
[i] _pool cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: recipient_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
recipient_1(address) := ϕ(['_recipient_1', 'treasury_24', 'treasury_19', 'strategist_14'])
Phi
[i]Type for recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_338', 'feeStrategist_1', 'totalGovernanceFee_1', '_fee_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_pool_1(uint256) := ϕ(['_pool_1', '_pool_1', 'TMP_373', 'TMP_398'])
Phi
[i]Type for _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_381 cleared
[i] TMP_382 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_381(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_381

Name: TMP_381 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_382(bool) = TMP_381 == 0
[i]Type for TMP_382

Name: TMP_382 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_383 cleared
[i] TMP_384 cleared
[i] TMP_385 cleared
[i] shares cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: shares_1, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 1
Globalname: shares, contract_name: StakedCitadel
End popogation
TMP_383(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_383

Name: TMP_383 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_384(uint256) = _amount_1 (c)* TMP_383
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_384

Name: TMP_384 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_385(uint256) = TMP_384 (c)/ _pool_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_385

Name: TMP_385 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
shares_1(uint256) := TMP_385(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
[i] shares cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 3
Globalname: shares, contract_name: StakedCitadel
shares_3(uint256) := ϕ(['shares_2', 'shares_1'])
Phi

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance


END==================================
Source address: u
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20Upgradeable._mint(address,uint256)(recipient_1,shares_3)
New param cache [[[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: account Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_mint(address,uint256)
Propogating All
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
[i] account cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['shares_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_0', '_balances_1', '_balances_11', '_balances_5', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] TMP_61 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(bool) = account_1 != TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(None) = SOLIDITY_CALL require(bool,string)(TMP_61,ERC20: mint to the zero address)
[i]Type for TMP_62

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_63 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._beforeTokenTransfer(address,address,uint256)(TMP_63,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
Source address: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_11

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(-> _balances_8) = REF_11 (c)+ amount_1
Source address: u
[i]Type for REF_11

Name: REF_11 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
[i] TMP_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_65 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._afterTokenTransfer(address,address,uint256)(TMP_67,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] account cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['shares_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_0', '_balances_1', '_balances_11', '_balances_5', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] TMP_61 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(bool) = account_1 != TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(None) = SOLIDITY_CALL require(bool,string)(TMP_61,ERC20: mint to the zero address)
[i]Type for TMP_62

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_63 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._beforeTokenTransfer(address,address,uint256)(TMP_63,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
Source address: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_11

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(-> _balances_8) = REF_11 (c)+ amount_1
Source address: u
[i]Type for REF_11

Name: REF_11 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
[i] TMP_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_65 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._afterTokenTransfer(address,address,uint256)(TMP_67,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] shares cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: shares_2, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 2
Globalname: shares, contract_name: StakedCitadel
End popogation
shares_2(uint256) := _amount_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] _harvestedAmount cleared
[i] harvestTime cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: harvestTime_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
Ssa_name: strategist_10, name: strategist

Name: strategist Function: _handleFees
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: treasury_21, name: treasury

Name: treasury Function: _handleFees
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: lastHarvestedAt_3, name: lastHarvestedAt

Name: lastHarvestedAt Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: managementFee_3, name: managementFee

Name: managementFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_7, name: MAX_BPS

Name: MAX_BPS Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: SECS_PER_YEAR_1, name: SECS_PER_YEAR

Name: SECS_PER_YEAR Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
_harvestedAmount_1(uint256) := ϕ(['_harvestedAmount_1'])
Phi

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for _harvestedAmount

Name: _harvestedAmount Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
harvestTime_1(uint256) := ϕ(['harvestTime_1'])
Phi

Name: harvestTime Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for harvestTime

Name: harvestTime Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
strategist_10(address) := ϕ(['strategist_14', 'strategist_15', 'strategist_3', 'strategist_13', 'strategist_0', 'strategist_9', 'strategist_2'])
Phi
[i]Type for strategist

Name: strategist Function: _handleFees
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
treasury_21(address) := ϕ(['treasury_0', 'treasury_18', 'treasury_7', 'treasury_1', 'treasury_24', 'treasury_25', 'treasury_8', 'treasury_20'])
Phi
[i]Type for treasury

Name: treasury Function: _handleFees
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
lastHarvestedAt_3(uint256) := ϕ(['lastHarvestedAt_2', 'lastHarvestedAt_1', 'lastHarvestedAt_0', 'lastHarvestedAt_4'])
Phi
[i]Type for lastHarvestedAt

Name: lastHarvestedAt Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
managementFee_3(uint256) := ϕ(['managementFee_2', 'managementFee_1', 'managementFee_4', 'managementFee_5', 'managementFee_0'])
Phi
[i]Type for managementFee

Name: managementFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_BPS_7(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
SECS_PER_YEAR_1(uint256) := ϕ(['SECS_PER_YEAR_0', 'SECS_PER_YEAR_2', 'SECS_PER_YEAR_3'])
Phi
[i]Type for SECS_PER_YEAR

Name: SECS_PER_YEAR Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] feeGovernance cleared
[i] feeStrategist cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: feeGovernance_1, name: feeGovernance

Name: feeGovernance Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeGovernance, Num: 1
Globalname: feeGovernance, contract_name: StakedCitadel
Ssa_name: feeStrategist_1, name: feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
End popogation
TUPLE_0(uint256,uint256) = INTERNAL_CALL, StakedCitadel._calculatePerformanceFee(uint256)(_harvestedAmount_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u']]
[i]Type for TUPLE_0

Name: TUPLE_0 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
feeGovernance_1(uint256)= UNPACK TUPLE_0 index: 0 
([], [], 'u', 'u', 'u', -1)
[i]Type for feeGovernance

Name: feeGovernance Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
feeStrategist_1(uint256)= UNPACK TUPLE_0 index: 1 
([], [], 'u', 'u', 'u', -1)
[i]Type for feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_387 cleared
[i] duration cleared
Propogating parameters and globals to SSA variables...
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: harvestTime_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
Ssa_name: lastHarvestedAt_4, name: lastHarvestedAt

Name: lastHarvestedAt Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: harvestTime_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
Ssa_name: lastHarvestedAt_4, name: lastHarvestedAt

Name: lastHarvestedAt Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: duration_1, name: duration

Name: duration Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: duration, Num: 1
Globalname: duration, contract_name: StakedCitadel
End popogation
TMP_387(uint256) = harvestTime_1 (c)- lastHarvestedAt_4
Source address: u
[i]Type for TMP_387

Name: TMP_387 Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
duration_1(uint256) := TMP_387(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for duration

Name: duration Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_400 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: managementFee_4, name: managementFee

Name: managementFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: managementFee_4, name: managementFee

Name: managementFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_400(bool) = managementFee_4 > 0
lnorm: u rnorm: 0
[i]Type for TMP_400

Name: TMP_400 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] management_fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: management_fee_1, name: management_fee

Name: management_fee Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: management_fee, Num: 1
Globalname: management_fee, contract_name: StakedCitadel
End popogation
management_fee_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for management_fee

Name: management_fee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_401 cleared
[i] TMP_402 cleared
[i] TMP_403 cleared
[i] TMP_404 cleared
[i] TMP_405 cleared
[i] TMP_406 cleared
[i] management_fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: duration_1, name: duration

Name: duration Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_9, name: MAX_BPS

Name: MAX_BPS Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: managementFee_5, name: managementFee

Name: managementFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: SECS_PER_YEAR_3, name: SECS_PER_YEAR

Name: SECS_PER_YEAR Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_9, name: MAX_BPS

Name: MAX_BPS Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: duration_1, name: duration

Name: duration Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: managementFee_5, name: managementFee

Name: managementFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: SECS_PER_YEAR_3, name: SECS_PER_YEAR

Name: SECS_PER_YEAR Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: management_fee_2, name: management_fee

Name: management_fee Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: management_fee, Num: 2
Globalname: management_fee, contract_name: StakedCitadel
End popogation
TMP_401(uint256) = INTERNAL_CALL, StakedCitadel.balance()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_401

Name: TMP_401 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_402(uint256) = TMP_401 (c)- _harvestedAmount_1
Source address: u
[i]Type for TMP_402

Name: TMP_402 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_403(uint256) = managementFee_5 (c)* TMP_402
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_403

Name: TMP_403 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_404(uint256) = TMP_403 (c)* duration_1
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_404

Name: TMP_404 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_405(uint256) = TMP_404 (c)/ SECS_PER_YEAR_3
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
-999
-1
[i]Type for TMP_405

Name: TMP_405 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_406(uint256) = TMP_405 (c)/ MAX_BPS_9
lnorm: u rnorm: u
Source address: u
lnorm: u rnorm: u
-999
-1
[i]Type for TMP_406

Name: TMP_406 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
management_fee_2(uint256) := TMP_406(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for management_fee

Name: management_fee Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] management_fee cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: management_fee_3, name: management_fee

Name: management_fee Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: management_fee, Num: 3
Globalname: management_fee, contract_name: StakedCitadel
management_fee_3(uint256) := ϕ(['management_fee_1', 'management_fee_2'])
Phi

Name: management_fee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: management_fee Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance


END==================================
Source address: u
[i]Type for management_fee

Name: management_fee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_388 cleared
[i] totalGovernanceFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeGovernance_1, name: feeGovernance

Name: feeGovernance Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeGovernance, Num: 1
Globalname: feeGovernance, contract_name: StakedCitadel
Ssa_name: management_fee_3, name: management_fee

Name: management_fee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: feeGovernance_1, name: feeGovernance

Name: feeGovernance Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeGovernance, Num: 1
Globalname: feeGovernance, contract_name: StakedCitadel
Ssa_name: management_fee_3, name: management_fee

Name: management_fee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: totalGovernanceFee, Num: 1
Globalname: totalGovernanceFee, contract_name: StakedCitadel
End popogation
TMP_388(uint256) = feeGovernance_1 (c)+ management_fee_3
Source address: u
[i]Type for TMP_388

Name: TMP_388 Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
totalGovernanceFee_1(uint256) := TMP_388(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] TMP_389 cleared
[i] TMP_390 cleared
[i] TMP_391 cleared
[i] _pool cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeStrategist_1, name: feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: feeStrategist_1, name: feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: _pool, Num: 1
Globalname: _pool, contract_name: StakedCitadel
End popogation
TMP_389(uint256) = INTERNAL_CALL, StakedCitadel.balance()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_389

Name: TMP_389 Function: _handleFees
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_390(uint256) = TMP_389 (c)- totalGovernanceFee_1
Source address: u
[i]Type for TMP_390

Name: TMP_390 Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
TMP_391(uint256) = TMP_390 (c)- feeStrategist_1
Source address: u
[i]Type for TMP_391

Name: TMP_391 Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
_pool_1(uint256) := TMP_391(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for _pool

Name: _pool Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_392 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_392(bool) = totalGovernanceFee_1 != 0
[i]Type for TMP_392

Name: TMP_392 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_394 cleared
[i] TMP_395 cleared
[i] TMP_396 cleared
[i] TMP_397 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeStrategist_1, name: feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
Ssa_name: strategist_14, name: strategist

Name: strategist Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategist_14, name: strategist

Name: strategist Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: feeStrategist_1, name: feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
End popogation
TMP_394(bool) = feeStrategist_1 != 0
[i]Type for TMP_394

Name: TMP_394 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_395 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_395

Name: TMP_395 Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_396(bool) = strategist_14 != TMP_395
[i]Type for TMP_396

Name: TMP_396 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_397(bool) = TMP_394 && TMP_396
[i]Type for TMP_397

Name: TMP_397 Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: treasury_24, name: treasury

Name: treasury Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: treasury_24, name: treasury

Name: treasury Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, StakedCitadel._mintSharesFor(address,uint256,uint256)(treasury_24,totalGovernanceFee_1,_pool_1)
New param cache [[[-1], [-1], 0, 'treasury', [], -1, 2, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0], [[-1], [-1], 'u', None, [], 0, 'u', 0]]
Old param cache: [[[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], 0, 'u']]
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_398 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: feeStrategist_1, name: feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
Ssa_name: strategist_14, name: strategist

Name: strategist Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategist_14, name: strategist

Name: strategist Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: totalGovernanceFee_1, name: totalGovernanceFee

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: feeStrategist_1, name: feeStrategist

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: feeStrategist, Num: 1
Globalname: feeStrategist, contract_name: StakedCitadel
End popogation
TMP_398(uint256) = _pool_1 (c)+ totalGovernanceFee_1
Source address: u
[i]Type for TMP_398

Name: TMP_398 Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
INTERNAL_CALL, StakedCitadel._mintSharesFor(address,uint256,uint256)(strategist_14,feeStrategist_1,TMP_398)
New param cache [[[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[], [], 'u', None, [], -1, 'u', 'u'], [[-1], [-1], 'u', None, [], 0, 'u', 0]]
Old param cache: [[[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: recipient Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[], [], 'u', None, [], -1, 'u', 'u']

Name: _amount Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], 0, 'u', 0]

Name: _pool Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
FIND RETURN
ENTRY_POINT
_mintSharesFor(address,uint256,uint256)
Propogating All
Propogating All
Propogating All
Propogating All
_amount_1
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
_pool_1
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Source address: u

Name: _pool_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
Propogating All
Propogating All
recipient_1
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: recipient_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
shares_3
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Propogating All
_amount_1
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
[i] recipient cleared
[i] _amount cleared
[i] _pool cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: recipient_1, name: recipient

Name: recipient_1 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: recipient_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _amount_1, name: _amount

Name: _amount_1 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: _pool_1, name: _pool

Name: _pool_1 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
recipient_1(address) := ϕ(['_recipient_1', 'treasury_24', 'treasury_19', 'strategist_14'])
Phi
[i]Type for recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_338', 'feeStrategist_1', 'totalGovernanceFee_1', '_fee_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_pool_1(uint256) := ϕ(['_pool_1', '_pool_1', 'TMP_373', 'TMP_398'])
Phi
[i]Type for _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_381 cleared
[i] TMP_382 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_381(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_381

Name: TMP_381 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_382(bool) = TMP_381 == 0
[i]Type for TMP_382

Name: TMP_382 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_383 cleared
[i] TMP_384 cleared
[i] TMP_385 cleared
[i] shares cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: shares_1, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 1
Globalname: shares, contract_name: StakedCitadel
End popogation
TMP_383(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_383

Name: TMP_383 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_384(uint256) = _amount_1 (c)* TMP_383
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_384

Name: TMP_384 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_385(uint256) = TMP_384 (c)/ _pool_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_385

Name: TMP_385 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
shares_1(uint256) := TMP_385(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
[i] shares cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 3
Globalname: shares, contract_name: StakedCitadel
shares_3(uint256) := ϕ(['shares_2', 'shares_1'])
Phi

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance


END==================================
Source address: u
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20Upgradeable._mint(address,uint256)(recipient_1,shares_3)
New param cache [[[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: account Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_mint(address,uint256)
Propogating All
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
[i] account cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['shares_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_0', '_balances_1', '_balances_11', '_balances_5', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] TMP_61 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(bool) = account_1 != TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(None) = SOLIDITY_CALL require(bool,string)(TMP_61,ERC20: mint to the zero address)
[i]Type for TMP_62

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_63 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._beforeTokenTransfer(address,address,uint256)(TMP_63,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
Source address: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_11

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(-> _balances_8) = REF_11 (c)+ amount_1
Source address: u
[i]Type for REF_11

Name: REF_11 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
[i] TMP_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_65 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._afterTokenTransfer(address,address,uint256)(TMP_67,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] account cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['shares_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_0', '_balances_1', '_balances_11', '_balances_5', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] TMP_61 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(bool) = account_1 != TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(None) = SOLIDITY_CALL require(bool,string)(TMP_61,ERC20: mint to the zero address)
[i]Type for TMP_62

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_63 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._beforeTokenTransfer(address,address,uint256)(TMP_63,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
Source address: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_11

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(-> _balances_8) = REF_11 (c)+ amount_1
Source address: u
[i]Type for REF_11

Name: REF_11 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
[i] TMP_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_65 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._afterTokenTransfer(address,address,uint256)(TMP_67,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] shares cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: shares_2, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 2
Globalname: shares, contract_name: StakedCitadel
End popogation
shares_2(uint256) := _amount_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] recipient cleared
[i] _amount cleared
[i] _pool cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: recipient_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: _amount_1 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _amount, Num: 1
Globalname: _amount, contract_name: StakedCitadel
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: _pool_1 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Copied ftype
recipient_1(address) := ϕ(['_recipient_1', 'treasury_24', 'treasury_19', 'strategist_14'])
Phi
[i]Type for recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
_amount_1(uint256) := ϕ(['TMP_338', 'feeStrategist_1', 'totalGovernanceFee_1', '_fee_1'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: feeStrategist Function: _handleFees
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef

Name: totalGovernanceFee Function: _handleFees
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
Source address: u
[i]Type for _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_pool_1(uint256) := ϕ(['_pool_1', '_pool_1', 'TMP_373', 'TMP_398'])
Phi
[i]Type for _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_381 cleared
[i] TMP_382 cleared
Propogating parameters and globals to SSA variables...
End popogation
TMP_381(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_381

Name: TMP_381 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_382(bool) = TMP_381 == 0
[i]Type for TMP_382

Name: TMP_382 Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_383 cleared
[i] TMP_384 cleared
[i] TMP_385 cleared
[i] shares cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _pool_1, name: _pool

Name: _pool Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Ssa_name: shares_1, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 1
Globalname: shares, contract_name: StakedCitadel
End popogation
TMP_383(uint256) = INTERNAL_CALL, ERC20Upgradeable.totalSupply()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_383

Name: TMP_383 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_384(uint256) = _amount_1 (c)* TMP_383
lnorm: u rnorm: u
Source address: u
[i]Type for TMP_384

Name: TMP_384 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
TMP_385(uint256) = TMP_384 (c)/ _pool_1
lnorm: u rnorm: u
lnorm: u rnorm: u
[i]Type for TMP_385

Name: TMP_385 Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
shares_1(uint256) := TMP_385(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
XXXX
[i] shares cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 3
Globalname: shares, contract_name: StakedCitadel
shares_3(uint256) := ϕ(['shares_2', 'shares_1'])
Phi

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance


END==================================
Source address: u
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: recipient_1, name: recipient

Name: recipient Function: _mintSharesFor
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: shares_3, name: shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
INTERNAL_CALL, ERC20Upgradeable._mint(address,uint256)(recipient_1,shares_3)
New param cache [[[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: account Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_mint(address,uint256)
Propogating All
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Propogating All
account_1
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
[i] account cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['shares_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_0', '_balances_1', '_balances_11', '_balances_5', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] TMP_61 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(bool) = account_1 != TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(None) = SOLIDITY_CALL require(bool,string)(TMP_61,ERC20: mint to the zero address)
[i]Type for TMP_62

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_63 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._beforeTokenTransfer(address,address,uint256)(TMP_63,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
Source address: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_11

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(-> _balances_8) = REF_11 (c)+ amount_1
Source address: u
[i]Type for REF_11

Name: REF_11 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
[i] TMP_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_65 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._afterTokenTransfer(address,address,uint256)(TMP_67,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] account cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: account_1 Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _balances_6, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_2, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
account_1(address) := ϕ(['recipient_1'])
Phi
[i]Type for account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['shares_3'])
Phi
[i]Type for amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
_balances_6(mapping(address => uint256)) := ϕ(['_balances_0', '_balances_1', '_balances_11', '_balances_5', '_balances_8'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
_totalSupply_2(uint256) := ϕ(['_totalSupply_4', '_totalSupply_7', '_totalSupply_0'])
Phi
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_60 cleared
[i] TMP_61 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_60 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_60

Name: TMP_60 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_61(bool) = account_1 != TMP_60
[i]Type for TMP_61

Name: TMP_61 Function: _mint
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_62(None) = SOLIDITY_CALL require(bool,string)(TMP_61,ERC20: mint to the zero address)
[i]Type for TMP_62

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_63 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_63 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_63

Name: TMP_63 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._beforeTokenTransfer(address,address,uint256)(TMP_63,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_beforeTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _beforeTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'account_1', 'TMP_63'])
Phi
[i]Type for from

Name: from Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_72', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _beforeTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_3, name: _totalSupply

Name: _totalSupply Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _totalSupply_4, name: _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
_totalSupply_4(uint256) = _totalSupply_3 (c)+ amount_1
Source address: u
[i]Type for _totalSupply

Name: _totalSupply Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: _balances_8, name: _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_11(uint256) -> _balances_7[account_1]
INDEX
[i]Type for REF_11

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
_balances_8(mapping(address => uint256)) := ϕ(['_balances_7'])
Phi
[i]Type for _balances

Name: _balances Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_11(-> _balances_8) = REF_11 (c)+ amount_1
Source address: u
[i]Type for REF_11

Name: REF_11 Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
[i] TMP_65 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_65 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_65

Name: TMP_65 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_67 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: account_1, name: account

Name: account Function: _mint
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _mint
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
TMP_67 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_67

Name: TMP_67 Function: _mint
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
INTERNAL_CALL, ERC20Upgradeable._afterTokenTransfer(address,address,uint256)(TMP_67,account_1,amount_1)
New param cache [[[-1], [-1], 0, None, [], -1, 'u', 'u'], [[-1], [-1], 0, 'strategist', [], -1, 1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 0]]
Old param cache: [[[-1], [-1], 0, None, [], -1, 'u'], [[-1], [-1], 0, 'treasury', [], -1, 2], [[-1], [-1], 'u', None, [], 0, 'u']]
[[-1], [-1], 0, None, [], -1, 'u', 'u']

Name: from Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 0, 'strategist', [], -1, 1, 'u']

Name: to Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
[[-1], [-1], 'u', None, [], -1, 'u', 0]

Name: amount Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_afterTokenTransfer(address,address,uint256)
Propogating All
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] from cleared
[i] to cleared
[i] amount cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: from_1, name: from

Name: from Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: from
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: from_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: to_1, name: to

Name: to Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1

Name: to_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: amount_1, name: amount

Name: amount Function: _afterTokenTransfer
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Copied ftype
from_1(address) := ϕ(['from_1', 'TMP_67', 'account_1'])
Phi
[i]Type for from

Name: from Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: 0
LF: from
Value: u
Fields: 
Finance Type: undef
XXXX
to_1(address) := ϕ(['TMP_79', 'account_1', 'to_1'])
Phi
[i]Type for to

Name: to Function: _afterTokenTransfer
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
amount_1(uint256) := ϕ(['amount_1', 'amount_1', 'amount_1'])
Phi
[i]Type for amount

Name: amount Function: _afterTokenTransfer
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
[i] shares cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: _amount_1, name: _amount

Name: _amount Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Ssa_name: shares_2, name: shares

Name: shares Function: _mintSharesFor
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
Name: shares, Num: 2
Globalname: shares, contract_name: StakedCitadel
End popogation
shares_2(uint256) := _amount_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for shares

Name: shares Function: _mintSharesFor
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: lastHarvestAmount_1, name: lastHarvestAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastHarvestAmount, Num: 1
Globalname: lastHarvestAmount, contract_name: StakedCitadel
End popogation
lastHarvestAmount_1(uint256) := _harvestedAmount_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for lastHarvestAmount

Name: lastHarvestAmount Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_196 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetsAtHarvest_1, name: assetsAtHarvest

Name: assetsAtHarvest Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetsAtHarvest_1, name: assetsAtHarvest

Name: assetsAtHarvest Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_196(bool) = assetsAtHarvest_1 != 0
[i]Type for TMP_196

Name: TMP_196 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
End popogation
TMP_197(bool) = _harvestedAmount_1 == 0
[i]Type for TMP_197

Name: TMP_197 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: assetsAtHarvest_1, name: assetsAtHarvest

Name: assetsAtHarvest Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetsAtHarvest_1, name: assetsAtHarvest

Name: assetsAtHarvest Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetsAtLastHarvest_2, name: assetsAtLastHarvest

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetsAtLastHarvest, Num: 2
Globalname: assetsAtLastHarvest, contract_name: StakedCitadel
End popogation
assetsAtLastHarvest_2(uint256) := assetsAtHarvest_1(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for assetsAtLastHarvest

Name: assetsAtLastHarvest Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: assetsAtLastHarvest_1, name: assetsAtLastHarvest

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetsAtLastHarvest, Num: 1
Globalname: assetsAtLastHarvest, contract_name: StakedCitadel
End popogation
assetsAtLastHarvest_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for assetsAtLastHarvest

Name: assetsAtLastHarvest Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_198 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: lifeTimeEarned_5, name: lifeTimeEarned

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lifeTimeEarned, Num: 5
Globalname: lifeTimeEarned, contract_name: StakedCitadel
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: lifeTimeEarned_5, name: lifeTimeEarned

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lifeTimeEarned_6, name: lifeTimeEarned

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lifeTimeEarned, Num: 6
Globalname: lifeTimeEarned, contract_name: StakedCitadel
global...

Name: PIC_2 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
TMP_198(uint256) = lifeTimeEarned_5 (c)+ _harvestedAmount_1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lifeTimeEarned_6(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for lifeTimeEarned

Name: lifeTimeEarned Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
Ssa_name: lastHarvestedAt_2, name: lastHarvestedAt

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastHarvestedAt, Num: 2
Globalname: lastHarvestedAt, contract_name: StakedCitadel
global...

Name: lastHarvestedAt Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
lastHarvestedAt_2(uint256) := harvestTime_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for lastHarvestedAt

Name: lastHarvestedAt Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] TMP_199 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: token_18, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token, Num: 18
Globalname: token, contract_name: StakedCitadel
global...

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
Ssa_name: token_18, name: token

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
End popogation
TMP_199 = CONVERT token_18 to address
Converting token_18

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
[i]Type for TMP_199

Name: TMP_199 Function: reportHarvest
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX


token_14(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
lifeTimeEarned_1(uint256) := ϕ(['lifeTimeEarned_6', 'lifeTimeEarned_0'])
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
INTERNAL_CALL, StakedCitadel._onlyStrategy()()
harvestTime_1(uint256) := block.timestamp(uint256)
TMP_193(uint256) = INTERNAL_CALL, StakedCitadel.balance()()
token_17(IERC20Upgradeable) := ϕ(['token_3'])
TMP_194(uint256) = TMP_193 (c)- _harvestedAmount_1
assetsAtHarvest_1(uint256) := TMP_194(uint256)
INTERNAL_CALL, StakedCitadel._handleFees(uint256,uint256)(_harvestedAmount_1,harvestTime_1)
lastHarvestAmount_1(uint256) := _harvestedAmount_1(uint256)
TMP_196(bool) = assetsAtHarvest_1 != 0
CONDITION TMP_196
TMP_197(bool) = _harvestedAmount_1 == 0
CONDITION TMP_197
assetsAtLastHarvest_2(uint256) := assetsAtHarvest_1(uint256)
assetsAtLastHarvest_1(uint256) := 0(uint256)
TMP_198(uint256) = lifeTimeEarned_5 (c)+ _harvestedAmount_1
lifeTimeEarned_6(uint256) := TMP_198(uint256)
lastHarvestedAt_2(uint256) := harvestTime_1(uint256)
TMP_199 = CONVERT token_18 to address
Emit Harvested(TMP_199,_harvestedAmount_1,block.number,block.timestamp)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: token_14, name: token

Name: token Function: reportHarvest
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: lifeTimeEarned_1, name: lifeTimeEarned

Name: lifeTimeEarned Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
token_14(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
Phi
[i]Type for token

Name: token Function: reportHarvest
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
lifeTimeEarned_1(uint256) := ϕ(['lifeTimeEarned_6', 'lifeTimeEarned_0'])
Phi
[i]Type for lifeTimeEarned

Name: lifeTimeEarned Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, StakedCitadel._onlyStrategy()()
New param cache []
Old param cache: []
[i] harvestTime cleared
Propogating parameters and globals to SSA variables...
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
End popogation
harvestTime_1(uint256) := block.timestamp(uint256)
asgn
[i]Type for harvestTime

Name: harvestTime Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_193 cleared
[i] TMP_194 cleared
[i] assetsAtHarvest cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: assetsAtHarvest_1, name: assetsAtHarvest

Name: assetsAtHarvest Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: assetsAtHarvest, Num: 1
Globalname: assetsAtHarvest, contract_name: StakedCitadel
End popogation
Ssa_name: token_17, name: token

Name: token Function: reportHarvest
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
TMP_193(uint256) = INTERNAL_CALL, StakedCitadel.balance()()
New param cache []
Old param cache: []
Source address: u
[i]Type for TMP_193

Name: TMP_193 Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
token_17(IERC20Upgradeable) := ϕ(['token_3'])
Phi
[i]Type for token

Name: token Function: reportHarvest
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_194(uint256) = TMP_193 (c)- _harvestedAmount_1
Source address: u
[i]Type for TMP_194

Name: TMP_194 Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
assetsAtHarvest_1(uint256) := TMP_194(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for assetsAtHarvest

Name: assetsAtHarvest Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
End popogation
INTERNAL_CALL, StakedCitadel._handleFees(uint256,uint256)(_harvestedAmount_1,harvestTime_1)
New param cache [[[], [], 'u', None, [], -1, 'u', 'u'], [[], [], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[], [], 'u', None, [], -1, 'u']]
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: lastHarvestAmount_1, name: lastHarvestAmount

Name: lastHarvestAmount Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastHarvestAmount, Num: 1
Globalname: lastHarvestAmount, contract_name: StakedCitadel
End popogation
lastHarvestAmount_1(uint256) := _harvestedAmount_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for lastHarvestAmount

Name: lastHarvestAmount Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_196 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: assetsAtHarvest_1, name: assetsAtHarvest

Name: assetsAtHarvest Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetsAtHarvest_1, name: assetsAtHarvest

Name: assetsAtHarvest Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
TMP_196(bool) = assetsAtHarvest_1 != 0
[i]Type for TMP_196

Name: TMP_196 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_197 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
End popogation
TMP_197(bool) = _harvestedAmount_1 == 0
[i]Type for TMP_197

Name: TMP_197 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: assetsAtHarvest_1, name: assetsAtHarvest

Name: assetsAtHarvest Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetsAtHarvest_1, name: assetsAtHarvest

Name: assetsAtHarvest Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: assetsAtLastHarvest_2, name: assetsAtLastHarvest

Name: assetsAtLastHarvest Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
assetsAtLastHarvest_2(uint256) := assetsAtHarvest_1(uint256)
asgn
-999
-1
Finance type key: (0, -1)
[i]Type for assetsAtLastHarvest

Name: assetsAtLastHarvest Function: reportHarvest
Num: -999
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: assetsAtLastHarvest_1, name: assetsAtLastHarvest

Name: assetsAtLastHarvest Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
End popogation
assetsAtLastHarvest_1(uint256) := 0(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for assetsAtLastHarvest

Name: assetsAtLastHarvest Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 0
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_198 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: lifeTimeEarned_5, name: lifeTimeEarned

Name: lifeTimeEarned Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: lifeTimeEarned_5, name: lifeTimeEarned

Name: lifeTimeEarned Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: lifeTimeEarned_6, name: lifeTimeEarned

Name: lifeTimeEarned Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_198(uint256) = lifeTimeEarned_5 (c)+ _harvestedAmount_1
Source address: u
[i]Type for TMP_198

Name: TMP_198 Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
lifeTimeEarned_6(uint256) := TMP_198(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for lifeTimeEarned

Name: lifeTimeEarned Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
Ssa_name: harvestTime_1, name: harvestTime

Name: harvestTime Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: harvestTime, Num: 1
Globalname: harvestTime, contract_name: StakedCitadel
Ssa_name: lastHarvestedAt_2, name: lastHarvestedAt

Name: lastHarvestedAt Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
lastHarvestedAt_2(uint256) := harvestTime_1(uint256)
asgn
Finance type key: (-1, -1)
[i]Type for lastHarvestedAt

Name: lastHarvestedAt Function: reportHarvest
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
[i] TMP_199 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
Ssa_name: token_18, name: token

Name: token Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_18, name: token

Name: token Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: _harvestedAmount_1, name: _harvestedAmount

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _harvestedAmount_1 Function: reportHarvest
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _harvestedAmount, Num: 1
Globalname: _harvestedAmount, contract_name: StakedCitadel
End popogation
TMP_199 = CONVERT token_18 to address
Converting token_18

Name: token Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
[i]Type for TMP_199

Name: TMP_199 Function: reportHarvest
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
Reading Function: reportAdditionalToken
Checking funcion...



reportAdditionalToken
Function name: reportAdditionalToken
Finding type for _token(address ... )
prev address? u
Head Addr: -991
    Norm: 6
    Set: {-991}
    Fin: NULL
New param cache [[[], [], 6, '_token', [], -1, -991, 'u']]
FIND RETURN
ENTRY_POINT
reportAdditionalToken(address)


strategist_4(address) := ϕ(['strategist_14', 'strategist_15', 'strategist_3', 'strategist_13', 'strategist_0', 'strategist_9', 'strategist_2'])
token_19(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
treasury_2(address) := ϕ(['treasury_0', 'treasury_18', 'treasury_7', 'treasury_1', 'treasury_24', 'treasury_25', 'treasury_8', 'treasury_20'])
badgerTree_2(address) := ϕ(['badgerTree_0', 'badgerTree_1', 'badgerTree_8'])
additionalTokensEarned_1(mapping(address => uint256)) := ϕ(['additionalTokensEarned_5', 'additionalTokensEarned_0'])
performanceFeeGovernance_2(uint256) := ϕ(['performanceFeeGovernance_0', 'performanceFeeGovernance_6', 'performanceFeeGovernance_1', 'performanceFeeGovernance_9', 'performanceFeeGovernance_7'])
performanceFeeStrategist_2(uint256) := ϕ(['performanceFeeStrategist_11', 'performanceFeeStrategist_1', 'performanceFeeStrategist_7', 'performanceFeeStrategist_8', 'performanceFeeStrategist_0'])
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
INTERNAL_CALL, StakedCitadel._onlyStrategy()()
TMP_203 = CONVERT token_21 to address
TMP_204(bool) = TMP_203 != _token_1
TMP_205(None) = SOLIDITY_CALL require(bool,string)(TMP_204,No want)
TMP_206 = CONVERT _token_1 to IERC20Upgradeable
TMP_207 = CONVERT this to address
TMP_208(uint256) = HIGH_LEVEL_CALL, dest:TMP_206(IERC20Upgradeable), function:balanceOf, arguments:['TMP_207']  
strategist_7(address) := ϕ(['strategist_6', 'strategist_14', 'strategist_15', 'strategist_3', 'strategist_13', 'strategist_9', 'strategist_2'])
treasury_5(address) := ϕ(['treasury_4', 'treasury_18', 'treasury_7', 'treasury_1', 'treasury_24', 'treasury_25', 'treasury_8', 'treasury_20'])
badgerTree_5(address) := ϕ(['badgerTree_4', 'badgerTree_1', 'badgerTree_8'])
additionalTokensEarned_4(mapping(address => uint256)) := ϕ(['additionalTokensEarned_5', 'additionalTokensEarned_3'])
performanceFeeGovernance_5(uint256) := ϕ(['performanceFeeGovernance_6', 'performanceFeeGovernance_1', 'performanceFeeGovernance_9', 'performanceFeeGovernance_7', 'performanceFeeGovernance_4'])
performanceFeeStrategist_5(uint256) := ϕ(['performanceFeeStrategist_11', 'performanceFeeStrategist_7', 'performanceFeeStrategist_4', 'performanceFeeStrategist_8', 'performanceFeeStrategist_1'])
tokenBalance_1(uint256) := TMP_208(uint256)
REF_35(uint256) -> additionalTokensEarned_4[_token_1]
REF_36(uint256) -> additionalTokensEarned_4[_token_1]
TMP_209(uint256) = REF_36 (c)+ tokenBalance_1
additionalTokensEarned_5(mapping(address => uint256)) := ϕ(['additionalTokensEarned_4'])
REF_35 (->additionalTokensEarned_5) := TMP_209(uint256)
REF_37(uint256) -> lastAdditionalTokenAmount_0[_token_1]
lastAdditionalTokenAmount_1(mapping(address => uint256)) := ϕ(['lastAdditionalTokenAmount_0'])
REF_37 (->lastAdditionalTokenAmount_1) := tokenBalance_1(uint256)
TMP_210(uint256) = INTERNAL_CALL, StakedCitadel._calculateFee(uint256,uint256)(tokenBalance_1,performanceFeeGovernance_5)
governanceRewardsFee_1(uint256) := TMP_210(uint256)
TMP_211(uint256) = INTERNAL_CALL, StakedCitadel._calculateFee(uint256,uint256)(tokenBalance_1,performanceFeeStrategist_6)
strategistRewardsFee_1(uint256) := TMP_211(uint256)
TMP_212 = CONVERT _token_1 to IERC20Upgradeable
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_212', 'treasury_7', 'governanceRewardsFee_1'] 
TMP_214 = CONVERT _token_1 to IERC20Upgradeable
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_214', 'strategist_9', 'strategistRewardsFee_1'] 
TMP_216 = CONVERT _token_1 to IERC20Upgradeable
TMP_217 = CONVERT this to address
TMP_218(uint256) = HIGH_LEVEL_CALL, dest:TMP_216(IERC20Upgradeable), function:balanceOf, arguments:['TMP_217']  
badgerTree_8(address) := ϕ(['badgerTree_1', 'badgerTree_7', 'badgerTree_8'])
newBalance_1(uint256) := TMP_218(uint256)
TMP_219 = CONVERT _token_1 to IERC20Upgradeable
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_219', 'badgerTree_8', 'newBalance_1'] 
Emit TreeDistribution(_token_1,newBalance_1,block.number,block.timestamp)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: strategist_4, name: strategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategist, Num: 4
Globalname: strategist, contract_name: StakedCitadel
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1
Ssa_name: token_19, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token, Num: 19
Globalname: token, contract_name: StakedCitadel
global...

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
Ssa_name: treasury_2, name: treasury

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: treasury, Num: 2
Globalname: treasury, contract_name: StakedCitadel
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: badgerTree_2, name: badgerTree

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: badgerTree, Num: 2
Globalname: badgerTree, contract_name: StakedCitadel
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
Source address: 5
Ssa_name: additionalTokensEarned_1, name: additionalTokensEarned

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: additionalTokensEarned, Num: 1
Globalname: additionalTokensEarned, contract_name: StakedCitadel
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: performanceFeeGovernance_2, name: performanceFeeGovernance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: performanceFeeGovernance, Num: 2
Globalname: performanceFeeGovernance, contract_name: StakedCitadel
global...

Name: performanceFeeGovernance Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: performanceFeeStrategist_2, name: performanceFeeStrategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: performanceFeeStrategist, Num: 2
Globalname: performanceFeeStrategist, contract_name: StakedCitadel
global...

Name: performanceFeeStrategist Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
strategist_4(address) := ϕ(['strategist_14', 'strategist_15', 'strategist_3', 'strategist_13', 'strategist_0', 'strategist_9', 'strategist_2'])
Phi
[i]Type for strategist

Name: strategist Function: reportAdditionalToken
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
token_19(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
Phi
[i]Type for token

Name: token Function: reportAdditionalToken
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
treasury_2(address) := ϕ(['treasury_0', 'treasury_18', 'treasury_7', 'treasury_1', 'treasury_24', 'treasury_25', 'treasury_8', 'treasury_20'])
Phi
[i]Type for treasury

Name: treasury Function: reportAdditionalToken
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
badgerTree_2(address) := ϕ(['badgerTree_0', 'badgerTree_1', 'badgerTree_8'])
Phi
[i]Type for badgerTree

Name: badgerTree Function: reportAdditionalToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
XXXX
additionalTokensEarned_1(mapping(address => uint256)) := ϕ(['additionalTokensEarned_5', 'additionalTokensEarned_0'])
Phi
[i]Type for additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
performanceFeeGovernance_2(uint256) := ϕ(['performanceFeeGovernance_0', 'performanceFeeGovernance_6', 'performanceFeeGovernance_1', 'performanceFeeGovernance_9', 'performanceFeeGovernance_7'])
Phi
[i]Type for performanceFeeGovernance

Name: performanceFeeGovernance Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
performanceFeeStrategist_2(uint256) := ϕ(['performanceFeeStrategist_11', 'performanceFeeStrategist_1', 'performanceFeeStrategist_7', 'performanceFeeStrategist_8', 'performanceFeeStrategist_0'])
Phi
[i]Type for performanceFeeStrategist

Name: performanceFeeStrategist Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, StakedCitadel._onlyStrategy()()
New param cache []
Old param cache: []
[i] TMP_203 cleared
[i] TMP_204 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -991

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token_21, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token, Num: 21
Globalname: token, contract_name: StakedCitadel
global...

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
Ssa_name: token_21, name: token

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_203 = CONVERT token_21 to address
Converting token_21

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
[i]Type for TMP_203

Name: TMP_203 Function: reportAdditionalToken
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(bool) = TMP_203 != _token_1
[i]Type for TMP_204

Name: TMP_204 Function: reportAdditionalToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(None) = SOLIDITY_CALL require(bool,string)(TMP_204,No want)
[i]Type for TMP_205

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_206 cleared
[i] TMP_207 cleared
[i] TMP_208 cleared
[i] tokenBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenBalance_1, name: tokenBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenBalance, Num: 1
Globalname: tokenBalance, contract_name: StakedCitadel
End popogation
Ssa_name: strategist_7, name: strategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategist, Num: 7
Globalname: strategist, contract_name: StakedCitadel
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1
Ssa_name: treasury_5, name: treasury

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: treasury, Num: 5
Globalname: treasury, contract_name: StakedCitadel
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: badgerTree_5, name: badgerTree

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: badgerTree, Num: 5
Globalname: badgerTree, contract_name: StakedCitadel
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
Source address: 5
Ssa_name: additionalTokensEarned_4, name: additionalTokensEarned

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: additionalTokensEarned, Num: 4
Globalname: additionalTokensEarned, contract_name: StakedCitadel
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: performanceFeeGovernance_5, name: performanceFeeGovernance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: performanceFeeGovernance, Num: 5
Globalname: performanceFeeGovernance, contract_name: StakedCitadel
global...

Name: performanceFeeGovernance Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: performanceFeeStrategist_5, name: performanceFeeStrategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: performanceFeeStrategist, Num: 5
Globalname: performanceFeeStrategist, contract_name: StakedCitadel
global...

Name: performanceFeeStrategist Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
TMP_206 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -991
ERC20Upgradeable
[i]Type for TMP_206

Name: TMP_206 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207 = CONVERT this to address
Converting this
9
[i]Type for TMP_207

Name: TMP_207 Function: reportAdditionalToken
Num: -1
Den: -1
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = HIGH_LEVEL_CALL, dest:TMP_206(IERC20Upgradeable), function:balanceOf, arguments:['TMP_207']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20Upgradeable, balanceOf
Handling balance function!
-991
[i]Type for TMP_208

Name: TMP_208 Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
strategist_7(address) := ϕ(['strategist_6', 'strategist_14', 'strategist_15', 'strategist_3', 'strategist_13', 'strategist_9', 'strategist_2'])
Phi
[i]Type for strategist

Name: strategist Function: reportAdditionalToken
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
treasury_5(address) := ϕ(['treasury_4', 'treasury_18', 'treasury_7', 'treasury_1', 'treasury_24', 'treasury_25', 'treasury_8', 'treasury_20'])
Phi
[i]Type for treasury

Name: treasury Function: reportAdditionalToken
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
badgerTree_5(address) := ϕ(['badgerTree_4', 'badgerTree_1', 'badgerTree_8'])
Phi
[i]Type for badgerTree

Name: badgerTree Function: reportAdditionalToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
XXXX
additionalTokensEarned_4(mapping(address => uint256)) := ϕ(['additionalTokensEarned_5', 'additionalTokensEarned_3'])
Phi
[i]Type for additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
performanceFeeGovernance_5(uint256) := ϕ(['performanceFeeGovernance_6', 'performanceFeeGovernance_1', 'performanceFeeGovernance_9', 'performanceFeeGovernance_7', 'performanceFeeGovernance_4'])
Phi
[i]Type for performanceFeeGovernance

Name: performanceFeeGovernance Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
performanceFeeStrategist_5(uint256) := ϕ(['performanceFeeStrategist_11', 'performanceFeeStrategist_7', 'performanceFeeStrategist_4', 'performanceFeeStrategist_8', 'performanceFeeStrategist_1'])
Phi
[i]Type for performanceFeeStrategist

Name: performanceFeeStrategist Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenBalance_1(uint256) := TMP_208(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_209 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: additionalTokensEarned_4, name: additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: additionalTokensEarned_4, name: additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: additionalTokensEarned_5, name: additionalTokensEarned

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: additionalTokensEarned, Num: 5
Globalname: additionalTokensEarned, contract_name: StakedCitadel
global...

Name: PIC_8 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
Ssa_name: additionalTokensEarned_5, name: additionalTokensEarned

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_35(uint256) -> additionalTokensEarned_4[_token_1]
INDEX
REFERENCE RIGHT VALUE PROPAGATION
Source address: -991
[i]Type for REF_35

Name: additionalTokensEarned Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_36(uint256) -> additionalTokensEarned_4[_token_1]
INDEX
REFERENCE RIGHT VALUE PROPAGATION
Source address: -991
[i]Type for REF_36

Name: additionalTokensEarned Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_209(uint256) = REF_36 (c)+ tokenBalance_1
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
additionalTokensEarned_5(mapping(address => uint256)) := ϕ(['additionalTokensEarned_4'])
Phi
[i]Type for additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_35 (->additionalTokensEarned_5) := TMP_209(uint256)
asgn
Error with REF_35 in function reportAdditionalToken
Error with: REF_35 in function reportAdditionalToken
Finance type key: (0, -1)
[i]Type for REF_35

Name: REF_35 Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: lastAdditionalTokenAmount_1, name: lastAdditionalTokenAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastAdditionalTokenAmount, Num: 1
Globalname: lastAdditionalTokenAmount, contract_name: StakedCitadel
End popogation
Ssa_name: lastAdditionalTokenAmount_1, name: lastAdditionalTokenAmount

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastAdditionalTokenAmount, Num: 1
Globalname: lastAdditionalTokenAmount, contract_name: StakedCitadel
REF_37(uint256) -> lastAdditionalTokenAmount_0[_token_1]
INDEX
REFERENCE RIGHT VALUE PROPAGATION
Source address: -991
[i]Type for REF_37

Name: None Function: None
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
lastAdditionalTokenAmount_1(mapping(address => uint256)) := ϕ(['lastAdditionalTokenAmount_0'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for lastAdditionalTokenAmount

Name: lastAdditionalTokenAmount Function: reportAdditionalToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_37 (->lastAdditionalTokenAmount_1) := tokenBalance_1(uint256)
asgn
Error with REF_37 in function reportAdditionalToken
Error with: REF_37 in function reportAdditionalToken
Finance type key: (0, -1)
[i]Type for REF_37

Name: REF_37 Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
[i] TMP_210 cleared
[i] governanceRewardsFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: performanceFeeGovernance_5, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeGovernance_5, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: governanceRewardsFee_1, name: governanceRewardsFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: governanceRewardsFee, Num: 1
Globalname: governanceRewardsFee, contract_name: StakedCitadel
End popogation
TMP_210(uint256) = INTERNAL_CALL, StakedCitadel._calculateFee(uint256,uint256)(tokenBalance_1,performanceFeeGovernance_5)
New param cache [[[-991], [-1], 6, None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-991], [-1], 6, None, [], 0, 'u', 'u']

Name: amount Function: None
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: feeBps Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_calculateFee(uint256,uint256)
Propogating All
Propogating All
feeBps_1
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
feeBps_1
Ssa_name: feeBps_1, name: feeBps

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
fee_1
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amount cleared
[i] feeBps cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: feeBps_1, name: feeBps

Name: feeBps_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_amount_1', 'r_3', 'tokenBalance_1'])
Phi
[i]Type for amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
feeBps_1(uint256) := ϕ(['withdrawalFee_10', 'performanceFeeStrategist_10', 'performanceFeeGovernance_8', 'performanceFeeGovernance_5', 'performanceFeeStrategist_6'])
Phi
[i]Type for feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_BPS_6(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_376 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_376(bool) = feeBps_1 == 0
[i]Type for TMP_376

Name: TMP_376 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_377 cleared
[i] TMP_378 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: StakedCitadel
End popogation
TMP_377(uint256) = amount_1 (c)* feeBps_1
lnorm: 6 rnorm: u
Source address: u
[i]Type for TMP_377

Name: TMP_377 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_378(uint256) = TMP_377 (c)/ MAX_BPS_6
lnorm: 6 rnorm: u
Source address: u
lnorm: 6 rnorm: u
-991
-1
[i]Type for TMP_378

Name: TMP_378 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
fee_1(uint256) := TMP_378(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN fee_1
RETURN

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amount cleared
[i] feeBps cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_amount_1', 'r_3', 'tokenBalance_1'])
Phi
[i]Type for amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
feeBps_1(uint256) := ϕ(['withdrawalFee_10', 'performanceFeeStrategist_10', 'performanceFeeGovernance_8', 'performanceFeeGovernance_5', 'performanceFeeStrategist_6'])
Phi
[i]Type for feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_BPS_6(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_376 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_376(bool) = feeBps_1 == 0
[i]Type for TMP_376

Name: TMP_376 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_377 cleared
[i] TMP_378 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: StakedCitadel
End popogation
TMP_377(uint256) = amount_1 (c)* feeBps_1
lnorm: 6 rnorm: u
Source address: u
[i]Type for TMP_377

Name: TMP_377 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_378(uint256) = TMP_377 (c)/ MAX_BPS_6
lnorm: 6 rnorm: u
Source address: u
lnorm: 6 rnorm: u
-991
-1
[i]Type for TMP_378

Name: TMP_378 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
fee_1(uint256) := TMP_378(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN fee_1
RETURN

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_210

Name: TMP_210 Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
governanceRewardsFee_1(uint256) := TMP_210(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for governanceRewardsFee

Name: governanceRewardsFee Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_211 cleared
[i] strategistRewardsFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: performanceFeeStrategist_6, name: performanceFeeStrategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: performanceFeeStrategist, Num: 6
Globalname: performanceFeeStrategist, contract_name: StakedCitadel
global...

Name: performanceFeeStrategist Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: performanceFeeStrategist_6, name: performanceFeeStrategist

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: strategistRewardsFee_1, name: strategistRewardsFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategistRewardsFee, Num: 1
Globalname: strategistRewardsFee, contract_name: StakedCitadel
End popogation
TMP_211(uint256) = INTERNAL_CALL, StakedCitadel._calculateFee(uint256,uint256)(tokenBalance_1,performanceFeeStrategist_6)
New param cache [[[-991], [-1], 6, None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-991], [-1], 6, None, [], 0, 'u', 'u']

Name: amount Function: None
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: feeBps Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_calculateFee(uint256,uint256)
Propogating All
Propogating All
feeBps_1
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: amount_1 Function: _calculateFee
Num: -991, -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
feeBps_1
Ssa_name: feeBps_1, name: feeBps

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
fee_1
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] amount cleared
[i] feeBps cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: feeBps_1, name: feeBps

Name: feeBps_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_amount_1', 'r_3', 'tokenBalance_1'])
Phi
[i]Type for amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
feeBps_1(uint256) := ϕ(['withdrawalFee_10', 'performanceFeeStrategist_10', 'performanceFeeGovernance_8', 'performanceFeeGovernance_5', 'performanceFeeStrategist_6'])
Phi
[i]Type for feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_BPS_6(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_376 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_376(bool) = feeBps_1 == 0
[i]Type for TMP_376

Name: TMP_376 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_377 cleared
[i] TMP_378 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: StakedCitadel
End popogation
TMP_377(uint256) = amount_1 (c)* feeBps_1
lnorm: 6 rnorm: u
Source address: u
[i]Type for TMP_377

Name: TMP_377 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_378(uint256) = TMP_377 (c)/ MAX_BPS_6
lnorm: 6 rnorm: u
Source address: u
lnorm: 6 rnorm: u
-991
-1
[i]Type for TMP_378

Name: TMP_378 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
fee_1(uint256) := TMP_378(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN fee_1
RETURN

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amount cleared
[i] feeBps cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_amount_1', 'r_3', 'tokenBalance_1'])
Phi
[i]Type for amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
feeBps_1(uint256) := ϕ(['withdrawalFee_10', 'performanceFeeStrategist_10', 'performanceFeeGovernance_8', 'performanceFeeGovernance_5', 'performanceFeeStrategist_6'])
Phi
[i]Type for feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_BPS_6(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_376 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_376(bool) = feeBps_1 == 0
[i]Type for TMP_376

Name: TMP_376 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_377 cleared
[i] TMP_378 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: StakedCitadel
End popogation
TMP_377(uint256) = amount_1 (c)* feeBps_1
lnorm: 6 rnorm: u
Source address: u
[i]Type for TMP_377

Name: TMP_377 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_378(uint256) = TMP_377 (c)/ MAX_BPS_6
lnorm: 6 rnorm: u
Source address: u
lnorm: 6 rnorm: u
-991
-1
[i]Type for TMP_378

Name: TMP_378 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
fee_1(uint256) := TMP_378(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN fee_1
RETURN

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_211

Name: TMP_211 Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
strategistRewardsFee_1(uint256) := TMP_211(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for strategistRewardsFee

Name: strategistRewardsFee Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_212 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: governanceRewardsFee_1, name: governanceRewardsFee

Name: governanceRewardsFee Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: treasury_7, name: treasury

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: treasury, Num: 7
Globalname: treasury, contract_name: StakedCitadel
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2
Ssa_name: treasury_7, name: treasury

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: governanceRewardsFee_1, name: governanceRewardsFee

Name: governanceRewardsFee Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_212 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -991
ERC20Upgradeable
[i]Type for TMP_212

Name: TMP_212 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_212', 'treasury_7', 'governanceRewardsFee_1'] 
[i] TMP_214 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: strategistRewardsFee_1, name: strategistRewardsFee

Name: strategistRewardsFee Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategist_9, name: strategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategist, Num: 9
Globalname: strategist, contract_name: StakedCitadel
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1
Ssa_name: strategist_9, name: strategist

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategistRewardsFee_1, name: strategistRewardsFee

Name: strategistRewardsFee Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_214 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -991
ERC20Upgradeable
[i]Type for TMP_214

Name: TMP_214 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_214', 'strategist_9', 'strategistRewardsFee_1'] 
[i] TMP_216 cleared
[i] TMP_217 cleared
[i] TMP_218 cleared
[i] newBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: newBalance_1, name: newBalance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newBalance, Num: 1
Globalname: newBalance, contract_name: StakedCitadel
End popogation
Ssa_name: badgerTree_8, name: badgerTree

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: badgerTree, Num: 8
Globalname: badgerTree, contract_name: StakedCitadel
global...

Name: PIC_9 Function: None
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
Source address: 5
TMP_216 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -991
ERC20Upgradeable
[i]Type for TMP_216

Name: TMP_216 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217 = CONVERT this to address
Converting this
9
[i]Type for TMP_217

Name: TMP_217 Function: reportAdditionalToken
Num: -1
Den: -1
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(uint256) = HIGH_LEVEL_CALL, dest:TMP_216(IERC20Upgradeable), function:balanceOf, arguments:['TMP_217']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20Upgradeable, balanceOf
Handling balance function!
-991
[i]Type for TMP_218

Name: TMP_218 Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
badgerTree_8(address) := ϕ(['badgerTree_1', 'badgerTree_7', 'badgerTree_8'])
Phi
[i]Type for badgerTree

Name: badgerTree Function: reportAdditionalToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
XXXX
newBalance_1(uint256) := TMP_218(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for newBalance

Name: newBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_219 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: newBalance_1, name: newBalance

Name: newBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: badgerTree_8, name: badgerTree

Name: badgerTree Function: reportAdditionalToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
Ssa_name: badgerTree_8, name: badgerTree

Name: badgerTree Function: reportAdditionalToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
Ssa_name: newBalance_1, name: newBalance

Name: newBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_219 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -991
ERC20Upgradeable
[i]Type for TMP_219

Name: TMP_219 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_219', 'badgerTree_8', 'newBalance_1'] 
Propogating parameters and globals to SSA variables...
Ssa_name: newBalance_1, name: newBalance

Name: newBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: newBalance_1, name: newBalance

Name: newBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation


strategist_4(address) := ϕ(['strategist_14', 'strategist_15', 'strategist_3', 'strategist_13', 'strategist_0', 'strategist_9', 'strategist_2'])
token_19(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
treasury_2(address) := ϕ(['treasury_0', 'treasury_18', 'treasury_7', 'treasury_1', 'treasury_24', 'treasury_25', 'treasury_8', 'treasury_20'])
badgerTree_2(address) := ϕ(['badgerTree_0', 'badgerTree_1', 'badgerTree_8'])
additionalTokensEarned_1(mapping(address => uint256)) := ϕ(['additionalTokensEarned_5', 'additionalTokensEarned_0'])
performanceFeeGovernance_2(uint256) := ϕ(['performanceFeeGovernance_0', 'performanceFeeGovernance_6', 'performanceFeeGovernance_1', 'performanceFeeGovernance_9', 'performanceFeeGovernance_7'])
performanceFeeStrategist_2(uint256) := ϕ(['performanceFeeStrategist_11', 'performanceFeeStrategist_1', 'performanceFeeStrategist_7', 'performanceFeeStrategist_8', 'performanceFeeStrategist_0'])
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
INTERNAL_CALL, StakedCitadel._onlyStrategy()()
TMP_203 = CONVERT token_21 to address
TMP_204(bool) = TMP_203 != _token_1
TMP_205(None) = SOLIDITY_CALL require(bool,string)(TMP_204,No want)
TMP_206 = CONVERT _token_1 to IERC20Upgradeable
TMP_207 = CONVERT this to address
TMP_208(uint256) = HIGH_LEVEL_CALL, dest:TMP_206(IERC20Upgradeable), function:balanceOf, arguments:['TMP_207']  
strategist_7(address) := ϕ(['strategist_6', 'strategist_14', 'strategist_15', 'strategist_3', 'strategist_13', 'strategist_9', 'strategist_2'])
treasury_5(address) := ϕ(['treasury_4', 'treasury_18', 'treasury_7', 'treasury_1', 'treasury_24', 'treasury_25', 'treasury_8', 'treasury_20'])
badgerTree_5(address) := ϕ(['badgerTree_4', 'badgerTree_1', 'badgerTree_8'])
additionalTokensEarned_4(mapping(address => uint256)) := ϕ(['additionalTokensEarned_5', 'additionalTokensEarned_3'])
performanceFeeGovernance_5(uint256) := ϕ(['performanceFeeGovernance_6', 'performanceFeeGovernance_1', 'performanceFeeGovernance_9', 'performanceFeeGovernance_7', 'performanceFeeGovernance_4'])
performanceFeeStrategist_5(uint256) := ϕ(['performanceFeeStrategist_11', 'performanceFeeStrategist_7', 'performanceFeeStrategist_4', 'performanceFeeStrategist_8', 'performanceFeeStrategist_1'])
tokenBalance_1(uint256) := TMP_208(uint256)
REF_35(uint256) -> additionalTokensEarned_4[_token_1]
REF_36(uint256) -> additionalTokensEarned_4[_token_1]
TMP_209(uint256) = REF_36 (c)+ tokenBalance_1
additionalTokensEarned_5(mapping(address => uint256)) := ϕ(['additionalTokensEarned_4'])
REF_35 (->additionalTokensEarned_5) := TMP_209(uint256)
REF_37(uint256) -> lastAdditionalTokenAmount_0[_token_1]
lastAdditionalTokenAmount_1(mapping(address => uint256)) := ϕ(['lastAdditionalTokenAmount_0'])
REF_37 (->lastAdditionalTokenAmount_1) := tokenBalance_1(uint256)
TMP_210(uint256) = INTERNAL_CALL, StakedCitadel._calculateFee(uint256,uint256)(tokenBalance_1,performanceFeeGovernance_5)
governanceRewardsFee_1(uint256) := TMP_210(uint256)
TMP_211(uint256) = INTERNAL_CALL, StakedCitadel._calculateFee(uint256,uint256)(tokenBalance_1,performanceFeeStrategist_6)
strategistRewardsFee_1(uint256) := TMP_211(uint256)
TMP_212 = CONVERT _token_1 to IERC20Upgradeable
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_212', 'treasury_7', 'governanceRewardsFee_1'] 
TMP_214 = CONVERT _token_1 to IERC20Upgradeable
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_214', 'strategist_9', 'strategistRewardsFee_1'] 
TMP_216 = CONVERT _token_1 to IERC20Upgradeable
TMP_217 = CONVERT this to address
TMP_218(uint256) = HIGH_LEVEL_CALL, dest:TMP_216(IERC20Upgradeable), function:balanceOf, arguments:['TMP_217']  
badgerTree_8(address) := ϕ(['badgerTree_1', 'badgerTree_7', 'badgerTree_8'])
newBalance_1(uint256) := TMP_218(uint256)
TMP_219 = CONVERT _token_1 to IERC20Upgradeable
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_219', 'badgerTree_8', 'newBalance_1'] 
Emit TreeDistribution(_token_1,newBalance_1,block.number,block.timestamp)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: strategist_4, name: strategist

Name: strategist Function: reportAdditionalToken
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_19, name: token

Name: token Function: reportAdditionalToken
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: treasury_2, name: treasury

Name: treasury Function: reportAdditionalToken
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: badgerTree_2, name: badgerTree

Name: badgerTree Function: reportAdditionalToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
Ssa_name: additionalTokensEarned_1, name: additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeGovernance_2, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeStrategist_2, name: performanceFeeStrategist

Name: performanceFeeStrategist Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
strategist_4(address) := ϕ(['strategist_14', 'strategist_15', 'strategist_3', 'strategist_13', 'strategist_0', 'strategist_9', 'strategist_2'])
Phi
[i]Type for strategist

Name: strategist Function: reportAdditionalToken
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
token_19(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
Phi
[i]Type for token

Name: token Function: reportAdditionalToken
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
treasury_2(address) := ϕ(['treasury_0', 'treasury_18', 'treasury_7', 'treasury_1', 'treasury_24', 'treasury_25', 'treasury_8', 'treasury_20'])
Phi
[i]Type for treasury

Name: treasury Function: reportAdditionalToken
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
badgerTree_2(address) := ϕ(['badgerTree_0', 'badgerTree_1', 'badgerTree_8'])
Phi
[i]Type for badgerTree

Name: badgerTree Function: reportAdditionalToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
XXXX
additionalTokensEarned_1(mapping(address => uint256)) := ϕ(['additionalTokensEarned_5', 'additionalTokensEarned_0'])
Phi
[i]Type for additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
performanceFeeGovernance_2(uint256) := ϕ(['performanceFeeGovernance_0', 'performanceFeeGovernance_6', 'performanceFeeGovernance_1', 'performanceFeeGovernance_9', 'performanceFeeGovernance_7'])
Phi
[i]Type for performanceFeeGovernance

Name: performanceFeeGovernance Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
performanceFeeStrategist_2(uint256) := ϕ(['performanceFeeStrategist_11', 'performanceFeeStrategist_1', 'performanceFeeStrategist_7', 'performanceFeeStrategist_8', 'performanceFeeStrategist_0'])
Phi
[i]Type for performanceFeeStrategist

Name: performanceFeeStrategist Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, ReentrancyGuardUpgradeable.nonReentrant()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, StakedCitadel._onlyStrategy()()
New param cache []
Old param cache: []
[i] TMP_203 cleared
[i] TMP_204 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_21, name: token

Name: token Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_21, name: token

Name: token Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_203 = CONVERT token_21 to address
Converting token_21

Name: token Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
[i]Type for TMP_203

Name: TMP_203 Function: reportAdditionalToken
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_204(bool) = TMP_203 != _token_1
[i]Type for TMP_204

Name: TMP_204 Function: reportAdditionalToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_205(None) = SOLIDITY_CALL require(bool,string)(TMP_204,No want)
[i]Type for TMP_205

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_206 cleared
[i] TMP_207 cleared
[i] TMP_208 cleared
[i] tokenBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: tokenBalance, Num: 1
Globalname: tokenBalance, contract_name: StakedCitadel
End popogation
Ssa_name: strategist_7, name: strategist

Name: strategist Function: reportAdditionalToken
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: treasury_5, name: treasury

Name: treasury Function: reportAdditionalToken
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: badgerTree_5, name: badgerTree

Name: badgerTree Function: reportAdditionalToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
Ssa_name: additionalTokensEarned_4, name: additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeGovernance_5, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeStrategist_5, name: performanceFeeStrategist

Name: performanceFeeStrategist Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
TMP_206 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -991
ERC20Upgradeable
[i]Type for TMP_206

Name: TMP_206 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_207 = CONVERT this to address
Converting this
9
[i]Type for TMP_207

Name: TMP_207 Function: reportAdditionalToken
Num: 
Den: 
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_208(uint256) = HIGH_LEVEL_CALL, dest:TMP_206(IERC20Upgradeable), function:balanceOf, arguments:['TMP_207']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20Upgradeable, balanceOf
Handling balance function!
-991
[i]Type for TMP_208

Name: TMP_208 Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
strategist_7(address) := ϕ(['strategist_6', 'strategist_14', 'strategist_15', 'strategist_3', 'strategist_13', 'strategist_9', 'strategist_2'])
Phi
[i]Type for strategist

Name: strategist Function: reportAdditionalToken
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
treasury_5(address) := ϕ(['treasury_4', 'treasury_18', 'treasury_7', 'treasury_1', 'treasury_24', 'treasury_25', 'treasury_8', 'treasury_20'])
Phi
[i]Type for treasury

Name: treasury Function: reportAdditionalToken
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
XXXX
badgerTree_5(address) := ϕ(['badgerTree_4', 'badgerTree_1', 'badgerTree_8'])
Phi
[i]Type for badgerTree

Name: badgerTree Function: reportAdditionalToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
XXXX
additionalTokensEarned_4(mapping(address => uint256)) := ϕ(['additionalTokensEarned_5', 'additionalTokensEarned_3'])
Phi
[i]Type for additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
performanceFeeGovernance_5(uint256) := ϕ(['performanceFeeGovernance_6', 'performanceFeeGovernance_1', 'performanceFeeGovernance_9', 'performanceFeeGovernance_7', 'performanceFeeGovernance_4'])
Phi
[i]Type for performanceFeeGovernance

Name: performanceFeeGovernance Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
performanceFeeStrategist_5(uint256) := ϕ(['performanceFeeStrategist_11', 'performanceFeeStrategist_7', 'performanceFeeStrategist_4', 'performanceFeeStrategist_8', 'performanceFeeStrategist_1'])
Phi
[i]Type for performanceFeeStrategist

Name: performanceFeeStrategist Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
tokenBalance_1(uint256) := TMP_208(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_209 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: additionalTokensEarned_4, name: additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: additionalTokensEarned_4, name: additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: additionalTokensEarned_5, name: additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: additionalTokensEarned_5, name: additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
REF_35(uint256) -> additionalTokensEarned_4[_token_1]
INDEX
REFERENCE RIGHT VALUE PROPAGATION
Source address: -991
[i]Type for REF_35

Name: additionalTokensEarned Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
REF_36(uint256) -> additionalTokensEarned_4[_token_1]
INDEX
REFERENCE RIGHT VALUE PROPAGATION
Source address: -991
[i]Type for REF_36

Name: additionalTokensEarned Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
TMP_209(uint256) = REF_36 (c)+ tokenBalance_1
Source address: u
[i]Type for TMP_209

Name: TMP_209 Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
additionalTokensEarned_5(mapping(address => uint256)) := ϕ(['additionalTokensEarned_4'])
Phi
[i]Type for additionalTokensEarned

Name: additionalTokensEarned Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_35 (->additionalTokensEarned_5) := TMP_209(uint256)
asgn
Finance type key: (0, -1)
[i]Type for REF_35

Name: REF_35 Function: reportAdditionalToken
Num: 
Den: 
Address: u
Norm: u
LF: _token
Value: u
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: lastAdditionalTokenAmount_1, name: lastAdditionalTokenAmount

Name: lastAdditionalTokenAmount Function: reportAdditionalToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastAdditionalTokenAmount, Num: 1
Globalname: lastAdditionalTokenAmount, contract_name: StakedCitadel
End popogation
Ssa_name: lastAdditionalTokenAmount_1, name: lastAdditionalTokenAmount

Name: lastAdditionalTokenAmount Function: reportAdditionalToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: lastAdditionalTokenAmount, Num: 1
Globalname: lastAdditionalTokenAmount, contract_name: StakedCitadel
REF_37(uint256) -> lastAdditionalTokenAmount_0[_token_1]
INDEX
REFERENCE RIGHT VALUE PROPAGATION
Source address: -991
[i]Type for REF_37

Name: None Function: None
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Root: None, Field: None
XXXX
lastAdditionalTokenAmount_1(mapping(address => uint256)) := ϕ(['lastAdditionalTokenAmount_0'])
Phi

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef


END==================================
[i]Type for lastAdditionalTokenAmount

Name: lastAdditionalTokenAmount Function: reportAdditionalToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
REF_37 (->lastAdditionalTokenAmount_1) := tokenBalance_1(uint256)
asgn
Finance type key: (0, -1)
[i]Type for REF_37

Name: REF_37 Function: reportAdditionalToken
Num: 
Den: 
Address: u
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: raw balance
Root: None, Field: None
XXXX
[i] TMP_210 cleared
[i] governanceRewardsFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: performanceFeeGovernance_5, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeGovernance_5, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: governanceRewardsFee_1, name: governanceRewardsFee

Name: governanceRewardsFee Function: reportAdditionalToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: governanceRewardsFee, Num: 1
Globalname: governanceRewardsFee, contract_name: StakedCitadel
End popogation
TMP_210(uint256) = INTERNAL_CALL, StakedCitadel._calculateFee(uint256,uint256)(tokenBalance_1,performanceFeeGovernance_5)
New param cache [[[-991], [-1], 6, None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-991], [-1], 6, None, [], 0, 'u', 'u']

Name: amount Function: None
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: feeBps Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_calculateFee(uint256,uint256)
Propogating All
Propogating All
feeBps_1
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: amount_1 Function: _calculateFee
Num: -991, -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
feeBps_1
Ssa_name: feeBps_1, name: feeBps

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
fee_1
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] amount cleared
[i] feeBps cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: feeBps_1, name: feeBps

Name: feeBps_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_amount_1', 'r_3', 'tokenBalance_1'])
Phi
[i]Type for amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
feeBps_1(uint256) := ϕ(['withdrawalFee_10', 'performanceFeeStrategist_10', 'performanceFeeGovernance_8', 'performanceFeeGovernance_5', 'performanceFeeStrategist_6'])
Phi
[i]Type for feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_BPS_6(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_376 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_376(bool) = feeBps_1 == 0
[i]Type for TMP_376

Name: TMP_376 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_377 cleared
[i] TMP_378 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: StakedCitadel
End popogation
TMP_377(uint256) = amount_1 (c)* feeBps_1
lnorm: 6 rnorm: u
Source address: u
[i]Type for TMP_377

Name: TMP_377 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_378(uint256) = TMP_377 (c)/ MAX_BPS_6
lnorm: 6 rnorm: u
Source address: u
lnorm: 6 rnorm: u
-991
-1
[i]Type for TMP_378

Name: TMP_378 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
fee_1(uint256) := TMP_378(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN fee_1
RETURN

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amount cleared
[i] feeBps cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_amount_1', 'r_3', 'tokenBalance_1'])
Phi
[i]Type for amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
feeBps_1(uint256) := ϕ(['withdrawalFee_10', 'performanceFeeStrategist_10', 'performanceFeeGovernance_8', 'performanceFeeGovernance_5', 'performanceFeeStrategist_6'])
Phi
[i]Type for feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_BPS_6(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_376 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_376(bool) = feeBps_1 == 0
[i]Type for TMP_376

Name: TMP_376 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_377 cleared
[i] TMP_378 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: StakedCitadel
End popogation
TMP_377(uint256) = amount_1 (c)* feeBps_1
lnorm: 6 rnorm: u
Source address: u
[i]Type for TMP_377

Name: TMP_377 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_378(uint256) = TMP_377 (c)/ MAX_BPS_6
lnorm: 6 rnorm: u
Source address: u
lnorm: 6 rnorm: u
-991
-1
[i]Type for TMP_378

Name: TMP_378 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
fee_1(uint256) := TMP_378(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN fee_1
RETURN

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_210

Name: TMP_210 Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
governanceRewardsFee_1(uint256) := TMP_210(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for governanceRewardsFee

Name: governanceRewardsFee Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_211 cleared
[i] strategistRewardsFee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: performanceFeeStrategist_6, name: performanceFeeStrategist

Name: performanceFeeStrategist Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeStrategist_6, name: performanceFeeStrategist

Name: performanceFeeStrategist Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: tokenBalance_1, name: tokenBalance

Name: tokenBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: strategistRewardsFee_1, name: strategistRewardsFee

Name: strategistRewardsFee Function: reportAdditionalToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategistRewardsFee, Num: 1
Globalname: strategistRewardsFee, contract_name: StakedCitadel
End popogation
TMP_211(uint256) = INTERNAL_CALL, StakedCitadel._calculateFee(uint256,uint256)(tokenBalance_1,performanceFeeStrategist_6)
New param cache [[[-991], [-1], 6, None, [], 0, 'u', 'u'], [[-1], [-1], 'u', None, [], -1, 'u', 'u']]
Old param cache: [[[], [], 'u', None, [], -1, 'u'], [[-1], [-1], 'u', None, [], -1, 'u']]
[[-991], [-1], 6, None, [], 0, 'u', 'u']

Name: amount Function: None
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
[[-1], [-1], 'u', None, [], -1, 'u', 'u']

Name: feeBps Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
FIND RETURN
ENTRY_POINT
_calculateFee(uint256,uint256)
Propogating All
Propogating All
feeBps_1
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
Propogating All
Propogating All
amount_1
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Source address: u

Name: amount_1 Function: _calculateFee
Num: -991, -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
feeBps_1
Ssa_name: feeBps_1, name: feeBps

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Propogating All
fee_1
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
[i] amount cleared
[i] feeBps cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amount_1, name: amount

Name: amount_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: feeBps_1, name: feeBps

Name: feeBps_1 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_amount_1', 'r_3', 'tokenBalance_1'])
Phi
[i]Type for amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
feeBps_1(uint256) := ϕ(['withdrawalFee_10', 'performanceFeeStrategist_10', 'performanceFeeGovernance_8', 'performanceFeeGovernance_5', 'performanceFeeStrategist_6'])
Phi
[i]Type for feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_BPS_6(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_376 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_376(bool) = feeBps_1 == 0
[i]Type for TMP_376

Name: TMP_376 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_377 cleared
[i] TMP_378 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: StakedCitadel
End popogation
TMP_377(uint256) = amount_1 (c)* feeBps_1
lnorm: 6 rnorm: u
Source address: u
[i]Type for TMP_377

Name: TMP_377 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_378(uint256) = TMP_377 (c)/ MAX_BPS_6
lnorm: 6 rnorm: u
Source address: u
lnorm: 6 rnorm: u
-991
-1
[i]Type for TMP_378

Name: TMP_378 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
fee_1(uint256) := TMP_378(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN fee_1
RETURN

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
[i] amount cleared
[i] feeBps cleared
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: amount_1 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Copied ftype
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: feeBps_1 Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
amount_1(uint256) := ϕ(['_amount_1', 'r_3', 'tokenBalance_1'])
Phi
[i]Type for amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
feeBps_1(uint256) := ϕ(['withdrawalFee_10', 'performanceFeeStrategist_10', 'performanceFeeGovernance_8', 'performanceFeeGovernance_5', 'performanceFeeStrategist_6'])
Phi
[i]Type for feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
MAX_BPS_6(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_376 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_376(bool) = feeBps_1 == 0
[i]Type for TMP_376

Name: TMP_376 Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
[i] TMP_377 cleared
[i] TMP_378 cleared
[i] fee cleared
Propogating parameters and globals to SSA variables...
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: amount_1, name: amount

Name: amount Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: feeBps_1, name: feeBps

Name: feeBps Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_6, name: MAX_BPS

Name: MAX_BPS Function: _calculateFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: fee, Num: 1
Globalname: fee, contract_name: StakedCitadel
End popogation
TMP_377(uint256) = amount_1 (c)* feeBps_1
lnorm: 6 rnorm: u
Source address: u
[i]Type for TMP_377

Name: TMP_377 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
TMP_378(uint256) = TMP_377 (c)/ MAX_BPS_6
lnorm: 6 rnorm: u
Source address: u
lnorm: 6 rnorm: u
-991
-1
[i]Type for TMP_378

Name: TMP_378 Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
fee_1(uint256) := TMP_378(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: fee_1, name: fee

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
End popogation
RETURN fee_1
RETURN

Name: fee Function: _calculateFee
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Propogating parameters and globals to SSA variables...
End popogation
RETURN 0
RETURN

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
([-1], [-1], 0, 'u', 'u', -1)
[i]Type for TMP_211

Name: TMP_211 Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
strategistRewardsFee_1(uint256) := TMP_211(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for strategistRewardsFee

Name: strategistRewardsFee Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_212 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: governanceRewardsFee_1, name: governanceRewardsFee

Name: governanceRewardsFee Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: treasury_7, name: treasury

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: treasury_7, name: treasury

Name: None Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: governanceRewardsFee_1, name: governanceRewardsFee

Name: governanceRewardsFee Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_212 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -991
ERC20Upgradeable
[i]Type for TMP_212

Name: TMP_212 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_212', 'treasury_7', 'governanceRewardsFee_1'] 
[i] TMP_214 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: strategistRewardsFee_1, name: strategistRewardsFee

Name: strategistRewardsFee Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategist_9, name: strategist

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategist_9, name: strategist

Name: None Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategistRewardsFee_1, name: strategistRewardsFee

Name: strategistRewardsFee Function: reportAdditionalToken
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_214 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -991
ERC20Upgradeable
[i]Type for TMP_214

Name: TMP_214 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_214', 'strategist_9', 'strategistRewardsFee_1'] 
[i] TMP_216 cleared
[i] TMP_217 cleared
[i] TMP_218 cleared
[i] newBalance cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: newBalance_1, name: newBalance

Name: newBalance Function: reportAdditionalToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: newBalance, Num: 1
Globalname: newBalance, contract_name: StakedCitadel
End popogation
Ssa_name: badgerTree_8, name: badgerTree

Name: badgerTree Function: reportAdditionalToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
TMP_216 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -991
ERC20Upgradeable
[i]Type for TMP_216

Name: TMP_216 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_217 = CONVERT this to address
Converting this
9
[i]Type for TMP_217

Name: TMP_217 Function: reportAdditionalToken
Num: 
Den: 
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_218(uint256) = HIGH_LEVEL_CALL, dest:TMP_216(IERC20Upgradeable), function:balanceOf, arguments:['TMP_217']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20Upgradeable, balanceOf
Handling balance function!
-991
[i]Type for TMP_218

Name: TMP_218 Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
badgerTree_8(address) := ϕ(['badgerTree_1', 'badgerTree_7', 'badgerTree_8'])
Phi
[i]Type for badgerTree

Name: badgerTree Function: reportAdditionalToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
XXXX
newBalance_1(uint256) := TMP_218(uint256)
asgn
Source address: u
Finance type key: (0, -1)
[i]Type for newBalance

Name: newBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
[i] TMP_219 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: newBalance_1, name: newBalance

Name: newBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: badgerTree_8, name: badgerTree

Name: badgerTree Function: reportAdditionalToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
Ssa_name: badgerTree_8, name: badgerTree

Name: badgerTree Function: reportAdditionalToken
Num: -1
Den: -1
Address: 5
Norm: 0
LF: badgerTree
Value: u
Fields: 
Finance Type: undef
Ssa_name: newBalance_1, name: newBalance

Name: newBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_219 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -991
ERC20Upgradeable
[i]Type for TMP_219

Name: TMP_219 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_219', 'badgerTree_8', 'newBalance_1'] 
Propogating parameters and globals to SSA variables...
Ssa_name: newBalance_1, name: newBalance

Name: newBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: newBalance_1, name: newBalance

Name: newBalance Function: reportAdditionalToken
Num: -991
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
Ssa_name: _token_1, name: _token

Name: _token_1 Function: reportAdditionalToken
Num: 
Den: 
Address: -991
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
Reading Function: setTreasury
Checking funcion...



setTreasury
Function name: setTreasury
Finding type for _treasury(address ... )
prev address? u
Head Addr: -990
    Norm: 0
    Set: {-990}
    Fin: NULL
New param cache [[[], [], 0, '_treasury', [], -1, -990, 'u']]
FIND RETURN
ENTRY_POINT
setTreasury(address)


MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_224 = CONVERT 0 to address
TMP_225(bool) = _treasury_1 != TMP_224
TMP_226(None) = SOLIDITY_CALL require(bool,string)(TMP_225,Address 0)
treasury_8(address) := _treasury_1(address)
Emit SetTreasury(_treasury_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
FIND RETURN
ENTRY_POINT
_onlyGovernance()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: governance_1, name: governance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: governance, Num: 1
Globalname: governance, contract_name: StakedCitadel
global...

Name: PIC_27 Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Source address: 3
governance_1(address) := ϕ(['governance_4', 'governance_10', 'governance_0', 'governance_5'])
Phi
[i]Type for governance

Name: governance Function: _onlyGovernance
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: governance_1, name: governance

Name: governance Function: _onlyGovernance
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: governance_1, name: governance

Name: governance Function: _onlyGovernance
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_17(bool) = msg.sender == governance_1
[i]Type for TMP_17

Name: TMP_17 Function: _onlyGovernance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_18(None) = SOLIDITY_CALL require(bool,string)(TMP_17,onlyGovernance)
[i]Type for TMP_18

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: governance_1, name: governance

Name: governance Function: _onlyGovernance
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
governance_1(address) := ϕ(['governance_4', 'governance_10', 'governance_0', 'governance_5'])
Phi
[i]Type for governance

Name: governance Function: _onlyGovernance
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_17 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: governance_1, name: governance

Name: governance Function: _onlyGovernance
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: governance_1, name: governance

Name: governance Function: _onlyGovernance
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_17(bool) = msg.sender == governance_1
[i]Type for TMP_17

Name: TMP_17 Function: _onlyGovernance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_18(None) = SOLIDITY_CALL require(bool,string)(TMP_17,onlyGovernance)
[i]Type for TMP_18

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_224 cleared
[i] TMP_225 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _treasury_1, name: _treasury

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -990

Name: _treasury_1 Function: setTreasury
Num: 
Den: 
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: setTreasury
Num: 
Den: 
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_224 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: setTreasury
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_225(bool) = _treasury_1 != TMP_224
[i]Type for TMP_225

Name: TMP_225 Function: setTreasury
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(None) = SOLIDITY_CALL require(bool,string)(TMP_225,Address 0)
[i]Type for TMP_226

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: setTreasury
Num: 
Den: 
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: setTreasury
Num: 
Den: 
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: treasury_8, name: treasury

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: treasury, Num: 8
Globalname: treasury, contract_name: StakedCitadel
global...

Name: PIC_5 Function: None
Num: -1
Den: -1
Address: 2
Norm: 0
LF: treasury
Value: u
Fields: 
Finance Type: undef
Source address: 2
End popogation
treasury_8(address) := _treasury_1(address)
asgn
Source address: -990
Finance type key: (-1, -1)
[i]Type for treasury

Name: treasury Function: setTreasury
Num: -1
Den: -1
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: setTreasury
Num: 
Den: 
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: setTreasury
Num: 
Den: 
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
End popogation


MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_224 = CONVERT 0 to address
TMP_225(bool) = _treasury_1 != TMP_224
TMP_226(None) = SOLIDITY_CALL require(bool,string)(TMP_225,Address 0)
treasury_8(address) := _treasury_1(address)
Emit SetTreasury(_treasury_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
[i] TMP_224 cleared
[i] TMP_225 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: setTreasury
Num: 
Den: 
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: setTreasury
Num: 
Den: 
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_224 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_224

Name: TMP_224 Function: setTreasury
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_225(bool) = _treasury_1 != TMP_224
[i]Type for TMP_225

Name: TMP_225 Function: setTreasury
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_226(None) = SOLIDITY_CALL require(bool,string)(TMP_225,Address 0)
[i]Type for TMP_226

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: setTreasury
Num: 
Den: 
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: setTreasury
Num: 
Den: 
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: treasury_8, name: treasury

Name: treasury Function: setTreasury
Num: -1
Den: -1
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
End popogation
treasury_8(address) := _treasury_1(address)
asgn
Source address: -990
Finance type key: (-1, -1)
[i]Type for treasury

Name: treasury Function: setTreasury
Num: -1
Den: -1
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: setTreasury
Num: 
Den: 
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
Ssa_name: _treasury_1, name: _treasury

Name: _treasury_1 Function: setTreasury
Num: 
Den: 
Address: -990
Norm: 0
LF: _treasury
Value: u
Fields: 
Finance Type: undef
End popogation
Reading Function: setStrategy
Checking funcion...



setStrategy
Function name: setStrategy
Finding type for _strategy(address ... )
prev address? u
Head Addr: -989
    Norm: 0
    Set: {-989}
    Fin: NULL
New param cache [[[], [], 0, '_strategy', [], -1, -989, 'u']]
FIND RETURN
ENTRY_POINT
setStrategy(address)


strategy_2(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_0', 'strategy_9', 'strategy_26', 'strategy_15', 'strategy_25'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_230 = CONVERT 0 to address
TMP_231(bool) = _strategy_1 != TMP_230
TMP_232(None) = SOLIDITY_CALL require(bool,string)(TMP_231,Address 0)
TMP_233 = CONVERT 0 to address
TMP_234(bool) = strategy_4 != TMP_233
CONDITION TMP_234
strategy_6(address) := _strategy_1(address)
TMP_235 = CONVERT strategy_4 to IStrategy
TMP_236(uint256) = HIGH_LEVEL_CALL, dest:TMP_235(IStrategy), function:balanceOf, arguments:[]  
strategy_5(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_9', 'strategy_4', 'strategy_26', 'strategy_15', 'strategy_25'])
TMP_237(bool) = TMP_236 == 0
TMP_238(None) = SOLIDITY_CALL require(bool,string)(TMP_237,Please withdrawToVault before changing strat)
Emit SetStrategy(_strategy_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: strategy_2, name: strategy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategy, Num: 2
Globalname: strategy, contract_name: StakedCitadel
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Source address: 6
strategy_2(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_0', 'strategy_9', 'strategy_26', 'strategy_15', 'strategy_25'])
Phi
[i]Type for strategy

Name: strategy Function: setStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
[i] TMP_230 cleared
[i] TMP_231 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _strategy_1, name: _strategy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -989

Name: _strategy_1 Function: setStrategy
Num: 
Den: 
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _strategy_1, name: _strategy

Name: _strategy_1 Function: setStrategy
Num: 
Den: 
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_230 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: setStrategy
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_231(bool) = _strategy_1 != TMP_230
[i]Type for TMP_231

Name: TMP_231 Function: setStrategy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_232(None) = SOLIDITY_CALL require(bool,string)(TMP_231,Address 0)
[i]Type for TMP_232

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_233 cleared
[i] TMP_234 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: strategy_4, name: strategy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategy, Num: 4
Globalname: strategy, contract_name: StakedCitadel
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Source address: 6
Ssa_name: strategy_4, name: strategy

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_233 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: setStrategy
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(bool) = strategy_4 != TMP_233
[i]Type for TMP_234

Name: TMP_234 Function: setStrategy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _strategy_1, name: _strategy

Name: _strategy_1 Function: setStrategy
Num: 
Den: 
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
Ssa_name: _strategy_1, name: _strategy

Name: _strategy_1 Function: setStrategy
Num: 
Den: 
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategy_6, name: strategy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategy, Num: 6
Globalname: strategy, contract_name: StakedCitadel
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Source address: 6
End popogation
strategy_6(address) := _strategy_1(address)
asgn
Source address: -989
Finance type key: (-1, -1)
[i]Type for strategy

Name: strategy Function: setStrategy
Num: -1
Den: -1
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_235 cleared
[i] TMP_236 cleared
[i] TMP_237 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: strategy_4, name: strategy

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategy_4, name: strategy

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: strategy_5, name: strategy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategy, Num: 5
Globalname: strategy, contract_name: StakedCitadel
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Source address: 6
TMP_235 = CONVERT strategy_4 to IStrategy
Converting strategy_4

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Source address: 6
Strategy
[i]Type for TMP_235

Name: TMP_235 Function: setStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: Strategy
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = HIGH_LEVEL_CALL, dest:TMP_235(IStrategy), function:balanceOf, arguments:[]  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IStrategy, balanceOf
Handling balance function!
6
[i]Type for TMP_236

Name: TMP_236 Function: setStrategy
Num: 6
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
strategy_5(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_9', 'strategy_4', 'strategy_26', 'strategy_15', 'strategy_25'])
Phi
[i]Type for strategy

Name: strategy Function: setStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(bool) = TMP_236 == 0
[i]Type for TMP_237

Name: TMP_237 Function: setStrategy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(None) = SOLIDITY_CALL require(bool,string)(TMP_237,Please withdrawToVault before changing strat)
[i]Type for TMP_238

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _strategy_1, name: _strategy

Name: _strategy_1 Function: setStrategy
Num: 
Den: 
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
Ssa_name: _strategy_1, name: _strategy

Name: _strategy_1 Function: setStrategy
Num: 
Den: 
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
End popogation


strategy_2(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_0', 'strategy_9', 'strategy_26', 'strategy_15', 'strategy_25'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_230 = CONVERT 0 to address
TMP_231(bool) = _strategy_1 != TMP_230
TMP_232(None) = SOLIDITY_CALL require(bool,string)(TMP_231,Address 0)
TMP_233 = CONVERT 0 to address
TMP_234(bool) = strategy_4 != TMP_233
CONDITION TMP_234
strategy_6(address) := _strategy_1(address)
TMP_235 = CONVERT strategy_4 to IStrategy
TMP_236(uint256) = HIGH_LEVEL_CALL, dest:TMP_235(IStrategy), function:balanceOf, arguments:[]  
strategy_5(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_9', 'strategy_4', 'strategy_26', 'strategy_15', 'strategy_25'])
TMP_237(bool) = TMP_236 == 0
TMP_238(None) = SOLIDITY_CALL require(bool,string)(TMP_237,Please withdrawToVault before changing strat)
Emit SetStrategy(_strategy_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: strategy_2, name: strategy

Name: strategy Function: setStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
strategy_2(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_0', 'strategy_9', 'strategy_26', 'strategy_15', 'strategy_25'])
Phi
[i]Type for strategy

Name: strategy Function: setStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
[i] TMP_230 cleared
[i] TMP_231 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _strategy_1, name: _strategy

Name: _strategy_1 Function: setStrategy
Num: 
Den: 
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
Ssa_name: _strategy_1, name: _strategy

Name: _strategy_1 Function: setStrategy
Num: 
Den: 
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_230 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_230

Name: TMP_230 Function: setStrategy
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_231(bool) = _strategy_1 != TMP_230
[i]Type for TMP_231

Name: TMP_231 Function: setStrategy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_232(None) = SOLIDITY_CALL require(bool,string)(TMP_231,Address 0)
[i]Type for TMP_232

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_233 cleared
[i] TMP_234 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: strategy_4, name: strategy

Name: strategy Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategy_4, name: strategy

Name: strategy Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_233 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_233

Name: TMP_233 Function: setStrategy
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_234(bool) = strategy_4 != TMP_233
[i]Type for TMP_234

Name: TMP_234 Function: setStrategy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
Ssa_name: _strategy_1, name: _strategy

Name: _strategy_1 Function: setStrategy
Num: 
Den: 
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
Ssa_name: _strategy_1, name: _strategy

Name: _strategy_1 Function: setStrategy
Num: 
Den: 
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategy_6, name: strategy

Name: strategy Function: setStrategy
Num: -1
Den: -1
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
End popogation
strategy_6(address) := _strategy_1(address)
asgn
Source address: -989
Finance type key: (-1, -1)
[i]Type for strategy

Name: strategy Function: setStrategy
Num: -1
Den: -1
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_235 cleared
[i] TMP_236 cleared
[i] TMP_237 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: strategy_4, name: strategy

Name: strategy Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategy_4, name: strategy

Name: strategy Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: strategy_5, name: strategy

Name: strategy Function: setStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
TMP_235 = CONVERT strategy_4 to IStrategy
Converting strategy_4

Name: strategy Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Source address: 6
Strategy
[i]Type for TMP_235

Name: TMP_235 Function: setStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: Strategy
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_236(uint256) = HIGH_LEVEL_CALL, dest:TMP_235(IStrategy), function:balanceOf, arguments:[]  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IStrategy, balanceOf
Handling balance function!
6
[i]Type for TMP_236

Name: TMP_236 Function: setStrategy
Num: 6
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
strategy_5(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_9', 'strategy_4', 'strategy_26', 'strategy_15', 'strategy_25'])
Phi
[i]Type for strategy

Name: strategy Function: setStrategy
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_237(bool) = TMP_236 == 0
[i]Type for TMP_237

Name: TMP_237 Function: setStrategy
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_238(None) = SOLIDITY_CALL require(bool,string)(TMP_237,Please withdrawToVault before changing strat)
[i]Type for TMP_238

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _strategy_1, name: _strategy

Name: _strategy_1 Function: setStrategy
Num: 
Den: 
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
Ssa_name: _strategy_1, name: _strategy

Name: _strategy_1 Function: setStrategy
Num: 
Den: 
Address: -989
Norm: 0
LF: _strategy
Value: u
Fields: 
Finance Type: undef
End popogation
Reading Function: setMaxWithdrawalFee
Checking funcion...



setMaxWithdrawalFee
Function name: setMaxWithdrawalFee
Finding type for _fees(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
setMaxWithdrawalFee(uint256)


WITHDRAWAL_FEE_HARD_CAP_9(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_0', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_242(bool) = _fees_1 <= WITHDRAWAL_FEE_HARD_CAP_10
TMP_243(None) = SOLIDITY_CALL require(bool,string)(TMP_242,withdrawalFee too high)
maxWithdrawalFee_2(uint256) := _fees_1(uint256)
Emit SetMaxWithdrawalFee(_fees_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_9, name: WITHDRAWAL_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: WITHDRAWAL_FEE_HARD_CAP, Num: 9
Globalname: WITHDRAWAL_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_22 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
WITHDRAWAL_FEE_HARD_CAP_9(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_0', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
Phi
[i]Type for WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
[i] TMP_242 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _fees_1 Function: setMaxWithdrawalFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _fees, Num: 1
Globalname: _fees, contract_name: StakedCitadel
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_10, name: WITHDRAWAL_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: WITHDRAWAL_FEE_HARD_CAP, Num: 10
Globalname: WITHDRAWAL_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_22 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _fees_1 Function: setMaxWithdrawalFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _fees, Num: 1
Globalname: _fees, contract_name: StakedCitadel
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_10, name: WITHDRAWAL_FEE_HARD_CAP

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_242(bool) = _fees_1 <= WITHDRAWAL_FEE_HARD_CAP_10
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_242

Name: TMP_242 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_243(None) = SOLIDITY_CALL require(bool,string)(TMP_242,withdrawalFee too high)
[i]Type for TMP_243

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxWithdrawalFee_2, name: maxWithdrawalFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxWithdrawalFee, Num: 2
Globalname: maxWithdrawalFee, contract_name: StakedCitadel
global...

Name: maxWithdrawalFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
maxWithdrawalFee_2(uint256) := _fees_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxWithdrawalFee

Name: maxWithdrawalFee Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


WITHDRAWAL_FEE_HARD_CAP_9(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_0', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_242(bool) = _fees_1 <= WITHDRAWAL_FEE_HARD_CAP_10
TMP_243(None) = SOLIDITY_CALL require(bool,string)(TMP_242,withdrawalFee too high)
maxWithdrawalFee_2(uint256) := _fees_1(uint256)
Emit SetMaxWithdrawalFee(_fees_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_9, name: WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
WITHDRAWAL_FEE_HARD_CAP_9(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_0', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
Phi
[i]Type for WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
[i] TMP_242 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_10, name: WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_10, name: WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_242(bool) = _fees_1 <= WITHDRAWAL_FEE_HARD_CAP_10
lnorm: u rnorm: u
[i]Type for TMP_242

Name: TMP_242 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_243(None) = SOLIDITY_CALL require(bool,string)(TMP_242,withdrawalFee too high)
[i]Type for TMP_243

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxWithdrawalFee_2, name: maxWithdrawalFee

Name: maxWithdrawalFee Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
maxWithdrawalFee_2(uint256) := _fees_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxWithdrawalFee

Name: maxWithdrawalFee Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


WITHDRAWAL_FEE_HARD_CAP_9(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_0', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_242(bool) = _fees_1 <= WITHDRAWAL_FEE_HARD_CAP_10
TMP_243(None) = SOLIDITY_CALL require(bool,string)(TMP_242,withdrawalFee too high)
maxWithdrawalFee_2(uint256) := _fees_1(uint256)
Emit SetMaxWithdrawalFee(_fees_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_9, name: WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
WITHDRAWAL_FEE_HARD_CAP_9(uint256) := ϕ(['WITHDRAWAL_FEE_HARD_CAP_0', 'WITHDRAWAL_FEE_HARD_CAP_8', 'WITHDRAWAL_FEE_HARD_CAP_10'])
Phi
[i]Type for WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_10, name: WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: WITHDRAWAL_FEE_HARD_CAP_10, name: WITHDRAWAL_FEE_HARD_CAP

Name: WITHDRAWAL_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_242(bool) = _fees_1 <= WITHDRAWAL_FEE_HARD_CAP_10
lnorm: u rnorm: u
[i]Type for TMP_242

Name: TMP_242 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_243(None) = SOLIDITY_CALL require(bool,string)(TMP_242,withdrawalFee too high)
[i]Type for TMP_243

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxWithdrawalFee_2, name: maxWithdrawalFee

Name: maxWithdrawalFee Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
maxWithdrawalFee_2(uint256) := _fees_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxWithdrawalFee

Name: maxWithdrawalFee Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Reading Function: setMaxPerformanceFee
Checking funcion...



setMaxPerformanceFee
Function name: setMaxPerformanceFee
Finding type for _fees(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
setMaxPerformanceFee(uint256)


PERFORMANCE_FEE_HARD_CAP_9(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_0', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_246(bool) = _fees_1 <= PERFORMANCE_FEE_HARD_CAP_10
TMP_247(None) = SOLIDITY_CALL require(bool,string)(TMP_246,performanceFeeStrategist too high)
maxPerformanceFee_2(uint256) := _fees_1(uint256)
Emit SetMaxPerformanceFee(_fees_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: PERFORMANCE_FEE_HARD_CAP_9, name: PERFORMANCE_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: PERFORMANCE_FEE_HARD_CAP, Num: 9
Globalname: PERFORMANCE_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_29 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
PERFORMANCE_FEE_HARD_CAP_9(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_0', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
Phi
[i]Type for PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
[i] TMP_246 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _fees_1 Function: setMaxPerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _fees, Num: 1
Globalname: _fees, contract_name: StakedCitadel
Ssa_name: PERFORMANCE_FEE_HARD_CAP_10, name: PERFORMANCE_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: PERFORMANCE_FEE_HARD_CAP, Num: 10
Globalname: PERFORMANCE_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_29 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _fees_1 Function: setMaxPerformanceFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _fees, Num: 1
Globalname: _fees, contract_name: StakedCitadel
Ssa_name: PERFORMANCE_FEE_HARD_CAP_10, name: PERFORMANCE_FEE_HARD_CAP

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = _fees_1 <= PERFORMANCE_FEE_HARD_CAP_10
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_246

Name: TMP_246 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_247(None) = SOLIDITY_CALL require(bool,string)(TMP_246,performanceFeeStrategist too high)
[i]Type for TMP_247

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxPerformanceFee_2, name: maxPerformanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxPerformanceFee, Num: 2
Globalname: maxPerformanceFee, contract_name: StakedCitadel
global...

Name: maxPerformanceFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
maxPerformanceFee_2(uint256) := _fees_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxPerformanceFee

Name: maxPerformanceFee Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


PERFORMANCE_FEE_HARD_CAP_9(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_0', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_246(bool) = _fees_1 <= PERFORMANCE_FEE_HARD_CAP_10
TMP_247(None) = SOLIDITY_CALL require(bool,string)(TMP_246,performanceFeeStrategist too high)
maxPerformanceFee_2(uint256) := _fees_1(uint256)
Emit SetMaxPerformanceFee(_fees_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: PERFORMANCE_FEE_HARD_CAP_9, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
PERFORMANCE_FEE_HARD_CAP_9(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_0', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
Phi
[i]Type for PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
[i] TMP_246 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: PERFORMANCE_FEE_HARD_CAP_10, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: PERFORMANCE_FEE_HARD_CAP_10, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = _fees_1 <= PERFORMANCE_FEE_HARD_CAP_10
lnorm: u rnorm: u
[i]Type for TMP_246

Name: TMP_246 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_247(None) = SOLIDITY_CALL require(bool,string)(TMP_246,performanceFeeStrategist too high)
[i]Type for TMP_247

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxPerformanceFee_2, name: maxPerformanceFee

Name: maxPerformanceFee Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
maxPerformanceFee_2(uint256) := _fees_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxPerformanceFee

Name: maxPerformanceFee Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


PERFORMANCE_FEE_HARD_CAP_9(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_0', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_246(bool) = _fees_1 <= PERFORMANCE_FEE_HARD_CAP_10
TMP_247(None) = SOLIDITY_CALL require(bool,string)(TMP_246,performanceFeeStrategist too high)
maxPerformanceFee_2(uint256) := _fees_1(uint256)
Emit SetMaxPerformanceFee(_fees_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: PERFORMANCE_FEE_HARD_CAP_9, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
PERFORMANCE_FEE_HARD_CAP_9(uint256) := ϕ(['PERFORMANCE_FEE_HARD_CAP_0', 'PERFORMANCE_FEE_HARD_CAP_10', 'PERFORMANCE_FEE_HARD_CAP_8'])
Phi
[i]Type for PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: PERFORMANCE_FEE_HARD_CAP_10, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: PERFORMANCE_FEE_HARD_CAP_10, name: PERFORMANCE_FEE_HARD_CAP

Name: PERFORMANCE_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_246(bool) = _fees_1 <= PERFORMANCE_FEE_HARD_CAP_10
lnorm: u rnorm: u
[i]Type for TMP_246

Name: TMP_246 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_247(None) = SOLIDITY_CALL require(bool,string)(TMP_246,performanceFeeStrategist too high)
[i]Type for TMP_247

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxPerformanceFee_2, name: maxPerformanceFee

Name: maxPerformanceFee Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
maxPerformanceFee_2(uint256) := _fees_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxPerformanceFee

Name: maxPerformanceFee Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Reading Function: setMaxManagementFee
Checking funcion...



setMaxManagementFee
Function name: setMaxManagementFee
Finding type for _fees(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
setMaxManagementFee(uint256)


MANAGEMENT_FEE_HARD_CAP_9(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_0', 'MANAGEMENT_FEE_HARD_CAP_8'])
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_250(bool) = _fees_1 <= MANAGEMENT_FEE_HARD_CAP_10
TMP_251(None) = SOLIDITY_CALL require(bool,string)(TMP_250,managementFee too high)
maxManagementFee_2(uint256) := _fees_1(uint256)
Emit SetMaxManagementFee(_fees_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: MANAGEMENT_FEE_HARD_CAP_9, name: MANAGEMENT_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MANAGEMENT_FEE_HARD_CAP, Num: 9
Globalname: MANAGEMENT_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
MANAGEMENT_FEE_HARD_CAP_9(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_0', 'MANAGEMENT_FEE_HARD_CAP_8'])
Phi
[i]Type for MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
[i] TMP_250 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _fees_1 Function: setMaxManagementFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _fees, Num: 1
Globalname: _fees, contract_name: StakedCitadel
Ssa_name: MANAGEMENT_FEE_HARD_CAP_10, name: MANAGEMENT_FEE_HARD_CAP

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MANAGEMENT_FEE_HARD_CAP, Num: 10
Globalname: MANAGEMENT_FEE_HARD_CAP, contract_name: StakedCitadel
global...

Name: PIC_30 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _fees_1 Function: setMaxManagementFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _fees, Num: 1
Globalname: _fees, contract_name: StakedCitadel
Ssa_name: MANAGEMENT_FEE_HARD_CAP_10, name: MANAGEMENT_FEE_HARD_CAP

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_250(bool) = _fees_1 <= MANAGEMENT_FEE_HARD_CAP_10
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_250

Name: TMP_250 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_251(None) = SOLIDITY_CALL require(bool,string)(TMP_250,managementFee too high)
[i]Type for TMP_251

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxManagementFee_2, name: maxManagementFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxManagementFee, Num: 2
Globalname: maxManagementFee, contract_name: StakedCitadel
global...

Name: maxManagementFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
maxManagementFee_2(uint256) := _fees_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxManagementFee

Name: maxManagementFee Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


MANAGEMENT_FEE_HARD_CAP_9(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_0', 'MANAGEMENT_FEE_HARD_CAP_8'])
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_250(bool) = _fees_1 <= MANAGEMENT_FEE_HARD_CAP_10
TMP_251(None) = SOLIDITY_CALL require(bool,string)(TMP_250,managementFee too high)
maxManagementFee_2(uint256) := _fees_1(uint256)
Emit SetMaxManagementFee(_fees_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: MANAGEMENT_FEE_HARD_CAP_9, name: MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MANAGEMENT_FEE_HARD_CAP_9(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_0', 'MANAGEMENT_FEE_HARD_CAP_8'])
Phi
[i]Type for MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
[i] TMP_250 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MANAGEMENT_FEE_HARD_CAP_10, name: MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MANAGEMENT_FEE_HARD_CAP_10, name: MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_250(bool) = _fees_1 <= MANAGEMENT_FEE_HARD_CAP_10
lnorm: u rnorm: u
[i]Type for TMP_250

Name: TMP_250 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_251(None) = SOLIDITY_CALL require(bool,string)(TMP_250,managementFee too high)
[i]Type for TMP_251

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxManagementFee_2, name: maxManagementFee

Name: maxManagementFee Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
maxManagementFee_2(uint256) := _fees_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxManagementFee

Name: maxManagementFee Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


MANAGEMENT_FEE_HARD_CAP_9(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_0', 'MANAGEMENT_FEE_HARD_CAP_8'])
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_250(bool) = _fees_1 <= MANAGEMENT_FEE_HARD_CAP_10
TMP_251(None) = SOLIDITY_CALL require(bool,string)(TMP_250,managementFee too high)
maxManagementFee_2(uint256) := _fees_1(uint256)
Emit SetMaxManagementFee(_fees_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: MANAGEMENT_FEE_HARD_CAP_9, name: MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MANAGEMENT_FEE_HARD_CAP_9(uint256) := ϕ(['MANAGEMENT_FEE_HARD_CAP_10', 'MANAGEMENT_FEE_HARD_CAP_0', 'MANAGEMENT_FEE_HARD_CAP_8'])
Phi
[i]Type for MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MANAGEMENT_FEE_HARD_CAP_10, name: MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MANAGEMENT_FEE_HARD_CAP_10, name: MANAGEMENT_FEE_HARD_CAP

Name: MANAGEMENT_FEE_HARD_CAP Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_250(bool) = _fees_1 <= MANAGEMENT_FEE_HARD_CAP_10
lnorm: u rnorm: u
[i]Type for TMP_250

Name: TMP_250 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_251(None) = SOLIDITY_CALL require(bool,string)(TMP_250,managementFee too high)
[i]Type for TMP_251

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxManagementFee_2, name: maxManagementFee

Name: maxManagementFee Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
maxManagementFee_2(uint256) := _fees_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for maxManagementFee

Name: maxManagementFee Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Reading Function: setGuardian
Checking funcion...



setGuardian
Function name: setGuardian
Finding type for _guardian(address ... )
prev address? u
Head Addr: -988
    Norm: 0
    Set: {-988}
    Fin: NULL
New param cache [[[], [], 0, '_guardian', [], -1, -988, 'u']]
FIND RETURN
ENTRY_POINT
setGuardian(address)


INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_254 = CONVERT 0 to address
TMP_255(bool) = _guardian_1 != TMP_254
TMP_256(None) = SOLIDITY_CALL require(bool,string)(TMP_255,Address cannot be 0x0)
guardian_3(address) := _guardian_1(address)
Emit SetGuardian(_guardian_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
[i] TMP_254 cleared
[i] TMP_255 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _guardian_1, name: _guardian

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -988

Name: _guardian_1 Function: setGuardian
Num: 
Den: 
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: setGuardian
Num: 
Den: 
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_254 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: setGuardian
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_255(bool) = _guardian_1 != TMP_254
[i]Type for TMP_255

Name: TMP_255 Function: setGuardian
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_256(None) = SOLIDITY_CALL require(bool,string)(TMP_255,Address cannot be 0x0)
[i]Type for TMP_256

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: setGuardian
Num: 
Den: 
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: setGuardian
Num: 
Den: 
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Ssa_name: guardian_3, name: guardian

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: guardian, Num: 3
Globalname: guardian, contract_name: StakedCitadel
global...

Name: PIC_28 Function: None
Num: -1
Den: -1
Address: 7
Norm: 0
LF: guardian
Value: u
Fields: 
Finance Type: undef
Source address: 7
End popogation
guardian_3(address) := _guardian_1(address)
asgn
Source address: -988
Finance type key: (-1, -1)
[i]Type for guardian

Name: guardian Function: setGuardian
Num: -1
Den: -1
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: setGuardian
Num: 
Den: 
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: setGuardian
Num: 
Den: 
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
End popogation


INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_254 = CONVERT 0 to address
TMP_255(bool) = _guardian_1 != TMP_254
TMP_256(None) = SOLIDITY_CALL require(bool,string)(TMP_255,Address cannot be 0x0)
guardian_3(address) := _guardian_1(address)
Emit SetGuardian(_guardian_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
[i] TMP_254 cleared
[i] TMP_255 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: setGuardian
Num: 
Den: 
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: setGuardian
Num: 
Den: 
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_254 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_254

Name: TMP_254 Function: setGuardian
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_255(bool) = _guardian_1 != TMP_254
[i]Type for TMP_255

Name: TMP_255 Function: setGuardian
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_256(None) = SOLIDITY_CALL require(bool,string)(TMP_255,Address cannot be 0x0)
[i]Type for TMP_256

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: setGuardian
Num: 
Den: 
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: setGuardian
Num: 
Den: 
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Ssa_name: guardian_3, name: guardian

Name: guardian Function: setGuardian
Num: -1
Den: -1
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
End popogation
guardian_3(address) := _guardian_1(address)
asgn
Source address: -988
Finance type key: (-1, -1)
[i]Type for guardian

Name: guardian Function: setGuardian
Num: -1
Den: -1
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: setGuardian
Num: 
Den: 
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
Ssa_name: _guardian_1, name: _guardian

Name: _guardian_1 Function: setGuardian
Num: 
Den: 
Address: -988
Norm: 0
LF: _guardian
Value: u
Fields: 
Finance Type: undef
End popogation
Reading Function: setVesting
Checking funcion...



setVesting
Function name: setVesting
Finding type for _vesting(address ... )
prev address? u
Head Addr: -987
    Norm: 0
    Set: {-987}
    Fin: NULL
New param cache [[[], [], 0, '_vesting', [], -1, -987, 'u']]
FIND RETURN
ENTRY_POINT
setVesting(address)


INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_259 = CONVERT 0 to address
TMP_260(bool) = _vesting_1 != TMP_259
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Address cannot be 0x0)
vesting_2(address) := _vesting_1(address)
Emit SetVesting(_vesting_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
[i] TMP_259 cleared
[i] TMP_260 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _vesting_1, name: _vesting

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -987

Name: _vesting_1 Function: setVesting
Num: 
Den: 
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: setVesting
Num: 
Den: 
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_259 = CONVERT 0 to address
Converting 0

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: setVesting
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_260(bool) = _vesting_1 != TMP_259
[i]Type for TMP_260

Name: TMP_260 Function: setVesting
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Address cannot be 0x0)
[i]Type for TMP_261

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: setVesting
Num: 
Den: 
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: setVesting
Num: 
Den: 
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Ssa_name: vesting_2, name: vesting

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: vesting, Num: 2
Globalname: vesting, contract_name: StakedCitadel
global...

Name: PIC_6 Function: None
Num: -1
Den: -1
Address: 8
Norm: 0
LF: vesting
Value: u
Fields: 
Finance Type: undef
Source address: 8
End popogation
vesting_2(address) := _vesting_1(address)
asgn
Source address: -987
Finance type key: (-1, -1)
[i]Type for vesting

Name: vesting Function: setVesting
Num: -1
Den: -1
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: setVesting
Num: 
Den: 
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: setVesting
Num: 
Den: 
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
End popogation


INTERNAL_CALL, SettAccessControl._onlyGovernance()()
TMP_259 = CONVERT 0 to address
TMP_260(bool) = _vesting_1 != TMP_259
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Address cannot be 0x0)
vesting_2(address) := _vesting_1(address)
Emit SetVesting(_vesting_1)


Propogating parameters and globals to SSA variables...
End popogation
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernance()()
New param cache []
Old param cache: []
[i] TMP_259 cleared
[i] TMP_260 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: setVesting
Num: 
Den: 
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: setVesting
Num: 
Den: 
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_259 = CONVERT 0 to address
Converting 0

Name: 0 Function: None
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
[i]Type for TMP_259

Name: TMP_259 Function: setVesting
Num: -1
Den: -1
Address: u
Norm: 0
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_260(bool) = _vesting_1 != TMP_259
[i]Type for TMP_260

Name: TMP_260 Function: setVesting
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_261(None) = SOLIDITY_CALL require(bool,string)(TMP_260,Address cannot be 0x0)
[i]Type for TMP_261

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: setVesting
Num: 
Den: 
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: setVesting
Num: 
Den: 
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Ssa_name: vesting_2, name: vesting

Name: vesting Function: setVesting
Num: -1
Den: -1
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
End popogation
vesting_2(address) := _vesting_1(address)
asgn
Source address: -987
Finance type key: (-1, -1)
[i]Type for vesting

Name: vesting Function: setVesting
Num: -1
Den: -1
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: setVesting
Num: 
Den: 
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
Ssa_name: _vesting_1, name: _vesting

Name: _vesting_1 Function: setVesting
Num: 
Den: 
Address: -987
Norm: 0
LF: _vesting
Value: u
Fields: 
Finance Type: undef
End popogation
Reading Function: setToEarnBps
Checking funcion...



setToEarnBps
Function name: setToEarnBps
Finding type for _newToEarnBps(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
setToEarnBps(uint256)


MAX_BPS_3(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_264(bool) = _newToEarnBps_1 <= MAX_BPS_5
TMP_265(None) = SOLIDITY_CALL require(bool,string)(TMP_264,toEarnBps should be <= MAX_BPS)
toEarnBps_4(uint256) := _newToEarnBps_1(uint256)
Emit SetToEarnBps(_newToEarnBps_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: MAX_BPS_3, name: MAX_BPS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_BPS, Num: 3
Globalname: MAX_BPS, contract_name: StakedCitadel
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
MAX_BPS_3(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
FIND RETURN
ENTRY_POINT
_onlyGovernanceOrStrategist()
Propogating All
Propogating All
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: governance_2, name: governance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: governance, Num: 2
Globalname: governance, contract_name: StakedCitadel
global...

Name: PIC_27 Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: strategist_1, name: strategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategist, Num: 1
Globalname: strategist, contract_name: StakedCitadel
global...

Name: PIC_12 Function: None
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Source address: 1
governance_2(address) := ϕ(['governance_4', 'governance_10', 'governance_0', 'governance_5'])
Phi
[i]Type for governance

Name: governance Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
XXXX
strategist_1(address) := ϕ(['strategist_14', 'strategist_15', 'strategist_3', 'strategist_13', 'strategist_0', 'strategist_9', 'strategist_2'])
Phi
[i]Type for strategist

Name: strategist Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_19 cleared
[i] TMP_20 cleared
[i] TMP_21 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: governance_2, name: governance

Name: governance Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategist_1, name: strategist

Name: strategist Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: governance_2, name: governance

Name: governance Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategist_1, name: strategist

Name: strategist Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_19(bool) = msg.sender == strategist_1
[i]Type for TMP_19

Name: TMP_19 Function: _onlyGovernanceOrStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(bool) = msg.sender == governance_2
[i]Type for TMP_20

Name: TMP_20 Function: _onlyGovernanceOrStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_21(bool) = TMP_19 || TMP_20
[i]Type for TMP_21

Name: TMP_21 Function: _onlyGovernanceOrStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(None) = SOLIDITY_CALL require(bool,string)(TMP_21,onlyGovernanceOrStrategist)
[i]Type for TMP_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: governance_2, name: governance

Name: governance Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategist_1, name: strategist

Name: strategist Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
governance_2(address) := ϕ(['governance_4', 'governance_10', 'governance_0', 'governance_5'])
Phi
[i]Type for governance

Name: governance Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
XXXX
strategist_1(address) := ϕ(['strategist_14', 'strategist_15', 'strategist_3', 'strategist_13', 'strategist_0', 'strategist_9', 'strategist_2'])
Phi
[i]Type for strategist

Name: strategist Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_19 cleared
[i] TMP_20 cleared
[i] TMP_21 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: governance_2, name: governance

Name: governance Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategist_1, name: strategist

Name: strategist Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
Ssa_name: governance_2, name: governance

Name: governance Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategist_1, name: strategist

Name: strategist Function: _onlyGovernanceOrStrategist
Num: -1
Den: -1
Address: 1
Norm: 0
LF: strategist
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_19(bool) = msg.sender == strategist_1
[i]Type for TMP_19

Name: TMP_19 Function: _onlyGovernanceOrStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_20(bool) = msg.sender == governance_2
[i]Type for TMP_20

Name: TMP_20 Function: _onlyGovernanceOrStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_21(bool) = TMP_19 || TMP_20
[i]Type for TMP_21

Name: TMP_21 Function: _onlyGovernanceOrStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_22(None) = SOLIDITY_CALL require(bool,string)(TMP_21,onlyGovernanceOrStrategist)
[i]Type for TMP_22

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_264 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _newToEarnBps_1 Function: setToEarnBps
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _newToEarnBps, Num: 1
Globalname: _newToEarnBps, contract_name: StakedCitadel
Ssa_name: MAX_BPS_5, name: MAX_BPS

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: MAX_BPS, Num: 5
Globalname: MAX_BPS, contract_name: StakedCitadel
global...

Name: PIC_19 Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: MAX_BPS_5, name: MAX_BPS

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _newToEarnBps_1 Function: setToEarnBps
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _newToEarnBps, Num: 1
Globalname: _newToEarnBps, contract_name: StakedCitadel
End popogation
TMP_264(bool) = _newToEarnBps_1 <= MAX_BPS_5
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_264

Name: TMP_264 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_265(None) = SOLIDITY_CALL require(bool,string)(TMP_264,toEarnBps should be <= MAX_BPS)
[i]Type for TMP_265

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: toEarnBps_4, name: toEarnBps

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: toEarnBps, Num: 4
Globalname: toEarnBps, contract_name: StakedCitadel
global...

Name: toEarnBps Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: 9500
Fields: 
Finance Type: undef
Source address: u
End popogation
toEarnBps_4(uint256) := _newToEarnBps_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for toEarnBps

Name: toEarnBps Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


MAX_BPS_3(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_264(bool) = _newToEarnBps_1 <= MAX_BPS_5
TMP_265(None) = SOLIDITY_CALL require(bool,string)(TMP_264,toEarnBps should be <= MAX_BPS)
toEarnBps_4(uint256) := _newToEarnBps_1(uint256)
Emit SetToEarnBps(_newToEarnBps_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: MAX_BPS_3, name: MAX_BPS

Name: MAX_BPS Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_BPS_3(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
[i] TMP_264 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_5, name: MAX_BPS

Name: MAX_BPS Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_5, name: MAX_BPS

Name: MAX_BPS Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_264(bool) = _newToEarnBps_1 <= MAX_BPS_5
lnorm: u rnorm: u
[i]Type for TMP_264

Name: TMP_264 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_265(None) = SOLIDITY_CALL require(bool,string)(TMP_264,toEarnBps should be <= MAX_BPS)
[i]Type for TMP_265

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: toEarnBps_4, name: toEarnBps

Name: toEarnBps Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
toEarnBps_4(uint256) := _newToEarnBps_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for toEarnBps

Name: toEarnBps Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


MAX_BPS_3(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_264(bool) = _newToEarnBps_1 <= MAX_BPS_5
TMP_265(None) = SOLIDITY_CALL require(bool,string)(TMP_264,toEarnBps should be <= MAX_BPS)
toEarnBps_4(uint256) := _newToEarnBps_1(uint256)
Emit SetToEarnBps(_newToEarnBps_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: MAX_BPS_3, name: MAX_BPS

Name: MAX_BPS Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
MAX_BPS_3(uint256) := ϕ(['MAX_BPS_0', 'MAX_BPS_9', 'MAX_BPS_8', 'MAX_BPS_5', 'MAX_BPS_2'])
Phi
[i]Type for MAX_BPS

Name: MAX_BPS Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_5, name: MAX_BPS

Name: MAX_BPS Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: MAX_BPS_5, name: MAX_BPS

Name: MAX_BPS Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_264(bool) = _newToEarnBps_1 <= MAX_BPS_5
lnorm: u rnorm: u
[i]Type for TMP_264

Name: TMP_264 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_265(None) = SOLIDITY_CALL require(bool,string)(TMP_264,toEarnBps should be <= MAX_BPS)
[i]Type for TMP_265

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: toEarnBps_4, name: toEarnBps

Name: toEarnBps Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
toEarnBps_4(uint256) := _newToEarnBps_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for toEarnBps

Name: toEarnBps Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _newToEarnBps_1, name: _newToEarnBps

Name: _newToEarnBps_1 Function: setToEarnBps
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Reading Function: setGuestList
Function setGuestList not marked
Reading Function: setWithdrawalFee
Checking funcion...



setWithdrawalFee
Function name: setWithdrawalFee
Finding type for _withdrawalFee(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
setWithdrawalFee(uint256)


maxWithdrawalFee_3(uint256) := ϕ(['maxWithdrawalFee_5', 'maxWithdrawalFee_2', 'maxWithdrawalFee_1', 'maxWithdrawalFee_0'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_273(bool) = _withdrawalFee_1 <= maxWithdrawalFee_5
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,Excessive withdrawal fee)
withdrawalFee_2(uint256) := _withdrawalFee_1(uint256)
Emit SetWithdrawalFee(_withdrawalFee_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: maxWithdrawalFee_3, name: maxWithdrawalFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxWithdrawalFee, Num: 3
Globalname: maxWithdrawalFee, contract_name: StakedCitadel
global...

Name: maxWithdrawalFee Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
maxWithdrawalFee_3(uint256) := ϕ(['maxWithdrawalFee_5', 'maxWithdrawalFee_2', 'maxWithdrawalFee_1', 'maxWithdrawalFee_0'])
Phi
[i]Type for maxWithdrawalFee

Name: maxWithdrawalFee Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
[i] TMP_273 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _withdrawalFee, Num: 1
Globalname: _withdrawalFee, contract_name: StakedCitadel
Ssa_name: maxWithdrawalFee_5, name: maxWithdrawalFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxWithdrawalFee, Num: 5
Globalname: maxWithdrawalFee, contract_name: StakedCitadel
global...

Name: maxWithdrawalFee Function: setMaxWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: maxWithdrawalFee_5, name: maxWithdrawalFee

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _withdrawalFee, Num: 1
Globalname: _withdrawalFee, contract_name: StakedCitadel
End popogation
TMP_273(bool) = _withdrawalFee_1 <= maxWithdrawalFee_5
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_273

Name: TMP_273 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,Excessive withdrawal fee)
[i]Type for TMP_274

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalFee_2, name: withdrawalFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: withdrawalFee, Num: 2
Globalname: withdrawalFee, contract_name: StakedCitadel
global...

Name: withdrawalFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
withdrawalFee_2(uint256) := _withdrawalFee_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for withdrawalFee

Name: withdrawalFee Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


maxWithdrawalFee_3(uint256) := ϕ(['maxWithdrawalFee_5', 'maxWithdrawalFee_2', 'maxWithdrawalFee_1', 'maxWithdrawalFee_0'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_273(bool) = _withdrawalFee_1 <= maxWithdrawalFee_5
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,Excessive withdrawal fee)
withdrawalFee_2(uint256) := _withdrawalFee_1(uint256)
Emit SetWithdrawalFee(_withdrawalFee_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: maxWithdrawalFee_3, name: maxWithdrawalFee

Name: maxWithdrawalFee Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWithdrawalFee_3(uint256) := ϕ(['maxWithdrawalFee_5', 'maxWithdrawalFee_2', 'maxWithdrawalFee_1', 'maxWithdrawalFee_0'])
Phi
[i]Type for maxWithdrawalFee

Name: maxWithdrawalFee Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
[i] TMP_273 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxWithdrawalFee_5, name: maxWithdrawalFee

Name: maxWithdrawalFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxWithdrawalFee_5, name: maxWithdrawalFee

Name: maxWithdrawalFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_273(bool) = _withdrawalFee_1 <= maxWithdrawalFee_5
lnorm: u rnorm: u
[i]Type for TMP_273

Name: TMP_273 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,Excessive withdrawal fee)
[i]Type for TMP_274

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalFee_2, name: withdrawalFee

Name: withdrawalFee Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
withdrawalFee_2(uint256) := _withdrawalFee_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for withdrawalFee

Name: withdrawalFee Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


maxWithdrawalFee_3(uint256) := ϕ(['maxWithdrawalFee_5', 'maxWithdrawalFee_2', 'maxWithdrawalFee_1', 'maxWithdrawalFee_0'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_273(bool) = _withdrawalFee_1 <= maxWithdrawalFee_5
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,Excessive withdrawal fee)
withdrawalFee_2(uint256) := _withdrawalFee_1(uint256)
Emit SetWithdrawalFee(_withdrawalFee_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: maxWithdrawalFee_3, name: maxWithdrawalFee

Name: maxWithdrawalFee Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxWithdrawalFee_3(uint256) := ϕ(['maxWithdrawalFee_5', 'maxWithdrawalFee_2', 'maxWithdrawalFee_1', 'maxWithdrawalFee_0'])
Phi
[i]Type for maxWithdrawalFee

Name: maxWithdrawalFee Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxWithdrawalFee_5, name: maxWithdrawalFee

Name: maxWithdrawalFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxWithdrawalFee_5, name: maxWithdrawalFee

Name: maxWithdrawalFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_273(bool) = _withdrawalFee_1 <= maxWithdrawalFee_5
lnorm: u rnorm: u
[i]Type for TMP_273

Name: TMP_273 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_274(None) = SOLIDITY_CALL require(bool,string)(TMP_273,Excessive withdrawal fee)
[i]Type for TMP_274

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: withdrawalFee_2, name: withdrawalFee

Name: withdrawalFee Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
withdrawalFee_2(uint256) := _withdrawalFee_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for withdrawalFee

Name: withdrawalFee Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _withdrawalFee_1, name: _withdrawalFee

Name: _withdrawalFee_1 Function: setWithdrawalFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Reading Function: setPerformanceFeeStrategist
Checking funcion...



setPerformanceFeeStrategist
Function name: setPerformanceFeeStrategist
Finding type for _performanceFeeStrategist(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
setPerformanceFeeStrategist(uint256)


maxPerformanceFee_3(uint256) := ϕ(['maxPerformanceFee_1', 'maxPerformanceFee_2', 'maxPerformanceFee_5', 'maxPerformanceFee_0', 'maxPerformanceFee_8'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_278(bool) = _performanceFeeStrategist_1 <= maxPerformanceFee_5
TMP_279(None) = SOLIDITY_CALL require(bool,string)(TMP_278,Excessive strategist performance fee)
performanceFeeStrategist_8(uint256) := _performanceFeeStrategist_1(uint256)
Emit SetPerformanceFeeStrategist(_performanceFeeStrategist_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: maxPerformanceFee_3, name: maxPerformanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxPerformanceFee, Num: 3
Globalname: maxPerformanceFee, contract_name: StakedCitadel
global...

Name: maxPerformanceFee Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
maxPerformanceFee_3(uint256) := ϕ(['maxPerformanceFee_1', 'maxPerformanceFee_2', 'maxPerformanceFee_5', 'maxPerformanceFee_0', 'maxPerformanceFee_8'])
Phi
[i]Type for maxPerformanceFee

Name: maxPerformanceFee Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
[i] TMP_278 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _performanceFeeStrategist, Num: 1
Globalname: _performanceFeeStrategist, contract_name: StakedCitadel
Ssa_name: maxPerformanceFee_5, name: maxPerformanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxPerformanceFee, Num: 5
Globalname: maxPerformanceFee, contract_name: StakedCitadel
global...

Name: maxPerformanceFee Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: maxPerformanceFee_5, name: maxPerformanceFee

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _performanceFeeStrategist, Num: 1
Globalname: _performanceFeeStrategist, contract_name: StakedCitadel
End popogation
TMP_278(bool) = _performanceFeeStrategist_1 <= maxPerformanceFee_5
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_278

Name: TMP_278 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_279(None) = SOLIDITY_CALL require(bool,string)(TMP_278,Excessive strategist performance fee)
[i]Type for TMP_279

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeStrategist_8, name: performanceFeeStrategist

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: performanceFeeStrategist, Num: 8
Globalname: performanceFeeStrategist, contract_name: StakedCitadel
global...

Name: performanceFeeStrategist Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
performanceFeeStrategist_8(uint256) := _performanceFeeStrategist_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for performanceFeeStrategist

Name: performanceFeeStrategist Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


maxPerformanceFee_3(uint256) := ϕ(['maxPerformanceFee_1', 'maxPerformanceFee_2', 'maxPerformanceFee_5', 'maxPerformanceFee_0', 'maxPerformanceFee_8'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_278(bool) = _performanceFeeStrategist_1 <= maxPerformanceFee_5
TMP_279(None) = SOLIDITY_CALL require(bool,string)(TMP_278,Excessive strategist performance fee)
performanceFeeStrategist_8(uint256) := _performanceFeeStrategist_1(uint256)
Emit SetPerformanceFeeStrategist(_performanceFeeStrategist_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: maxPerformanceFee_3, name: maxPerformanceFee

Name: maxPerformanceFee Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxPerformanceFee_3(uint256) := ϕ(['maxPerformanceFee_1', 'maxPerformanceFee_2', 'maxPerformanceFee_5', 'maxPerformanceFee_0', 'maxPerformanceFee_8'])
Phi
[i]Type for maxPerformanceFee

Name: maxPerformanceFee Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
[i] TMP_278 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxPerformanceFee_5, name: maxPerformanceFee

Name: maxPerformanceFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxPerformanceFee_5, name: maxPerformanceFee

Name: maxPerformanceFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_278(bool) = _performanceFeeStrategist_1 <= maxPerformanceFee_5
lnorm: u rnorm: u
[i]Type for TMP_278

Name: TMP_278 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_279(None) = SOLIDITY_CALL require(bool,string)(TMP_278,Excessive strategist performance fee)
[i]Type for TMP_279

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeStrategist_8, name: performanceFeeStrategist

Name: performanceFeeStrategist Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
performanceFeeStrategist_8(uint256) := _performanceFeeStrategist_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for performanceFeeStrategist

Name: performanceFeeStrategist Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


maxPerformanceFee_3(uint256) := ϕ(['maxPerformanceFee_1', 'maxPerformanceFee_2', 'maxPerformanceFee_5', 'maxPerformanceFee_0', 'maxPerformanceFee_8'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_278(bool) = _performanceFeeStrategist_1 <= maxPerformanceFee_5
TMP_279(None) = SOLIDITY_CALL require(bool,string)(TMP_278,Excessive strategist performance fee)
performanceFeeStrategist_8(uint256) := _performanceFeeStrategist_1(uint256)
Emit SetPerformanceFeeStrategist(_performanceFeeStrategist_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: maxPerformanceFee_3, name: maxPerformanceFee

Name: maxPerformanceFee Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxPerformanceFee_3(uint256) := ϕ(['maxPerformanceFee_1', 'maxPerformanceFee_2', 'maxPerformanceFee_5', 'maxPerformanceFee_0', 'maxPerformanceFee_8'])
Phi
[i]Type for maxPerformanceFee

Name: maxPerformanceFee Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxPerformanceFee_5, name: maxPerformanceFee

Name: maxPerformanceFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxPerformanceFee_5, name: maxPerformanceFee

Name: maxPerformanceFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_278(bool) = _performanceFeeStrategist_1 <= maxPerformanceFee_5
lnorm: u rnorm: u
[i]Type for TMP_278

Name: TMP_278 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_279(None) = SOLIDITY_CALL require(bool,string)(TMP_278,Excessive strategist performance fee)
[i]Type for TMP_279

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeStrategist_8, name: performanceFeeStrategist

Name: performanceFeeStrategist Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
performanceFeeStrategist_8(uint256) := _performanceFeeStrategist_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for performanceFeeStrategist

Name: performanceFeeStrategist Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeStrategist_1, name: _performanceFeeStrategist

Name: _performanceFeeStrategist_1 Function: setPerformanceFeeStrategist
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Reading Function: setPerformanceFeeGovernance
Checking funcion...



setPerformanceFeeGovernance
Function name: setPerformanceFeeGovernance
Finding type for _performanceFeeGovernance(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
setPerformanceFeeGovernance(uint256)


maxPerformanceFee_6(uint256) := ϕ(['maxPerformanceFee_1', 'maxPerformanceFee_2', 'maxPerformanceFee_5', 'maxPerformanceFee_0', 'maxPerformanceFee_8'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_283(bool) = _performanceFeeGovernance_1 <= maxPerformanceFee_8
TMP_284(None) = SOLIDITY_CALL require(bool,string)(TMP_283,Excessive governance performance fee)
performanceFeeGovernance_7(uint256) := _performanceFeeGovernance_1(uint256)
Emit SetPerformanceFeeGovernance(_performanceFeeGovernance_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: maxPerformanceFee_6, name: maxPerformanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxPerformanceFee, Num: 6
Globalname: maxPerformanceFee, contract_name: StakedCitadel
global...

Name: maxPerformanceFee Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
maxPerformanceFee_6(uint256) := ϕ(['maxPerformanceFee_1', 'maxPerformanceFee_2', 'maxPerformanceFee_5', 'maxPerformanceFee_0', 'maxPerformanceFee_8'])
Phi
[i]Type for maxPerformanceFee

Name: maxPerformanceFee Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
[i] TMP_283 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _performanceFeeGovernance, Num: 1
Globalname: _performanceFeeGovernance, contract_name: StakedCitadel
Ssa_name: maxPerformanceFee_8, name: maxPerformanceFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxPerformanceFee, Num: 8
Globalname: maxPerformanceFee, contract_name: StakedCitadel
global...

Name: maxPerformanceFee Function: setMaxPerformanceFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _performanceFeeGovernance, Num: 1
Globalname: _performanceFeeGovernance, contract_name: StakedCitadel
Ssa_name: maxPerformanceFee_8, name: maxPerformanceFee

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_283(bool) = _performanceFeeGovernance_1 <= maxPerformanceFee_8
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_283

Name: TMP_283 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_284(None) = SOLIDITY_CALL require(bool,string)(TMP_283,Excessive governance performance fee)
[i]Type for TMP_284

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeGovernance_7, name: performanceFeeGovernance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: performanceFeeGovernance, Num: 7
Globalname: performanceFeeGovernance, contract_name: StakedCitadel
global...

Name: performanceFeeGovernance Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
performanceFeeGovernance_7(uint256) := _performanceFeeGovernance_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for performanceFeeGovernance

Name: performanceFeeGovernance Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


maxPerformanceFee_6(uint256) := ϕ(['maxPerformanceFee_1', 'maxPerformanceFee_2', 'maxPerformanceFee_5', 'maxPerformanceFee_0', 'maxPerformanceFee_8'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_283(bool) = _performanceFeeGovernance_1 <= maxPerformanceFee_8
TMP_284(None) = SOLIDITY_CALL require(bool,string)(TMP_283,Excessive governance performance fee)
performanceFeeGovernance_7(uint256) := _performanceFeeGovernance_1(uint256)
Emit SetPerformanceFeeGovernance(_performanceFeeGovernance_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: maxPerformanceFee_6, name: maxPerformanceFee

Name: maxPerformanceFee Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxPerformanceFee_6(uint256) := ϕ(['maxPerformanceFee_1', 'maxPerformanceFee_2', 'maxPerformanceFee_5', 'maxPerformanceFee_0', 'maxPerformanceFee_8'])
Phi
[i]Type for maxPerformanceFee

Name: maxPerformanceFee Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
[i] TMP_283 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxPerformanceFee_8, name: maxPerformanceFee

Name: maxPerformanceFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxPerformanceFee_8, name: maxPerformanceFee

Name: maxPerformanceFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_283(bool) = _performanceFeeGovernance_1 <= maxPerformanceFee_8
lnorm: u rnorm: u
[i]Type for TMP_283

Name: TMP_283 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_284(None) = SOLIDITY_CALL require(bool,string)(TMP_283,Excessive governance performance fee)
[i]Type for TMP_284

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeGovernance_7, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
performanceFeeGovernance_7(uint256) := _performanceFeeGovernance_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for performanceFeeGovernance

Name: performanceFeeGovernance Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


maxPerformanceFee_6(uint256) := ϕ(['maxPerformanceFee_1', 'maxPerformanceFee_2', 'maxPerformanceFee_5', 'maxPerformanceFee_0', 'maxPerformanceFee_8'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_283(bool) = _performanceFeeGovernance_1 <= maxPerformanceFee_8
TMP_284(None) = SOLIDITY_CALL require(bool,string)(TMP_283,Excessive governance performance fee)
performanceFeeGovernance_7(uint256) := _performanceFeeGovernance_1(uint256)
Emit SetPerformanceFeeGovernance(_performanceFeeGovernance_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: maxPerformanceFee_6, name: maxPerformanceFee

Name: maxPerformanceFee Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxPerformanceFee_6(uint256) := ϕ(['maxPerformanceFee_1', 'maxPerformanceFee_2', 'maxPerformanceFee_5', 'maxPerformanceFee_0', 'maxPerformanceFee_8'])
Phi
[i]Type for maxPerformanceFee

Name: maxPerformanceFee Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxPerformanceFee_8, name: maxPerformanceFee

Name: maxPerformanceFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxPerformanceFee_8, name: maxPerformanceFee

Name: maxPerformanceFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_283(bool) = _performanceFeeGovernance_1 <= maxPerformanceFee_8
lnorm: u rnorm: u
[i]Type for TMP_283

Name: TMP_283 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_284(None) = SOLIDITY_CALL require(bool,string)(TMP_283,Excessive governance performance fee)
[i]Type for TMP_284

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: performanceFeeGovernance_7, name: performanceFeeGovernance

Name: performanceFeeGovernance Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
performanceFeeGovernance_7(uint256) := _performanceFeeGovernance_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for performanceFeeGovernance

Name: performanceFeeGovernance Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _performanceFeeGovernance_1, name: _performanceFeeGovernance

Name: _performanceFeeGovernance_1 Function: setPerformanceFeeGovernance
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Reading Function: setManagementFee
Checking funcion...



setManagementFee
Function name: setManagementFee
Finding type for _fees(uint256 ... )
Value: u
New param cache [[[-1], [-1], 'u', None, [], -1, 'u', 'u']]
FIND RETURN
ENTRY_POINT
setManagementFee(uint256)


maxManagementFee_3(uint256) := ϕ(['maxManagementFee_5', 'maxManagementFee_1', 'maxManagementFee_2', 'maxManagementFee_0'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_288(bool) = _fees_1 <= maxManagementFee_5
TMP_289(None) = SOLIDITY_CALL require(bool,string)(TMP_288,Excessive management fee)
managementFee_2(uint256) := _fees_1(uint256)
Emit SetManagementFee(_fees_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: maxManagementFee_3, name: maxManagementFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxManagementFee, Num: 3
Globalname: maxManagementFee, contract_name: StakedCitadel
global...

Name: maxManagementFee Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
maxManagementFee_3(uint256) := ϕ(['maxManagementFee_5', 'maxManagementFee_1', 'maxManagementFee_2', 'maxManagementFee_0'])
Phi
[i]Type for maxManagementFee

Name: maxManagementFee Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
[i] TMP_288 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _fees_1 Function: setManagementFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _fees, Num: 1
Globalname: _fees, contract_name: StakedCitadel
Ssa_name: maxManagementFee_5, name: maxManagementFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: maxManagementFee, Num: 5
Globalname: maxManagementFee, contract_name: StakedCitadel
global...

Name: maxManagementFee Function: setMaxManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
Ssa_name: maxManagementFee_5, name: maxManagementFee

Name: None Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u

Name: _fees_1 Function: setManagementFee
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Copied ftype
Name: _fees, Num: 1
Globalname: _fees, contract_name: StakedCitadel
End popogation
TMP_288(bool) = _fees_1 <= maxManagementFee_5
lnorm: u rnorm: u
Source address: u
Source address: u
[i]Type for TMP_288

Name: TMP_288 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_289(None) = SOLIDITY_CALL require(bool,string)(TMP_288,Excessive management fee)
[i]Type for TMP_289

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: managementFee_2, name: managementFee

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: managementFee, Num: 2
Globalname: managementFee, contract_name: StakedCitadel
global...

Name: managementFee Function: initialize
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: u
End popogation
managementFee_2(uint256) := _fees_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for managementFee

Name: managementFee Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


maxManagementFee_3(uint256) := ϕ(['maxManagementFee_5', 'maxManagementFee_1', 'maxManagementFee_2', 'maxManagementFee_0'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_288(bool) = _fees_1 <= maxManagementFee_5
TMP_289(None) = SOLIDITY_CALL require(bool,string)(TMP_288,Excessive management fee)
managementFee_2(uint256) := _fees_1(uint256)
Emit SetManagementFee(_fees_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: maxManagementFee_3, name: maxManagementFee

Name: maxManagementFee Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxManagementFee_3(uint256) := ϕ(['maxManagementFee_5', 'maxManagementFee_1', 'maxManagementFee_2', 'maxManagementFee_0'])
Phi
[i]Type for maxManagementFee

Name: maxManagementFee Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
[i] TMP_288 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxManagementFee_5, name: maxManagementFee

Name: maxManagementFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxManagementFee_5, name: maxManagementFee

Name: maxManagementFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_288(bool) = _fees_1 <= maxManagementFee_5
lnorm: u rnorm: u
[i]Type for TMP_288

Name: TMP_288 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_289(None) = SOLIDITY_CALL require(bool,string)(TMP_288,Excessive management fee)
[i]Type for TMP_289

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: managementFee_2, name: managementFee

Name: managementFee Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
managementFee_2(uint256) := _fees_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for managementFee

Name: managementFee Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation


maxManagementFee_3(uint256) := ϕ(['maxManagementFee_5', 'maxManagementFee_1', 'maxManagementFee_2', 'maxManagementFee_0'])
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_288(bool) = _fees_1 <= maxManagementFee_5
TMP_289(None) = SOLIDITY_CALL require(bool,string)(TMP_288,Excessive management fee)
managementFee_2(uint256) := _fees_1(uint256)
Emit SetManagementFee(_fees_1)


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: maxManagementFee_3, name: maxManagementFee

Name: maxManagementFee Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
maxManagementFee_3(uint256) := ϕ(['maxManagementFee_5', 'maxManagementFee_1', 'maxManagementFee_2', 'maxManagementFee_0'])
Phi
[i]Type for maxManagementFee

Name: maxManagementFee Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
MODIFIER_CALL, PausableUpgradeable.whenNotPaused()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxManagementFee_5, name: maxManagementFee

Name: maxManagementFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: maxManagementFee_5, name: maxManagementFee

Name: maxManagementFee Function: None
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_288(bool) = _fees_1 <= maxManagementFee_5
lnorm: u rnorm: u
[i]Type for TMP_288

Name: TMP_288 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_289(None) = SOLIDITY_CALL require(bool,string)(TMP_288,Excessive management fee)
[i]Type for TMP_289

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: managementFee_2, name: managementFee

Name: managementFee Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
managementFee_2(uint256) := _fees_1(uint256)
asgn
Source address: u
Finance type key: (-1, -1)
[i]Type for managementFee

Name: managementFee Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
Source address: u
Propogating parameters and globals to SSA variables...
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Ssa_name: _fees_1, name: _fees

Name: _fees_1 Function: setManagementFee
Num: -1
Den: -1
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
End popogation
Reading Function: withdrawToVault
Function withdrawToVault not marked
Reading Function: emitNonProtectedToken
Function emitNonProtectedToken not marked
Reading Function: sweepExtraToken
Checking funcion...



sweepExtraToken
Function name: sweepExtraToken
Finding type for _token(address ... )
prev address? u
Head Addr: -986
    Norm: 6
    Set: {-986}
    Fin: NULL
New param cache [[[], [], 6, '_token', [], -1, -986, 'u']]
FIND RETURN
ENTRY_POINT
sweepExtraToken(address)


governance_7(address) := ϕ(['governance_4', 'governance_10', 'governance_0', 'governance_5'])
token_22(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
strategy_13(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_0', 'strategy_9', 'strategy_26', 'strategy_15', 'strategy_25'])
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_299 = CONVERT token_23 to address
TMP_300(bool) = TMP_299 != _token_1
TMP_301(None) = SOLIDITY_CALL require(bool,string)(TMP_300,No want)
TMP_302 = CONVERT strategy_14 to IStrategy
HIGH_LEVEL_CALL, dest:TMP_302(IStrategy), function:withdrawOther, arguments:['_token_1']  
governance_9(address) := ϕ(['governance_4', 'governance_10', 'governance_8', 'governance_5'])
strategy_15(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_9', 'strategy_14', 'strategy_26', 'strategy_15', 'strategy_25'])
TMP_304 = CONVERT _token_1 to IERC20Upgradeable
TMP_305 = CONVERT _token_1 to IERC20Upgradeable
TMP_306 = CONVERT this to address
TMP_307(uint256) = HIGH_LEVEL_CALL, dest:TMP_305(IERC20Upgradeable), function:balanceOf, arguments:['TMP_306']  
governance_10(address) := ϕ(['governance_4', 'governance_9', 'governance_10', 'governance_5'])
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_304', 'governance_10', 'TMP_307'] 


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: governance_7, name: governance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: governance, Num: 7
Globalname: governance, contract_name: StakedCitadel
global...

Name: PIC_27 Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: token_22, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token, Num: 22
Globalname: token, contract_name: StakedCitadel
global...

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
Ssa_name: strategy_13, name: strategy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategy, Num: 13
Globalname: strategy, contract_name: StakedCitadel
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Source address: 6
governance_7(address) := ϕ(['governance_4', 'governance_10', 'governance_0', 'governance_5'])
Phi
[i]Type for governance

Name: governance Function: sweepExtraToken
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
XXXX
token_22(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
Phi
[i]Type for token

Name: token Function: sweepExtraToken
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
strategy_13(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_0', 'strategy_9', 'strategy_26', 'strategy_15', 'strategy_25'])
Phi
[i]Type for strategy

Name: strategy Function: sweepExtraToken
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
[i] TMP_299 cleared
[i] TMP_300 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Source address: -986

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Copied ftype
Ssa_name: token_23, name: token

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: token, Num: 23
Globalname: token, contract_name: StakedCitadel
global...

Name: token Function: initialize
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
Ssa_name: token_23, name: token

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_299 = CONVERT token_23 to address
Converting token_23

Name: None Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
[i]Type for TMP_299

Name: TMP_299 Function: sweepExtraToken
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_300(bool) = TMP_299 != _token_1
[i]Type for TMP_300

Name: TMP_300 Function: sweepExtraToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_301(None) = SOLIDITY_CALL require(bool,string)(TMP_300,No want)
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_302 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategy_14, name: strategy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategy, Num: 14
Globalname: strategy, contract_name: StakedCitadel
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Source address: 6
Ssa_name: _token_1, name: _token

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategy_14, name: strategy

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: governance_9, name: governance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: governance, Num: 9
Globalname: governance, contract_name: StakedCitadel
global...

Name: PIC_27 Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: strategy_15, name: strategy

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: strategy, Num: 15
Globalname: strategy, contract_name: StakedCitadel
global...

Name: PIC_4 Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Source address: 6
TMP_302 = CONVERT strategy_14 to IStrategy
Converting strategy_14

Name: None Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Source address: 6
Strategy
[i]Type for TMP_302

Name: TMP_302 Function: sweepExtraToken
Num: -1
Den: -1
Address: 6
Norm: 0
LF: Strategy
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:TMP_302(IStrategy), function:withdrawOther, arguments:['_token_1']  
High Call: withdrawOther
governance_9(address) := ϕ(['governance_4', 'governance_10', 'governance_8', 'governance_5'])
Phi
[i]Type for governance

Name: governance Function: sweepExtraToken
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
XXXX
strategy_15(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_9', 'strategy_14', 'strategy_26', 'strategy_15', 'strategy_25'])
Phi
[i]Type for strategy

Name: strategy Function: sweepExtraToken
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_304 cleared
[i] TMP_305 cleared
[i] TMP_306 cleared
[i] TMP_307 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: governance_10, name: governance

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
Name: governance, Num: 10
Globalname: governance, contract_name: StakedCitadel
global...

Name: PIC_27 Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Source address: 3
Ssa_name: governance_10, name: governance

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: governance_10, name: governance

Name: None Function: None
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
TMP_304 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -986
ERC20Upgradeable
[i]Type for TMP_304

Name: TMP_304 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_305 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -986
ERC20Upgradeable
[i]Type for TMP_305

Name: TMP_305 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_306 = CONVERT this to address
Converting this
9
[i]Type for TMP_306

Name: TMP_306 Function: sweepExtraToken
Num: -1
Den: -1
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_307(uint256) = HIGH_LEVEL_CALL, dest:TMP_305(IERC20Upgradeable), function:balanceOf, arguments:['TMP_306']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20Upgradeable, balanceOf
Handling balance function!
-986
[i]Type for TMP_307

Name: TMP_307 Function: sweepExtraToken
Num: -986
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
governance_10(address) := ϕ(['governance_4', 'governance_9', 'governance_10', 'governance_5'])
Phi
[i]Type for governance

Name: governance Function: sweepExtraToken
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_304', 'governance_10', 'TMP_307'] 


governance_7(address) := ϕ(['governance_4', 'governance_10', 'governance_0', 'governance_5'])
token_22(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
strategy_13(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_0', 'strategy_9', 'strategy_26', 'strategy_15', 'strategy_25'])
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
TMP_299 = CONVERT token_23 to address
TMP_300(bool) = TMP_299 != _token_1
TMP_301(None) = SOLIDITY_CALL require(bool,string)(TMP_300,No want)
TMP_302 = CONVERT strategy_14 to IStrategy
HIGH_LEVEL_CALL, dest:TMP_302(IStrategy), function:withdrawOther, arguments:['_token_1']  
governance_9(address) := ϕ(['governance_4', 'governance_10', 'governance_8', 'governance_5'])
strategy_15(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_9', 'strategy_14', 'strategy_26', 'strategy_15', 'strategy_25'])
TMP_304 = CONVERT _token_1 to IERC20Upgradeable
TMP_305 = CONVERT _token_1 to IERC20Upgradeable
TMP_306 = CONVERT this to address
TMP_307(uint256) = HIGH_LEVEL_CALL, dest:TMP_305(IERC20Upgradeable), function:balanceOf, arguments:['TMP_306']  
governance_10(address) := ϕ(['governance_4', 'governance_9', 'governance_10', 'governance_5'])
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_304', 'governance_10', 'TMP_307'] 


Propogating parameters and globals to SSA variables...
End popogation
Ssa_name: governance_7, name: governance

Name: governance Function: sweepExtraToken
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_22, name: token

Name: token Function: sweepExtraToken
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategy_13, name: strategy

Name: strategy Function: sweepExtraToken
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
governance_7(address) := ϕ(['governance_4', 'governance_10', 'governance_0', 'governance_5'])
Phi
[i]Type for governance

Name: governance Function: sweepExtraToken
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
XXXX
token_22(IERC20Upgradeable) := ϕ(['token_1', 'token_23', 'token_9', 'token_3', 'token_13', 'token_18', 'token_26', 'token_21', 'token_41', 'token_0', 'token_31', 'token_5'])
Phi
[i]Type for token

Name: token Function: sweepExtraToken
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
strategy_13(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_0', 'strategy_9', 'strategy_26', 'strategy_15', 'strategy_25'])
Phi
[i]Type for strategy

Name: strategy Function: sweepExtraToken
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
XXXX
Propogating parameters and globals to SSA variables...
End popogation
INTERNAL_CALL, SettAccessControl._onlyGovernanceOrStrategist()()
New param cache []
Old param cache: []
[i] TMP_299 cleared
[i] TMP_300 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_23, name: token

Name: token Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: token_23, name: token

Name: token Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
TMP_299 = CONVERT token_23 to address
Converting token_23

Name: token Function: None
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
Source address: -999
[i]Type for TMP_299

Name: TMP_299 Function: sweepExtraToken
Num: -1
Den: -1
Address: -999
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_300(bool) = TMP_299 != _token_1
[i]Type for TMP_300

Name: TMP_300 Function: sweepExtraToken
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_301(None) = SOLIDITY_CALL require(bool,string)(TMP_300,No want)
[i]Type for TMP_301

Name: None Function: None
Num: 
Den: 
Address: u
Norm: u
LF: None
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_302 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategy_14, name: strategy

Name: strategy Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategy_14, name: strategy

Name: strategy Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: governance_9, name: governance

Name: governance Function: sweepExtraToken
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: strategy_15, name: strategy

Name: strategy Function: sweepExtraToken
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
TMP_302 = CONVERT strategy_14 to IStrategy
Converting strategy_14

Name: strategy Function: None
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
Source address: 6
Strategy
[i]Type for TMP_302

Name: TMP_302 Function: sweepExtraToken
Num: -1
Den: -1
Address: 6
Norm: 0
LF: Strategy
Value: u
Fields: 
Finance Type: undef
XXXX
HIGH_LEVEL_CALL, dest:TMP_302(IStrategy), function:withdrawOther, arguments:['_token_1']  
High Call: withdrawOther
governance_9(address) := ϕ(['governance_4', 'governance_10', 'governance_8', 'governance_5'])
Phi
[i]Type for governance

Name: governance Function: sweepExtraToken
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
XXXX
strategy_15(address) := ϕ(['strategy_19', 'strategy_6', 'strategy_12', 'strategy_9', 'strategy_14', 'strategy_26', 'strategy_15', 'strategy_25'])
Phi
[i]Type for strategy

Name: strategy Function: sweepExtraToken
Num: -1
Den: -1
Address: 6
Norm: 0
LF: strategy
Value: u
Fields: 
Finance Type: undef
XXXX
[i] TMP_304 cleared
[i] TMP_305 cleared
[i] TMP_306 cleared
[i] TMP_307 cleared
Propogating parameters and globals to SSA variables...
Ssa_name: _token_1, name: _token

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Ssa_name: governance_10, name: governance

Name: governance Function: sweepExtraToken
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: governance_10, name: governance

Name: governance Function: sweepExtraToken
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
Ssa_name: _token_1, name: _token

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
End popogation
Ssa_name: governance_10, name: governance

Name: governance Function: sweepExtraToken
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
TMP_304 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -986
ERC20Upgradeable
[i]Type for TMP_304

Name: TMP_304 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_305 = CONVERT _token_1 to IERC20Upgradeable
Converting _token_1

Name: _token_1 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: _token
Value: u
Fields: 
Finance Type: undef
Source address: -986
ERC20Upgradeable
[i]Type for TMP_305

Name: TMP_305 Function: sweepExtraToken
Num: 
Den: 
Address: -986
Norm: 6
LF: ERC20Upgradeable
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_306 = CONVERT this to address
Converting this
9
[i]Type for TMP_306

Name: TMP_306 Function: sweepExtraToken
Num: 
Den: 
Address: 9
Norm: u
LF: StakedCitadel
Value: u
Fields: 
Finance Type: undef
XXXX
TMP_307(uint256) = HIGH_LEVEL_CALL, dest:TMP_305(IERC20Upgradeable), function:balanceOf, arguments:['TMP_306']  
High Call: balanceOf
Running querryfc
Found: None
Written func info: IERC20Upgradeable, balanceOf
Handling balance function!
-986
[i]Type for TMP_307

Name: TMP_307 Function: sweepExtraToken
Num: -986
Den: -1
Address: u
Norm: 6
LF: None
Value: u
Fields: 
Finance Type: raw balance
XXXX
governance_10(address) := ϕ(['governance_4', 'governance_9', 'governance_10', 'governance_5'])
Phi
[i]Type for governance

Name: governance Function: sweepExtraToken
Num: -1
Den: -1
Address: 3
Norm: 0
LF: governance
Value: u
Fields: 
Finance Type: undef
XXXX
LIBRARY_CALL, dest:SafeERC20Upgradeable, function:SafeERC20Upgradeable.safeTransfer(IERC20Upgradeable,address,uint256), arguments:['TMP_304', 'governance_10', 'TMP_307'] 
Reading Function: earn
Function earn not marked
Reading Function: pauseDeposits
Function pauseDeposits not marked
Reading Function: unpauseDeposits
Function unpauseDeposits not marked
Reading Function: pause
Function pause not marked
Reading Function: unpause
Function unpause not marked
Reading Function: _depositFor
Function _depositFor not marked
Reading Function: _depositWithAuthorization
Function _depositWithAuthorization not marked
Reading Function: _depositForWithAuthorization
Function _depositForWithAuthorization not marked
Reading Function: _withdraw
Function _withdraw not marked
Reading Function: _calculateFee
Function _calculateFee not marked
Reading Function: _calculatePerformanceFee
Function _calculatePerformanceFee not marked
Reading Function: _mintSharesFor
Function _mintSharesFor not marked
Reading Function: _handleFees
Function _handleFees not marked
Reading Function: slitherConstructorConstantVariables
Function slitherConstructorConstantVariables not marked
Address: 1, Label: global:strategist
Address: 2, Label: global:treasury
Address: 3, Label: global:governance
Address: 4, Label: global:keeper
Address: 5, Label: global:badgerTree
Address: 6, Label: global:strategy
Address: 7, Label: global:guardian
Address: 8, Label: global:vesting
Address: -999, Label: initialize:_token
Address: -998, Label: initialize:_governance
Address: -997, Label: initialize:_keeper
Address: -996, Label: initialize:_guardian
Address: -995, Label: initialize:_treasury
Address: -994, Label: initialize:_strategist
Address: -993, Label: initialize:_badgerTree
Address: -992, Label: initialize:_vesting
Address: -991, Label: reportAdditionalToken:_token
Address: -990, Label: setTreasury:_treasury
Address: -989, Label: setStrategy:_strategy
Address: -988, Label: setGuardian:_guardian
Address: -987, Label: setVesting:_vesting
Address: -986, Label: sweepExtraToken:_token
Address: 9, Label: _isConstructor:TMP_3
Address: 9, Label: global:this
Head Addr: 1
    Norm: 0
    Set: {1}
    Fin: NULL
Head Addr: 2
    Norm: 0
    Set: {2}
    Fin: NULL
Head Addr: 3
    Norm: 0
    Set: {3}
    Fin: NULL
Head Addr: 4
    Norm: 0
    Set: {4}
    Fin: NULL
Head Addr: 5
    Norm: 0
    Set: {5}
    Fin: NULL
Head Addr: 6
    Norm: 0
    Set: {6}
    Fin: NULL
Head Addr: 7
    Norm: 0
    Set: {7}
    Fin: NULL
Head Addr: 8
    Norm: 0
    Set: {8}
    Fin: NULL
Head Addr: -999
    Norm: 6
    Set: {-999}
    Fin: NULL
Head Addr: -998
    Norm: 0
    Set: {-998}
    Fin: NULL
Head Addr: -997
    Norm: 0
    Set: {-997}
    Fin: NULL
Head Addr: -996
    Norm: 0
    Set: {-996}
    Fin: NULL
Head Addr: -995
    Norm: 0
    Set: {-995}
    Fin: NULL
Head Addr: -994
    Norm: 0
    Set: {-994}
    Fin: NULL
Head Addr: -993
    Norm: 0
    Set: {-993}
    Fin: NULL
Head Addr: -992
    Norm: 0
    Set: {-992}
    Fin: NULL
Head Addr: -991
    Norm: 6
    Set: {-991}
    Fin: NULL
Head Addr: -990
    Norm: 0
    Set: {-990}
    Fin: NULL
Head Addr: -989
    Norm: 0
    Set: {-989}
    Fin: NULL
Head Addr: -988
    Norm: 0
    Set: {-988}
    Fin: NULL
Head Addr: -987
    Norm: 0
    Set: {-987}
    Fin: NULL
Head Addr: -986
    Norm: 6
    Set: {-986}
    Fin: NULL
Head Addr: 9
    Norm: u
    Set: {9}
    Fin: NULL
Function count: 73
Executing Group 28
[*] Tested 0 warnings for Badger Dao p3
Group 28 complete
Testing complete
