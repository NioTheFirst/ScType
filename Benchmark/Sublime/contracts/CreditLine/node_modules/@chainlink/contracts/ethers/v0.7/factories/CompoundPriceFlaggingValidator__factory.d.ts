import { ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { TransactionOverrides } from "..";
import { CompoundPriceFlaggingValidator } from "../CompoundPriceFlaggingValidator";
export declare class CompoundPriceFlaggingValidator__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(flagsAddress: string, compoundOracleAddress: string, overrides?: TransactionOverrides): Promise<CompoundPriceFlaggingValidator>;
    getDeployTransaction(flagsAddress: string, compoundOracleAddress: string, overrides?: TransactionOverrides): UnsignedTransaction;
    attach(address: string): CompoundPriceFlaggingValidator;
    connect(signer: Signer): CompoundPriceFlaggingValidator__factory;
    static connect(address: string, signerOrProvider: Signer | Provider): CompoundPriceFlaggingValidator;
}
//# sourceMappingURL=CompoundPriceFlaggingValidator__factory.d.ts.map