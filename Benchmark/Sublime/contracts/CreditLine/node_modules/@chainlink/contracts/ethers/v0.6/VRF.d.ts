/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface VRFInterface extends Interface {
  functions: {
    PROOF_LENGTH: TypedFunctionDescription<{ encode([]: []): string }>;
  };

  events: {};
}

export class VRF extends Contract {
  connect(signerOrProvider: Signer | Provider | string): VRF;
  attach(addressOrName: string): VRF;
  deployed(): Promise<VRF>;

  on(event: EventFilter | string, listener: Listener): VRF;
  once(event: EventFilter | string, listener: Listener): VRF;
  addListener(eventName: EventFilter | string, listener: Listener): VRF;
  removeAllListeners(eventName: EventFilter | string): VRF;
  removeListener(eventName: any, listener: Listener): VRF;

  interface: VRFInterface;

  functions: {
    PROOF_LENGTH(overrides?: TransactionOverrides): Promise<BigNumber>;

    "PROOF_LENGTH()"(overrides?: TransactionOverrides): Promise<BigNumber>;
  };

  PROOF_LENGTH(overrides?: TransactionOverrides): Promise<BigNumber>;

  "PROOF_LENGTH()"(overrides?: TransactionOverrides): Promise<BigNumber>;

  filters: {};

  estimate: {
    PROOF_LENGTH(overrides?: TransactionOverrides): Promise<BigNumber>;

    "PROOF_LENGTH()"(overrides?: TransactionOverrides): Promise<BigNumber>;
  };
}
