import { ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";
import { TransactionOverrides } from "..";
import { ConfirmedOwnerWithProposal } from "../ConfirmedOwnerWithProposal";
export declare class ConfirmedOwnerWithProposal__factory extends ContractFactory {
    constructor(signer?: Signer);
    deploy(owner: string, pendingOwner: string, overrides?: TransactionOverrides): Promise<ConfirmedOwnerWithProposal>;
    getDeployTransaction(owner: string, pendingOwner: string, overrides?: TransactionOverrides): UnsignedTransaction;
    attach(address: string): ConfirmedOwnerWithProposal;
    connect(signer: Signer): ConfirmedOwnerWithProposal__factory;
    static connect(address: string, signerOrProvider: Signer | Provider): ConfirmedOwnerWithProposal;
}
//# sourceMappingURL=ConfirmedOwnerWithProposal__factory.d.ts.map