/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface ChainlinkTestHelperInterface extends Interface {
  functions: {
    closeEvent: TypedFunctionDescription<{ encode([]: []): string }>;

    addUint: TypedFunctionDescription<{
      encode([_key, _value]: [string, BigNumberish]): string;
    }>;

    addBytes: TypedFunctionDescription<{
      encode([_key, _value]: [string, Arrayish]): string;
    }>;

    addStringArray: TypedFunctionDescription<{
      encode([_key, _values]: [string, Arrayish[]]): string;
    }>;

    addInt: TypedFunctionDescription<{
      encode([_key, _value]: [string, BigNumberish]): string;
    }>;

    setBuffer: TypedFunctionDescription<{ encode([data]: [Arrayish]): string }>;

    add: TypedFunctionDescription<{
      encode([_key, _value]: [string, string]): string;
    }>;
  };

  events: {
    RequestData: TypedEventDescription<{
      encodeTopics([payload]: [null]): string[];
    }>;
  };
}

export class ChainlinkTestHelper extends Contract {
  connect(signerOrProvider: Signer | Provider | string): ChainlinkTestHelper;
  attach(addressOrName: string): ChainlinkTestHelper;
  deployed(): Promise<ChainlinkTestHelper>;

  on(event: EventFilter | string, listener: Listener): ChainlinkTestHelper;
  once(event: EventFilter | string, listener: Listener): ChainlinkTestHelper;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): ChainlinkTestHelper;
  removeAllListeners(eventName: EventFilter | string): ChainlinkTestHelper;
  removeListener(eventName: any, listener: Listener): ChainlinkTestHelper;

  interface: ChainlinkTestHelperInterface;

  functions: {
    closeEvent(overrides?: TransactionOverrides): Promise<ContractTransaction>;

    "closeEvent()"(
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    addUint(
      _key: string,
      _value: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "addUint(string,uint256)"(
      _key: string,
      _value: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    addBytes(
      _key: string,
      _value: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "addBytes(string,bytes)"(
      _key: string,
      _value: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    addStringArray(
      _key: string,
      _values: Arrayish[],
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "addStringArray(string,bytes32[])"(
      _key: string,
      _values: Arrayish[],
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    addInt(
      _key: string,
      _value: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "addInt(string,int256)"(
      _key: string,
      _value: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    setBuffer(
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "setBuffer(bytes)"(
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    add(
      _key: string,
      _value: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "add(string,string)"(
      _key: string,
      _value: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  closeEvent(overrides?: TransactionOverrides): Promise<ContractTransaction>;

  "closeEvent()"(
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  addUint(
    _key: string,
    _value: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "addUint(string,uint256)"(
    _key: string,
    _value: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  addBytes(
    _key: string,
    _value: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "addBytes(string,bytes)"(
    _key: string,
    _value: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  addStringArray(
    _key: string,
    _values: Arrayish[],
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "addStringArray(string,bytes32[])"(
    _key: string,
    _values: Arrayish[],
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  addInt(
    _key: string,
    _value: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "addInt(string,int256)"(
    _key: string,
    _value: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  setBuffer(
    data: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "setBuffer(bytes)"(
    data: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  add(
    _key: string,
    _value: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "add(string,string)"(
    _key: string,
    _value: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {
    RequestData(payload: null): EventFilter;
  };

  estimate: {
    closeEvent(overrides?: TransactionOverrides): Promise<BigNumber>;

    "closeEvent()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    addUint(
      _key: string,
      _value: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "addUint(string,uint256)"(
      _key: string,
      _value: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    addBytes(
      _key: string,
      _value: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "addBytes(string,bytes)"(
      _key: string,
      _value: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    addStringArray(
      _key: string,
      _values: Arrayish[],
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "addStringArray(string,bytes32[])"(
      _key: string,
      _values: Arrayish[],
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    addInt(
      _key: string,
      _value: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "addInt(string,int256)"(
      _key: string,
      _value: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    setBuffer(
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "setBuffer(bytes)"(
      data: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    add(
      _key: string,
      _value: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "add(string,string)"(
      _key: string,
      _value: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
