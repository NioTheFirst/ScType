CreditLine
SavingsAccountUtil
IPriceOracle
ISavingsAccount
IStrategyRegistry
IYield
OwnableUpgradeable
Initializable
AddressUpgradeable
ContextUpgradeable
SafeMath
IERC20
SafeERC20
Address
ReentrancyGuard
contract name: CreditLine
WARNING!!!!
CreditLine_types.txt
Finance File not Found
"CreditLine_types.txt" opened successfully.
[*c], CreditLine

[sef], ORACLE, getLatestPrice, 2, {t, [2], [1], 0}, {c, -1, -1, 0}

{t, [2], [1], 0}
['t', '[2]', '[1]', '0']
{c, -1, -1, 0}
['c', '-1', '-1', '0']
[sef], REG, getStrategies, 1, {c, -1, -1, 0, YIELD}

{c, -1, -1, 0, YIELD}
['c', '-1', '-1', '0', 'YIELD']
[sef], YIELD, getTokensForShares, 1, {t, [2], [-1], 0}

{t, [2], [-1], 0}
['t', '[2]', '[-1]', '0']
[sef], SAVE, transfer

[sef], SAVE, withdraw

[sef], SAVE, balanceInShares

[sef], SAVE, transferFrom

[sef], SAVE, deposit

[sef], SAVE, withdrawFrom

[sef], BASSET, balanceOf

calculateInterest

calculateInterestAccrued

calculateCurrentDebt

calculateBorrowableAmount

request

accept

depositCollateral

borrow

repay

close

calculateCurrentCollateralRatio

calculateTotalCollateralTokens

withdrawCollateral

withdrawableCollateral

[t], global, savingsAccount, -1, -1, 0, SAVE

[t], global, strategyRegistry, -1, -1, 0, REG

[t], global, collateralShareInStrategy

[t], global, _NOT_ENTERED

[t], global, this, -1, -1, 0, THIS

[t], global, priceOracle, -1, -1, 0, ORACLE

[t], global, _owner

[t], global, creditLineConstants

[t*], global, creditLineConstants, borrowAsset, 1, -1, 0, BASSET

[t*], global, creditLineConstants, collateralAsset, 2, -1, 0, CASSET

[t], global, creditLineVariables

[t], global, YEAR_IN_SECONDS

[t], global, _ENTERED

[t], global, _status

[t], global, creditLineCounter

[t], global, defaultStrategy

[t], global, protocolFeeCollector

[t], global, protocolFeeFraction

[t], global, _initialized

[t], global, _initializing

[t], global, liquidatorRewardFraction



[t], liquidate, _id

[t], liquidate, _toSavingsAccount

[t], liquidate, amount, 1, -1, 0

[t], calculateInterest, _principal

[t], calculateInterest, _borrowRate

[t], calculateInterest, _timeElapsed

[t], calculateInterestAccrued, _id

[t], calculateCurrentDebt, _id

[t], calculateBorrowableAmount, _id

[t], request, _requestTo, -1, -1, 0, reqTo

[t], request, _borrowLimit

[t], request, _borrowRate

[t], request, _collateralRatio

[t], request, _borrowAsset, -1, -1, 0, bAsset

[t], request, _collateralAsset, -1, -1, 0, cAsset

[t], accept, _id

[t], depositCollateral, _id

[t], depositCollateral, _amount

[t], depositCollateral, _strategy, -1, -1, 0, strat

[t], borrow, _id

[t], borrow, _amount

[t], repay, _id

[t], repay, _amount

[t], close, _id

[t], calculateCurrentCollateralRatio, _id

[t], calculateTotalCollateralTokens, _id

[t], withdrawCollateral, _id

[t], withdrawCollateral, _amount

[t], withdrawableCollateral, _id

[*] CreditLine run
Checking... initialize Visibility: external
[x] No Binary
Checking... updateDefaultStrategy Visibility: external
[x] No Binary
Checking... _updateDefaultStrategy Visibility: internal
[x] Not visible 
Checking... updatePriceOracle Visibility: external
[x] No Binary
Checking... _updatePriceOracle Visibility: internal
[x] Not visible 
Checking... updateSavingsAccount Visibility: external
[x] No Binary
Checking... _updateSavingsAccount Visibility: internal
[x] Not visible 
Checking... updateProtocolFeeFraction Visibility: external
[x] No Binary
Checking... _updateProtocolFeeFraction Visibility: internal
[x] Not visible 
Checking... updateProtocolFeeCollector Visibility: external
[x] No Binary
Checking... _updateProtocolFeeCollector Visibility: internal
[x] Not visible 
Checking... updateStrategyRegistry Visibility: external
[x] No Binary
Checking... _updateStrategyRegistry Visibility: internal
[x] Not visible 
Checking... updateLiquidatorRewardFraction Visibility: external
[x] No Binary
Checking... _updateLiquidatorRewardFraction Visibility: internal
[x] Not visible 
Checking... calculateInterest Visibility: public
[o] Marked
Checking... calculateInterestAccrued Visibility: public
[o] Marked
Checking... calculateCurrentDebt Visibility: public
[o] Marked
Checking... calculateBorrowableAmount Visibility: public
[o] Marked
Checking... updateinterestAccruedTillLastPrincipalUpdate Visibility: internal
[x] Not visible 
Checking... _depositCollateralFromSavingsAccount Visibility: internal
[x] Not visible 
Checking... request Visibility: external
[o] Marked
Checking... _createRequest Visibility: internal
[x] Not visible 
Checking... accept Visibility: external
[o] Marked
Checking... depositCollateral Visibility: external
[o] Marked
Checking... _depositCollateral Visibility: internal
[x] Not visible 
Checking... _withdrawBorrowAmount Visibility: internal
[x] Not visible 
Checking... borrow Visibility: external
[o] Marked
Checking... _repayFromSavingsAccount Visibility: internal
[x] Not visible 
Checking... _repay Visibility: internal
[x] Not visible 
Checking... repay Visibility: external
[o] Marked
Checking... _resetCreditLine Visibility: internal
[x] Not visible 
Checking... close Visibility: external
[o] Marked
Checking... calculateCurrentCollateralRatio Visibility: public
[o] Marked
Checking... calculateTotalCollateralTokens Visibility: public
[o] Marked
Checking... withdrawCollateral Visibility: external
[o] Marked
Checking... withdrawableCollateral Visibility: public
[o] Marked
Checking... _transferCollateral Visibility: internal
[x] Not visible 
Checking... liquidate Visibility: external
[o] Marked
Checking... borrowTokensToLiquidate Visibility: external
[x] No Binary
Checking... _borrowTokensToLiquidate Visibility: internal
[x] Not visible 
Checking... receive Visibility: external
[o] Marked
Checking... slitherConstructorConstantVariables Visibility: internal
[x] Not visible 
State_var: savingsAccount
Finding type for savingsAccount...
address
State_var: strategyRegistry
Finding type for strategyRegistry...
address
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
State_var: priceOracle
Finding type for priceOracle...
address
State_var: _owner
Finding type for _owner...
address
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
State_var: defaultStrategy
Finding type for defaultStrategy...
address
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
State_var: _initialized
Finding type for _initialized...
bool
State_var: _initializing
Finding type for _initializing...
bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
State_var: _ENTERED
Finding type for _ENTERED...
uint256
State_var: _status
Finding type for _status...
uint256
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
contract name: SavingsAccountUtil
WARNING!!!!
SavingsAccountUtil_types.txt
Finance File not Found
Type File not found.
[x] SavingsAccountUtil not run
contract name: IPriceOracle
WARNING!!!!
IPriceOracle_types.txt
Finance File not Found
Type File not found.
[x] IPriceOracle not run
contract name: ISavingsAccount
WARNING!!!!
ISavingsAccount_types.txt
Finance File not Found
Type File not found.
[x] ISavingsAccount not run
contract name: IStrategyRegistry
WARNING!!!!
IStrategyRegistry_types.txt
Finance File not Found
Type File not found.
[x] IStrategyRegistry not run
contract name: IYield
WARNING!!!!
IYield_types.txt
Finance File not Found
Type File not found.
[x] IYield not run
contract name: OwnableUpgradeable
WARNING!!!!
OwnableUpgradeable_types.txt
Finance File not Found
Type File not found.
[x] OwnableUpgradeable not run
contract name: Initializable
WARNING!!!!
Initializable_types.txt
Finance File not Found
Type File not found.
[x] Initializable not run
contract name: AddressUpgradeable
WARNING!!!!
AddressUpgradeable_types.txt
Finance File not Found
Type File not found.
[x] AddressUpgradeable not run
contract name: ContextUpgradeable
WARNING!!!!
ContextUpgradeable_types.txt
Finance File not Found
Type File not found.
[x] ContextUpgradeable not run
contract name: SafeMath
WARNING!!!!
SafeMath_types.txt
Finance File not Found
Type File not found.
[x] SafeMath not run
contract name: IERC20
WARNING!!!!
IERC20_types.txt
Finance File not Found
Type File not found.
[x] IERC20 not run
contract name: SafeERC20
WARNING!!!!
SafeERC20_types.txt
Finance File not Found
Type File not found.
[x] SafeERC20 not run
contract name: Address
WARNING!!!!
Address_types.txt
Finance File not Found
Type File not found.
[x] Address not run
contract name: ReentrancyGuard
WARNING!!!!
ReentrancyGuard_types.txt
Finance File not Found
Type File not found.
[x] ReentrancyGuard not run
Seen contract: {} Contract name out: CreditLine
[*] CreditLine run
Reading Function: initialize
Function initialize not marked
Mark Iterations TRUE, proceeding anyway
Function name: initialize
Function Visibility (test): external
_defaultStrategy
Finding type for _defaultStrategy...
address
_priceOracle
Finding type for _priceOracle...
address
_savingsAccount
Finding type for _savingsAccount...
address
_strategyRegistry
Finding type for _strategyRegistry...
address
_owner
Finding type for _owner...
address
_protocolFeeFraction
Finding type for _protocolFeeFraction...
uint256
_protocolFeeCollector
Finding type for _protocolFeeCollector...
address
_liquidatorRewardFraction
Finding type for _liquidatorRewardFraction...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _defaultStrategy
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _priceOracle
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: _savingsAccount
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: _strategyRegistry
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: _owner
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 6
    num: [-1]
    den: [-1]
    norm: u
    link: _protocolFeeCollector
    fields: []
    fintype: -1
Param: 7
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Initializable.initializer()()
typecheckig node...
MODIFIER_CALL, Initializable.initializer()()
Internal call...
initializer
Function: initializer
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
typecheckig node...
INTERNAL_CALL, OwnableUpgradeable.__Ownable_init()()
Internal call...
__Ownable_init
Function: __Ownable_init
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, OwnableUpgradeable.transferOwnership(address)(_owner_1)
typecheckig node...
INTERNAL_CALL, OwnableUpgradeable.transferOwnership(address)(_owner_1)
Internal call...
transferOwnership
_owner
Function: transferOwnership
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updateDefaultStrategy(address)(_defaultStrategy_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updateDefaultStrategy(address)(_defaultStrategy_1)
Internal call...
_updateDefaultStrategy
_defaultStrategy
Function: _updateDefaultStrategy
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updatePriceOracle(address)(_priceOracle_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updatePriceOracle(address)(_priceOracle_1)
Internal call...
_updatePriceOracle
_priceOracle
Function: _updatePriceOracle
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updateSavingsAccount(address)(_savingsAccount_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updateSavingsAccount(address)(_savingsAccount_1)
Internal call...
_updateSavingsAccount
_savingsAccount
Function: _updateSavingsAccount
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updateStrategyRegistry(address)(_strategyRegistry_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updateStrategyRegistry(address)(_strategyRegistry_1)
Internal call...
_updateStrategyRegistry
_strategyRegistry
Function: _updateStrategyRegistry
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updateProtocolFeeFraction(uint256)(_protocolFeeFraction_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updateProtocolFeeFraction(uint256)(_protocolFeeFraction_1)
Internal call...
_updateProtocolFeeFraction
_protocolFeeFraction
Function: _updateProtocolFeeFraction
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updateProtocolFeeCollector(address)(_protocolFeeCollector_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updateProtocolFeeCollector(address)(_protocolFeeCollector_1)
Internal call...
_updateProtocolFeeCollector
_protocolFeeCollector
Function: _updateProtocolFeeCollector
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updateLiquidatorRewardFraction(uint256)(_liquidatorRewardFraction_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updateLiquidatorRewardFraction(uint256)(_liquidatorRewardFraction_1)
Internal call...
_updateLiquidatorRewardFraction
_liquidatorRewardFraction
Function: _updateLiquidatorRewardFraction
ic
done.
WORKLIST iteration 0 for function call "initialize":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: updateDefaultStrategy
Function updateDefaultStrategy not marked
Mark Iterations TRUE, proceeding anyway
Function name: updateDefaultStrategy
Function Visibility (test): external
_defaultStrategy
Finding type for _defaultStrategy...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _defaultStrategy
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updateDefaultStrategy(address)(_defaultStrategy_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updateDefaultStrategy(address)(_defaultStrategy_1)
Internal call...
_updateDefaultStrategy
_defaultStrategy
Function: _updateDefaultStrategy
ic
done.
WORKLIST iteration 0 for function call "updateDefaultStrategy":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _updateDefaultStrategy
Function _updateDefaultStrategy not marked
Mark Iterations TRUE, proceeding anyway
Function name: _updateDefaultStrategy
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: updatePriceOracle
Function updatePriceOracle not marked
Mark Iterations TRUE, proceeding anyway
Function name: updatePriceOracle
Function Visibility (test): external
_priceOracle
Finding type for _priceOracle...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _priceOracle
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updatePriceOracle(address)(_priceOracle_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updatePriceOracle(address)(_priceOracle_1)
Internal call...
_updatePriceOracle
_priceOracle
Function: _updatePriceOracle
ic
done.
WORKLIST iteration 0 for function call "updatePriceOracle":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _updatePriceOracle
Function _updatePriceOracle not marked
Mark Iterations TRUE, proceeding anyway
Function name: _updatePriceOracle
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: updateSavingsAccount
Function updateSavingsAccount not marked
Mark Iterations TRUE, proceeding anyway
Function name: updateSavingsAccount
Function Visibility (test): external
_savingsAccount
Finding type for _savingsAccount...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _savingsAccount
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updateSavingsAccount(address)(_savingsAccount_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updateSavingsAccount(address)(_savingsAccount_1)
Internal call...
_updateSavingsAccount
_savingsAccount
Function: _updateSavingsAccount
ic
done.
WORKLIST iteration 0 for function call "updateSavingsAccount":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _updateSavingsAccount
Function _updateSavingsAccount not marked
Mark Iterations TRUE, proceeding anyway
Function name: _updateSavingsAccount
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: updateProtocolFeeFraction
Function updateProtocolFeeFraction not marked
Mark Iterations TRUE, proceeding anyway
Function name: updateProtocolFeeFraction
Function Visibility (test): external
_protocolFee
Finding type for _protocolFee...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updateProtocolFeeFraction(uint256)(_protocolFee_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updateProtocolFeeFraction(uint256)(_protocolFee_1)
Internal call...
_updateProtocolFeeFraction
_protocolFee
Function: _updateProtocolFeeFraction
ic
done.
WORKLIST iteration 0 for function call "updateProtocolFeeFraction":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _updateProtocolFeeFraction
Function _updateProtocolFeeFraction not marked
Mark Iterations TRUE, proceeding anyway
Function name: _updateProtocolFeeFraction
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: updateProtocolFeeCollector
Function updateProtocolFeeCollector not marked
Mark Iterations TRUE, proceeding anyway
Function name: updateProtocolFeeCollector
Function Visibility (test): external
_protocolFeeCollector
Finding type for _protocolFeeCollector...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _protocolFeeCollector
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updateProtocolFeeCollector(address)(_protocolFeeCollector_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updateProtocolFeeCollector(address)(_protocolFeeCollector_1)
Internal call...
_updateProtocolFeeCollector
_protocolFeeCollector
Function: _updateProtocolFeeCollector
ic
done.
WORKLIST iteration 0 for function call "updateProtocolFeeCollector":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _updateProtocolFeeCollector
Function _updateProtocolFeeCollector not marked
Mark Iterations TRUE, proceeding anyway
Function name: _updateProtocolFeeCollector
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: updateStrategyRegistry
Function updateStrategyRegistry not marked
Mark Iterations TRUE, proceeding anyway
Function name: updateStrategyRegistry
Function Visibility (test): external
_strategyRegistry
Finding type for _strategyRegistry...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _strategyRegistry
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updateStrategyRegistry(address)(_strategyRegistry_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updateStrategyRegistry(address)(_strategyRegistry_1)
Internal call...
_updateStrategyRegistry
_strategyRegistry
Function: _updateStrategyRegistry
ic
done.
WORKLIST iteration 0 for function call "updateStrategyRegistry":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _updateStrategyRegistry
Function _updateStrategyRegistry not marked
Mark Iterations TRUE, proceeding anyway
Function name: _updateStrategyRegistry
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: updateLiquidatorRewardFraction
Function updateLiquidatorRewardFraction not marked
Mark Iterations TRUE, proceeding anyway
Function name: updateLiquidatorRewardFraction
Function Visibility (test): external
_rewardFraction
Finding type for _rewardFraction...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, OwnableUpgradeable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._updateLiquidatorRewardFraction(uint256)(_rewardFraction_1)
typecheckig node...
INTERNAL_CALL, CreditLine._updateLiquidatorRewardFraction(uint256)(_rewardFraction_1)
Internal call...
_updateLiquidatorRewardFraction
_rewardFraction
Function: _updateLiquidatorRewardFraction
ic
done.
WORKLIST iteration 0 for function call "updateLiquidatorRewardFraction":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _updateLiquidatorRewardFraction
Function _updateLiquidatorRewardFraction not marked
Mark Iterations TRUE, proceeding anyway
Function name: _updateLiquidatorRewardFraction
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: calculateInterest
Function name: calculateInterest
Function Visibility (test): public
_principal
Finding type for _principal...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_borrowRate
Finding type for _borrowRate...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_timeElapsed
Finding type for _timeElapsed...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _timeElapsed Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
_principal_1(uint256) := ϕ(['REF_11'])
has variable
[i] _principal cleared
clearing ir...?
_borrowRate_1(uint256) := ϕ(['REF_13'])
has variable
[i] _borrowRate cleared
clearing ir...?
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
has variable
[i] _timeElapsed cleared
clearing ir...?
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
has variable
typecheckig node...
_principal_1(uint256) := ϕ(['REF_11'])
Function name: calculateInterest
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowRate_1(uint256) := ϕ(['REF_13'])
Function name: calculateInterest
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Function name: calculateInterest
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Function name: calculateInterest
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
has variable
[i] TMP_62 cleared
clearing ir...?
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
has variable
[i] TMP_63 cleared
clearing ir...?
TMP_64(uint256) = 10 ** 30
has variable
[i] TMP_64 cleared
clearing ir...?
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
has variable
[i] TMP_65 cleared
clearing ir...?
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
has variable
[i] TMP_66 cleared
clearing ir...?
_interest_1(uint256) := TMP_66(uint256)
has variable
[i] _interest cleared
typecheckig node...
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _timeElapsed Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_63 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_64(uint256) = 10 ** 30
Function name: calculateInterest
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
Function name: calculateInterest
Library Call: div
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
Function name: calculateInterest
Library Call: div
lnorm: -30 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_66 Function: calculateInterest
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
_interest_1(uint256) := TMP_66(uint256)
Function name: calculateInterest
asgn

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _interest Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _interest_1
typecheckig node...
RETURN _interest_1
RETURN

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "calculateInterest":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: calculateInterest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
___
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: calculateInterestAccrued
Function name: calculateInterestAccrued
Function Visibility (test): public
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
has variable
[i] _id cleared
clearing ir...?
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
has variable
clearing ir...?
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Function name: calculateInterestAccrued
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: calculateInterestAccrued
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateInterestAccrued
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
has variable
clearing ir...?
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
has variable
clearing ir...?
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
has variable
[i] _lastPrincipalUpdateTime cleared
typecheckig node...
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
Function name: calculateInterestAccrued
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_7

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
Function name: calculateInterestAccrued
MEMBER
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables Fields:
^^^
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastPrincipalUpdateTime Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
Function name: calculateInterestAccrued
asgn

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
has variable
[i] TMP_67 cleared
clearing ir...?
CONDITION TMP_67
typecheckig node...
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
Function name: calculateInterestAccrued
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_67
Condition...
Conidtion: 
TMP_67
TMP_67
clearning node...
clearing ir...?
RETURN 0
typecheckig node...
RETURN 0
RETURN
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
has variable
[i] TMP_68 cleared
clearing ir...?
_timeElapsed_1(uint256) := TMP_68(uint256)
has variable
[i] _timeElapsed cleared
typecheckig node...
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
Function name: calculateInterestAccrued
Library Call: sub
block.timestamp
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_timeElapsed_1(uint256) := TMP_68(uint256)
Function name: calculateInterestAccrued
asgn

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_timeElapsed_1(uint256) := TMP_68(uint256)
XXXXX
clearning node...
clearing ir...?
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
has variable
clearing ir...?
REF_11(uint256) -> REF_10.principal
has variable
clearing ir...?
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
has variable
clearing ir...?
REF_13(uint256) -> REF_12.borrowRate
has variable
clearing ir...?
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
has variable
[i] TMP_69 cleared
clearing ir...?
_interestAccrued_1(uint256) := TMP_69(uint256)
has variable
[i] _interestAccrued cleared
typecheckig node...
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
Function name: calculateInterestAccrued
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastPrincipalUpdateTime
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_10

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastPrincipalUpdateTime
Finance Type: undef
done.
REF_11(uint256) -> REF_10.principal
Function name: calculateInterestAccrued
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
lastPrincipalUpdateTime
^^^
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
Function name: calculateInterestAccrued
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_12

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowAsset, collateralAsset
Finance Type: undef
done.
REF_13(uint256) -> REF_12.borrowRate
Function name: calculateInterestAccrued
MEMBER
creditLineConstants
borrowRate
global
creditLineConstants Fields:
borrowAsset
collateralAsset
^^^
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
Function name: calculateInterestAccrued
Internal call...
calculateInterest
REF_11
REF_13
_timeElapsed
Function: calculateInterest
ic
Internal cal param_cache
Param: 0
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: calculateInterest
Function Visibility: public
clearning node...
clearing ir...?
_principal_1(uint256) := ϕ(['REF_11'])
has variable
[i] _principal cleared
clearing ir...?
_borrowRate_1(uint256) := ϕ(['REF_13'])
has variable
[i] _borrowRate cleared
clearing ir...?
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
has variable
[i] _timeElapsed cleared
clearing ir...?
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
has variable
typecheckig node...
_principal_1(uint256) := ϕ(['REF_11'])
Function name: calculateInterest
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowRate_1(uint256) := ϕ(['REF_13'])
Function name: calculateInterest
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Function name: calculateInterest
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Function name: calculateInterest
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
has variable
[i] TMP_62 cleared
clearing ir...?
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
has variable
[i] TMP_63 cleared
clearing ir...?
TMP_64(uint256) = 10 ** 30
has variable
[i] TMP_64 cleared
clearing ir...?
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
has variable
[i] TMP_65 cleared
clearing ir...?
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
has variable
[i] TMP_66 cleared
clearing ir...?
_interest_1(uint256) := TMP_66(uint256)
has variable
[i] _interest cleared
typecheckig node...
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _borrowRate Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
XXXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_63 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
XXXXX
TMP_64(uint256) = 10 ** 30
Function name: calculateInterest
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
Function name: calculateInterest
Library Call: div
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
XXXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
Function name: calculateInterest
Library Call: div
lnorm: -30 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_66 Function: calculateInterest
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
XXXXX
_interest_1(uint256) := TMP_66(uint256)
Function name: calculateInterest
asgn

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _interest Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _interest_1
typecheckig node...
RETURN _interest_1
RETURN

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "calculateInterest":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_principal_1(uint256) := ϕ(['REF_11'])
Function name: calculateInterest
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowRate_1(uint256) := ϕ(['REF_13'])
Function name: calculateInterest
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Function name: calculateInterest
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Function name: calculateInterest
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _borrowRate Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
XXXXX
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_63 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
XXXXX
TMP_64(uint256) = 10 ** 30
Function name: calculateInterest
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
Function name: calculateInterest
Library Call: div
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
XXXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
Function name: calculateInterest
Library Call: div
lnorm: -30 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
XXXXX
_interest_1(uint256) := TMP_66(uint256)
Function name: calculateInterest
asgn

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _interest_1
typecheckig node...
RETURN _interest_1
RETURN

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "calculateInterest":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: calculateInterest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
XXXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
Function name: calculateInterestAccrued
asgn

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _interestAccrued Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _interestAccrued_1
typecheckig node...
RETURN _interestAccrued_1
RETURN

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "calculateInterestAccrued":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Function name: calculateInterestAccrued
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: calculateInterestAccrued
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
done.
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateInterestAccrued
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
typecheckig node...
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
Function name: calculateInterestAccrued
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_7

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
done.
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
Function name: calculateInterestAccrued
MEMBER
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables Fields:
lastPrincipalUpdateTime
principal
^^^

Name: lastPrincipalUpdateTime Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastPrincipalUpdateTime Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
Function name: calculateInterestAccrued
asgn

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
Function name: calculateInterestAccrued
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_67
Condition...
Conidtion: 
TMP_67
TMP_67
typecheckig node...
RETURN 0
RETURN
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
typecheckig node...
typecheckig node...
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
Function name: calculateInterestAccrued
Library Call: sub
block.timestamp
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_timeElapsed_1(uint256) := TMP_68(uint256)
Function name: calculateInterestAccrued
asgn

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_timeElapsed_1(uint256) := TMP_68(uint256)
XXXXX
typecheckig node...
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
Function name: calculateInterestAccrued
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_10

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
done.
REF_11(uint256) -> REF_10.principal
Function name: calculateInterestAccrued
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
lastPrincipalUpdateTime
principal
^^^

Name: principal Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
Function name: calculateInterestAccrued
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_12

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_13(uint256) -> REF_12.borrowRate
Function name: calculateInterestAccrued
MEMBER
creditLineConstants
borrowRate
global
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
Function name: calculateInterestAccrued
Internal call...
calculateInterest
REF_11
REF_13
_timeElapsed
Function: calculateInterest
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: calculateInterest
Function Visibility: public
clearning node...
clearing ir...?
_principal_1(uint256) := ϕ(['REF_11'])
has variable
[i] _principal cleared
clearing ir...?
_borrowRate_1(uint256) := ϕ(['REF_13'])
has variable
[i] _borrowRate cleared
clearing ir...?
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
has variable
[i] _timeElapsed cleared
clearing ir...?
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
has variable
typecheckig node...
_principal_1(uint256) := ϕ(['REF_11'])
Function name: calculateInterest
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowRate_1(uint256) := ϕ(['REF_13'])
Function name: calculateInterest
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Function name: calculateInterest
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Function name: calculateInterest
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
has variable
[i] TMP_62 cleared
clearing ir...?
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
has variable
[i] TMP_63 cleared
clearing ir...?
TMP_64(uint256) = 10 ** 30
has variable
[i] TMP_64 cleared
clearing ir...?
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
has variable
[i] TMP_65 cleared
clearing ir...?
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
has variable
[i] TMP_66 cleared
clearing ir...?
_interest_1(uint256) := TMP_66(uint256)
has variable
[i] _interest cleared
typecheckig node...
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_63 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
XXXXX
TMP_64(uint256) = 10 ** 30
Function name: calculateInterest
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
Function name: calculateInterest
Library Call: div
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
XXXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
Function name: calculateInterest
Library Call: div
lnorm: -30 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_66 Function: calculateInterest
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
_interest_1(uint256) := TMP_66(uint256)
Function name: calculateInterest
asgn

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _interest Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _interest_1
typecheckig node...
RETURN _interest_1
RETURN

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "calculateInterest":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_principal_1(uint256) := ϕ(['REF_11'])
Function name: calculateInterest
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowRate_1(uint256) := ϕ(['REF_13'])
Function name: calculateInterest
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Function name: calculateInterest
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Function name: calculateInterest
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
XXXXX
TMP_64(uint256) = 10 ** 30
Function name: calculateInterest
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
Function name: calculateInterest
Library Call: div
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
XXXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
Function name: calculateInterest
Library Call: div
lnorm: -30 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
_interest_1(uint256) := TMP_66(uint256)
Function name: calculateInterest
asgn

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _interest_1
typecheckig node...
RETURN _interest_1
RETURN

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "calculateInterest":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: calculateInterest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
XXXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
Function name: calculateInterestAccrued
asgn

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
RETURN _interestAccrued_1
RETURN

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "calculateInterestAccrued":
 New undefined nodes- 1
 Old undefined nodes- 2
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Function name: calculateInterestAccrued
Phi
[i]Type for _id

Name: _id Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_1(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: calculateInterestAccrued
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
done.
creditLineConstants_1(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateInterestAccrued
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
typecheckig node...
REF_7(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
Function name: calculateInterestAccrued
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_7

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
done.
REF_8(uint256) -> REF_7.lastPrincipalUpdateTime
Function name: calculateInterestAccrued
MEMBER
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables Fields:
lastPrincipalUpdateTime
principal
^^^

Name: lastPrincipalUpdateTime Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_8

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastPrincipalUpdateTime Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_lastPrincipalUpdateTime_1(uint256) := REF_8(uint256)
Function name: calculateInterestAccrued
asgn

Name: creditLineVariables.lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _lastPrincipalUpdateTime

Name: _lastPrincipalUpdateTime Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_67(bool) = _lastPrincipalUpdateTime_1 == 0
Function name: calculateInterestAccrued
[i]Type for TMP_67

Name: TMP_67 Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_67
Condition...
Conidtion: 
TMP_67
TMP_67
typecheckig node...
RETURN 0
RETURN
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
typecheckig node...
typecheckig node...
TMP_68(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['block.timestamp', '_lastPrincipalUpdateTime_1'] 
Function name: calculateInterestAccrued
Library Call: sub
block.timestamp
[i]Type for TMP_68

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_timeElapsed_1(uint256) := TMP_68(uint256)
Function name: calculateInterestAccrued
asgn

Name: TMP_68 Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterestAccrued
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_timeElapsed_1(uint256) := TMP_68(uint256)
XXXXX
typecheckig node...
REF_10(CreditLine.CreditLineVariables) -> creditLineVariables_1[_id_1]
Function name: calculateInterestAccrued
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_10

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lastPrincipalUpdateTime, principal
Finance Type: undef
done.
REF_11(uint256) -> REF_10.principal
Function name: calculateInterestAccrued
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
lastPrincipalUpdateTime
principal
^^^

Name: principal Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_11

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_12(CreditLine.CreditLineConstants) -> creditLineConstants_1[_id_1]
Function name: calculateInterestAccrued
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_12

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_13(uint256) -> REF_12.borrowRate
Function name: calculateInterestAccrued
MEMBER
creditLineConstants
borrowRate
global
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_13

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowRate Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
Function name: calculateInterestAccrued
Internal call...
calculateInterest
REF_11
REF_13
_timeElapsed
Function: calculateInterest
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: calculateInterest
Function Visibility: public
clearning node...
clearing ir...?
_principal_1(uint256) := ϕ(['REF_11'])
has variable
[i] _principal cleared
clearing ir...?
_borrowRate_1(uint256) := ϕ(['REF_13'])
has variable
[i] _borrowRate cleared
clearing ir...?
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
has variable
[i] _timeElapsed cleared
clearing ir...?
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
has variable
typecheckig node...
_principal_1(uint256) := ϕ(['REF_11'])
Function name: calculateInterest
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowRate_1(uint256) := ϕ(['REF_13'])
Function name: calculateInterest
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Function name: calculateInterest
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Function name: calculateInterest
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
has variable
[i] TMP_62 cleared
clearing ir...?
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
has variable
[i] TMP_63 cleared
clearing ir...?
TMP_64(uint256) = 10 ** 30
has variable
[i] TMP_64 cleared
clearing ir...?
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
has variable
[i] TMP_65 cleared
clearing ir...?
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
has variable
[i] TMP_66 cleared
clearing ir...?
_interest_1(uint256) := TMP_66(uint256)
has variable
[i] _interest cleared
typecheckig node...
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_62 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_63 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
XXXXX
TMP_64(uint256) = 10 ** 30
Function name: calculateInterest
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
Function name: calculateInterest
Library Call: div
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_65 Function: calculateInterest
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
XXXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
Function name: calculateInterest
Library Call: div
lnorm: -30 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_66 Function: calculateInterest
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
_interest_1(uint256) := TMP_66(uint256)
Function name: calculateInterest
asgn

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _interest Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _interest_1
typecheckig node...
RETURN _interest_1
RETURN

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "calculateInterest":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_principal_1(uint256) := ϕ(['REF_11'])
Function name: calculateInterest
Phi
[i]Type for _principal

Name: _principal Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowRate_1(uint256) := ϕ(['REF_13'])
Function name: calculateInterest
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_timeElapsed_1(uint256) := ϕ(['_timeElapsed_1'])
Function name: calculateInterest
Phi
[i]Type for _timeElapsed

Name: _timeElapsed Function: calculateInterest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
YEAR_IN_SECONDS_1(uint256) := ϕ(['YEAR_IN_SECONDS_0'])
Function name: calculateInterest
Phi
[i]Type for YEAR_IN_SECONDS

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_62(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_principal_1', '_borrowRate_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _borrowRate Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_62

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
Function name: calculateInterest
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_62 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_63

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_63(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_62', '_timeElapsed_1'] 
XXXXX
TMP_64(uint256) = 10 ** 30
Function name: calculateInterest
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_64

Name: TMP_64 Function: calculateInterest
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
Function name: calculateInterest
Library Call: div
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: TMP_63 Function: calculateInterest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_65

Name: TMP_65 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_65(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_63', 'TMP_64'] 
XXXXX
TMP_66(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_65', 'YEAR_IN_SECONDS_1'] 
Function name: calculateInterest
Library Call: div
lnorm: -30 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_66

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
_interest_1(uint256) := TMP_66(uint256)
Function name: calculateInterest
asgn

Name: TMP_66 Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _interest_1
typecheckig node...
RETURN _interest_1
RETURN

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "calculateInterest":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: calculateInterest

Name: _interest Function: calculateInterest
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_69

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_69(uint256) = INTERNAL_CALL, CreditLine.calculateInterest(uint256,uint256,uint256)(REF_11,REF_13,_timeElapsed_1)
XXXXX
_interestAccrued_1(uint256) := TMP_69(uint256)
Function name: calculateInterestAccrued
asgn

Name: TMP_69 Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
RETURN _interestAccrued_1
RETURN

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 2 for function call "calculateInterestAccrued":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: calculateInterestAccrued

Name: _interestAccrued Function: calculateInterestAccrued
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
___
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
FIELDS:
creditLineVariables Fields:
principal
lastPrincipalUpdateTime
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, lastPrincipalUpdateTime
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: calculateCurrentDebt
Function name: calculateCurrentDebt
Function Visibility (test): public
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
has variable
[i] _id cleared
clearing ir...?
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Function name: calculateCurrentDebt
Phi
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: calculateCurrentDebt
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, lastPrincipalUpdateTime
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
has variable
[i] TMP_70 cleared
clearing ir...?
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
has variable
clearing ir...?
_interestAccrued_1(uint256) := TMP_70(uint256)
has variable
[i] _interestAccrued cleared
typecheckig node...
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
Function name: calculateCurrentDebt
Internal call...
calculateInterestAccrued
_id
Function: calculateInterestAccrued
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Function name: calculateCurrentDebt
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, lastPrincipalUpdateTime
Finance Type: undef
done.
_interestAccrued_1(uint256) := TMP_70(uint256)
Function name: calculateCurrentDebt
asgn

Name: TMP_70 Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _interestAccrued Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_interestAccrued_1(uint256) := TMP_70(uint256)
XXXXX
clearning node...
clearing ir...?
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
has variable
clearing ir...?
REF_15(uint256) -> REF_14.principal
has variable
clearing ir...?
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
has variable
clearing ir...?
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
has variable
clearing ir...?
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
has variable
[i] TMP_71 cleared
clearing ir...?
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
has variable
[i] TMP_72 cleared
clearing ir...?
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
has variable
clearing ir...?
REF_22(uint256) -> REF_21.totalInterestRepaid
has variable
clearing ir...?
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
has variable
[i] TMP_73 cleared
clearing ir...?
_currentDebt_1(uint256) := TMP_73(uint256)
has variable
[i] _currentDebt cleared
typecheckig node...
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
Function name: calculateCurrentDebt
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, lastPrincipalUpdateTime
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, lastPrincipalUpdateTime
Finance Type: undef
done.
REF_15(uint256) -> REF_14.principal
Function name: calculateCurrentDebt
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
principal
lastPrincipalUpdateTime
^^^

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
Function name: calculateCurrentDebt
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, lastPrincipalUpdateTime
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_17

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, lastPrincipalUpdateTime
Finance Type: undef
done.
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
Function name: calculateCurrentDebt
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
principal
lastPrincipalUpdateTime
^^^
[i]Type for REF_18

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
Function name: calculateCurrentDebt
Library Call: add

Name: TMP_71 Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_71 Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
XXXXX
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
Function name: calculateCurrentDebt
Library Call: add

Name: TMP_72 Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_72 Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
XXXXX
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
Function name: calculateCurrentDebt
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_21

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_22(uint256) -> REF_21.totalInterestRepaid
Function name: calculateCurrentDebt
MEMBER
creditLineVariables
totalInterestRepaid
global
creditLineVariables Fields:
principal
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^
[i]Type for REF_22

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
Function name: calculateCurrentDebt
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_73 Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
XXXXX
_currentDebt_1(uint256) := TMP_73(uint256)
Function name: calculateCurrentDebt
asgn

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _currentDebt Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _currentDebt_1
typecheckig node...
RETURN _currentDebt_1
RETURN

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "calculateCurrentDebt":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Function name: calculateCurrentDebt
Phi
[i]Type for _id

Name: _id Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_3(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: calculateCurrentDebt
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, lastPrincipalUpdateTime
Finance Type: undef
done.
typecheckig node...
TMP_70(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
Function name: calculateCurrentDebt
Internal call...
calculateInterestAccrued
_id
Function: calculateInterestAccrued
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
[i]Type for TMP_70

Name: TMP_70 Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_4(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Function name: calculateCurrentDebt
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: interestAccruedTillLastPrincipalUpdate, totalInterestRepaid, principal, lastPrincipalUpdateTime
Finance Type: undef
done.
_interestAccrued_1(uint256) := TMP_70(uint256)
Function name: calculateCurrentDebt
asgn

Name: TMP_70 Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _interestAccrued Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interestAccrued

Name: _interestAccrued Function: calculateCurrentDebt
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_interestAccrued_1(uint256) := TMP_70(uint256)
XXXXX
typecheckig node...
REF_14(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
Function name: calculateCurrentDebt
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: interestAccruedTillLastPrincipalUpdate, totalInterestRepaid, principal, lastPrincipalUpdateTime
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_14

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: interestAccruedTillLastPrincipalUpdate, totalInterestRepaid, principal, lastPrincipalUpdateTime
Finance Type: undef
done.
REF_15(uint256) -> REF_14.principal
Function name: calculateCurrentDebt
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
interestAccruedTillLastPrincipalUpdate
totalInterestRepaid
principal
lastPrincipalUpdateTime
^^^

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_15

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_17(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
Function name: calculateCurrentDebt
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: interestAccruedTillLastPrincipalUpdate, totalInterestRepaid, principal, lastPrincipalUpdateTime
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_17

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: interestAccruedTillLastPrincipalUpdate, totalInterestRepaid, principal, lastPrincipalUpdateTime
Finance Type: undef
done.
REF_18(uint256) -> REF_17.interestAccruedTillLastPrincipalUpdate
Function name: calculateCurrentDebt
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
interestAccruedTillLastPrincipalUpdate
totalInterestRepaid
principal
lastPrincipalUpdateTime
^^^

Name: interestAccruedTillLastPrincipalUpdate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_18

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_71(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_15', 'REF_18'] 
Function name: calculateCurrentDebt
Library Call: add

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_71

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
Function name: calculateCurrentDebt
Library Call: add

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_71 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_72

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_72(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['TMP_71', '_interestAccrued_1'] 
XXXXX
REF_21(CreditLine.CreditLineVariables) -> creditLineVariables_4[_id_1]
Function name: calculateCurrentDebt
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: interestAccruedTillLastPrincipalUpdate, totalInterestRepaid, principal, lastPrincipalUpdateTime
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_21

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: interestAccruedTillLastPrincipalUpdate, totalInterestRepaid, principal, lastPrincipalUpdateTime
Finance Type: undef
done.
REF_22(uint256) -> REF_21.totalInterestRepaid
Function name: calculateCurrentDebt
MEMBER
creditLineVariables
totalInterestRepaid
global
creditLineVariables Fields:
interestAccruedTillLastPrincipalUpdate
totalInterestRepaid
principal
lastPrincipalUpdateTime
^^^

Name: totalInterestRepaid Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_22

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_73(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_72', 'REF_22'] 
Function name: calculateCurrentDebt
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_72 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_73

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_currentDebt_1(uint256) := TMP_73(uint256)
Function name: calculateCurrentDebt
asgn

Name: TMP_73 Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _currentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
RETURN _currentDebt_1
RETURN

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "calculateCurrentDebt":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: calculateCurrentDebt

Name: _currentDebt Function: calculateCurrentDebt
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: calculateBorrowableAmount
Function name: calculateBorrowableAmount
Function Visibility (test): public
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1'])
has variable
[i] _id cleared
clearing ir...?
creditLineVariables_5(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
has variable
clearing ir...?
creditLineConstants_3(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
priceOracle_2(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: calculateBorrowableAmount
Phi
[i]Type for _id

Name: _id Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_5(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: calculateBorrowableAmount
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_3(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateBorrowableAmount
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_2(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
Function name: calculateBorrowableAmount
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_23(CreditLine.CreditLineVariables) -> creditLineVariables_5[_id_1]
has variable
clearing ir...?
REF_24(CreditLine.CreditLineStatus) -> REF_23.status
has variable
clearing ir...?
_status_1(CreditLine.CreditLineStatus) := REF_24(CreditLine.CreditLineStatus)
has variable
[i] _status cleared
typecheckig node...
REF_23(CreditLine.CreditLineVariables) -> creditLineVariables_5[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_23

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_24(CreditLine.CreditLineStatus) -> REF_23.status
Function name: calculateBorrowableAmount
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^
[i]Type for REF_24

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_status_1(CreditLine.CreditLineStatus) := REF_24(CreditLine.CreditLineStatus)
Function name: calculateBorrowableAmount
asgn

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _status Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _status

Name: _status Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_status_1(CreditLine.CreditLineStatus) := REF_24(CreditLine.CreditLineStatus)
XXXXX
clearning node...
clearing ir...?
REF_25(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
has variable
clearing ir...?
TMP_74(bool) = _status_1 == REF_25
has variable
[i] TMP_74 cleared
clearing ir...?
REF_26(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
has variable
clearing ir...?
TMP_75(bool) = _status_1 == REF_26
has variable
[i] TMP_75 cleared
clearing ir...?
TMP_76(bool) = TMP_74 || TMP_75
has variable
[i] TMP_76 cleared
clearing ir...?
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,CreditLine: Cannot only if credit line ACTIVE or REQUESTED)
typecheckig node...
REF_25(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: calculateBorrowableAmount
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
^^^
[i]Type for REF_25

Name: CreditLineStatus.ACTIVE Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_74(bool) = _status_1 == REF_25
Function name: calculateBorrowableAmount
[i]Type for TMP_74

Name: TMP_74 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_26(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
Function name: calculateBorrowableAmount
MEMBER
CreditLineStatus
CreditLineStatus
REQUESTED
global
CreditLineStatus Fields:
ACTIVE
^^^
[i]Type for REF_26

Name: CreditLineStatus.REQUESTED Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.REQUESTED Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REQUESTED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_75(bool) = _status_1 == REF_26
Function name: calculateBorrowableAmount
[i]Type for TMP_75

Name: TMP_75 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_76(bool) = TMP_74 || TMP_75
Function name: calculateBorrowableAmount
[i]Type for TMP_76

Name: TMP_76 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,CreditLine: Cannot only if credit line ACTIVE or REQUESTED)
[i]Type for TMP_77

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_78 = CONVERT priceOracle_2 to IPriceOracle
has variable
[i] TMP_78 cleared
clearing ir...?
REF_28(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
has variable
clearing ir...?
REF_29(address) -> REF_28.collateralAsset
has variable
clearing ir...?
REF_30(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
has variable
clearing ir...?
REF_31(address) -> REF_30.borrowAsset
has variable
clearing ir...?
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_78(IPriceOracle), function:getLatestPrice, arguments:['REF_29', 'REF_31']  
has variable
clearing ir...?
creditLineConstants_4(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_3', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
priceOracle_3(address) := ϕ(['priceOracle_2', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1'])
has variable
clearing ir...?
_ratioOfPrices_1(uint256)= UNPACK TUPLE_0 index: 0 
has variable
[i] _ratioOfPrices cleared
clearing ir...?
_decimals_1(uint256)= UNPACK TUPLE_0 index: 1 
has variable
[i] _decimals cleared
typecheckig node...
TMP_78 = CONVERT priceOracle_2 to IPriceOracle
Function name: calculateBorrowableAmount

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: TMP_78 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_78

Name: TMP_78 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_28(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_28

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_29(address) -> REF_28.collateralAsset
Function name: calculateBorrowableAmount
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: creditLineConstants.collateralAsset Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
REF_30(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_30

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_31(address) -> REF_30.borrowAsset
Function name: calculateBorrowableAmount
MEMBER
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: creditLineConstants.borrowAsset Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_78(IPriceOracle), function:getLatestPrice, arguments:['REF_29', 'REF_31']  
Function name: calculateBorrowableAmount
High Call: getLatestPrice
func name:getLatestPrice
other func name:getLatestPrice
TUPLE_0
hlc contract name: ORACLE func_name: getLatestPrice
('t', [2], [1], 0, None)
REF_29
REF_31
('c', [-1], [-1], 0, None)
REF_29
REF_31
wfc len: 2
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_4(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_3', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateBorrowableAmount
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_3(address) := ϕ(['priceOracle_2', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1'])
Function name: calculateBorrowableAmount
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
_ratioOfPrices_1(uint256)= UNPACK TUPLE_0 index: 0 
Function name: calculateBorrowableAmount
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([1, -1], [-1, 2], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: 1
Den: 2
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_decimals_1(uint256)= UNPACK TUPLE_0 index: 1 
Function name: calculateBorrowableAmount
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _decimals

Name: _decimals Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_79(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
has variable
[i] TMP_79 cleared
clearing ir...?
creditLineConstants_5(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
has variable
clearing ir...?
_totalCollateralToken_1(uint256) := TMP_79(uint256)
has variable
[i] _totalCollateralToken cleared
typecheckig node...
TMP_79(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
Function name: calculateBorrowableAmount
Internal call...
calculateTotalCollateralTokens
_id
Function: calculateTotalCollateralTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: calculateTotalCollateralTokens
Function Visibility: public
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
has variable
[i] _id cleared
clearing ir...?
collateralShareInStrategy_11(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
creditLineConstants_32(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
strategyRegistry_8(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for _id

Name: _id Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_11(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_32(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
strategyRegistry_8(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_236(CreditLine.CreditLineConstants) -> creditLineConstants_32[_id_1]
has variable
clearing ir...?
REF_237(address) -> REF_236.collateralAsset
has variable
clearing ir...?
_collateralAsset_1(address) := REF_237(address)
has variable
[i] _collateralAsset cleared
typecheckig node...
REF_236(CreditLine.CreditLineConstants) -> creditLineConstants_32[_id_1]
Function name: calculateTotalCollateralTokens
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_236

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_237(address) -> REF_236.collateralAsset
Function name: calculateTotalCollateralTokens
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_237

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_237(address)
Function name: calculateTotalCollateralTokens
asgn

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_293 = CONVERT strategyRegistry_8 to IStrategyRegistry
has variable
[i] TMP_293 cleared
clearing ir...?
TMP_294(address[]) = HIGH_LEVEL_CALL, dest:TMP_293(IStrategyRegistry), function:getStrategies, arguments:[]  
has variable
[i] TMP_294 cleared
clearing ir...?
collateralShareInStrategy_12(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_11'])
has variable
clearing ir...?
strategyRegistry_9(address) := ϕ(['strategyRegistry_8', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
has variable
clearing ir...?
_strategyList_1(address[]) := TMP_294(address[])
has variable
[i] _strategyList cleared
typecheckig node...
TMP_293 = CONVERT strategyRegistry_8 to IStrategyRegistry
Function name: calculateTotalCollateralTokens

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_293

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_294(address[]) = HIGH_LEVEL_CALL, dest:TMP_293(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: calculateTotalCollateralTokens
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_294
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_294

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_12(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_11'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
strategyRegistry_9(address) := ϕ(['strategyRegistry_8', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_294(address[])
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
index_1(uint256) := 0(uint256)
has variable
[i] index cleared
typecheckig node...
index_1(uint256) := 0(uint256)
Function name: calculateTotalCollateralTokens
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_amount_1(uint256) := ϕ(['_amount_0', '_amount_2'])
has variable
[i] _amount cleared
clearing ir...?
index_2(uint256) := ϕ(['index_3', 'index_1'])
has variable
[i] index cleared
clearing ir...?
REF_239 -> LENGTH _strategyList_1
clearing ir...?
TMP_295(bool) = index_2 < REF_239
has variable
[i] TMP_295 cleared
clearing ir...?
CONDITION TMP_295
typecheckig node...
_amount_1(uint256) := ϕ(['_amount_0', '_amount_2'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_2(uint256) := ϕ(['index_3', 'index_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_239 -> LENGTH _strategyList_1
[i]Type for REF_239

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_295(bool) = index_2 < REF_239
Function name: calculateTotalCollateralTokens
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_295

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_295(bool) = index_2 < REF_239
XXXXX
CONDITION TMP_295
Condition...
Conidtion: 
TMP_295
TMP_295
clearning node...
clearing ir...?
REF_240(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_296 = CONVERT 0 to address
has variable
[i] TMP_296 cleared
clearing ir...?
TMP_297(bool) = REF_240 == TMP_296
has variable
[i] TMP_297 cleared
clearing ir...?
CONDITION TMP_297
typecheckig node...
REF_240(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_240

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_296 = CONVERT 0 to address
Function name: calculateTotalCollateralTokens
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_296

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_297(bool) = REF_240 == TMP_296
Function name: calculateTotalCollateralTokens
[i]Type for TMP_297

Name: TMP_297 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_297
Condition...
Conidtion: 
TMP_297
TMP_297
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_241(mapping(address => uint256)) -> collateralShareInStrategy_12[_id_1]
has variable
clearing ir...?
REF_242(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
REF_243(uint256) -> REF_241[REF_242]
has variable
clearing ir...?
_liquidityShares_1(uint256) := REF_243(uint256)
has variable
[i] _liquidityShares cleared
typecheckig node...
REF_241(mapping(address => uint256)) -> collateralShareInStrategy_12[_id_1]
Function name: calculateTotalCollateralTokens
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_241

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_242(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_242

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_243(uint256) -> REF_241[REF_242]
Function name: calculateTotalCollateralTokens
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_243

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := REF_243(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_244(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_298 = CONVERT REF_244 to IYield
has variable
[i] TMP_298 cleared
clearing ir...?
TMP_299(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
has variable
[i] TMP_299 cleared
clearing ir...?
collateralShareInStrategy_13(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
_tokenInStrategy_2(uint256) := TMP_299(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
REF_244(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_244

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_298 = CONVERT REF_244 to IYield
Function name: calculateTotalCollateralTokens

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_298

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_299(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
Function name: calculateTotalCollateralTokens
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_299
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_collateralAsset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_299

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_13(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_299(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
has variable
[i] TMP_300 cleared
clearing ir...?
_amount_2(uint256) := TMP_300(uint256)
has variable
[i] _amount cleared
typecheckig node...
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
Function name: calculateTotalCollateralTokens
Library Call: add

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_300

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
XXXXX
_amount_2(uint256) := TMP_300(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_301(uint256) := index_2(uint256)
has variable
[i] TMP_301 cleared
clearing ir...?
index_3(uint256) = index_2 + 1
has variable
[i] index cleared
typecheckig node...
TMP_301(uint256) := index_2(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_301

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_3(uint256) = index_2 + 1
Function name: calculateTotalCollateralTokens
val: 1

Name: index Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _amount_1
typecheckig node...
RETURN _amount_1
RETURN

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "calculateTotalCollateralTokens":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for _id

Name: _id Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_11(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_32(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
strategyRegistry_8(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_236(CreditLine.CreditLineConstants) -> creditLineConstants_32[_id_1]
Function name: calculateTotalCollateralTokens
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_236

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_237(address) -> REF_236.collateralAsset
Function name: calculateTotalCollateralTokens
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_237

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_237(address)
Function name: calculateTotalCollateralTokens
asgn

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_293 = CONVERT strategyRegistry_8 to IStrategyRegistry
Function name: calculateTotalCollateralTokens

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_293

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_294(address[]) = HIGH_LEVEL_CALL, dest:TMP_293(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: calculateTotalCollateralTokens
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_294
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_294

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_12(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_11'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
strategyRegistry_9(address) := ϕ(['strategyRegistry_8', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_294(address[])
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
index_1(uint256) := 0(uint256)
Function name: calculateTotalCollateralTokens
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_amount_1(uint256) := ϕ(['_amount_0', '_amount_2'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
index_2(uint256) := ϕ(['index_3', 'index_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_239 -> LENGTH _strategyList_1
[i]Type for REF_239

Name: REF_239 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_295(bool) = index_2 < REF_239
Function name: calculateTotalCollateralTokens
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_295

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_295(bool) = index_2 < REF_239
XXXXX
CONDITION TMP_295
Condition...
Conidtion: 
TMP_295
TMP_295
typecheckig node...
REF_240(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_240

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_296 = CONVERT 0 to address
Function name: calculateTotalCollateralTokens
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_296

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_297(bool) = REF_240 == TMP_296
Function name: calculateTotalCollateralTokens
[i]Type for TMP_297

Name: TMP_297 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_297
Condition...
Conidtion: 
TMP_297
TMP_297
typecheckig node...
typecheckig node...
typecheckig node...
typecheckig node...
REF_241(mapping(address => uint256)) -> collateralShareInStrategy_12[_id_1]
Function name: calculateTotalCollateralTokens
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_241

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_242(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_242

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_243(uint256) -> REF_241[REF_242]
Function name: calculateTotalCollateralTokens
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_243

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := REF_243(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_244(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_244

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_298 = CONVERT REF_244 to IYield
Function name: calculateTotalCollateralTokens

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_298

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_299(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
Function name: calculateTotalCollateralTokens
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_299
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_collateralAsset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_299

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_13(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_299(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
Function name: calculateTotalCollateralTokens
Library Call: add

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_300

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_amount_2(uint256) := TMP_300(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_301(uint256) := index_2(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_301

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_3(uint256) = index_2 + 1
Function name: calculateTotalCollateralTokens
val: 1

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _amount_1
typecheckig node...
RETURN _amount_1
RETURN

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "calculateTotalCollateralTokens":
 New undefined nodes- 1
 Old undefined nodes- 2
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for _id

Name: _id Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_11(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_32(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
strategyRegistry_8(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_236(CreditLine.CreditLineConstants) -> creditLineConstants_32[_id_1]
Function name: calculateTotalCollateralTokens
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_236

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_237(address) -> REF_236.collateralAsset
Function name: calculateTotalCollateralTokens
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_237

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_237(address)
Function name: calculateTotalCollateralTokens
asgn

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_293 = CONVERT strategyRegistry_8 to IStrategyRegistry
Function name: calculateTotalCollateralTokens

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_293

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_294(address[]) = HIGH_LEVEL_CALL, dest:TMP_293(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: calculateTotalCollateralTokens
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_294
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_294

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_12(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_11'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
strategyRegistry_9(address) := ϕ(['strategyRegistry_8', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_294(address[])
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
index_1(uint256) := 0(uint256)
Function name: calculateTotalCollateralTokens
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_amount_1(uint256) := ϕ(['_amount_0', '_amount_2'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
index_2(uint256) := ϕ(['index_3', 'index_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_239 -> LENGTH _strategyList_1
[i]Type for REF_239

Name: REF_239 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_295(bool) = index_2 < REF_239
Function name: calculateTotalCollateralTokens
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_295

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_295(bool) = index_2 < REF_239
XXXXX
CONDITION TMP_295
Condition...
Conidtion: 
TMP_295
TMP_295
typecheckig node...
REF_240(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_240

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_296 = CONVERT 0 to address
Function name: calculateTotalCollateralTokens
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_296

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_297(bool) = REF_240 == TMP_296
Function name: calculateTotalCollateralTokens
[i]Type for TMP_297

Name: TMP_297 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_297
Condition...
Conidtion: 
TMP_297
TMP_297
typecheckig node...
typecheckig node...
typecheckig node...
typecheckig node...
REF_241(mapping(address => uint256)) -> collateralShareInStrategy_12[_id_1]
Function name: calculateTotalCollateralTokens
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_241

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_242(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_242

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_243(uint256) -> REF_241[REF_242]
Function name: calculateTotalCollateralTokens
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_243

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := REF_243(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_244(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_244

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_298 = CONVERT REF_244 to IYield
Function name: calculateTotalCollateralTokens

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_298

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_299(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
Function name: calculateTotalCollateralTokens
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_299
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_collateralAsset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_299

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_13(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_299(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
Function name: calculateTotalCollateralTokens
Library Call: add

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_300

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_amount_2(uint256) := TMP_300(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_301(uint256) := index_2(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_301

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_3(uint256) = index_2 + 1
Function name: calculateTotalCollateralTokens
val: 1

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _amount_1
typecheckig node...
RETURN _amount_1
RETURN

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 2 for function call "calculateTotalCollateralTokens":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: calculateTotalCollateralTokens

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_79

Name: TMP_79 Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_79(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
XXXXX
creditLineConstants_5(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Function name: calculateBorrowableAmount
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_totalCollateralToken_1(uint256) := TMP_79(uint256)
Function name: calculateBorrowableAmount
asgn

Name: TMP_79 Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalCollateralToken

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_80(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
has variable
[i] TMP_80 cleared
clearing ir...?
_currentDebt_1(uint256) := TMP_80(uint256)
has variable
[i] _currentDebt cleared
typecheckig node...
TMP_80(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
Function name: calculateBorrowableAmount
Internal call...
calculateCurrentDebt
_id
Function: calculateCurrentDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_6 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_80 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_80

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_currentDebt_1(uint256) := TMP_80(uint256)
Function name: calculateBorrowableAmount
asgn

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _currentDebt Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _currentDebt

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralToken_1', '_ratioOfPrices_1'] 
has variable
[i] TMP_81 cleared
clearing ir...?
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
has variable
clearing ir...?
REF_35(uint256) -> REF_34.idealCollateralRatio
has variable
clearing ir...?
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
has variable
[i] TMP_82 cleared
clearing ir...?
TMP_83(uint256) = 10 ** 30
has variable
[i] TMP_83 cleared
clearing ir...?
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_82', 'TMP_83'] 
has variable
[i] TMP_84 cleared
clearing ir...?
TMP_85(uint256) = 10 ** _decimals_1
has variable
[i] TMP_85 cleared
clearing ir...?
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_84', 'TMP_85'] 
has variable
[i] TMP_86 cleared
clearing ir...?
_maxPossible_1(uint256) := TMP_86(uint256)
has variable
[i] _maxPossible cleared
typecheckig node...
TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralToken_1', '_ratioOfPrices_1'] 
Function name: calculateBorrowableAmount
Library Call: mul
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_8 Function: None
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_81 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_81

Name: TMP_81 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_34

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
XXXXX
REF_35(uint256) -> REF_34.idealCollateralRatio
Function name: calculateBorrowableAmount
MEMBER
REF_34
idealCollateralRatio
calculateBorrowableAmount
REF_34 Fields:
^^^
[i]Type for REF_35

Name: REF_34.idealCollateralRatio Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_34.idealCollateralRatio Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
Function name: calculateBorrowableAmount
Library Call: div
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_82 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_81 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_82 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_82

Name: TMP_82 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
XXXXX
TMP_83(uint256) = 10 ** 30
Function name: calculateBorrowableAmount
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_83 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_83

Name: TMP_83 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_82', 'TMP_83'] 
Function name: calculateBorrowableAmount
Library Call: mul
testing mul...
lnorm: 0 rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_82 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_84 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_85(uint256) = 10 ** _decimals_1
Function name: calculateBorrowableAmount
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: _decimals Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_85 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_85

Name: TMP_85 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_84', 'TMP_85'] 
Function name: calculateBorrowableAmount
Library Call: div
Error with TMP_86 in function calculateBorrowableAmount
Error with: TMP_86 in function calculateBorrowableAmount
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f5b30a0>]
lnorm: 30 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_86 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_84 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef

Name: TMP_86 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_86

Name: TMP_86 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_maxPossible_1(uint256) := TMP_86(uint256)
Function name: calculateBorrowableAmount
asgn

Name: TMP_86 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
has variable
clearing ir...?
REF_39(uint256) -> REF_38.borrowLimit
has variable
clearing ir...?
_borrowLimit_1(uint256) := REF_39(uint256)
has variable
[i] _borrowLimit cleared
typecheckig node...
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: idealCollateralRatio
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_38

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
XXXXX
REF_39(uint256) -> REF_38.borrowLimit
Function name: calculateBorrowableAmount
MEMBER
REF_38
borrowLimit
calculateBorrowableAmount
REF_38 Fields:
^^^
[i]Type for REF_39

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowLimit Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowLimit_1(uint256) := REF_39(uint256)
Function name: calculateBorrowableAmount
asgn

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowLimit

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_borrowLimit_1(uint256) := REF_39(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
has variable
[i] TMP_87 cleared
clearing ir...?
CONDITION TMP_87
typecheckig node...
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
Function name: calculateBorrowableAmount
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
False

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_87 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_87

Name: TMP_87 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
XXXXX
CONDITION TMP_87
Condition...
Conidtion: 
TMP_87
TMP_87
clearning node...
clearing ir...?
_maxPossible_3(uint256) := ϕ(['_maxPossible_1', '_maxPossible_2'])
has variable
[i] _maxPossible cleared
typecheckig node...
_maxPossible_3(uint256) := ϕ(['_maxPossible_1', '_maxPossible_2'])
Function name: calculateBorrowableAmount
Phi
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_88(bool) = _maxPossible_3 > _currentDebt_1
has variable
[i] TMP_88 cleared
clearing ir...?
CONDITION TMP_88
typecheckig node...
TMP_88(bool) = _maxPossible_3 > _currentDebt_1
Function name: calculateBorrowableAmount
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_88

Name: TMP_88 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_88
Condition...
Conidtion: 
TMP_88
TMP_88
clearning node...
clearing ir...?
_maxPossible_2(uint256) := _borrowLimit_1(uint256)
has variable
[i] _maxPossible cleared
typecheckig node...
_maxPossible_2(uint256) := _borrowLimit_1(uint256)
Function name: calculateBorrowableAmount
asgn

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_maxPossible_2(uint256) := _borrowLimit_1(uint256)
XXXXX
clearning node...
typecheckig node...
clearning node...
clearing ir...?
RETURN 0
typecheckig node...
RETURN 0
RETURN
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_maxPossible_3', '_currentDebt_1'] 
has variable
[i] TMP_89 cleared
clearing ir...?
RETURN TMP_89
typecheckig node...
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_maxPossible_3', '_currentDebt_1'] 
Function name: calculateBorrowableAmount
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_89 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_89
RETURN

Name: TMP_89 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "calculateBorrowableAmount":
 New undefined nodes- 5
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: calculateBorrowableAmount
Phi
[i]Type for _id

Name: _id Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_5(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: calculateBorrowableAmount
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_3(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateBorrowableAmount
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_2(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
Function name: calculateBorrowableAmount
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_23(CreditLine.CreditLineVariables) -> creditLineVariables_5[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_23

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_24(CreditLine.CreditLineStatus) -> REF_23.status
Function name: calculateBorrowableAmount
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_24

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_status_1(CreditLine.CreditLineStatus) := REF_24(CreditLine.CreditLineStatus)
Function name: calculateBorrowableAmount
asgn

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _status Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _status

Name: _status Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_25(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: calculateBorrowableAmount
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_25

Name: CreditLineStatus.ACTIVE Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_74(bool) = _status_1 == REF_25
Function name: calculateBorrowableAmount
[i]Type for TMP_74

Name: TMP_74 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_26(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
Function name: calculateBorrowableAmount
MEMBER
CreditLineStatus
CreditLineStatus
REQUESTED
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
^^^

Name: REQUESTED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: CreditLineStatus.REQUESTED Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.REQUESTED Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REQUESTED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_75(bool) = _status_1 == REF_26
Function name: calculateBorrowableAmount
[i]Type for TMP_75

Name: TMP_75 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_76(bool) = TMP_74 || TMP_75
Function name: calculateBorrowableAmount
[i]Type for TMP_76

Name: TMP_76 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,CreditLine: Cannot only if credit line ACTIVE or REQUESTED)
[i]Type for TMP_77

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TMP_78 = CONVERT priceOracle_2 to IPriceOracle
Function name: calculateBorrowableAmount

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: TMP_78 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[i]Type for TMP_78

Name: TMP_78 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_28(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_28

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_29(address) -> REF_28.collateralAsset
Function name: calculateBorrowableAmount
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: creditLineConstants.collateralAsset Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
REF_30(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_30

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_31(address) -> REF_30.borrowAsset
Function name: calculateBorrowableAmount
MEMBER
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: creditLineConstants.borrowAsset Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_78(IPriceOracle), function:getLatestPrice, arguments:['REF_29', 'REF_31']  
Function name: calculateBorrowableAmount
High Call: getLatestPrice
func name:getLatestPrice
other func name:getLatestPrice
TUPLE_0
hlc contract name: ORACLE func_name: getLatestPrice
('t', [2], [1], 0, None)
REF_29
REF_31
('c', [-1], [-1], 0, None)
REF_29
REF_31
wfc len: 2
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_4(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_3', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateBorrowableAmount
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_3(address) := ϕ(['priceOracle_2', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1'])
Function name: calculateBorrowableAmount
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
_ratioOfPrices_1(uint256)= UNPACK TUPLE_0 index: 0 
Function name: calculateBorrowableAmount
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([1, -1], [-1, 2], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: 1
Den: 2
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_decimals_1(uint256)= UNPACK TUPLE_0 index: 1 
Function name: calculateBorrowableAmount
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _decimals

Name: _decimals Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_79(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
Function name: calculateBorrowableAmount
Internal call...
calculateTotalCollateralTokens
_id
Function: calculateTotalCollateralTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_7 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_79 Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_79

Name: TMP_79 Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_5(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Function name: calculateBorrowableAmount
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_totalCollateralToken_1(uint256) := TMP_79(uint256)
Function name: calculateBorrowableAmount
asgn

Name: TMP_79 Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalCollateralToken

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_80(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
Function name: calculateBorrowableAmount
Internal call...
calculateCurrentDebt
_id
Function: calculateCurrentDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_6 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_80

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_currentDebt_1(uint256) := TMP_80(uint256)
Function name: calculateBorrowableAmount
asgn

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _currentDebt

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralToken_1', '_ratioOfPrices_1'] 
Function name: calculateBorrowableAmount
Library Call: mul
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_9 Function: None
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_81 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_81

Name: TMP_81 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: idealCollateralRatio, borrowLimit
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_34

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
XXXXX
REF_35(uint256) -> REF_34.idealCollateralRatio
Function name: calculateBorrowableAmount
MEMBER
REF_34
idealCollateralRatio
calculateBorrowableAmount
REF_34 Fields:
^^^
[i]Type for REF_35

Name: REF_34.idealCollateralRatio Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_34.idealCollateralRatio Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
Function name: calculateBorrowableAmount
Library Call: div
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_82 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_81 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_82 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_82

Name: TMP_82 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
XXXXX
TMP_83(uint256) = 10 ** 30
Function name: calculateBorrowableAmount
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_83 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:30
30
val: 10
1
[i]Type for TMP_83

Name: TMP_83 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_82', 'TMP_83'] 
Function name: calculateBorrowableAmount
Library Call: mul
testing mul...
lnorm: 0 rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_82 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_84 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_85(uint256) = 10 ** _decimals_1
Function name: calculateBorrowableAmount
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: _decimals Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_85 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:*
-1
val: 10
1
[i]Type for TMP_85

Name: TMP_85 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_84', 'TMP_85'] 
Function name: calculateBorrowableAmount
Library Call: div
[W] Initializing defined variable to constant
lnorm: 30 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_86 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_84 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef

Name: TMP_86 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_86

Name: TMP_86 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_maxPossible_1(uint256) := TMP_86(uint256)
Function name: calculateBorrowableAmount
asgn

Name: TMP_86 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: idealCollateralRatio, borrowLimit
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_38

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
XXXXX
REF_39(uint256) -> REF_38.borrowLimit
Function name: calculateBorrowableAmount
MEMBER
REF_38
borrowLimit
calculateBorrowableAmount
REF_38 Fields:
^^^
[i]Type for REF_39

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowLimit Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowLimit_1(uint256) := REF_39(uint256)
Function name: calculateBorrowableAmount
asgn

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowLimit

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_borrowLimit_1(uint256) := REF_39(uint256)
XXXXX
typecheckig node...
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
Function name: calculateBorrowableAmount
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
False

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_87 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_87

Name: TMP_87 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
XXXXX
CONDITION TMP_87
Condition...
Conidtion: 
TMP_87
TMP_87
typecheckig node...
_maxPossible_3(uint256) := ϕ(['_maxPossible_1', '_maxPossible_2'])
Function name: calculateBorrowableAmount
Phi
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_88(bool) = _maxPossible_3 > _currentDebt_1
Function name: calculateBorrowableAmount
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_88

Name: TMP_88 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_88
Condition...
Conidtion: 
TMP_88
TMP_88
typecheckig node...
_maxPossible_2(uint256) := _borrowLimit_1(uint256)
Function name: calculateBorrowableAmount
asgn

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_maxPossible_2(uint256) := _borrowLimit_1(uint256)
XXXXX
typecheckig node...
typecheckig node...
RETURN 0
RETURN
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_maxPossible_3', '_currentDebt_1'] 
Function name: calculateBorrowableAmount
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_89 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_89
RETURN

Name: TMP_89 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "calculateBorrowableAmount":
 New undefined nodes- 4
 Old undefined nodes- 5
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: calculateBorrowableAmount
Phi
[i]Type for _id

Name: _id Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_5(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: calculateBorrowableAmount
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_3(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateBorrowableAmount
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_2(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
Function name: calculateBorrowableAmount
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_23(CreditLine.CreditLineVariables) -> creditLineVariables_5[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_23

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_24(CreditLine.CreditLineStatus) -> REF_23.status
Function name: calculateBorrowableAmount
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_24

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_status_1(CreditLine.CreditLineStatus) := REF_24(CreditLine.CreditLineStatus)
Function name: calculateBorrowableAmount
asgn

Name: creditLineVariables.status Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _status Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _status

Name: _status Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_25(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: calculateBorrowableAmount
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_25

Name: CreditLineStatus.ACTIVE Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_74(bool) = _status_1 == REF_25
Function name: calculateBorrowableAmount
[i]Type for TMP_74

Name: TMP_74 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_26(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
Function name: calculateBorrowableAmount
MEMBER
CreditLineStatus
CreditLineStatus
REQUESTED
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
^^^

Name: REQUESTED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_26

Name: CreditLineStatus.REQUESTED Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.REQUESTED Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REQUESTED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_75(bool) = _status_1 == REF_26
Function name: calculateBorrowableAmount
[i]Type for TMP_75

Name: TMP_75 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_76(bool) = TMP_74 || TMP_75
Function name: calculateBorrowableAmount
[i]Type for TMP_76

Name: TMP_76 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_77(None) = SOLIDITY_CALL require(bool,string)(TMP_76,CreditLine: Cannot only if credit line ACTIVE or REQUESTED)
[i]Type for TMP_77

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TMP_78 = CONVERT priceOracle_2 to IPriceOracle
Function name: calculateBorrowableAmount

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: TMP_78 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[i]Type for TMP_78

Name: TMP_78 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_28(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_28

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_29(address) -> REF_28.collateralAsset
Function name: calculateBorrowableAmount
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_29

Name: creditLineConstants.collateralAsset Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
REF_30(CreditLine.CreditLineConstants) -> creditLineConstants_3[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_30

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_31(address) -> REF_30.borrowAsset
Function name: calculateBorrowableAmount
MEMBER
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_31

Name: creditLineConstants.borrowAsset Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TUPLE_0(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_78(IPriceOracle), function:getLatestPrice, arguments:['REF_29', 'REF_31']  
Function name: calculateBorrowableAmount
High Call: getLatestPrice
func name:getLatestPrice
other func name:getLatestPrice
TUPLE_0
hlc contract name: ORACLE func_name: getLatestPrice
('t', [2], [1], 0, None)
REF_29
REF_31
('c', [-1], [-1], 0, None)
REF_29
REF_31
wfc len: 2
COPIED
[i]Type for TUPLE_0

Name: TUPLE_0 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_4(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_3', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateBorrowableAmount
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_3(address) := ϕ(['priceOracle_2', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1'])
Function name: calculateBorrowableAmount
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
_ratioOfPrices_1(uint256)= UNPACK TUPLE_0 index: 0 
Function name: calculateBorrowableAmount
Reading tuple TUPLE_0 index 0
Check copy_toekn_tuple
([1, -1], [-1, 2], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: calculateBorrowableAmount
Num: 1
Den: 2
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_decimals_1(uint256)= UNPACK TUPLE_0 index: 1 
Function name: calculateBorrowableAmount
Reading tuple TUPLE_0 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _decimals

Name: _decimals Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_79(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
Function name: calculateBorrowableAmount
Internal call...
calculateTotalCollateralTokens
_id
Function: calculateTotalCollateralTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_7 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_79 Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_79

Name: TMP_79 Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_5(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Function name: calculateBorrowableAmount
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_totalCollateralToken_1(uint256) := TMP_79(uint256)
Function name: calculateBorrowableAmount
asgn

Name: TMP_79 Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalCollateralToken

Name: _totalCollateralToken Function: calculateBorrowableAmount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_80(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
Function name: calculateBorrowableAmount
Internal call...
calculateCurrentDebt
_id
Function: calculateCurrentDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_6 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_80

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_currentDebt_1(uint256) := TMP_80(uint256)
Function name: calculateBorrowableAmount
asgn

Name: TMP_80 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _currentDebt

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_81(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralToken_1', '_ratioOfPrices_1'] 
Function name: calculateBorrowableAmount
Library Call: mul
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_10 Function: None
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_81 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_81

Name: TMP_81 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: idealCollateralRatio, borrowLimit
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_34

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_34(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
XXXXX
REF_35(uint256) -> REF_34.idealCollateralRatio
Function name: calculateBorrowableAmount
MEMBER
REF_34
idealCollateralRatio
calculateBorrowableAmount
REF_34 Fields:
^^^
[i]Type for REF_35

Name: REF_34.idealCollateralRatio Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_34.idealCollateralRatio Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
Function name: calculateBorrowableAmount
Library Call: div
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_82 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_81 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_82 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_82

Name: TMP_82 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_82(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_81', 'REF_35'] 
XXXXX
TMP_83(uint256) = 10 ** 30
Function name: calculateBorrowableAmount
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_83 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:30
30
val: 10
1
[i]Type for TMP_83

Name: TMP_83 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_84(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_82', 'TMP_83'] 
Function name: calculateBorrowableAmount
Library Call: mul
testing mul...
lnorm: 0 rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_82 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_84 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_84

Name: TMP_84 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_85(uint256) = 10 ** _decimals_1
Function name: calculateBorrowableAmount
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: _decimals Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_85 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:*
-1
val: 10
1
[i]Type for TMP_85

Name: TMP_85 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_86(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_84', 'TMP_85'] 
Function name: calculateBorrowableAmount
Library Call: div
[W] Initializing defined variable to constant
lnorm: 30 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_86 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_84 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef

Name: TMP_86 Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_86

Name: TMP_86 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_maxPossible_1(uint256) := TMP_86(uint256)
Function name: calculateBorrowableAmount
asgn

Name: TMP_86 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
Function name: calculateBorrowableAmount
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: idealCollateralRatio, borrowLimit
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_38

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_38(CreditLine.CreditLineConstants) -> creditLineConstants_6[_id_1]
XXXXX
REF_39(uint256) -> REF_38.borrowLimit
Function name: calculateBorrowableAmount
MEMBER
REF_38
borrowLimit
calculateBorrowableAmount
REF_38 Fields:
^^^
[i]Type for REF_39

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowLimit Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowLimit_1(uint256) := REF_39(uint256)
Function name: calculateBorrowableAmount
asgn

Name: REF_38.borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowLimit

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_borrowLimit_1(uint256) := REF_39(uint256)
XXXXX
typecheckig node...
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
Function name: calculateBorrowableAmount
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
False

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_87 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_87

Name: TMP_87 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_87(bool) = _maxPossible_1 > _borrowLimit_1
XXXXX
CONDITION TMP_87
Condition...
Conidtion: 
TMP_87
TMP_87
typecheckig node...
_maxPossible_3(uint256) := ϕ(['_maxPossible_1', '_maxPossible_2'])
Function name: calculateBorrowableAmount
Phi
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_88(bool) = _maxPossible_3 > _currentDebt_1
Function name: calculateBorrowableAmount
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_88

Name: TMP_88 Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_88
Condition...
Conidtion: 
TMP_88
TMP_88
typecheckig node...
_maxPossible_2(uint256) := _borrowLimit_1(uint256)
Function name: calculateBorrowableAmount
asgn

Name: _borrowLimit Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _maxPossible

Name: _maxPossible Function: calculateBorrowableAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_maxPossible_2(uint256) := _borrowLimit_1(uint256)
XXXXX
typecheckig node...
typecheckig node...
RETURN 0
RETURN
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_89(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_maxPossible_3', '_currentDebt_1'] 
Function name: calculateBorrowableAmount
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _currentDebt Function: calculateBorrowableAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _maxPossible Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_89 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_89

Name: TMP_89 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_89
RETURN

Name: TMP_89 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 2 for function call "calculateBorrowableAmount":
 New undefined nodes- 4
 Old undefined nodes- 4
Saving return values for: calculateBorrowableAmount

Name: TMP_89 Function: calculateBorrowableAmount
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: updateinterestAccruedTillLastPrincipalUpdate
Function updateinterestAccruedTillLastPrincipalUpdate not marked
Mark Iterations TRUE, proceeding anyway
Function name: updateinterestAccruedTillLastPrincipalUpdate
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _depositCollateralFromSavingsAccount
Function _depositCollateralFromSavingsAccount not marked
Mark Iterations TRUE, proceeding anyway
Function name: _depositCollateralFromSavingsAccount
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: request
Function name: request
Function Visibility (test): external
_requestTo
Finding type for _requestTo...
address
Check copy_toekn_tuple
(-1, -1, 0, 'reqTo')
----
Type: address
address
Final Type: address

Name: _requestTo Function: request
Num: -1
Den: -1
Norm: 0
LF: reqTo
Fields: 
Finance Type: undef
[*]Type fetched successfully
_borrowLimit
Finding type for _borrowLimit...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _borrowLimit Function: request
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_borrowRate
Finding type for _borrowRate...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _borrowRate Function: request
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_autoLiquidation
Finding type for _autoLiquidation...
bool
SKIP bool
_collateralRatio
Finding type for _collateralRatio...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _collateralRatio Function: request
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_borrowAsset
Finding type for _borrowAsset...
address
Check copy_toekn_tuple
(-1, -1, 0, 'bAsset')
----
Type: address
address
Final Type: address

Name: _borrowAsset Function: request
Num: -1
Den: -1
Norm: 0
LF: bAsset
Fields: 
Finance Type: undef
[*]Type fetched successfully
_collateralAsset
Finding type for _collateralAsset...
address
Check copy_toekn_tuple
(-1, -1, 0, 'cAsset')
----
Type: address
address
Final Type: address

Name: _collateralAsset Function: request
Num: -1
Den: -1
Norm: 0
LF: cAsset
Fields: 
Finance Type: undef
[*]Type fetched successfully
_requestAsLender
Finding type for _requestAsLender...
bool
SKIP bool
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: reqTo
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: 0
    link: bAsset
    fields: []
    fintype: -1
Param: 6
    num: [-1]
    den: [-1]
    norm: 0
    link: cAsset
    fields: []
    fintype: -1
Param: 7
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: reqTo
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: 0
    link: bAsset
    fields: []
    fintype: -1
Param: 6
    num: [-1]
    den: [-1]
    norm: 0
    link: cAsset
    fields: []
    fintype: -1
Param: 7
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
priceOracle_4(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
has variable
typecheckig node...
priceOracle_4(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
Function name: request
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_117(bool) = _borrowAsset_1 != _collateralAsset_1
has variable
[i] TMP_117 cleared
clearing ir...?
TMP_118(None) = SOLIDITY_CALL require(bool,string)(TMP_117,R: cant borrow lent token)
typecheckig node...
TMP_117(bool) = _borrowAsset_1 != _collateralAsset_1
Function name: request
[i]Type for TMP_117

Name: TMP_117 Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_118(None) = SOLIDITY_CALL require(bool,string)(TMP_117,R: cant borrow lent token)
[i]Type for TMP_118

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_119 = CONVERT priceOracle_4 to IPriceOracle
has variable
[i] TMP_119 cleared
clearing ir...?
TMP_120(bool) = HIGH_LEVEL_CALL, dest:TMP_119(IPriceOracle), function:doesFeedExist, arguments:['_borrowAsset_1', '_collateralAsset_1']  
has variable
[i] TMP_120 cleared
clearing ir...?
priceOracle_5(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_4'])
has variable
clearing ir...?
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,R: No price feed)
typecheckig node...
TMP_119 = CONVERT priceOracle_4 to IPriceOracle
Function name: request

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: TMP_119 Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_119

Name: TMP_119 Function: request
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
TMP_120(bool) = HIGH_LEVEL_CALL, dest:TMP_119(IPriceOracle), function:doesFeedExist, arguments:['_borrowAsset_1', '_collateralAsset_1']  
Function name: request
High Call: doesFeedExist
func name:doesFeedExist
other func name:doesFeedExist
TMP_120
[i]Type for TMP_120

Name: TMP_120 Function: request
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
priceOracle_5(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_4'])
Function name: request
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,R: No price feed)
[i]Type for TMP_121

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_lender_1(address) := _requestTo_1(address)
has variable
[i] _lender cleared
typecheckig node...
_lender_1(address) := _requestTo_1(address)
Function name: request
asgn

Name: _requestTo Function: request
Num: -1
Den: -1
Norm: 0
LF: reqTo
Fields: 
Finance Type: undef

Name: _lender Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _lender

Name: _lender Function: request
Num: -1
Den: -1
Norm: 0
LF: reqTo
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_borrower_1(address) := msg.sender(address)
has variable
[i] _borrower cleared
typecheckig node...
_borrower_1(address) := msg.sender(address)
Function name: request
asgn
msg.sender

Name: _borrower Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_borrower_1(address) := msg.sender(address)
XXXXX
clearning node...
clearing ir...?
CONDITION _requestAsLender_1
typecheckig node...
CONDITION _requestAsLender_1
Condition...
Conidtion: 
_requestAsLender_1
_requestAsLender_1
clearning node...
clearing ir...?
_lender_3(address) := ϕ(['_lender_1', '_lender_2'])
has variable
[i] _lender cleared
clearing ir...?
_borrower_3(address) := ϕ(['_borrower_1', '_borrower_2'])
has variable
[i] _borrower cleared
typecheckig node...
_lender_3(address) := ϕ(['_lender_1', '_lender_2'])
Function name: request
Phi
[i]Type for _lender

Name: _lender Function: request
Num: -1
Den: -1
Norm: 0
LF: reqTo
Fields: 
Finance Type: undef
done.
_borrower_3(address) := ϕ(['_borrower_1', '_borrower_2'])
Function name: request
Phi
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_122(uint256) = INTERNAL_CALL, CreditLine._createRequest(address,address,uint256,uint256,bool,uint256,address,address,bool)(_lender_3,_borrower_3,_borrowLimit_1,_borrowRate_1,_autoLiquidation_1,_collateralRatio_1,_borrowAsset_1,_collateralAsset_1,_requestAsLender_1)
has variable
[i] TMP_122 cleared
clearing ir...?
_id_1(uint256) := TMP_122(uint256)
has variable
[i] _id cleared
typecheckig node...
TMP_122(uint256) = INTERNAL_CALL, CreditLine._createRequest(address,address,uint256,uint256,bool,uint256,address,address,bool)(_lender_3,_borrower_3,_borrowLimit_1,_borrowRate_1,_autoLiquidation_1,_collateralRatio_1,_borrowAsset_1,_collateralAsset_1,_requestAsLender_1)
Function name: request
Internal call...
_createRequest
_lender
_borrower
_borrowLimit
_borrowRate
_autoLiquidation
_collateralRatio
_borrowAsset
_collateralAsset
_requestAsLender
Function: _createRequest
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: reqTo
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 6
    num: [-1]
    den: [-1]
    norm: 0
    link: bAsset
    fields: []
    fintype: -1
Param: 7
    num: [-1]
    den: [-1]
    norm: 0
    link: cAsset
    fields: []
    fintype: -1
Param: 8
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: reqTo
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 6
    num: [-1]
    den: [-1]
    norm: 0
    link: bAsset
    fields: []
    fintype: -1
Param: 7
    num: [-1]
    den: [-1]
    norm: 0
    link: cAsset
    fields: []
    fintype: -1
Param: 8
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, 'reqTo', [], -1]
[[], [], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, 'bAsset', [], -1]
[[-1], [-1], 0, 'cAsset', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _createRequest
Function Visibility: internal
clearning node...
clearing ir...?
_lender_1(address) := ϕ(['_lender_3'])
has variable
[i] _lender cleared
clearing ir...?
_borrower_1(address) := ϕ(['_borrower_3'])
has variable
[i] _borrower cleared
clearing ir...?
_borrowLimit_1(uint256) := ϕ(['_borrowLimit_1'])
has variable
[i] _borrowLimit cleared
clearing ir...?
_borrowRate_1(uint256) := ϕ(['_borrowRate_1'])
has variable
[i] _borrowRate cleared
clearing ir...?
_autoLiquidation_1(bool) := ϕ(['_autoLiquidation_1'])
has variable
[i] _autoLiquidation cleared
clearing ir...?
_collateralRatio_1(uint256) := ϕ(['_collateralRatio_1'])
has variable
[i] _collateralRatio cleared
clearing ir...?
_borrowAsset_1(address) := ϕ(['_borrowAsset_1'])
has variable
[i] _borrowAsset cleared
clearing ir...?
_collateralAsset_1(address) := ϕ(['_collateralAsset_1'])
has variable
[i] _collateralAsset cleared
clearing ir...?
_requestByLender_1(bool) := ϕ(['_requestAsLender_1'])
has variable
[i] _requestByLender cleared
clearing ir...?
creditLineCounter_1(uint256) := ϕ(['creditLineCounter_0', 'creditLineCounter_2'])
has variable
clearing ir...?
creditLineVariables_9(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
has variable
clearing ir...?
creditLineConstants_8(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
typecheckig node...
_lender_1(address) := ϕ(['_lender_3'])
Function name: _createRequest
Phi
[i]Type for _lender

Name: _lender Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: reqTo
Fields: 
Finance Type: undef
done.
_borrower_1(address) := ϕ(['_borrower_3'])
Function name: _createRequest
Phi
[i]Type for _borrower

Name: _borrower Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowLimit_1(uint256) := ϕ(['_borrowLimit_1'])
Function name: _createRequest
Phi
[i]Type for _borrowLimit

Name: _borrowLimit Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowRate_1(uint256) := ϕ(['_borrowRate_1'])
Function name: _createRequest
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_autoLiquidation_1(bool) := ϕ(['_autoLiquidation_1'])
Function name: _createRequest
Phi
[i]Type for _autoLiquidation

Name: _autoLiquidation Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_collateralRatio_1(uint256) := ϕ(['_collateralRatio_1'])
Function name: _createRequest
Phi
[i]Type for _collateralRatio

Name: _collateralRatio Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowAsset_1(address) := ϕ(['_borrowAsset_1'])
Function name: _createRequest
Phi
[i]Type for _borrowAsset

Name: _borrowAsset Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: bAsset
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := ϕ(['_collateralAsset_1'])
Function name: _createRequest
Phi
[i]Type for _collateralAsset

Name: _collateralAsset Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: cAsset
Fields: 
Finance Type: undef
done.
_requestByLender_1(bool) := ϕ(['_requestAsLender_1'])
Function name: _createRequest
Phi
[i]Type for _requestByLender

Name: _requestByLender Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineCounter_1(uint256) := ϕ(['creditLineCounter_0', 'creditLineCounter_2'])
Function name: _createRequest
Phi
[i]Type for creditLineCounter

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_9(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: _createRequest
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_8(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_124(bool) = _lender_1 != _borrower_1
has variable
[i] TMP_124 cleared
clearing ir...?
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,Lender and Borrower cannot be same addresses)
typecheckig node...
TMP_124(bool) = _lender_1 != _borrower_1
Function name: _createRequest
[i]Type for TMP_124

Name: TMP_124 Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,Lender and Borrower cannot be same addresses)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_126(uint256) = creditLineCounter_1 + 1
has variable
[i] TMP_126 cleared
clearing ir...?
_id_1(uint256) := TMP_126(uint256)
has variable
[i] _id cleared
typecheckig node...
TMP_126(uint256) = creditLineCounter_1 + 1
Function name: _createRequest
val: 1

Name: TMP_126 Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_126 Function: _createRequest
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_126

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_id_1(uint256) := TMP_126(uint256)
Function name: _createRequest
asgn

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _id Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _id

Name: _id Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
creditLineCounter_2(uint256) := _id_1(uint256)
has variable
typecheckig node...
creditLineCounter_2(uint256) := _id_1(uint256)
Function name: _createRequest
asgn

Name: _id Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: creditLineCounter Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_69(CreditLine.CreditLineVariables) -> creditLineVariables_9[_id_1]
has variable
clearing ir...?
REF_70(CreditLine.CreditLineStatus) -> REF_69.status
has variable
clearing ir...?
REF_71(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
has variable
clearing ir...?
creditLineVariables_10(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_9'])
has variable
clearing ir...?
REF_70 (->creditLineVariables_10) := REF_71(CreditLine.CreditLineStatus)
has variable
typecheckig node...
REF_69(CreditLine.CreditLineVariables) -> creditLineVariables_9[_id_1]
Function name: _createRequest
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_69

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_70(CreditLine.CreditLineStatus) -> REF_69.status
Function name: _createRequest
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_70

Name: creditLineVariables.status Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_71(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
Function name: _createRequest
MEMBER
CreditLineStatus
CreditLineStatus
REQUESTED
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
^^^

Name: REQUESTED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_71

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REQUESTED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_10(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_9'])
Function name: _createRequest
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_70 (->creditLineVariables_10) := REF_71(CreditLine.CreditLineStatus)
Function name: _createRequest
asgn

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_70 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_70 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_72(CreditLine.CreditLineConstants) -> creditLineConstants_8[_id_1]
has variable
clearing ir...?
REF_73(address) -> REF_72.borrower
has variable
clearing ir...?
creditLineConstants_9(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_8'])
has variable
clearing ir...?
REF_73 (->creditLineConstants_9) := _borrower_1(address)
has variable
typecheckig node...
REF_72(CreditLine.CreditLineConstants) -> creditLineConstants_8[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_72

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_73(address) -> REF_72.borrower
Function name: _createRequest
MEMBER
creditLineConstants
borrower
global
creditLineConstants Fields:
borrowRate
borrowAsset
collateralAsset
^^^
[i]Type for REF_73

Name: creditLineConstants.borrower Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.borrower Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrower Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_9(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_8'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_73 (->creditLineConstants_9) := _borrower_1(address)
Function name: _createRequest
asgn

Name: _borrower Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_73 Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_73 Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrower Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_73 (->creditLineConstants_9) := _borrower_1(address)
XXXXX
clearning node...
clearing ir...?
REF_74(CreditLine.CreditLineConstants) -> creditLineConstants_9[_id_1]
has variable
clearing ir...?
REF_75(address) -> REF_74.lender
has variable
clearing ir...?
creditLineConstants_10(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_9'])
has variable
clearing ir...?
REF_75 (->creditLineConstants_10) := _lender_1(address)
has variable
typecheckig node...
REF_74(CreditLine.CreditLineConstants) -> creditLineConstants_9[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_74

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_75(address) -> REF_74.lender
Function name: _createRequest
MEMBER
creditLineConstants
lender
global
creditLineConstants Fields:
borrower
borrowRate
borrowAsset
collateralAsset
^^^
[i]Type for REF_75

Name: creditLineConstants.lender Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.lender Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_10(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_9'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_75 (->creditLineConstants_10) := _lender_1(address)
Function name: _createRequest
asgn

Name: _lender Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: reqTo
Fields: 
Finance Type: undef

Name: REF_75 Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: reqTo
Fields: 
Finance Type: undef

Name: REF_75 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: reqTo
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_76(CreditLine.CreditLineConstants) -> creditLineConstants_10[_id_1]
has variable
clearing ir...?
REF_77(uint256) -> REF_76.borrowLimit
has variable
clearing ir...?
creditLineConstants_11(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_10'])
has variable
clearing ir...?
REF_77 (->creditLineConstants_11) := _borrowLimit_1(uint256)
has variable
typecheckig node...
REF_76(CreditLine.CreditLineConstants) -> creditLineConstants_10[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_76

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_77(uint256) -> REF_76.borrowLimit
Function name: _createRequest
MEMBER
creditLineConstants
borrowLimit
global
creditLineConstants Fields:
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^
[i]Type for REF_77

Name: creditLineConstants.borrowLimit Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowLimit Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowLimit Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_11(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_10'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_77 (->creditLineConstants_11) := _borrowLimit_1(uint256)
Function name: _createRequest
asgn

Name: _borrowLimit Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowLimit Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_78(CreditLine.CreditLineConstants) -> creditLineConstants_11[_id_1]
has variable
clearing ir...?
REF_79(bool) -> REF_78.autoLiquidation
has variable
clearing ir...?
creditLineConstants_12(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_11'])
has variable
clearing ir...?
REF_79 (->creditLineConstants_12) := _autoLiquidation_1(bool)
has variable
typecheckig node...
REF_78(CreditLine.CreditLineConstants) -> creditLineConstants_11[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_78

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_79(bool) -> REF_78.autoLiquidation
Function name: _createRequest
MEMBER
creditLineConstants
autoLiquidation
global
creditLineConstants Fields:
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^
[i]Type for REF_79

Name: creditLineConstants.autoLiquidation Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.autoLiquidation Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: autoLiquidation Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_12(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_11'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_79 (->creditLineConstants_12) := _autoLiquidation_1(bool)
Function name: _createRequest
asgn

Name: _autoLiquidation Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: autoLiquidation Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_80(CreditLine.CreditLineConstants) -> creditLineConstants_12[_id_1]
has variable
clearing ir...?
REF_81(uint256) -> REF_80.idealCollateralRatio
has variable
clearing ir...?
creditLineConstants_13(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_12'])
has variable
clearing ir...?
REF_81 (->creditLineConstants_13) := _collateralRatio_1(uint256)
has variable
typecheckig node...
REF_80(CreditLine.CreditLineConstants) -> creditLineConstants_12[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_80

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_81(uint256) -> REF_80.idealCollateralRatio
Function name: _createRequest
MEMBER
creditLineConstants
idealCollateralRatio
global
creditLineConstants Fields:
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^
[i]Type for REF_81

Name: creditLineConstants.idealCollateralRatio Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.idealCollateralRatio Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_13(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_12'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_81 (->creditLineConstants_13) := _collateralRatio_1(uint256)
Function name: _createRequest
asgn

Name: _collateralRatio Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_81 Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_81 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_82(CreditLine.CreditLineConstants) -> creditLineConstants_13[_id_1]
has variable
clearing ir...?
REF_83(uint256) -> REF_82.borrowRate
has variable
clearing ir...?
creditLineConstants_14(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_13'])
has variable
clearing ir...?
REF_83 (->creditLineConstants_14) := _borrowRate_1(uint256)
has variable
typecheckig node...
REF_82(CreditLine.CreditLineConstants) -> creditLineConstants_13[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_82

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_83(uint256) -> REF_82.borrowRate
Function name: _createRequest
MEMBER
creditLineConstants
borrowRate
global
creditLineConstants Fields:
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowRate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_83

Name: creditLineConstants.borrowRate Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowRate Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_14(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_13'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_83 (->creditLineConstants_14) := _borrowRate_1(uint256)
Function name: _createRequest
asgn

Name: _borrowRate Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowRate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_84(CreditLine.CreditLineConstants) -> creditLineConstants_14[_id_1]
has variable
clearing ir...?
REF_85(address) -> REF_84.borrowAsset
has variable
clearing ir...?
creditLineConstants_15(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_14'])
has variable
clearing ir...?
REF_85 (->creditLineConstants_15) := _borrowAsset_1(address)
has variable
typecheckig node...
REF_84(CreditLine.CreditLineConstants) -> creditLineConstants_14[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_85(address) -> REF_84.borrowAsset
Function name: _createRequest
MEMBER
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_85

Name: creditLineConstants.borrowAsset Function: _createRequest
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: _createRequest
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_15(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_14'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_85 (->creditLineConstants_15) := _borrowAsset_1(address)
Function name: _createRequest
asgn

Name: _borrowAsset Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: bAsset
Fields: 
Finance Type: undef

Name: REF_85 Function: _createRequest
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: REF_85 Function: _createRequest
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_86(CreditLine.CreditLineConstants) -> creditLineConstants_15[_id_1]
has variable
clearing ir...?
REF_87(address) -> REF_86.collateralAsset
has variable
clearing ir...?
creditLineConstants_16(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_15'])
has variable
clearing ir...?
REF_87 (->creditLineConstants_16) := _collateralAsset_1(address)
has variable
typecheckig node...
REF_86(CreditLine.CreditLineConstants) -> creditLineConstants_15[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_86

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_87(address) -> REF_86.collateralAsset
Function name: _createRequest
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_87

Name: creditLineConstants.collateralAsset Function: _createRequest
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: _createRequest
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_16(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_15'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_87 (->creditLineConstants_16) := _collateralAsset_1(address)
Function name: _createRequest
asgn

Name: _collateralAsset Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: cAsset
Fields: 
Finance Type: undef

Name: REF_87 Function: _createRequest
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: REF_87 Function: _createRequest
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_88(CreditLine.CreditLineConstants) -> creditLineConstants_16[_id_1]
has variable
clearing ir...?
REF_89(bool) -> REF_88.requestByLender
has variable
clearing ir...?
creditLineConstants_17(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_16'])
has variable
clearing ir...?
REF_89 (->creditLineConstants_17) := _requestByLender_1(bool)
has variable
typecheckig node...
REF_88(CreditLine.CreditLineConstants) -> creditLineConstants_16[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_88

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_89(bool) -> REF_88.requestByLender
Function name: _createRequest
MEMBER
creditLineConstants
requestByLender
global
creditLineConstants Fields:
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^
[i]Type for REF_89

Name: creditLineConstants.requestByLender Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.requestByLender Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: requestByLender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_17(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_16'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_89 (->creditLineConstants_17) := _requestByLender_1(bool)
Function name: _createRequest
asgn

Name: _requestByLender Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_89 Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_89 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: requestByLender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _id_1
typecheckig node...
RETURN _id_1
RETURN

Name: _id Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_createRequest":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_lender_1(address) := ϕ(['_lender_3'])
Function name: _createRequest
Phi
[i]Type for _lender

Name: _lender Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: reqTo
Fields: 
Finance Type: undef
done.
_borrower_1(address) := ϕ(['_borrower_3'])
Function name: _createRequest
Phi
[i]Type for _borrower

Name: _borrower Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowLimit_1(uint256) := ϕ(['_borrowLimit_1'])
Function name: _createRequest
Phi
[i]Type for _borrowLimit

Name: _borrowLimit Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowRate_1(uint256) := ϕ(['_borrowRate_1'])
Function name: _createRequest
Phi
[i]Type for _borrowRate

Name: _borrowRate Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_autoLiquidation_1(bool) := ϕ(['_autoLiquidation_1'])
Function name: _createRequest
Phi
[i]Type for _autoLiquidation

Name: _autoLiquidation Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_collateralRatio_1(uint256) := ϕ(['_collateralRatio_1'])
Function name: _createRequest
Phi
[i]Type for _collateralRatio

Name: _collateralRatio Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_borrowAsset_1(address) := ϕ(['_borrowAsset_1'])
Function name: _createRequest
Phi
[i]Type for _borrowAsset

Name: _borrowAsset Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: bAsset
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := ϕ(['_collateralAsset_1'])
Function name: _createRequest
Phi
[i]Type for _collateralAsset

Name: _collateralAsset Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: cAsset
Fields: 
Finance Type: undef
done.
_requestByLender_1(bool) := ϕ(['_requestAsLender_1'])
Function name: _createRequest
Phi
[i]Type for _requestByLender

Name: _requestByLender Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineCounter_1(uint256) := ϕ(['creditLineCounter_0', 'creditLineCounter_2'])
Function name: _createRequest
Phi
[i]Type for creditLineCounter

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_9(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: _createRequest
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_8(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
typecheckig node...
TMP_124(bool) = _lender_1 != _borrower_1
Function name: _createRequest
[i]Type for TMP_124

Name: TMP_124 Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_125(None) = SOLIDITY_CALL require(bool,string)(TMP_124,Lender and Borrower cannot be same addresses)
[i]Type for TMP_125

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_126(uint256) = creditLineCounter_1 + 1
Function name: _createRequest
val: 1

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_126

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_id_1(uint256) := TMP_126(uint256)
Function name: _createRequest
asgn

Name: TMP_126 Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _id Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _id

Name: _id Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
creditLineCounter_2(uint256) := _id_1(uint256)
Function name: _createRequest
asgn

Name: _id Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for creditLineCounter

Name: creditLineCounter Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_69(CreditLine.CreditLineVariables) -> creditLineVariables_9[_id_1]
Function name: _createRequest
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_69

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_70(CreditLine.CreditLineStatus) -> REF_69.status
Function name: _createRequest
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_70

Name: creditLineVariables.status Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_71(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
Function name: _createRequest
MEMBER
CreditLineStatus
CreditLineStatus
REQUESTED
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
^^^

Name: REQUESTED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_71

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REQUESTED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_10(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_9'])
Function name: _createRequest
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_70 (->creditLineVariables_10) := REF_71(CreditLine.CreditLineStatus)
Function name: _createRequest
asgn

Name: CreditLineStatus.REQUESTED Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_70 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_70

Name: REF_70 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_70 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_72(CreditLine.CreditLineConstants) -> creditLineConstants_8[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_72

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_73(address) -> REF_72.borrower
Function name: _createRequest
MEMBER
creditLineConstants
borrower
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrower Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_73

Name: creditLineConstants.borrower Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.borrower Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrower Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_9(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_8'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_73 (->creditLineConstants_9) := _borrower_1(address)
Function name: _createRequest
asgn

Name: _borrower Function: _createRequest
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_73 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_73

Name: REF_73 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_73 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrower Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_73 (->creditLineConstants_9) := _borrower_1(address)
XXXXX
typecheckig node...
REF_74(CreditLine.CreditLineConstants) -> creditLineConstants_9[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_74

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_75(address) -> REF_74.lender
Function name: _createRequest
MEMBER
creditLineConstants
lender
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_75

Name: creditLineConstants.lender Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: reqTo
Fields: 
Finance Type: undef

Name: creditLineConstants.lender Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: reqTo
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_10(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_9'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_75 (->creditLineConstants_10) := _lender_1(address)
Function name: _createRequest
asgn

Name: _lender Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: reqTo
Fields: 
Finance Type: undef

Name: REF_75 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: reqTo
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_75

Name: REF_75 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: reqTo
Fields: 
Finance Type: undef

Name: REF_75 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: reqTo
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_76(CreditLine.CreditLineConstants) -> creditLineConstants_10[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_76

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_77(uint256) -> REF_76.borrowLimit
Function name: _createRequest
MEMBER
creditLineConstants
borrowLimit
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowLimit Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: creditLineConstants.borrowLimit Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowLimit Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowLimit Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_11(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_10'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_77 (->creditLineConstants_11) := _borrowLimit_1(uint256)
Function name: _createRequest
asgn

Name: _borrowLimit Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_77

Name: REF_77 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_77 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowLimit Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_78(CreditLine.CreditLineConstants) -> creditLineConstants_11[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_78

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_79(bool) -> REF_78.autoLiquidation
Function name: _createRequest
MEMBER
creditLineConstants
autoLiquidation
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: autoLiquidation Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: creditLineConstants.autoLiquidation Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.autoLiquidation Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: autoLiquidation Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_12(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_11'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_79 (->creditLineConstants_12) := _autoLiquidation_1(bool)
Function name: _createRequest
asgn

Name: _autoLiquidation Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_79

Name: REF_79 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_79 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: autoLiquidation Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_80(CreditLine.CreditLineConstants) -> creditLineConstants_12[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_80

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_81(uint256) -> REF_80.idealCollateralRatio
Function name: _createRequest
MEMBER
creditLineConstants
idealCollateralRatio
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_81

Name: creditLineConstants.idealCollateralRatio Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.idealCollateralRatio Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_13(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_12'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_81 (->creditLineConstants_13) := _collateralRatio_1(uint256)
Function name: _createRequest
asgn

Name: _collateralRatio Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_81 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_81

Name: REF_81 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_81 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_82(CreditLine.CreditLineConstants) -> creditLineConstants_13[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_82

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_83(uint256) -> REF_82.borrowRate
Function name: _createRequest
MEMBER
creditLineConstants
borrowRate
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowRate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_83

Name: creditLineConstants.borrowRate Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowRate Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowRate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_14(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_13'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_83 (->creditLineConstants_14) := _borrowRate_1(uint256)
Function name: _createRequest
asgn

Name: _borrowRate Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_83

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_83 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowRate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_84(CreditLine.CreditLineConstants) -> creditLineConstants_14[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_84

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_85(address) -> REF_84.borrowAsset
Function name: _createRequest
MEMBER
[W] Initializing defined variable to constant
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_85

Name: creditLineConstants.borrowAsset Function: _createRequest
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: _createRequest
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
creditLineConstants_15(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_14'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_85 (->creditLineConstants_15) := _borrowAsset_1(address)
Function name: _createRequest
asgn

Name: _borrowAsset Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: bAsset
Fields: 
Finance Type: undef

Name: REF_85 Function: _createRequest
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_85

Name: REF_85 Function: _createRequest
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: REF_85 Function: _createRequest
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_86(CreditLine.CreditLineConstants) -> creditLineConstants_15[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_86

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_87(address) -> REF_86.collateralAsset
Function name: _createRequest
MEMBER
[W] Initializing defined variable to constant
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_87

Name: creditLineConstants.collateralAsset Function: _createRequest
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: _createRequest
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
creditLineConstants_16(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_15'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_87 (->creditLineConstants_16) := _collateralAsset_1(address)
Function name: _createRequest
asgn

Name: _collateralAsset Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: cAsset
Fields: 
Finance Type: undef

Name: REF_87 Function: _createRequest
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_87

Name: REF_87 Function: _createRequest
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: REF_87 Function: _createRequest
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_88(CreditLine.CreditLineConstants) -> creditLineConstants_16[_id_1]
Function name: _createRequest
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_88

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_89(bool) -> REF_88.requestByLender
Function name: _createRequest
MEMBER
creditLineConstants
requestByLender
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: requestByLender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_89

Name: creditLineConstants.requestByLender Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.requestByLender Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: requestByLender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_17(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_16'])
Function name: _createRequest
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_89 (->creditLineConstants_17) := _requestByLender_1(bool)
Function name: _createRequest
asgn

Name: _requestByLender Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_89 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_89

Name: REF_89 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_89 Function: _createRequest
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: requestByLender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _id_1
typecheckig node...
RETURN _id_1
RETURN

Name: _id Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_createRequest":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _createRequest

Name: _id Function: _createRequest
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_122

Name: TMP_122 Function: request
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_122(uint256) = INTERNAL_CALL, CreditLine._createRequest(address,address,uint256,uint256,bool,uint256,address,address,bool)(_lender_3,_borrower_3,_borrowLimit_1,_borrowRate_1,_autoLiquidation_1,_collateralRatio_1,_borrowAsset_1,_collateralAsset_1,_requestAsLender_1)
XXXXX
_id_1(uint256) := TMP_122(uint256)
Function name: request
asgn

Name: TMP_122 Function: request
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _id Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _id

Name: _id Function: request
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_lender_2(address) := msg.sender(address)
has variable
[i] _lender cleared
typecheckig node...
_lender_2(address) := msg.sender(address)
Function name: request
asgn
msg.sender

Name: _lender Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_lender_2(address) := msg.sender(address)
XXXXX
clearning node...
clearing ir...?
Emit CreditLineRequested(_id_1,_lender_3,_borrower_3)
typecheckig node...
Emit CreditLineRequested(_id_1,_lender_3,_borrower_3)
clearning node...
clearing ir...?
_borrower_2(address) := _requestTo_1(address)
has variable
[i] _borrower cleared
typecheckig node...
_borrower_2(address) := _requestTo_1(address)
Function name: request
asgn

Name: _requestTo Function: request
Num: -1
Den: -1
Norm: 0
LF: reqTo
Fields: 
Finance Type: undef

Name: _borrower Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrower

Name: _borrower Function: request
Num: -1
Den: -1
Norm: 0
LF: reqTo
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _id_1
typecheckig node...
RETURN _id_1
RETURN

Name: _id Function: request
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "request":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
priceOracle_4(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
Function name: request
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_117(bool) = _borrowAsset_1 != _collateralAsset_1
Function name: request
[i]Type for TMP_117

Name: TMP_117 Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_118(None) = SOLIDITY_CALL require(bool,string)(TMP_117,R: cant borrow lent token)
[i]Type for TMP_118

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_119 = CONVERT priceOracle_4 to IPriceOracle
Function name: request

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: TMP_119 Function: request
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[i]Type for TMP_119

Name: TMP_119 Function: request
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
TMP_120(bool) = HIGH_LEVEL_CALL, dest:TMP_119(IPriceOracle), function:doesFeedExist, arguments:['_borrowAsset_1', '_collateralAsset_1']  
Function name: request
High Call: doesFeedExist
func name:doesFeedExist
other func name:doesFeedExist
TMP_120
[i]Type for TMP_120

Name: TMP_120 Function: request
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
priceOracle_5(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_4'])
Function name: request
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
TMP_121(None) = SOLIDITY_CALL require(bool,string)(TMP_120,R: No price feed)
[i]Type for TMP_121

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_lender_1(address) := _requestTo_1(address)
Function name: request
asgn

Name: _requestTo Function: request
Num: -1
Den: -1
Norm: 0
LF: reqTo
Fields: 
Finance Type: undef

Name: _lender Function: request
Num: -1
Den: -1
Norm: 0
LF: reqTo
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _lender

Name: _lender Function: request
Num: -1
Den: -1
Norm: 0
LF: reqTo
Fields: 
Finance Type: undef
done.
typecheckig node...
_borrower_1(address) := msg.sender(address)
Function name: request
asgn
msg.sender

Name: _borrower Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_borrower_1(address) := msg.sender(address)
XXXXX
typecheckig node...
CONDITION _requestAsLender_1
Condition...
Conidtion: 
_requestAsLender_1
_requestAsLender_1
typecheckig node...
_lender_3(address) := ϕ(['_lender_1', '_lender_2'])
Function name: request
Phi
[i]Type for _lender

Name: _lender Function: request
Num: -1
Den: -1
Norm: 0
LF: reqTo
Fields: 
Finance Type: undef
done.
_borrower_3(address) := ϕ(['_borrower_1', '_borrower_2'])
Function name: request
Phi
[i]Type for _borrower

Name: _borrower Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_122(uint256) = INTERNAL_CALL, CreditLine._createRequest(address,address,uint256,uint256,bool,uint256,address,address,bool)(_lender_3,_borrower_3,_borrowLimit_1,_borrowRate_1,_autoLiquidation_1,_collateralRatio_1,_borrowAsset_1,_collateralAsset_1,_requestAsLender_1)
Function name: request
Internal call...
_createRequest
_lender
_borrower
_borrowLimit
_borrowRate
_autoLiquidation
_collateralRatio
_borrowAsset
_collateralAsset
_requestAsLender
Function: _createRequest
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: reqTo
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 6
    num: [-1]
    den: [-1]
    norm: 0
    link: bAsset
    fields: []
    fintype: -1
Param: 7
    num: [-1]
    den: [-1]
    norm: 0
    link: cAsset
    fields: []
    fintype: -1
Param: 8
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: reqTo
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 6
    num: [-1]
    den: [-1]
    norm: 0
    link: bAsset
    fields: []
    fintype: -1
Param: 7
    num: [-1]
    den: [-1]
    norm: 0
    link: cAsset
    fields: []
    fintype: -1
Param: 8
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, 'reqTo', [], -1]
cur_param: [[], [], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 0, 'bAsset', [], -1]
cur_param: [[-1], [-1], 0, 'cAsset', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: reqTo
    fields: []
    fintype: -1
Param: 1
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 6
    num: [-1]
    den: [-1]
    norm: 0
    link: bAsset
    fields: []
    fintype: -1
Param: 7
    num: [-1]
    den: [-1]
    norm: 0
    link: cAsset
    fields: []
    fintype: -1
Param: 8
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, 'reqTo', [], -1]
[[], [], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, 'bAsset', [], -1]
[[-1], [-1], 0, 'cAsset', [], -1]
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_12 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_122 Function: request
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_122

Name: TMP_122 Function: request
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_id_1(uint256) := TMP_122(uint256)
Function name: request
asgn

Name: TMP_122 Function: request
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _id Function: request
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _id

Name: _id Function: request
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_lender_2(address) := msg.sender(address)
Function name: request
asgn
msg.sender

Name: _lender Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for _lender

Name: _lender Function: request
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_lender_2(address) := msg.sender(address)
XXXXX
typecheckig node...
Emit CreditLineRequested(_id_1,_lender_3,_borrower_3)
typecheckig node...
_borrower_2(address) := _requestTo_1(address)
Function name: request
asgn

Name: _requestTo Function: request
Num: -1
Den: -1
Norm: 0
LF: reqTo
Fields: 
Finance Type: undef

Name: _borrower Function: request
Num: -1
Den: -1
Norm: 0
LF: reqTo
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrower

Name: _borrower Function: request
Num: -1
Den: -1
Norm: 0
LF: reqTo
Fields: 
Finance Type: undef
done.
typecheckig node...
RETURN _id_1
RETURN

Name: _id Function: request
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "request":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: request

Name: _id Function: request
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _createRequest
Function _createRequest not marked
Mark Iterations TRUE, proceeding anyway
Function name: _createRequest
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: accept
Function name: accept
Function Visibility (test): external
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
creditLineVariables_11(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
has variable
clearing ir...?
creditLineConstants_18(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
typecheckig node...
creditLineVariables_11(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: accept
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_18(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: accept
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_90(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
has variable
clearing ir...?
REF_91(CreditLine.CreditLineStatus) -> REF_90.status
has variable
clearing ir...?
REF_92(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
has variable
clearing ir...?
TMP_127(bool) = REF_91 == REF_92
has variable
[i] TMP_127 cleared
clearing ir...?
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,CreditLine::acceptCreditLineLender - CreditLine is already accepted)
typecheckig node...
REF_90(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
Function name: accept
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_90

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_91(CreditLine.CreditLineStatus) -> REF_90.status
Function name: accept
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_91

Name: creditLineVariables.status Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_92(CreditLine.CreditLineStatus) -> CreditLineStatus.REQUESTED
Function name: accept
MEMBER
CreditLineStatus
CreditLineStatus
REQUESTED
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
^^^

Name: REQUESTED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_92

Name: CreditLineStatus.REQUESTED Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.REQUESTED Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REQUESTED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_127(bool) = REF_91 == REF_92
Function name: accept
[i]Type for TMP_127

Name: TMP_127 Function: accept
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_128(None) = SOLIDITY_CALL require(bool,string)(TMP_127,CreditLine::acceptCreditLineLender - CreditLine is already accepted)
[i]Type for TMP_128

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_93(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
has variable
clearing ir...?
REF_94(bool) -> REF_93.requestByLender
has variable
clearing ir...?
_requestByLender_1(bool) := REF_94(bool)
has variable
[i] _requestByLender cleared
typecheckig node...
REF_93(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
Function name: accept
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_93

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_94(bool) -> REF_93.requestByLender
Function name: accept
MEMBER
creditLineConstants
requestByLender
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: requestByLender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_94

Name: creditLineConstants.requestByLender Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.requestByLender Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: requestByLender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_requestByLender_1(bool) := REF_94(bool)
Function name: accept
asgn

Name: creditLineConstants.requestByLender Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _requestByLender Function: accept
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _requestByLender

Name: _requestByLender Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_95(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
has variable
clearing ir...?
REF_96(address) -> REF_95.borrower
has variable
clearing ir...?
TMP_129(bool) = msg.sender == REF_96
has variable
[i] TMP_129 cleared
clearing ir...?
TMP_130(bool) = TMP_129 && _requestByLender_1
has variable
[i] TMP_130 cleared
clearing ir...?
REF_97(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
has variable
clearing ir...?
REF_98(address) -> REF_97.lender
has variable
clearing ir...?
TMP_131(bool) = msg.sender == REF_98
has variable
[i] TMP_131 cleared
clearing ir...?
TMP_132 = ! _requestByLender_1 
clearing ir...?
TMP_133(bool) = TMP_131 && TMP_132
has variable
[i] TMP_133 cleared
clearing ir...?
TMP_134(bool) = TMP_130 || TMP_133
has variable
[i] TMP_134 cleared
clearing ir...?
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Only Borrower or Lender who hasn't requested can accept)
typecheckig node...
REF_95(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
Function name: accept
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_95

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_96(address) -> REF_95.borrower
Function name: accept
MEMBER
creditLineConstants
borrower
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrower Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_96

Name: creditLineConstants.borrower Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.borrower Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrower Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_129(bool) = msg.sender == REF_96
Function name: accept
[i]Type for TMP_129

Name: TMP_129 Function: accept
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_130(bool) = TMP_129 && _requestByLender_1
Function name: accept
[i]Type for TMP_130

Name: TMP_130 Function: accept
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_97(CreditLine.CreditLineConstants) -> creditLineConstants_18[_id_1]
Function name: accept
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_97

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_98(address) -> REF_97.lender
Function name: accept
MEMBER
creditLineConstants
lender
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_98

Name: creditLineConstants.lender Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.lender Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_131(bool) = msg.sender == REF_98
Function name: accept
[i]Type for TMP_131

Name: TMP_131 Function: accept
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_132 = ! _requestByLender_1 
[i]Type for TMP_132

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_133(bool) = TMP_131 && TMP_132
Function name: accept
[i]Type for TMP_133

Name: TMP_133 Function: accept
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_134(bool) = TMP_130 || TMP_133
Function name: accept
[i]Type for TMP_134

Name: TMP_134 Function: accept
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_135(None) = SOLIDITY_CALL require(bool,string)(TMP_134,Only Borrower or Lender who hasn't requested can accept)
[i]Type for TMP_135

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_99(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
has variable
clearing ir...?
REF_100(CreditLine.CreditLineStatus) -> REF_99.status
has variable
clearing ir...?
REF_101(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
has variable
clearing ir...?
creditLineVariables_12(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_11'])
has variable
clearing ir...?
REF_100 (->creditLineVariables_12) := REF_101(CreditLine.CreditLineStatus)
has variable
typecheckig node...
REF_99(CreditLine.CreditLineVariables) -> creditLineVariables_11[_id_1]
Function name: accept
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_99

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_100(CreditLine.CreditLineStatus) -> REF_99.status
Function name: accept
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_100

Name: creditLineVariables.status Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_101(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: accept
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_101

Name: CreditLineStatus.ACTIVE Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_12(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_11'])
Function name: accept
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_100 (->creditLineVariables_12) := REF_101(CreditLine.CreditLineStatus)
Function name: accept
asgn

Name: CreditLineStatus.ACTIVE Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_100 Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_100

Name: REF_100 Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_100 Function: accept
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit CreditLineAccepted(_id_1)
typecheckig node...
Emit CreditLineAccepted(_id_1)
WORKLIST iteration 0 for function call "accept":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: accept
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: depositCollateral
Function name: depositCollateral
Function Visibility (test): external
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_amount
Finding type for _amount...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _amount Function: depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_strategy
Finding type for _strategy...
address
Check copy_toekn_tuple
(-1, -1, 0, 'strat')
----
Type: address
address
Final Type: address

Name: _strategy Function: depositCollateral
Num: -1
Den: -1
Norm: 0
LF: strat
Fields: 
Finance Type: undef
[*]Type fetched successfully
_fromSavingsAccount
Finding type for _fromSavingsAccount...
bool
SKIP bool
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: strat
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: strat
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
creditLineVariables_13(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
has variable
typecheckig node...
creditLineVariables_13(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: depositCollateral
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: nonReentrant
Function Visibility: internal
clearning node...
clearing ir...?
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
has variable
clearing ir...?
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
has variable
clearing ir...?
_status_2(uint256) := ϕ(['_status_1', '_status_0', '_status_4'])
has variable
typecheckig node...
_NOT_ENTERED_2(uint256) := ϕ(['_NOT_ENTERED_0'])
Function name: nonReentrant
Phi
[i]Type for _NOT_ENTERED

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_ENTERED_1(uint256) := ϕ(['_ENTERED_0'])
Function name: nonReentrant
Phi
[i]Type for _ENTERED

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_status_2(uint256) := ϕ(['_status_1', '_status_0', '_status_4'])
Function name: nonReentrant
Phi
[i]Type for _status

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_386(bool) = _status_2 != _ENTERED_1
has variable
[i] TMP_386 cleared
clearing ir...?
TMP_387(None) = SOLIDITY_CALL require(bool,string)(TMP_386,ReentrancyGuard: reentrant call)
typecheckig node...
TMP_386(bool) = _status_2 != _ENTERED_1
Function name: nonReentrant
[i]Type for TMP_386

Name: TMP_386 Function: nonReentrant
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_387(None) = SOLIDITY_CALL require(bool,string)(TMP_386,ReentrancyGuard: reentrant call)
[i]Type for TMP_387

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_status_3(uint256) := _ENTERED_1(uint256)
has variable
typecheckig node...
_status_3(uint256) := _ENTERED_1(uint256)
Function name: nonReentrant
asgn

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _status Function: nonReentrant
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_status_4(uint256) := _NOT_ENTERED_2(uint256)
has variable
typecheckig node...
_status_4(uint256) := _NOT_ENTERED_2(uint256)
Function name: nonReentrant
asgn

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _status Function: nonReentrant
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _status

Name: _status Function: nonReentrant
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "nonReentrant":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: nonReentrant
done.
clearning node...
clearing ir...?
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
clearing ir...?
creditLineVariables_15(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
has variable
typecheckig node...
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
Internal call...
ifCreditLineExists
_id
Function: ifCreditLineExists
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: ifCreditLineExists
Function Visibility: internal
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
has variable
[i] _id cleared
clearing ir...?
creditLineVariables_45(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1'])
Function name: ifCreditLineExists
Phi
[i]Type for _id

Name: _id Function: ifCreditLineExists
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_45(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: ifCreditLineExists
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_315(CreditLine.CreditLineVariables) -> creditLineVariables_45[_id_1]
has variable
clearing ir...?
REF_316(CreditLine.CreditLineStatus) -> REF_315.status
has variable
clearing ir...?
REF_317(CreditLine.CreditLineStatus) -> CreditLineStatus.NOT_CREATED
has variable
clearing ir...?
TMP_388(bool) = REF_316 != REF_317
has variable
[i] TMP_388 cleared
clearing ir...?
TMP_389(None) = SOLIDITY_CALL require(bool,string)(TMP_388,Credit line does not exist)
typecheckig node...
REF_315(CreditLine.CreditLineVariables) -> creditLineVariables_45[_id_1]
Function name: ifCreditLineExists
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_315

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_316(CreditLine.CreditLineStatus) -> REF_315.status
Function name: ifCreditLineExists
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_316

Name: creditLineVariables.status Function: ifCreditLineExists
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: ifCreditLineExists
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_317(CreditLine.CreditLineStatus) -> CreditLineStatus.NOT_CREATED
Function name: ifCreditLineExists
MEMBER
CreditLineStatus
CreditLineStatus
NOT_CREATED
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
^^^
[i]Type for REF_317

Name: CreditLineStatus.NOT_CREATED Function: ifCreditLineExists
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.NOT_CREATED Function: ifCreditLineExists
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: NOT_CREATED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_388(bool) = REF_316 != REF_317
Function name: ifCreditLineExists
[i]Type for TMP_388

Name: TMP_388 Function: ifCreditLineExists
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_389(None) = SOLIDITY_CALL require(bool,string)(TMP_388,Credit line does not exist)
[i]Type for TMP_389

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "ifCreditLineExists":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: ifCreditLineExists
done.
creditLineVariables_15(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
Function name: depositCollateral
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_102(CreditLine.CreditLineVariables) -> creditLineVariables_15[_id_1]
has variable
clearing ir...?
REF_103(CreditLine.CreditLineStatus) -> REF_102.status
has variable
clearing ir...?
REF_104(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
has variable
clearing ir...?
TMP_137(bool) = REF_103 == REF_104
has variable
[i] TMP_137 cleared
clearing ir...?
TMP_138(None) = SOLIDITY_CALL require(bool,string)(TMP_137,CreditLine not active)
typecheckig node...
REF_102(CreditLine.CreditLineVariables) -> creditLineVariables_15[_id_1]
Function name: depositCollateral
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_102

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_103(CreditLine.CreditLineStatus) -> REF_102.status
Function name: depositCollateral
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_103

Name: creditLineVariables.status Function: depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_104(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: depositCollateral
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_104

Name: CreditLineStatus.ACTIVE Function: depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_137(bool) = REF_103 == REF_104
Function name: depositCollateral
[i]Type for TMP_137

Name: TMP_137 Function: depositCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_138(None) = SOLIDITY_CALL require(bool,string)(TMP_137,CreditLine not active)
[i]Type for TMP_138

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._depositCollateral(uint256,uint256,address,bool)(_id_1,_amount_1,_strategy_1,_fromSavingsAccount_1)
typecheckig node...
INTERNAL_CALL, CreditLine._depositCollateral(uint256,uint256,address,bool)(_id_1,_amount_1,_strategy_1,_fromSavingsAccount_1)
Internal call...
_depositCollateral
_id
_amount
_strategy
_fromSavingsAccount
Function: _depositCollateral
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: strat
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: 0
    link: strat
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, 'strat', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _depositCollateral
Function Visibility: internal
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1'])
has variable
[i] _id cleared
clearing ir...?
_amount_1(uint256) := ϕ(['_amount_1'])
has variable
[i] _amount cleared
clearing ir...?
_strategy_1(address) := ϕ(['_strategy_1'])
has variable
[i] _strategy cleared
clearing ir...?
_fromSavingsAccount_1(bool) := ϕ(['_fromSavingsAccount_1'])
has variable
[i] _fromSavingsAccount cleared
clearing ir...?
collateralShareInStrategy_7(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
creditLineConstants_19(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
savingsAccount_4(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: _depositCollateral
Phi
[i]Type for _id

Name: _id Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['_amount_1'])
Function name: _depositCollateral
Phi
[i]Type for _amount

Name: _amount Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_strategy_1(address) := ϕ(['_strategy_1'])
Function name: _depositCollateral
Phi
[i]Type for _strategy

Name: _strategy Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: strat
Fields: 
Finance Type: undef
done.
_fromSavingsAccount_1(bool) := ϕ(['_fromSavingsAccount_1'])
Function name: _depositCollateral
Phi
[i]Type for _fromSavingsAccount

Name: _fromSavingsAccount Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_7(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_19(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: _depositCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
savingsAccount_4(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _depositCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_105(CreditLine.CreditLineConstants) -> creditLineConstants_19[_id_1]
has variable
clearing ir...?
REF_106(address) -> REF_105.lender
has variable
clearing ir...?
TMP_143(bool) = REF_106 != msg.sender
has variable
[i] TMP_143 cleared
clearing ir...?
TMP_144(None) = SOLIDITY_CALL require(bool,string)(TMP_143,lender cant deposit collateral)
typecheckig node...
REF_105(CreditLine.CreditLineConstants) -> creditLineConstants_19[_id_1]
Function name: _depositCollateral
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_105

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_106(address) -> REF_105.lender
Function name: _depositCollateral
MEMBER
creditLineConstants
lender
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_106

Name: creditLineConstants.lender Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.lender Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_143(bool) = REF_106 != msg.sender
Function name: _depositCollateral
[i]Type for TMP_143

Name: TMP_143 Function: _depositCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_144(None) = SOLIDITY_CALL require(bool,string)(TMP_143,lender cant deposit collateral)
[i]Type for TMP_144

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION _fromSavingsAccount_1
typecheckig node...
CONDITION _fromSavingsAccount_1
Condition...
Conidtion: 
_fromSavingsAccount_1
_fromSavingsAccount_1
clearning node...
clearing ir...?
REF_107(CreditLine.CreditLineConstants) -> creditLineConstants_19[_id_1]
has variable
clearing ir...?
REF_108(address) -> REF_107.collateralAsset
has variable
clearing ir...?
_collateralAsset_1(address) := REF_108(address)
has variable
[i] _collateralAsset cleared
typecheckig node...
REF_107(CreditLine.CreditLineConstants) -> creditLineConstants_19[_id_1]
Function name: _depositCollateral
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_107

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_108(address) -> REF_107.collateralAsset
Function name: _depositCollateral
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_108

Name: creditLineConstants.collateralAsset Function: _depositCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: _depositCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_108(address)
Function name: _depositCollateral
asgn

Name: creditLineConstants.collateralAsset Function: _depositCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: _collateralAsset Function: _depositCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: _depositCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._depositCollateralFromSavingsAccount(uint256,uint256,address)(_id_1,_amount_1,msg.sender)
typecheckig node...
INTERNAL_CALL, CreditLine._depositCollateralFromSavingsAccount(uint256,uint256,address)(_id_1,_amount_1,msg.sender)
Internal call...
_depositCollateralFromSavingsAccount
_id
_amount
msg.sender
Function: _depositCollateralFromSavingsAccount
ic
msg.sender
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _depositCollateralFromSavingsAccount
Function Visibility: internal
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1'])
has variable
[i] _id cleared
clearing ir...?
_amount_1(uint256) := ϕ(['_amount_1'])
has variable
[i] _amount cleared
clearing ir...?
_sender_1(address) := ϕ(['msg.sender'])
has variable
[i] _sender cleared
clearing ir...?
collateralShareInStrategy_1(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
creditLineConstants_7(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
savingsAccount_2(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
has variable
clearing ir...?
strategyRegistry_2(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _id

Name: _id Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['_amount_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _amount

Name: _amount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_sender_1(address) := ϕ(['msg.sender'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _sender

Name: _sender Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: _sender
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_1(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_7(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
savingsAccount_2(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_2(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_49(CreditLine.CreditLineConstants) -> creditLineConstants_7[_id_1]
has variable
clearing ir...?
REF_50(address) -> REF_49.collateralAsset
has variable
clearing ir...?
_collateralAsset_1(address) := REF_50(address)
has variable
[i] _collateralAsset cleared
typecheckig node...
REF_49(CreditLine.CreditLineConstants) -> creditLineConstants_7[_id_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_49

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_50(address) -> REF_49.collateralAsset
Function name: _depositCollateralFromSavingsAccount
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_50

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_50(address)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: _collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_94 = CONVERT strategyRegistry_2 to IStrategyRegistry
has variable
[i] TMP_94 cleared
clearing ir...?
TMP_95(address[]) = HIGH_LEVEL_CALL, dest:TMP_94(IStrategyRegistry), function:getStrategies, arguments:[]  
has variable
[i] TMP_95 cleared
clearing ir...?
collateralShareInStrategy_2(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_1', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
savingsAccount_3(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_2', 'savingsAccount_6', 'savingsAccount_1'])
has variable
clearing ir...?
strategyRegistry_3(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_2', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
has variable
clearing ir...?
_strategyList_1(address[]) := TMP_95(address[])
has variable
[i] _strategyList cleared
typecheckig node...
TMP_94 = CONVERT strategyRegistry_2 to IStrategyRegistry
Function name: _depositCollateralFromSavingsAccount

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_94 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_95(address[]) = HIGH_LEVEL_CALL, dest:TMP_94(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _depositCollateralFromSavingsAccount
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_95
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_95

Name: TMP_95 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_2(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_1', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_3(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_2', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_3(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_2', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_95(address[])
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_95 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_96 = CONVERT savingsAccount_3 to ISavingsAccount
has variable
[i] TMP_96 cleared
clearing ir...?
_savingsAccount_1(ISavingsAccount) := TMP_96(ISavingsAccount)
has variable
[i] _savingsAccount cleared
typecheckig node...
TMP_96 = CONVERT savingsAccount_3 to ISavingsAccount
Function name: _depositCollateralFromSavingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_96

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_savingsAccount_1(ISavingsAccount) := TMP_96(ISavingsAccount)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: _savingsAccount Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _savingsAccount

Name: _savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_index_1(uint256) := 0(uint256)
has variable
[i] _index cleared
typecheckig node...
_index_1(uint256) := 0(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
has variable
[i] _activeAmount cleared
clearing ir...?
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
has variable
[i] _index cleared
clearing ir...?
REF_52 -> LENGTH _strategyList_1
clearing ir...?
TMP_97(bool) = _index_2 < REF_52
has variable
[i] TMP_97 cleared
clearing ir...?
CONDITION TMP_97
typecheckig node...
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_52 -> LENGTH _strategyList_1
[i]Type for REF_52

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_97(bool) = _index_2 < REF_52
Function name: _depositCollateralFromSavingsAccount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_97 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_97(bool) = _index_2 < REF_52
XXXXX
CONDITION TMP_97
Condition...
Conidtion: 
TMP_97
TMP_97
clearning node...
clearing ir...?
REF_53(address) -> _strategyList_1[_index_2]
has variable
clearing ir...?
_strategy_1(address) := REF_53(address)
has variable
[i] _strategy cleared
typecheckig node...
REF_53(address) -> _strategyList_1[_index_2]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _depositCollateralFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_53

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
_strategy_1(address) := REF_53(address)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategy

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_116(None) = SOLIDITY_CALL revert(string)(CreditLine::_depositCollateralFromSavingsAccount - Insufficient balance)
typecheckig node...
TMP_116(None) = SOLIDITY_CALL revert(string)(CreditLine::_depositCollateralFromSavingsAccount - Insufficient balance)
[i]Type for TMP_116

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_98(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_sender_1', '_collateralAsset_1', '_strategy_1']  
has variable
[i] TMP_98 cleared
clearing ir...?
collateralShareInStrategy_3(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_2', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
_liquidityShares_1(uint256) := TMP_98(uint256)
has variable
[i] _liquidityShares cleared
typecheckig node...
TMP_98(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_sender_1', '_collateralAsset_1', '_strategy_1']  
Function name: _depositCollateralFromSavingsAccount
High Call: balanceInShares
func name:balanceInShares
other func name:balanceInShares
TMP_98
hlc contract name: SAVE func_name: balanceInShares
wfc len: 0
COPIED
[i]Type for TMP_98

Name: TMP_98 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_3(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_2', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := TMP_98(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_98 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_99(bool) = _liquidityShares_1 == 0
has variable
[i] TMP_99 cleared
clearing ir...?
REF_55(address) -> _strategyList_1[_index_2]
has variable
clearing ir...?
TMP_100 = CONVERT 0 to address
has variable
[i] TMP_100 cleared
clearing ir...?
TMP_101(bool) = REF_55 == TMP_100
has variable
[i] TMP_101 cleared
clearing ir...?
TMP_102(bool) = TMP_99 || TMP_101
has variable
[i] TMP_102 cleared
clearing ir...?
CONDITION TMP_102
typecheckig node...
TMP_99(bool) = _liquidityShares_1 == 0
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_99

Name: TMP_99 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_55(address) -> _strategyList_1[_index_2]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _depositCollateralFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_55

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_100 = CONVERT 0 to address
Function name: _depositCollateralFromSavingsAccount
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_100

Name: TMP_100 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(bool) = REF_55 == TMP_100
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_101

Name: TMP_101 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(bool) = TMP_99 || TMP_101
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_102

Name: TMP_102 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_102
Condition...
Conidtion: 
TMP_102
TMP_102
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_103 = CONVERT _strategy_1 to IYield
has variable
[i] TMP_103 cleared
clearing ir...?
TMP_104(uint256) = HIGH_LEVEL_CALL, dest:TMP_103(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
has variable
[i] TMP_104 cleared
clearing ir...?
collateralShareInStrategy_4(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_3', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
_tokenInStrategy_2(uint256) := TMP_104(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
TMP_103 = CONVERT _strategy_1 to IYield
Function name: _depositCollateralFromSavingsAccount

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_103 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_104(uint256) = HIGH_LEVEL_CALL, dest:TMP_103(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
Function name: _depositCollateralFromSavingsAccount
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_104
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_collateralAsset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_104

Name: TMP_104 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_4(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_3', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_104(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_104 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
has variable
[i] _tokensToTransfer cleared
typecheckig node...
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_105(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
has variable
[i] TMP_105 cleared
clearing ir...?
TMP_106(bool) = TMP_105 >= _amount_1
has variable
[i] TMP_106 cleared
clearing ir...?
CONDITION TMP_106
typecheckig node...
TMP_105(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: add

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_105(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
XXXXX
TMP_106(bool) = TMP_105 >= _amount_1
Function name: _depositCollateralFromSavingsAccount
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_106

Name: TMP_106 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_106
Condition...
Conidtion: 
TMP_106
TMP_106
clearning node...
clearing ir...?
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
has variable
[i] _tokensToTransfer cleared
typecheckig node...
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_108(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
has variable
[i] TMP_108 cleared
clearing ir...?
_activeAmount_2(uint256) := TMP_108(uint256)
has variable
[i] _activeAmount cleared
typecheckig node...
TMP_108(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: add

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_108

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_108(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
XXXXX
_activeAmount_2(uint256) := TMP_108(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_107(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
has variable
[i] TMP_107 cleared
clearing ir...?
_tokensToTransfer_2(uint256) := TMP_107(uint256)
has variable
[i] _tokensToTransfer cleared
typecheckig node...
TMP_107(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: sub
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_107

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_107(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_109 = CONVERT this to address
has variable
[i] TMP_109 cleared
clearing ir...?
TMP_110(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_collateralAsset_1', '_strategy_1', '_sender_1', 'TMP_109']  
has variable
[i] TMP_110 cleared
clearing ir...?
collateralShareInStrategy_5(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_4', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
typecheckig node...
TMP_109 = CONVERT this to address
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_109

Name: TMP_109 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_110(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_collateralAsset_1', '_strategy_1', '_sender_1', 'TMP_109']  
Function name: _depositCollateralFromSavingsAccount
High Call: transferFrom
func name:transferFrom
other func name:transferFrom
TMP_110
hlc contract name: SAVE func_name: transferFrom
wfc len: 0
COPIED
[i]Type for TMP_110

Name: TMP_110 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_5(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_4', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_61(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
has variable
clearing ir...?
REF_62(uint256) -> REF_61[_strategy_1]
has variable
clearing ir...?
REF_63(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
has variable
clearing ir...?
REF_64(uint256) -> REF_63[_strategy_1]
has variable
clearing ir...?
TMP_111(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_liquidityShares_1', '_tokensToTransfer_3'] 
has variable
[i] TMP_111 cleared
clearing ir...?
TMP_112(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_111', '_tokenInStrategy_2'] 
has variable
[i] TMP_112 cleared
clearing ir...?
TMP_113(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_64', 'TMP_112'] 
has variable
[i] TMP_113 cleared
clearing ir...?
collateralShareInStrategy_6(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_5'])
has variable
clearing ir...?
REF_62 (->collateralShareInStrategy_6) := TMP_113(uint256)
has variable
typecheckig node...
REF_61(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_61

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_62(uint256) -> REF_61[_strategy_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_62

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_63(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_63

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_64(uint256) -> REF_63[_strategy_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_64

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_111(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_liquidityShares_1', '_tokensToTransfer_3'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: mul
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_111 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_111

Name: TMP_111 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_112(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_111', '_tokenInStrategy_2'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: div
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_18 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_112

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_113(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_64', 'TMP_112'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: add

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_113

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_6(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_5'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_62 (->collateralShareInStrategy_6) := TMP_113(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_62

Name: REF_62 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_114(bool) = _amount_1 == _activeAmount_2
has variable
[i] TMP_114 cleared
clearing ir...?
CONDITION TMP_114
typecheckig node...
TMP_114(bool) = _amount_1 == _activeAmount_2
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_114

Name: TMP_114 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_114
Condition...
Conidtion: 
TMP_114
TMP_114
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_115(uint256) := _index_2(uint256)
has variable
[i] TMP_115 cleared
clearing ir...?
_index_3(uint256) = _index_2 + 1
has variable
[i] _index cleared
typecheckig node...
TMP_115(uint256) := _index_2(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_115

Name: TMP_115 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_index_3(uint256) = _index_2 + 1
Function name: _depositCollateralFromSavingsAccount
val: 1

Name: _index Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "_depositCollateralFromSavingsAccount":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _id

Name: _id Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['_amount_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _amount

Name: _amount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_sender_1(address) := ϕ(['msg.sender'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _sender

Name: _sender Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: _sender
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_1(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_7(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
savingsAccount_2(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_2(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_49(CreditLine.CreditLineConstants) -> creditLineConstants_7[_id_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_49

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_50(address) -> REF_49.collateralAsset
Function name: _depositCollateralFromSavingsAccount
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_50

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_50(address)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: _collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_94 = CONVERT strategyRegistry_2 to IStrategyRegistry
Function name: _depositCollateralFromSavingsAccount

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_94 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_95(address[]) = HIGH_LEVEL_CALL, dest:TMP_94(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _depositCollateralFromSavingsAccount
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_95
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_95

Name: TMP_95 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_2(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_1', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_3(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_2', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_3(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_2', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_95(address[])
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_95 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_96 = CONVERT savingsAccount_3 to ISavingsAccount
Function name: _depositCollateralFromSavingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_96

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_savingsAccount_1(ISavingsAccount) := TMP_96(ISavingsAccount)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: _savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _savingsAccount

Name: _savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_index_1(uint256) := 0(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_52 -> LENGTH _strategyList_1
[i]Type for REF_52

Name: REF_52 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_97(bool) = _index_2 < REF_52
Function name: _depositCollateralFromSavingsAccount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_97 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_97(bool) = _index_2 < REF_52
XXXXX
CONDITION TMP_97
Condition...
Conidtion: 
TMP_97
TMP_97
typecheckig node...
REF_53(address) -> _strategyList_1[_index_2]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _depositCollateralFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_53

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
_strategy_1(address) := REF_53(address)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategy

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_116(None) = SOLIDITY_CALL revert(string)(CreditLine::_depositCollateralFromSavingsAccount - Insufficient balance)
[i]Type for TMP_116

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_98(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_sender_1', '_collateralAsset_1', '_strategy_1']  
Function name: _depositCollateralFromSavingsAccount
High Call: balanceInShares
func name:balanceInShares
other func name:balanceInShares
TMP_98
hlc contract name: SAVE func_name: balanceInShares
wfc len: 0
COPIED
[i]Type for TMP_98

Name: TMP_98 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_3(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_2', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := TMP_98(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_98 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_99(bool) = _liquidityShares_1 == 0
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_99

Name: TMP_99 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_55(address) -> _strategyList_1[_index_2]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _depositCollateralFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_55

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_100 = CONVERT 0 to address
Function name: _depositCollateralFromSavingsAccount
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_100

Name: TMP_100 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(bool) = REF_55 == TMP_100
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_101

Name: TMP_101 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(bool) = TMP_99 || TMP_101
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_102

Name: TMP_102 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_102
Condition...
Conidtion: 
TMP_102
TMP_102
typecheckig node...
typecheckig node...
typecheckig node...
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_103 = CONVERT _strategy_1 to IYield
Function name: _depositCollateralFromSavingsAccount

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_103 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_104(uint256) = HIGH_LEVEL_CALL, dest:TMP_103(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
Function name: _depositCollateralFromSavingsAccount
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_104
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_collateralAsset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_104

Name: TMP_104 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_4(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_3', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_104(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_104 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_105(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: add

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_106(bool) = TMP_105 >= _amount_1
Function name: _depositCollateralFromSavingsAccount
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_106

Name: TMP_106 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_106
Condition...
Conidtion: 
TMP_106
TMP_106
typecheckig node...
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_108(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: add

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_108

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_activeAmount_2(uint256) := TMP_108(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_107(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: sub
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_107

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_107(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_109 = CONVERT this to address
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_109

Name: TMP_109 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_110(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_collateralAsset_1', '_strategy_1', '_sender_1', 'TMP_109']  
Function name: _depositCollateralFromSavingsAccount
High Call: transferFrom
func name:transferFrom
other func name:transferFrom
TMP_110
hlc contract name: SAVE func_name: transferFrom
wfc len: 0
COPIED
[i]Type for TMP_110

Name: TMP_110 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_5(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_4', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_61(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_61

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_62(uint256) -> REF_61[_strategy_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_62

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_63(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_63

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_64(uint256) -> REF_63[_strategy_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_64

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_111(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_liquidityShares_1', '_tokensToTransfer_3'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: mul
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_111 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_111

Name: TMP_111 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_112(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_111', '_tokenInStrategy_2'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: div
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_19 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_112

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_113(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_64', 'TMP_112'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: add

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_113

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_6(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_5'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_62 (->collateralShareInStrategy_6) := TMP_113(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_62

Name: REF_62 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_114(bool) = _amount_1 == _activeAmount_2
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_114

Name: TMP_114 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_114
Condition...
Conidtion: 
TMP_114
TMP_114
typecheckig node...
typecheckig node...
TMP_115(uint256) := _index_2(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_115

Name: TMP_115 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_index_3(uint256) = _index_2 + 1
Function name: _depositCollateralFromSavingsAccount
val: 1

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 1 for function call "_depositCollateralFromSavingsAccount":
 New undefined nodes- 1
 Old undefined nodes- 3
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _id

Name: _id Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['_amount_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _amount

Name: _amount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_sender_1(address) := ϕ(['msg.sender'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _sender

Name: _sender Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: _sender
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_1(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_7(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
savingsAccount_2(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_2(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_49(CreditLine.CreditLineConstants) -> creditLineConstants_7[_id_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_49

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_50(address) -> REF_49.collateralAsset
Function name: _depositCollateralFromSavingsAccount
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_50

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_50(address)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: creditLineConstants.collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: _collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_94 = CONVERT strategyRegistry_2 to IStrategyRegistry
Function name: _depositCollateralFromSavingsAccount

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_94 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_94

Name: TMP_94 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_95(address[]) = HIGH_LEVEL_CALL, dest:TMP_94(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _depositCollateralFromSavingsAccount
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_95
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_95

Name: TMP_95 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_2(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_1', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_3(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_2', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_3(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_2', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_95(address[])
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_95 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_96 = CONVERT savingsAccount_3 to ISavingsAccount
Function name: _depositCollateralFromSavingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_96

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_savingsAccount_1(ISavingsAccount) := TMP_96(ISavingsAccount)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_96 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: _savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _savingsAccount

Name: _savingsAccount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_index_1(uint256) := 0(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_52 -> LENGTH _strategyList_1
[i]Type for REF_52

Name: REF_52 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_97(bool) = _index_2 < REF_52
Function name: _depositCollateralFromSavingsAccount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_97 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_97

Name: TMP_97 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_97(bool) = _index_2 < REF_52
XXXXX
CONDITION TMP_97
Condition...
Conidtion: 
TMP_97
TMP_97
typecheckig node...
REF_53(address) -> _strategyList_1[_index_2]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _depositCollateralFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_53

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
_strategy_1(address) := REF_53(address)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategy

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_116(None) = SOLIDITY_CALL revert(string)(CreditLine::_depositCollateralFromSavingsAccount - Insufficient balance)
[i]Type for TMP_116

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_98(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_sender_1', '_collateralAsset_1', '_strategy_1']  
Function name: _depositCollateralFromSavingsAccount
High Call: balanceInShares
func name:balanceInShares
other func name:balanceInShares
TMP_98
hlc contract name: SAVE func_name: balanceInShares
wfc len: 0
COPIED
[i]Type for TMP_98

Name: TMP_98 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_3(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_2', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := TMP_98(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_98 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_99(bool) = _liquidityShares_1 == 0
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_99

Name: TMP_99 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_55(address) -> _strategyList_1[_index_2]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _depositCollateralFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_55

Name: _strategyList Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_100 = CONVERT 0 to address
Function name: _depositCollateralFromSavingsAccount
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_100 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_100

Name: TMP_100 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_101(bool) = REF_55 == TMP_100
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_101

Name: TMP_101 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_102(bool) = TMP_99 || TMP_101
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_102

Name: TMP_102 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_102
Condition...
Conidtion: 
TMP_102
TMP_102
typecheckig node...
typecheckig node...
typecheckig node...
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: _liquidityShares Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_103 = CONVERT _strategy_1 to IYield
Function name: _depositCollateralFromSavingsAccount

Name: _strategy Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_103 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_103

Name: TMP_103 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_104(uint256) = HIGH_LEVEL_CALL, dest:TMP_103(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
Function name: _depositCollateralFromSavingsAccount
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_104
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_collateralAsset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_104

Name: TMP_104 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_4(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_3', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_104(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_104 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: _tokenInStrategy Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_105(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: add

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_105

Name: TMP_105 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_106(bool) = TMP_105 >= _amount_1
Function name: _depositCollateralFromSavingsAccount
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_106

Name: TMP_106 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_106
Condition...
Conidtion: 
TMP_106
TMP_106
typecheckig node...
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_108(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: add

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_108

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_activeAmount_2(uint256) := TMP_108(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_108 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_107(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: sub
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_107

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_107(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_107 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_109 = CONVERT this to address
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_109

Name: TMP_109 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_110(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_collateralAsset_1', '_strategy_1', '_sender_1', 'TMP_109']  
Function name: _depositCollateralFromSavingsAccount
High Call: transferFrom
func name:transferFrom
other func name:transferFrom
TMP_110
hlc contract name: SAVE func_name: transferFrom
wfc len: 0
COPIED
[i]Type for TMP_110

Name: TMP_110 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_5(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_4', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_61(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_61

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_62(uint256) -> REF_61[_strategy_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_62

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_63(mapping(address => uint256)) -> collateralShareInStrategy_5[_id_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_63

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_64(uint256) -> REF_63[_strategy_1]
Function name: _depositCollateralFromSavingsAccount
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_64

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_111(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_liquidityShares_1', '_tokensToTransfer_3'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: mul
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_111 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_111

Name: TMP_111 Function: _depositCollateralFromSavingsAccount
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_112(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_111', '_tokenInStrategy_2'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: div
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_20 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_112

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_113(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_64', 'TMP_112'] 
Function name: _depositCollateralFromSavingsAccount
Library Call: add

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_112 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_113

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_6(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_5'])
Function name: _depositCollateralFromSavingsAccount
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_62 (->collateralShareInStrategy_6) := TMP_113(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: TMP_113 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_62 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_62

Name: REF_62 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_114(bool) = _amount_1 == _activeAmount_2
Function name: _depositCollateralFromSavingsAccount
[i]Type for TMP_114

Name: TMP_114 Function: _depositCollateralFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_114
Condition...
Conidtion: 
TMP_114
TMP_114
typecheckig node...
typecheckig node...
TMP_115(uint256) := _index_2(uint256)
Function name: _depositCollateralFromSavingsAccount
asgn

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_115 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_115

Name: TMP_115 Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_index_3(uint256) = _index_2 + 1
Function name: _depositCollateralFromSavingsAccount
val: 1

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for _index

Name: _index Function: _depositCollateralFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 2 for function call "_depositCollateralFromSavingsAccount":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _depositCollateralFromSavingsAccount
done.
This IR caused addback:
INTERNAL_CALL, CreditLine._depositCollateralFromSavingsAccount(uint256,uint256,address)(_id_1,_amount_1,msg.sender)
XXXXX
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_146 = CONVERT savingsAccount_4 to ISavingsAccount
has variable
[i] TMP_146 cleared
clearing ir...?
_savingsAccount_1(ISavingsAccount) := TMP_146(ISavingsAccount)
has variable
[i] _savingsAccount cleared
typecheckig node...
TMP_146 = CONVERT savingsAccount_4 to ISavingsAccount
Function name: _depositCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_146 Function: _depositCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_146

Name: TMP_146 Function: _depositCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_savingsAccount_1(ISavingsAccount) := TMP_146(ISavingsAccount)
Function name: _depositCollateral
asgn

Name: TMP_146 Function: _depositCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: _savingsAccount Function: _depositCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _savingsAccount

Name: _savingsAccount Function: _depositCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_147 = CONVERT 0 to address
has variable
[i] TMP_147 cleared
clearing ir...?
TMP_148(bool) = _collateralAsset_1 == TMP_147
has variable
[i] TMP_148 cleared
clearing ir...?
CONDITION TMP_148
typecheckig node...
TMP_147 = CONVERT 0 to address
Function name: _depositCollateral
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_147 Function: _depositCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_147

Name: TMP_147 Function: _depositCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_148(bool) = _collateralAsset_1 == TMP_147
Function name: _depositCollateral
[i]Type for TMP_148

Name: TMP_148 Function: _depositCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_148
Condition...
Conidtion: 
TMP_148
TMP_148
clearning node...
clearing ir...?
TMP_151 = CONVERT _collateralAsset_1 to IERC20
has variable
[i] TMP_151 cleared
clearing ir...?
TMP_152 = CONVERT this to address
has variable
[i] TMP_152 cleared
clearing ir...?
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_151', 'msg.sender', 'TMP_152', '_amount_1'] 
typecheckig node...
TMP_151 = CONVERT _collateralAsset_1 to IERC20
Function name: _depositCollateral

Name: _collateralAsset Function: _depositCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: TMP_151 Function: _depositCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_151

Name: TMP_151 Function: _depositCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
TMP_152 = CONVERT this to address
Function name: _depositCollateral
[i]Type for TMP_152

Name: TMP_152 Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_151', 'msg.sender', 'TMP_152', '_amount_1'] 
Library Call: safeTransferFrom
done.
clearning node...
clearing ir...?
TMP_149(bool) = msg.value == _amount_1
has variable
[i] TMP_149 cleared
clearing ir...?
TMP_150(None) = SOLIDITY_CALL require(bool,string)(TMP_149,CreditLine::_depositCollateral - value to transfer doesn't match argument)
typecheckig node...
TMP_149(bool) = msg.value == _amount_1
Function name: _depositCollateral
[i]Type for TMP_149

Name: TMP_149 Function: _depositCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_150(None) = SOLIDITY_CALL require(bool,string)(TMP_149,CreditLine::_depositCollateral - value to transfer doesn't match argument)
[i]Type for TMP_150

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_154 = CONVERT _collateralAsset_1 to IERC20
has variable
[i] TMP_154 cleared
clearing ir...?
TMP_155(bool) = HIGH_LEVEL_CALL, dest:TMP_154(IERC20), function:approve, arguments:['_strategy_1', '_amount_1']  
has variable
[i] TMP_155 cleared
clearing ir...?
collateralShareInStrategy_8(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_7', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
typecheckig node...
TMP_154 = CONVERT _collateralAsset_1 to IERC20
Function name: _depositCollateral

Name: _collateralAsset Function: _depositCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: TMP_154 Function: _depositCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_154

Name: TMP_154 Function: _depositCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
TMP_155(bool) = HIGH_LEVEL_CALL, dest:TMP_154(IERC20), function:approve, arguments:['_strategy_1', '_amount_1']  
Function name: _depositCollateral
High Call: approve
func name:approve
other func name:approve
TMP_155
[i]Type for TMP_155

Name: TMP_155 Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_8(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_7', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_156 = CONVERT this to address
has variable
[i] TMP_156 cleared
clearing ir...?
TMP_157(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_collateralAsset_1', '_strategy_1', 'TMP_156'] value:msg.value 
has variable
[i] TMP_157 cleared
clearing ir...?
collateralShareInStrategy_9(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_8', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
_sharesReceived_1(uint256) := TMP_157(uint256)
has variable
[i] _sharesReceived cleared
typecheckig node...
TMP_156 = CONVERT this to address
Function name: _depositCollateral
[i]Type for TMP_156

Name: TMP_156 Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_157(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_collateralAsset_1', '_strategy_1', 'TMP_156'] value:msg.value 
Function name: _depositCollateral
High Call: deposit
func name:deposit
other func name:deposit
TMP_157
hlc contract name: SAVE func_name: deposit
wfc len: 0
COPIED
[i]Type for TMP_157

Name: TMP_157 Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_9(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_8', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _depositCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_sharesReceived_1(uint256) := TMP_157(uint256)
Function name: _depositCollateral
asgn

Name: TMP_157 Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _sharesReceived Function: _depositCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _sharesReceived

Name: _sharesReceived Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_112(mapping(address => uint256)) -> collateralShareInStrategy_9[_id_1]
has variable
clearing ir...?
REF_113(uint256) -> REF_112[_strategy_1]
has variable
clearing ir...?
REF_114(mapping(address => uint256)) -> collateralShareInStrategy_9[_id_1]
has variable
clearing ir...?
REF_115(uint256) -> REF_114[_strategy_1]
has variable
clearing ir...?
TMP_158(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_115', '_sharesReceived_1'] 
has variable
[i] TMP_158 cleared
clearing ir...?
collateralShareInStrategy_10(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_9'])
has variable
clearing ir...?
REF_113 (->collateralShareInStrategy_10) := TMP_158(uint256)
has variable
typecheckig node...
REF_112(mapping(address => uint256)) -> collateralShareInStrategy_9[_id_1]
Function name: _depositCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_112

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_113(uint256) -> REF_112[_strategy_1]
Function name: _depositCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_113

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_114(mapping(address => uint256)) -> collateralShareInStrategy_9[_id_1]
Function name: _depositCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_114

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_115(uint256) -> REF_114[_strategy_1]
Function name: _depositCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_115

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_158(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_115', '_sharesReceived_1'] 
Function name: _depositCollateral
Library Call: add

Name: TMP_158 Function: _depositCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _sharesReceived Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_158 Function: _depositCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_158

Name: TMP_158 Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_10(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_9'])
Function name: _depositCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_113 (->collateralShareInStrategy_10) := TMP_158(uint256)
Function name: _depositCollateral
asgn

Name: TMP_158 Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_113 Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_113

Name: REF_113 Function: _depositCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_depositCollateral":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _depositCollateral
done.
clearning node...
clearing ir...?
Emit CollateralDeposited(_id_1,_amount_1,_strategy_1)
typecheckig node...
Emit CollateralDeposited(_id_1,_amount_1,_strategy_1)
WORKLIST iteration 0 for function call "depositCollateral":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: depositCollateral
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _depositCollateral
Function _depositCollateral not marked
Mark Iterations TRUE, proceeding anyway
Function name: _depositCollateral
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _withdrawBorrowAmount
Function _withdrawBorrowAmount not marked
Mark Iterations TRUE, proceeding anyway
Function name: _withdrawBorrowAmount
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: borrow
Function name: borrow
Function Visibility (test): external
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_amount
Finding type for _amount...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _amount Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
creditLineVariables_16(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
has variable
clearing ir...?
creditLineConstants_20(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
protocolFeeFraction_2(uint256) := ϕ(['protocolFeeFraction_0', 'protocolFeeFraction_9', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
has variable
clearing ir...?
protocolFeeCollector_2(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_0', 'protocolFeeCollector_12'])
has variable
typecheckig node...
creditLineVariables_16(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: borrow
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_20(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: borrow
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
protocolFeeFraction_2(uint256) := ϕ(['protocolFeeFraction_0', 'protocolFeeFraction_9', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
Function name: borrow
Phi
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeCollector_2(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_0', 'protocolFeeCollector_12'])
Function name: borrow
Phi
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
MODIFIER_CALL, CreditLine.onlyCreditLineBorrower(uint256)(_id_1)
clearing ir...?
creditLineConstants_22(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_47'])
has variable
typecheckig node...
MODIFIER_CALL, CreditLine.onlyCreditLineBorrower(uint256)(_id_1)
Internal call...
onlyCreditLineBorrower
_id
Function: onlyCreditLineBorrower
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: onlyCreditLineBorrower
Function Visibility: internal
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
has variable
[i] _id cleared
clearing ir...?
creditLineConstants_47(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
Function name: onlyCreditLineBorrower
Phi
[i]Type for _id

Name: _id Function: onlyCreditLineBorrower
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_47(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: onlyCreditLineBorrower
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_318(CreditLine.CreditLineConstants) -> creditLineConstants_47[_id_1]
has variable
clearing ir...?
REF_319(address) -> REF_318.borrower
has variable
clearing ir...?
TMP_390(bool) = REF_319 == msg.sender
has variable
[i] TMP_390 cleared
clearing ir...?
TMP_391(None) = SOLIDITY_CALL require(bool,string)(TMP_390,Only credit line Borrower can access)
typecheckig node...
REF_318(CreditLine.CreditLineConstants) -> creditLineConstants_47[_id_1]
Function name: onlyCreditLineBorrower
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_318

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_319(address) -> REF_318.borrower
Function name: onlyCreditLineBorrower
MEMBER
creditLineConstants
borrower
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrower Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_319

Name: creditLineConstants.borrower Function: onlyCreditLineBorrower
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.borrower Function: onlyCreditLineBorrower
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrower Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_390(bool) = REF_319 == msg.sender
Function name: onlyCreditLineBorrower
[i]Type for TMP_390

Name: TMP_390 Function: onlyCreditLineBorrower
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_391(None) = SOLIDITY_CALL require(bool,string)(TMP_390,Only credit line Borrower can access)
[i]Type for TMP_391

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "onlyCreditLineBorrower":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: onlyCreditLineBorrower
done.
creditLineConstants_22(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_47'])
Function name: borrow
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_129(CreditLine.CreditLineVariables) -> creditLineVariables_18[_id_1]
has variable
clearing ir...?
REF_130(CreditLine.CreditLineStatus) -> REF_129.status
has variable
clearing ir...?
REF_131(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
has variable
clearing ir...?
TMP_179(bool) = REF_130 == REF_131
has variable
[i] TMP_179 cleared
clearing ir...?
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,CreditLine: The credit line is not yet active.)
typecheckig node...
REF_129(CreditLine.CreditLineVariables) -> creditLineVariables_18[_id_1]
Function name: borrow
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
creditLineVariables
[i]Type for REF_129

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_129(CreditLine.CreditLineVariables) -> creditLineVariables_18[_id_1]
XXXXX
REF_130(CreditLine.CreditLineStatus) -> REF_129.status
Function name: borrow
MEMBER
REF_129
status
borrow
REF_129 Fields:
^^^
[i]Type for REF_130

Name: REF_129.status Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_129.status Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_131(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: borrow
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_131

Name: CreditLineStatus.ACTIVE Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_179(bool) = REF_130 == REF_131
Function name: borrow
[i]Type for TMP_179

Name: TMP_179 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,CreditLine: The credit line is not yet active.)
[i]Type for TMP_180

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_181(uint256) = INTERNAL_CALL, CreditLine.calculateBorrowableAmount(uint256)(_id_1)
has variable
[i] TMP_181 cleared
clearing ir...?
creditLineVariables_19(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_5'])
has variable
clearing ir...?
creditLineConstants_23(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_6'])
has variable
clearing ir...?
_borrowableAmount_1(uint256) := TMP_181(uint256)
has variable
[i] _borrowableAmount cleared
typecheckig node...
TMP_181(uint256) = INTERNAL_CALL, CreditLine.calculateBorrowableAmount(uint256)(_id_1)
Function name: borrow
Internal call...
calculateBorrowableAmount
_id
Function: calculateBorrowableAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
[i]Type for TMP_181

Name: TMP_181 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_19(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_5'])
Function name: borrow
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_23(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_6'])
Function name: borrow
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_borrowableAmount_1(uint256) := TMP_181(uint256)
Function name: borrow
asgn

Name: TMP_181 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _borrowableAmount Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowableAmount

Name: _borrowableAmount Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_borrowableAmount_1(uint256) := TMP_181(uint256)
XXXXX
clearning node...
clearing ir...?
TMP_182(bool) = _amount_1 <= _borrowableAmount_1
has variable
[i] TMP_182 cleared
clearing ir...?
TMP_183(None) = SOLIDITY_CALL require(bool,string)(TMP_182,CreditLine::borrow - The current collateral ratio doesn't allow to withdraw the amount)
typecheckig node...
TMP_182(bool) = _amount_1 <= _borrowableAmount_1
Function name: borrow
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_182 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_182

Name: TMP_182 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_182(bool) = _amount_1 <= _borrowableAmount_1
XXXXX
TMP_183(None) = SOLIDITY_CALL require(bool,string)(TMP_182,CreditLine::borrow - The current collateral ratio doesn't allow to withdraw the amount)
[i]Type for TMP_183

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_132(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
has variable
clearing ir...?
REF_133(address) -> REF_132.borrowAsset
has variable
clearing ir...?
_borrowAsset_1(address) := REF_133(address)
has variable
[i] _borrowAsset cleared
typecheckig node...
REF_132(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
Function name: borrow
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_132

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_133(address) -> REF_132.borrowAsset
Function name: borrow
MEMBER
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_133

Name: creditLineConstants.borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
_borrowAsset_1(address) := REF_133(address)
Function name: borrow
asgn

Name: creditLineConstants.borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: _borrowAsset Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowAsset

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_134(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
has variable
clearing ir...?
REF_135(address) -> REF_134.lender
has variable
clearing ir...?
_lender_1(address) := REF_135(address)
has variable
[i] _lender cleared
typecheckig node...
REF_134(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
Function name: borrow
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_134

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_135(address) -> REF_134.lender
Function name: borrow
MEMBER
creditLineConstants
lender
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_135

Name: creditLineConstants.lender Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.lender Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_lender_1(address) := REF_135(address)
Function name: borrow
asgn

Name: creditLineConstants.lender Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _lender Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _lender

Name: _lender Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine.updateinterestAccruedTillLastPrincipalUpdate(uint256)(_id_1)
clearing ir...?
creditLineVariables_20(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_8'])
has variable
typecheckig node...
INTERNAL_CALL, CreditLine.updateinterestAccruedTillLastPrincipalUpdate(uint256)(_id_1)
Internal call...
updateinterestAccruedTillLastPrincipalUpdate
_id
Function: updateinterestAccruedTillLastPrincipalUpdate
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: updateinterestAccruedTillLastPrincipalUpdate
Function Visibility: internal
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1'])
has variable
[i] _id cleared
clearing ir...?
creditLineVariables_6(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: updateinterestAccruedTillLastPrincipalUpdate
Phi
[i]Type for _id

Name: _id Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_6(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: updateinterestAccruedTillLastPrincipalUpdate
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_41(CreditLine.CreditLineVariables) -> creditLineVariables_6[_id_1]
has variable
clearing ir...?
REF_42(CreditLine.CreditLineStatus) -> REF_41.status
has variable
clearing ir...?
REF_43(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
has variable
clearing ir...?
TMP_90(bool) = REF_42 == REF_43
has variable
[i] TMP_90 cleared
clearing ir...?
TMP_91(None) = SOLIDITY_CALL require(bool,string)(TMP_90,CreditLine: The credit line is not yet active.)
typecheckig node...
REF_41(CreditLine.CreditLineVariables) -> creditLineVariables_6[_id_1]
Function name: updateinterestAccruedTillLastPrincipalUpdate
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_41

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_42(CreditLine.CreditLineStatus) -> REF_41.status
Function name: updateinterestAccruedTillLastPrincipalUpdate
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_42

Name: creditLineVariables.status Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_43(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: updateinterestAccruedTillLastPrincipalUpdate
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_43

Name: CreditLineStatus.ACTIVE Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_90(bool) = REF_42 == REF_43
Function name: updateinterestAccruedTillLastPrincipalUpdate
[i]Type for TMP_90

Name: TMP_90 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_91(None) = SOLIDITY_CALL require(bool,string)(TMP_90,CreditLine: The credit line is not yet active.)
[i]Type for TMP_91

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_92(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
has variable
[i] TMP_92 cleared
clearing ir...?
creditLineVariables_7(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
has variable
clearing ir...?
_interestAccrued_1(uint256) := TMP_92(uint256)
has variable
[i] _interestAccrued cleared
typecheckig node...
TMP_92(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
Function name: updateinterestAccruedTillLastPrincipalUpdate
Internal call...
calculateInterestAccrued
_id
Function: calculateInterestAccrued
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
[i]Type for TMP_92

Name: TMP_92 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_7(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Function name: updateinterestAccruedTillLastPrincipalUpdate
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
_interestAccrued_1(uint256) := TMP_92(uint256)
Function name: updateinterestAccruedTillLastPrincipalUpdate
asgn

Name: TMP_92 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _interestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interestAccrued

Name: _interestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_interestAccrued_1(uint256) := TMP_92(uint256)
XXXXX
clearning node...
clearing ir...?
REF_44(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
has variable
clearing ir...?
REF_45(uint256) -> REF_44.interestAccruedTillLastPrincipalUpdate
has variable
clearing ir...?
TMP_93(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_45', '_interestAccrued_1'] 
has variable
[i] TMP_93 cleared
clearing ir...?
_newInterestAccrued_1(uint256) := TMP_93(uint256)
has variable
[i] _newInterestAccrued cleared
typecheckig node...
REF_44(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
Function name: updateinterestAccruedTillLastPrincipalUpdate
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_44

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_45(uint256) -> REF_44.interestAccruedTillLastPrincipalUpdate
Function name: updateinterestAccruedTillLastPrincipalUpdate
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_45

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_93(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_45', '_interestAccrued_1'] 
Function name: updateinterestAccruedTillLastPrincipalUpdate
Library Call: add

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_93

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_93(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_45', '_interestAccrued_1'] 
XXXXX
_newInterestAccrued_1(uint256) := TMP_93(uint256)
Function name: updateinterestAccruedTillLastPrincipalUpdate
asgn

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _newInterestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _newInterestAccrued

Name: _newInterestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_47(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
has variable
clearing ir...?
REF_48(uint256) -> REF_47.interestAccruedTillLastPrincipalUpdate
has variable
clearing ir...?
creditLineVariables_8(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_7'])
has variable
clearing ir...?
REF_48 (->creditLineVariables_8) := _newInterestAccrued_1(uint256)
has variable
typecheckig node...
REF_47(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
Function name: updateinterestAccruedTillLastPrincipalUpdate
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_47

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_48(uint256) -> REF_47.interestAccruedTillLastPrincipalUpdate
Function name: updateinterestAccruedTillLastPrincipalUpdate
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_48

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_8(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_7'])
Function name: updateinterestAccruedTillLastPrincipalUpdate
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_48 (->creditLineVariables_8) := _newInterestAccrued_1(uint256)
Function name: updateinterestAccruedTillLastPrincipalUpdate
asgn

Name: _newInterestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_48 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_48

Name: REF_48 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_48 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "updateinterestAccruedTillLastPrincipalUpdate":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: updateinterestAccruedTillLastPrincipalUpdate
Phi
[i]Type for _id

Name: _id Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_6(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: updateinterestAccruedTillLastPrincipalUpdate
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
typecheckig node...
REF_41(CreditLine.CreditLineVariables) -> creditLineVariables_6[_id_1]
Function name: updateinterestAccruedTillLastPrincipalUpdate
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_41

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_42(CreditLine.CreditLineStatus) -> REF_41.status
Function name: updateinterestAccruedTillLastPrincipalUpdate
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_42

Name: creditLineVariables.status Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_43(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: updateinterestAccruedTillLastPrincipalUpdate
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_43

Name: CreditLineStatus.ACTIVE Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_90(bool) = REF_42 == REF_43
Function name: updateinterestAccruedTillLastPrincipalUpdate
[i]Type for TMP_90

Name: TMP_90 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_91(None) = SOLIDITY_CALL require(bool,string)(TMP_90,CreditLine: The credit line is not yet active.)
[i]Type for TMP_91

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_92(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
Function name: updateinterestAccruedTillLastPrincipalUpdate
Internal call...
calculateInterestAccrued
_id
Function: calculateInterestAccrued
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
[i]Type for TMP_92

Name: TMP_92 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_7(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Function name: updateinterestAccruedTillLastPrincipalUpdate
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
_interestAccrued_1(uint256) := TMP_92(uint256)
Function name: updateinterestAccruedTillLastPrincipalUpdate
asgn

Name: TMP_92 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _interestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interestAccrued

Name: _interestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_interestAccrued_1(uint256) := TMP_92(uint256)
XXXXX
typecheckig node...
REF_44(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
Function name: updateinterestAccruedTillLastPrincipalUpdate
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_44

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_45(uint256) -> REF_44.interestAccruedTillLastPrincipalUpdate
Function name: updateinterestAccruedTillLastPrincipalUpdate
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_45

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_93(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_45', '_interestAccrued_1'] 
Function name: updateinterestAccruedTillLastPrincipalUpdate
Library Call: add

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_93

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_93(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_45', '_interestAccrued_1'] 
XXXXX
_newInterestAccrued_1(uint256) := TMP_93(uint256)
Function name: updateinterestAccruedTillLastPrincipalUpdate
asgn

Name: TMP_93 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _newInterestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _newInterestAccrued

Name: _newInterestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_47(CreditLine.CreditLineVariables) -> creditLineVariables_7[_id_1]
Function name: updateinterestAccruedTillLastPrincipalUpdate
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_47

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_48(uint256) -> REF_47.interestAccruedTillLastPrincipalUpdate
Function name: updateinterestAccruedTillLastPrincipalUpdate
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_48

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_8(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_7'])
Function name: updateinterestAccruedTillLastPrincipalUpdate
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_48 (->creditLineVariables_8) := _newInterestAccrued_1(uint256)
Function name: updateinterestAccruedTillLastPrincipalUpdate
asgn

Name: _newInterestAccrued Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_48 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_48

Name: REF_48 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_48 Function: updateinterestAccruedTillLastPrincipalUpdate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "updateinterestAccruedTillLastPrincipalUpdate":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: updateinterestAccruedTillLastPrincipalUpdate
done.
This IR caused addback:
INTERNAL_CALL, CreditLine.updateinterestAccruedTillLastPrincipalUpdate(uint256)(_id_1)
XXXXX
creditLineVariables_20(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_8'])
Function name: borrow
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_136(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
has variable
clearing ir...?
REF_137(uint256) -> REF_136.principal
has variable
clearing ir...?
REF_138(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
has variable
clearing ir...?
REF_139(uint256) -> REF_138.principal
has variable
clearing ir...?
TMP_185(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_139', '_amount_1'] 
has variable
[i] TMP_185 cleared
clearing ir...?
creditLineVariables_21(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_20'])
has variable
clearing ir...?
REF_137 (->creditLineVariables_21) := TMP_185(uint256)
has variable
typecheckig node...
REF_136(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
Function name: borrow
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_136

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_137(uint256) -> REF_136.principal
Function name: borrow
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_137

Name: creditLineVariables.principal Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_138(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
Function name: borrow
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_138

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_139(uint256) -> REF_138.principal
Function name: borrow
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_139

Name: creditLineVariables.principal Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_185(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_139', '_amount_1'] 
Function name: borrow
Library Call: add

Name: TMP_185 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_185 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_185

Name: TMP_185 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_21(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_20'])
Function name: borrow
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_137 (->creditLineVariables_21) := TMP_185(uint256)
Function name: borrow
asgn

Name: TMP_185 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_137 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_137

Name: REF_137 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_137 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_141(CreditLine.CreditLineVariables) -> creditLineVariables_21[_id_1]
has variable
clearing ir...?
REF_142(uint256) -> REF_141.lastPrincipalUpdateTime
has variable
clearing ir...?
creditLineVariables_22(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_21'])
has variable
clearing ir...?
REF_142 (->creditLineVariables_22) := block.timestamp(uint256)
has variable
typecheckig node...
REF_141(CreditLine.CreditLineVariables) -> creditLineVariables_21[_id_1]
Function name: borrow
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_141

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_142(uint256) -> REF_141.lastPrincipalUpdateTime
Function name: borrow
MEMBER
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: lastPrincipalUpdateTime Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_142

Name: creditLineVariables.lastPrincipalUpdateTime Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.lastPrincipalUpdateTime Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastPrincipalUpdateTime Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_22(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_21'])
Function name: borrow
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_142 (->creditLineVariables_22) := block.timestamp(uint256)
Function name: borrow
asgn
block.timestamp

Name: REF_142 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_142

Name: REF_142 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_142 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastPrincipalUpdateTime Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_142 (->creditLineVariables_22) := block.timestamp(uint256)
XXXXX
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_186 = CONVERT 0 to address
has variable
[i] TMP_186 cleared
clearing ir...?
TMP_187(bool) = _borrowAsset_1 != TMP_186
has variable
[i] TMP_187 cleared
clearing ir...?
CONDITION TMP_187
typecheckig node...
TMP_186 = CONVERT 0 to address
Function name: borrow
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_186 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_186

Name: TMP_186 Function: borrow
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_187(bool) = _borrowAsset_1 != TMP_186
Function name: borrow
[i]Type for TMP_187

Name: TMP_187 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_187
Condition...
Conidtion: 
TMP_187
TMP_187
clearning node...
clearing ir...?
TMP_196 = CONVERT _borrowAsset_1 to IERC20
has variable
[i] TMP_196 cleared
clearing ir...?
TMP_197 = CONVERT this to address
has variable
[i] TMP_197 cleared
clearing ir...?
TMP_198(uint256) = HIGH_LEVEL_CALL, dest:TMP_196(IERC20), function:balanceOf, arguments:['TMP_197']  
has variable
[i] TMP_198 cleared
clearing ir...?
protocolFeeFraction_10(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
has variable
clearing ir...?
protocolFeeCollector_10(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12'])
has variable
clearing ir...?
_balanceBefore_scope_0_1(uint256) := TMP_198(uint256)
has variable
[i] _balanceBefore_scope_0 cleared
typecheckig node...
TMP_196 = CONVERT _borrowAsset_1 to IERC20
Function name: borrow

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_196 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_196

Name: TMP_196 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TMP_197 = CONVERT this to address
Function name: borrow
[i]Type for TMP_197

Name: TMP_197 Function: borrow
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_198(uint256) = HIGH_LEVEL_CALL, dest:TMP_196(IERC20), function:balanceOf, arguments:['TMP_197']  
Function name: borrow
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_198
hlc contract name: BASSET func_name: balanceOf
wfc len: 0
COPIED
[i]Type for TMP_198

Name: TMP_198 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeFraction_10(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
Function name: borrow
Phi
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeCollector_10(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12'])
Function name: borrow
Phi
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_balanceBefore_scope_0_1(uint256) := TMP_198(uint256)
Function name: borrow
asgn

Name: TMP_198 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceBefore_scope_0 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _balanceBefore_scope_0

Name: _balanceBefore_scope_0 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_188 = CONVERT _borrowAsset_1 to IERC20
has variable
[i] TMP_188 cleared
clearing ir...?
TMP_189 = CONVERT this to address
has variable
[i] TMP_189 cleared
clearing ir...?
TMP_190(uint256) = HIGH_LEVEL_CALL, dest:TMP_188(IERC20), function:balanceOf, arguments:['TMP_189']  
has variable
[i] TMP_190 cleared
clearing ir...?
protocolFeeFraction_7(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_6', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
has variable
clearing ir...?
protocolFeeCollector_7(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12', 'protocolFeeCollector_6'])
has variable
clearing ir...?
_balanceBefore_1(uint256) := TMP_190(uint256)
has variable
[i] _balanceBefore cleared
typecheckig node...
TMP_188 = CONVERT _borrowAsset_1 to IERC20
Function name: borrow

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_188 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_188

Name: TMP_188 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TMP_189 = CONVERT this to address
Function name: borrow
[i]Type for TMP_189

Name: TMP_189 Function: borrow
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_190(uint256) = HIGH_LEVEL_CALL, dest:TMP_188(IERC20), function:balanceOf, arguments:['TMP_189']  
Function name: borrow
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_190
hlc contract name: BASSET func_name: balanceOf
wfc len: 0
COPIED
[i]Type for TMP_190

Name: TMP_190 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeFraction_7(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_6', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
Function name: borrow
Phi
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeCollector_7(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12', 'protocolFeeCollector_6'])
Function name: borrow
Phi
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_balanceBefore_1(uint256) := TMP_190(uint256)
Function name: borrow
asgn

Name: TMP_190 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceBefore Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _balanceBefore

Name: _balanceBefore Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._withdrawBorrowAmount(address,uint256,address)(_borrowAsset_1,_amount_1,_lender_1)
typecheckig node...
INTERNAL_CALL, CreditLine._withdrawBorrowAmount(address,uint256,address)(_borrowAsset_1,_amount_1,_lender_1)
Internal call...
_withdrawBorrowAmount
_borrowAsset
_amount
_lender
Function: _withdrawBorrowAmount
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[1], [-1], 0, 'BASSET', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _withdrawBorrowAmount
Function Visibility: internal
clearning node...
clearing ir...?
_asset_1(address) := ϕ(['_borrowAsset_1'])
has variable
[i] _asset cleared
clearing ir...?
_amountInTokens_1(uint256) := ϕ(['_amount_1'])
has variable
[i] _amountInTokens cleared
clearing ir...?
_lender_1(address) := ϕ(['_lender_1'])
has variable
[i] _lender cleared
clearing ir...?
savingsAccount_5(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
has variable
clearing ir...?
strategyRegistry_4(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
has variable
typecheckig node...
_asset_1(address) := ϕ(['_borrowAsset_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _asset

Name: _asset Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: u
LF: BASSET
Fields: 
Finance Type: undef
done.
_amountInTokens_1(uint256) := ϕ(['_amount_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _amountInTokens

Name: _amountInTokens Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_lender_1(address) := ϕ(['_lender_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _lender

Name: _lender Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: _lender
Fields: 
Finance Type: undef
done.
savingsAccount_5(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_4(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_159 = CONVERT strategyRegistry_4 to IStrategyRegistry
has variable
[i] TMP_159 cleared
clearing ir...?
TMP_160(address[]) = HIGH_LEVEL_CALL, dest:TMP_159(IStrategyRegistry), function:getStrategies, arguments:[]  
has variable
[i] TMP_160 cleared
clearing ir...?
savingsAccount_6(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_5', 'savingsAccount_6', 'savingsAccount_1'])
has variable
clearing ir...?
strategyRegistry_5(address) := ϕ(['strategyRegistry_4', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
has variable
clearing ir...?
_strategyList_1(address[]) := TMP_160(address[])
has variable
[i] _strategyList cleared
typecheckig node...
TMP_159 = CONVERT strategyRegistry_4 to IStrategyRegistry
Function name: _withdrawBorrowAmount

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_159 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_159

Name: TMP_159 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_160(address[]) = HIGH_LEVEL_CALL, dest:TMP_159(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _withdrawBorrowAmount
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_160
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_160

Name: TMP_160 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
savingsAccount_6(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_5', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_5(address) := ϕ(['strategyRegistry_4', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_160(address[])
Function name: _withdrawBorrowAmount
asgn

Name: TMP_160 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_161 = CONVERT savingsAccount_6 to ISavingsAccount
has variable
[i] TMP_161 cleared
clearing ir...?
_savingsAccount_1(ISavingsAccount) := TMP_161(ISavingsAccount)
has variable
[i] _savingsAccount cleared
typecheckig node...
TMP_161 = CONVERT savingsAccount_6 to ISavingsAccount
Function name: _withdrawBorrowAmount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_161 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_161

Name: TMP_161 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_savingsAccount_1(ISavingsAccount) := TMP_161(ISavingsAccount)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_161 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: _savingsAccount Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _savingsAccount

Name: _savingsAccount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_index_1(uint256) := 0(uint256)
has variable
[i] _index cleared
typecheckig node...
_index_1(uint256) := 0(uint256)
Function name: _withdrawBorrowAmount
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_index_2(uint256) := ϕ(['_index_1', '_index_3'])
has variable
[i] _index cleared
clearing ir...?
REF_118 -> LENGTH _strategyList_1
clearing ir...?
TMP_162(bool) = _index_2 < REF_118
has variable
[i] TMP_162 cleared
clearing ir...?
CONDITION TMP_162
typecheckig node...
_index_2(uint256) := ϕ(['_index_1', '_index_3'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_118 -> LENGTH _strategyList_1
[i]Type for REF_118

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_162(bool) = _index_2 < REF_118
Function name: _withdrawBorrowAmount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_162 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_162

Name: TMP_162 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_162(bool) = _index_2 < REF_118
XXXXX
CONDITION TMP_162
Condition...
Conidtion: 
TMP_162
TMP_162
clearning node...
clearing ir...?
REF_119(address) -> _strategyList_1[_index_2]
has variable
clearing ir...?
TMP_163 = CONVERT 0 to address
has variable
[i] TMP_163 cleared
clearing ir...?
TMP_164(bool) = REF_119 == TMP_163
has variable
[i] TMP_164 cleared
clearing ir...?
CONDITION TMP_164
typecheckig node...
REF_119(address) -> _strategyList_1[_index_2]
Function name: _withdrawBorrowAmount
INDEX

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _withdrawBorrowAmount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_119

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_163 = CONVERT 0 to address
Function name: _withdrawBorrowAmount
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_163 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_163

Name: TMP_163 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_164(bool) = REF_119 == TMP_163
Function name: _withdrawBorrowAmount
[i]Type for TMP_164

Name: TMP_164 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_164
Condition...
Conidtion: 
TMP_164
TMP_164
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_177(bool) = _activeAmount_0 == _amountInTokens_1
has variable
[i] TMP_177 cleared
clearing ir...?
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,insufficient balance)
typecheckig node...
TMP_177(bool) = _activeAmount_0 == _amountInTokens_1
Function name: _withdrawBorrowAmount
[i]Type for TMP_177

Name: TMP_177 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,insufficient balance)
[i]Type for TMP_178

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_121(address) -> _strategyList_1[_index_2]
has variable
clearing ir...?
TMP_165(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_lender_1', '_asset_1', 'REF_121']  
has variable
[i] TMP_165 cleared
clearing ir...?
_liquidityShares_1(uint256) := TMP_165(uint256)
has variable
[i] _liquidityShares cleared
typecheckig node...
REF_121(address) -> _strategyList_1[_index_2]
Function name: _withdrawBorrowAmount
INDEX

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _withdrawBorrowAmount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_121

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_165(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_lender_1', '_asset_1', 'REF_121']  
Function name: _withdrawBorrowAmount
High Call: balanceInShares
func name:balanceInShares
other func name:balanceInShares
TMP_165
hlc contract name: SAVE func_name: balanceInShares
wfc len: 0
COPIED
[i]Type for TMP_165

Name: TMP_165 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := TMP_165(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_165 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_166(bool) = _liquidityShares_1 != 0
has variable
[i] TMP_166 cleared
clearing ir...?
CONDITION TMP_166
typecheckig node...
TMP_166(bool) = _liquidityShares_1 != 0
Function name: _withdrawBorrowAmount
[i]Type for TMP_166

Name: TMP_166 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_166
Condition...
Conidtion: 
TMP_166
TMP_166
clearning node...
clearing ir...?
tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
has variable
[i] tokenInStrategy cleared
typecheckig node...
tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: _liquidityShares Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for tokenInStrategy

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_activeAmount_2(uint256) := ϕ(['_activeAmount_1', '_activeAmount_0'])
has variable
[i] _activeAmount cleared
typecheckig node...
_activeAmount_2(uint256) := ϕ(['_activeAmount_1', '_activeAmount_0'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_122(address) -> _strategyList_1[_index_2]
has variable
clearing ir...?
TMP_167 = CONVERT REF_122 to IYield
has variable
[i] TMP_167 cleared
clearing ir...?
TMP_168(uint256) = HIGH_LEVEL_CALL, dest:TMP_167(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_asset_1']  
has variable
[i] TMP_168 cleared
clearing ir...?
tokenInStrategy_2(uint256) := TMP_168(uint256)
has variable
[i] tokenInStrategy cleared
typecheckig node...
REF_122(address) -> _strategyList_1[_index_2]
Function name: _withdrawBorrowAmount
INDEX

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _withdrawBorrowAmount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_122

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_167 = CONVERT REF_122 to IYield
Function name: _withdrawBorrowAmount

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_167 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_167

Name: TMP_167 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_168(uint256) = HIGH_LEVEL_CALL, dest:TMP_167(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_asset_1']  
Function name: _withdrawBorrowAmount
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_168
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_asset
wfc len: 1
Check copy_toekn_tuple
([1], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_168

Name: TMP_168 Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
tokenInStrategy_2(uint256) := TMP_168(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_168 Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for tokenInStrategy

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_176(uint256) := _index_2(uint256)
has variable
[i] TMP_176 cleared
clearing ir...?
_index_3(uint256) = _index_2 + 1
has variable
[i] _index cleared
typecheckig node...
TMP_176(uint256) := _index_2(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_176

Name: TMP_176 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_index_3(uint256) = _index_2 + 1
Function name: _withdrawBorrowAmount
val: 1

Name: _index Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_tokensToTransfer_1(uint256) := tokenInStrategy_2(uint256)
has variable
[i] _tokensToTransfer cleared
typecheckig node...
_tokensToTransfer_1(uint256) := tokenInStrategy_2(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_169(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', 'tokenInStrategy_2'] 
has variable
[i] TMP_169 cleared
clearing ir...?
TMP_170(bool) = TMP_169 >= _amountInTokens_1
has variable
[i] TMP_170 cleared
clearing ir...?
CONDITION TMP_170
typecheckig node...
TMP_169(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', 'tokenInStrategy_2'] 
Function name: _withdrawBorrowAmount
Library Call: add

Name: TMP_169 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_169 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_169

Name: TMP_169 Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_169(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', 'tokenInStrategy_2'] 
XXXXX
TMP_170(bool) = TMP_169 >= _amountInTokens_1
Function name: _withdrawBorrowAmount
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_170

Name: TMP_170 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_170
Condition...
Conidtion: 
TMP_170
TMP_170
clearning node...
clearing ir...?
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_1', '_tokensToTransfer_2'])
has variable
[i] _tokensToTransfer cleared
typecheckig node...
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_1', '_tokensToTransfer_2'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_171(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_0'] 
has variable
[i] TMP_171 cleared
clearing ir...?
_tokensToTransfer_2(uint256) := TMP_171(uint256)
has variable
[i] _tokensToTransfer cleared
typecheckig node...
TMP_171(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_0'] 
Function name: _withdrawBorrowAmount
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _amountInTokens Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_171

Name: TMP_171 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_171(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_0'] 
XXXXX
_tokensToTransfer_2(uint256) := TMP_171(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_171 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_172(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', '_tokensToTransfer_3'] 
has variable
[i] TMP_172 cleared
clearing ir...?
_activeAmount_1(uint256) := TMP_172(uint256)
has variable
[i] _activeAmount cleared
typecheckig node...
TMP_172(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', '_tokensToTransfer_3'] 
Function name: _withdrawBorrowAmount
Library Call: add

Name: TMP_172 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_172 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_172

Name: TMP_172 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_172(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', '_tokensToTransfer_3'] 
XXXXX
_activeAmount_1(uint256) := TMP_172(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_172 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_128(address) -> _strategyList_1[_index_2]
has variable
clearing ir...?
TMP_173 = CONVERT this to address
has variable
[i] TMP_173 cleared
clearing ir...?
TMP_174(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:withdrawFrom, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_128', '_lender_1', 'TMP_173', 'False']  
has variable
[i] TMP_174 cleared
typecheckig node...
REF_128(address) -> _strategyList_1[_index_2]
Function name: _withdrawBorrowAmount
INDEX

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _withdrawBorrowAmount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_128

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_173 = CONVERT this to address
Function name: _withdrawBorrowAmount
[i]Type for TMP_173

Name: TMP_173 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_174(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:withdrawFrom, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_128', '_lender_1', 'TMP_173', 'False']  
Function name: _withdrawBorrowAmount
High Call: withdrawFrom
func name:withdrawFrom
other func name:withdrawFrom
TMP_174
hlc contract name: SAVE func_name: withdrawFrom
wfc len: 0
COPIED
[i]Type for TMP_174

Name: TMP_174 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_175(bool) = _activeAmount_1 == _amountInTokens_1
has variable
[i] TMP_175 cleared
clearing ir...?
CONDITION TMP_175
typecheckig node...
TMP_175(bool) = _activeAmount_1 == _amountInTokens_1
Function name: _withdrawBorrowAmount
[i]Type for TMP_175

Name: TMP_175 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_175
Condition...
Conidtion: 
TMP_175
TMP_175
clearning node...
typecheckig node...
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "_withdrawBorrowAmount":
 New undefined nodes- 4
 Old undefined nodes- 0
typecheckig node...
_asset_1(address) := ϕ(['_borrowAsset_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _asset

Name: _asset Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: u
LF: BASSET
Fields: 
Finance Type: undef
done.
_amountInTokens_1(uint256) := ϕ(['_amount_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _amountInTokens

Name: _amountInTokens Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_lender_1(address) := ϕ(['_lender_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _lender

Name: _lender Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: _lender
Fields: 
Finance Type: undef
done.
savingsAccount_5(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_4(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_159 = CONVERT strategyRegistry_4 to IStrategyRegistry
Function name: _withdrawBorrowAmount

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_159 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_159

Name: TMP_159 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_160(address[]) = HIGH_LEVEL_CALL, dest:TMP_159(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _withdrawBorrowAmount
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_160
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_160

Name: TMP_160 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
savingsAccount_6(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_5', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_5(address) := ϕ(['strategyRegistry_4', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_160(address[])
Function name: _withdrawBorrowAmount
asgn

Name: TMP_160 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_161 = CONVERT savingsAccount_6 to ISavingsAccount
Function name: _withdrawBorrowAmount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_161 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_161

Name: TMP_161 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_savingsAccount_1(ISavingsAccount) := TMP_161(ISavingsAccount)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_161 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: _savingsAccount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _savingsAccount

Name: _savingsAccount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_index_1(uint256) := 0(uint256)
Function name: _withdrawBorrowAmount
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_index_2(uint256) := ϕ(['_index_1', '_index_3'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_118 -> LENGTH _strategyList_1
[i]Type for REF_118

Name: REF_118 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_162(bool) = _index_2 < REF_118
Function name: _withdrawBorrowAmount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_162 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_162

Name: TMP_162 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_162(bool) = _index_2 < REF_118
XXXXX
CONDITION TMP_162
Condition...
Conidtion: 
TMP_162
TMP_162
typecheckig node...
REF_119(address) -> _strategyList_1[_index_2]
Function name: _withdrawBorrowAmount
INDEX

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _withdrawBorrowAmount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_119

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_163 = CONVERT 0 to address
Function name: _withdrawBorrowAmount
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_163 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_163

Name: TMP_163 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_164(bool) = REF_119 == TMP_163
Function name: _withdrawBorrowAmount
[i]Type for TMP_164

Name: TMP_164 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_164
Condition...
Conidtion: 
TMP_164
TMP_164
typecheckig node...
typecheckig node...
TMP_177(bool) = _activeAmount_0 == _amountInTokens_1
Function name: _withdrawBorrowAmount
[i]Type for TMP_177

Name: TMP_177 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,insufficient balance)
[i]Type for TMP_178

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
REF_121(address) -> _strategyList_1[_index_2]
Function name: _withdrawBorrowAmount
INDEX

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _withdrawBorrowAmount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_121

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_165(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_lender_1', '_asset_1', 'REF_121']  
Function name: _withdrawBorrowAmount
High Call: balanceInShares
func name:balanceInShares
other func name:balanceInShares
TMP_165
hlc contract name: SAVE func_name: balanceInShares
wfc len: 0
COPIED
[i]Type for TMP_165

Name: TMP_165 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := TMP_165(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_165 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_166(bool) = _liquidityShares_1 != 0
Function name: _withdrawBorrowAmount
[i]Type for TMP_166

Name: TMP_166 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_166
Condition...
Conidtion: 
TMP_166
TMP_166
typecheckig node...
tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: _liquidityShares Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for tokenInStrategy

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_activeAmount_2(uint256) := ϕ(['_activeAmount_1', '_activeAmount_0'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_122(address) -> _strategyList_1[_index_2]
Function name: _withdrawBorrowAmount
INDEX

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _withdrawBorrowAmount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_122

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_167 = CONVERT REF_122 to IYield
Function name: _withdrawBorrowAmount

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_167 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_167

Name: TMP_167 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_168(uint256) = HIGH_LEVEL_CALL, dest:TMP_167(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_asset_1']  
Function name: _withdrawBorrowAmount
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_168
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_asset
wfc len: 1
Check copy_toekn_tuple
([1], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_168

Name: TMP_168 Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
tokenInStrategy_2(uint256) := TMP_168(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_168 Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for tokenInStrategy

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_176(uint256) := _index_2(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_176

Name: TMP_176 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_index_3(uint256) = _index_2 + 1
Function name: _withdrawBorrowAmount
val: 1

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokensToTransfer_1(uint256) := tokenInStrategy_2(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_169(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', 'tokenInStrategy_2'] 
Function name: _withdrawBorrowAmount
Library Call: add

Name: TMP_169 Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_169 Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_169

Name: TMP_169 Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_170(bool) = TMP_169 >= _amountInTokens_1
Function name: _withdrawBorrowAmount
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_170

Name: TMP_170 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_170
Condition...
Conidtion: 
TMP_170
TMP_170
typecheckig node...
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_1', '_tokensToTransfer_2'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_171(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_0'] 
Function name: _withdrawBorrowAmount
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_171

Name: TMP_171 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_171(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_171 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_172(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', '_tokensToTransfer_3'] 
Function name: _withdrawBorrowAmount
Library Call: add

Name: TMP_172 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_172 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_172

Name: TMP_172 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_activeAmount_1(uint256) := TMP_172(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_172 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_128(address) -> _strategyList_1[_index_2]
Function name: _withdrawBorrowAmount
INDEX

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _withdrawBorrowAmount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_128

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_173 = CONVERT this to address
Function name: _withdrawBorrowAmount
[i]Type for TMP_173

Name: TMP_173 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_174(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:withdrawFrom, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_128', '_lender_1', 'TMP_173', 'False']  
Function name: _withdrawBorrowAmount
High Call: withdrawFrom
func name:withdrawFrom
other func name:withdrawFrom
TMP_174
hlc contract name: SAVE func_name: withdrawFrom
wfc len: 0
COPIED
[i]Type for TMP_174

Name: TMP_174 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_175(bool) = _activeAmount_1 == _amountInTokens_1
Function name: _withdrawBorrowAmount
[i]Type for TMP_175

Name: TMP_175 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_175
Condition...
Conidtion: 
TMP_175
TMP_175
typecheckig node...
typecheckig node...
WORKLIST iteration 1 for function call "_withdrawBorrowAmount":
 New undefined nodes- 1
 Old undefined nodes- 4
typecheckig node...
_asset_1(address) := ϕ(['_borrowAsset_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _asset

Name: _asset Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: u
LF: BASSET
Fields: 
Finance Type: undef
done.
_amountInTokens_1(uint256) := ϕ(['_amount_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _amountInTokens

Name: _amountInTokens Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_lender_1(address) := ϕ(['_lender_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _lender

Name: _lender Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: _lender
Fields: 
Finance Type: undef
done.
savingsAccount_5(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_4(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_159 = CONVERT strategyRegistry_4 to IStrategyRegistry
Function name: _withdrawBorrowAmount

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_159 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_159

Name: TMP_159 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_160(address[]) = HIGH_LEVEL_CALL, dest:TMP_159(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _withdrawBorrowAmount
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_160
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_160

Name: TMP_160 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
savingsAccount_6(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_5', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_5(address) := ϕ(['strategyRegistry_4', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_160(address[])
Function name: _withdrawBorrowAmount
asgn

Name: TMP_160 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_161 = CONVERT savingsAccount_6 to ISavingsAccount
Function name: _withdrawBorrowAmount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_161 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_161

Name: TMP_161 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_savingsAccount_1(ISavingsAccount) := TMP_161(ISavingsAccount)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_161 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: _savingsAccount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _savingsAccount

Name: _savingsAccount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_index_1(uint256) := 0(uint256)
Function name: _withdrawBorrowAmount
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_index_2(uint256) := ϕ(['_index_1', '_index_3'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_118 -> LENGTH _strategyList_1
[i]Type for REF_118

Name: REF_118 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_162(bool) = _index_2 < REF_118
Function name: _withdrawBorrowAmount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_162 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_162

Name: TMP_162 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_162(bool) = _index_2 < REF_118
XXXXX
CONDITION TMP_162
Condition...
Conidtion: 
TMP_162
TMP_162
typecheckig node...
REF_119(address) -> _strategyList_1[_index_2]
Function name: _withdrawBorrowAmount
INDEX

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _withdrawBorrowAmount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_119

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_163 = CONVERT 0 to address
Function name: _withdrawBorrowAmount
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_163 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_163

Name: TMP_163 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_164(bool) = REF_119 == TMP_163
Function name: _withdrawBorrowAmount
[i]Type for TMP_164

Name: TMP_164 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_164
Condition...
Conidtion: 
TMP_164
TMP_164
typecheckig node...
typecheckig node...
TMP_177(bool) = _activeAmount_0 == _amountInTokens_1
Function name: _withdrawBorrowAmount
[i]Type for TMP_177

Name: TMP_177 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_178(None) = SOLIDITY_CALL require(bool,string)(TMP_177,insufficient balance)
[i]Type for TMP_178

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
REF_121(address) -> _strategyList_1[_index_2]
Function name: _withdrawBorrowAmount
INDEX

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _withdrawBorrowAmount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_121

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_165(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['_lender_1', '_asset_1', 'REF_121']  
Function name: _withdrawBorrowAmount
High Call: balanceInShares
func name:balanceInShares
other func name:balanceInShares
TMP_165
hlc contract name: SAVE func_name: balanceInShares
wfc len: 0
COPIED
[i]Type for TMP_165

Name: TMP_165 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := TMP_165(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_165 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_166(bool) = _liquidityShares_1 != 0
Function name: _withdrawBorrowAmount
[i]Type for TMP_166

Name: TMP_166 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_166
Condition...
Conidtion: 
TMP_166
TMP_166
typecheckig node...
tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: _liquidityShares Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for tokenInStrategy

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_activeAmount_2(uint256) := ϕ(['_activeAmount_1', '_activeAmount_0'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_122(address) -> _strategyList_1[_index_2]
Function name: _withdrawBorrowAmount
INDEX

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _withdrawBorrowAmount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_122

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_167 = CONVERT REF_122 to IYield
Function name: _withdrawBorrowAmount

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_167 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_167

Name: TMP_167 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_168(uint256) = HIGH_LEVEL_CALL, dest:TMP_167(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_asset_1']  
Function name: _withdrawBorrowAmount
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_168
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_asset
wfc len: 1
Check copy_toekn_tuple
([1], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_168

Name: TMP_168 Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
tokenInStrategy_2(uint256) := TMP_168(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_168 Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for tokenInStrategy

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_176(uint256) := _index_2(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_176 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_176

Name: TMP_176 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_index_3(uint256) = _index_2 + 1
Function name: _withdrawBorrowAmount
val: 1

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for _index

Name: _index Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokensToTransfer_1(uint256) := tokenInStrategy_2(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_169(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', 'tokenInStrategy_2'] 
Function name: _withdrawBorrowAmount
Library Call: add

Name: TMP_169 Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: tokenInStrategy Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_169 Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_169

Name: TMP_169 Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_170(bool) = TMP_169 >= _amountInTokens_1
Function name: _withdrawBorrowAmount
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_170

Name: TMP_170 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_170
Condition...
Conidtion: 
TMP_170
TMP_170
typecheckig node...
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_1', '_tokensToTransfer_2'])
Function name: _withdrawBorrowAmount
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_171(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_0'] 
Function name: _withdrawBorrowAmount
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_171 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_171

Name: TMP_171 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_171(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_171 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_172(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_0', '_tokensToTransfer_3'] 
Function name: _withdrawBorrowAmount
Library Call: add

Name: TMP_172 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_172 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_172

Name: TMP_172 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_activeAmount_1(uint256) := TMP_172(uint256)
Function name: _withdrawBorrowAmount
asgn

Name: TMP_172 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_128(address) -> _strategyList_1[_index_2]
Function name: _withdrawBorrowAmount
INDEX

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _withdrawBorrowAmount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_128

Name: _strategyList Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_173 = CONVERT this to address
Function name: _withdrawBorrowAmount
[i]Type for TMP_173

Name: TMP_173 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_174(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:withdrawFrom, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_128', '_lender_1', 'TMP_173', 'False']  
Function name: _withdrawBorrowAmount
High Call: withdrawFrom
func name:withdrawFrom
other func name:withdrawFrom
TMP_174
hlc contract name: SAVE func_name: withdrawFrom
wfc len: 0
COPIED
[i]Type for TMP_174

Name: TMP_174 Function: _withdrawBorrowAmount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_175(bool) = _activeAmount_1 == _amountInTokens_1
Function name: _withdrawBorrowAmount
[i]Type for TMP_175

Name: TMP_175 Function: _withdrawBorrowAmount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_175
Condition...
Conidtion: 
TMP_175
TMP_175
typecheckig node...
typecheckig node...
WORKLIST iteration 2 for function call "_withdrawBorrowAmount":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _withdrawBorrowAmount
done.
This IR caused addback:
INTERNAL_CALL, CreditLine._withdrawBorrowAmount(address,uint256,address)(_borrowAsset_1,_amount_1,_lender_1)
XXXXX
clearning node...
clearing ir...?
TMP_200 = CONVERT _borrowAsset_1 to IERC20
has variable
[i] TMP_200 cleared
clearing ir...?
TMP_201 = CONVERT this to address
has variable
[i] TMP_201 cleared
clearing ir...?
TMP_202(uint256) = HIGH_LEVEL_CALL, dest:TMP_200(IERC20), function:balanceOf, arguments:['TMP_201']  
has variable
[i] TMP_202 cleared
clearing ir...?
protocolFeeFraction_12(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_11', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
has variable
clearing ir...?
protocolFeeCollector_12(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12', 'protocolFeeCollector_11'])
has variable
clearing ir...?
_balanceAfter_scope_1_1(uint256) := TMP_202(uint256)
has variable
[i] _balanceAfter_scope_1 cleared
typecheckig node...
TMP_200 = CONVERT _borrowAsset_1 to IERC20
Function name: borrow

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_200 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TMP_201 = CONVERT this to address
Function name: borrow
[i]Type for TMP_201

Name: TMP_201 Function: borrow
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_202(uint256) = HIGH_LEVEL_CALL, dest:TMP_200(IERC20), function:balanceOf, arguments:['TMP_201']  
Function name: borrow
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_202
hlc contract name: BASSET func_name: balanceOf
wfc len: 0
COPIED
[i]Type for TMP_202

Name: TMP_202 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeFraction_12(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_11', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
Function name: borrow
Phi
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeCollector_12(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12', 'protocolFeeCollector_11'])
Function name: borrow
Phi
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_balanceAfter_scope_1_1(uint256) := TMP_202(uint256)
Function name: borrow
asgn

Name: TMP_202 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceAfter_scope_1 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _balanceAfter_scope_1

Name: _balanceAfter_scope_1 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._withdrawBorrowAmount(address,uint256,address)(_borrowAsset_1,_amount_1,_lender_1)
typecheckig node...
INTERNAL_CALL, CreditLine._withdrawBorrowAmount(address,uint256,address)(_borrowAsset_1,_amount_1,_lender_1)
Internal call...
_withdrawBorrowAmount
_borrowAsset
_amount
_lender
Function: _withdrawBorrowAmount
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[1], [-1], 0, 'BASSET', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[1], [-1], 0, 'BASSET', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0
done.
clearning node...
clearing ir...?
TMP_192 = CONVERT _borrowAsset_1 to IERC20
has variable
[i] TMP_192 cleared
clearing ir...?
TMP_193 = CONVERT this to address
has variable
[i] TMP_193 cleared
clearing ir...?
TMP_194(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IERC20), function:balanceOf, arguments:['TMP_193']  
has variable
[i] TMP_194 cleared
clearing ir...?
protocolFeeFraction_9(uint256) := ϕ(['protocolFeeFraction_8', 'protocolFeeFraction_9', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
has variable
clearing ir...?
protocolFeeCollector_9(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12', 'protocolFeeCollector_8'])
has variable
clearing ir...?
_balanceAfter_1(uint256) := TMP_194(uint256)
has variable
[i] _balanceAfter cleared
typecheckig node...
TMP_192 = CONVERT _borrowAsset_1 to IERC20
Function name: borrow

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_192 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_192

Name: TMP_192 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TMP_193 = CONVERT this to address
Function name: borrow
[i]Type for TMP_193

Name: TMP_193 Function: borrow
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_194(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IERC20), function:balanceOf, arguments:['TMP_193']  
Function name: borrow
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_194
hlc contract name: BASSET func_name: balanceOf
wfc len: 0
COPIED
[i]Type for TMP_194

Name: TMP_194 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeFraction_9(uint256) := ϕ(['protocolFeeFraction_8', 'protocolFeeFraction_9', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
Function name: borrow
Phi
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeCollector_9(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12', 'protocolFeeCollector_8'])
Function name: borrow
Phi
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_balanceAfter_1(uint256) := TMP_194(uint256)
Function name: borrow
asgn

Name: TMP_194 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceAfter Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _balanceAfter

Name: _balanceAfter Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_balanceAfter_scope_1_1', '_balanceBefore_scope_0_1'] 
has variable
[i] TMP_203 cleared
clearing ir...?
_tokenDiffBalance_2(uint256) := TMP_203(uint256)
has variable
[i] _tokenDiffBalance cleared
typecheckig node...
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_balanceAfter_scope_1_1', '_balanceBefore_scope_0_1'] 
Function name: borrow
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _balanceAfter_scope_1 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceBefore_scope_0 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceBefore_scope_0 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_203 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_203

Name: TMP_203 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokenDiffBalance_2(uint256) := TMP_203(uint256)
Function name: borrow
asgn

Name: TMP_203 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenDiffBalance Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_tokenDiffBalance_3(uint256) := ϕ(['_tokenDiffBalance_2', '_tokenDiffBalance_1'])
has variable
[i] _tokenDiffBalance cleared
typecheckig node...
_tokenDiffBalance_3(uint256) := ϕ(['_tokenDiffBalance_2', '_tokenDiffBalance_1'])
Function name: borrow
Phi
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_balanceAfter_1', '_balanceBefore_1'] 
has variable
[i] TMP_195 cleared
clearing ir...?
_tokenDiffBalance_1(uint256) := TMP_195(uint256)
has variable
[i] _tokenDiffBalance cleared
typecheckig node...
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_balanceAfter_1', '_balanceBefore_1'] 
Function name: borrow
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _balanceAfter Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceBefore Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceBefore Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_195 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_195

Name: TMP_195 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokenDiffBalance_1(uint256) := TMP_195(uint256)
Function name: borrow
asgn

Name: TMP_195 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenDiffBalance Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_204(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_tokenDiffBalance_3', 'protocolFeeFraction_12'] 
has variable
[i] TMP_204 cleared
clearing ir...?
TMP_205(uint256) = 10 ** 30
has variable
[i] TMP_205 cleared
clearing ir...?
TMP_206(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_204', 'TMP_205'] 
has variable
[i] TMP_206 cleared
clearing ir...?
_protocolFee_1(uint256) := TMP_206(uint256)
has variable
[i] _protocolFee cleared
typecheckig node...
TMP_204(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_tokenDiffBalance_3', 'protocolFeeFraction_12'] 
Function name: borrow
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_204 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_204

Name: TMP_204 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_205(uint256) = 10 ** 30
Function name: borrow
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_205 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_205

Name: TMP_205 Function: borrow
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_206(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_204', 'TMP_205'] 
Function name: borrow
Library Call: div
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_206 Function: borrow
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
_protocolFee_1(uint256) := TMP_206(uint256)
Function name: borrow
asgn

Name: TMP_206 Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _protocolFee Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _protocolFee

Name: _protocolFee Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_207(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_tokenDiffBalance_3', '_protocolFee_1'] 
has variable
[i] TMP_207 cleared
clearing ir...?
_tokenDiffBalance_4(uint256) := TMP_207(uint256)
has variable
[i] _tokenDiffBalance cleared
typecheckig node...
TMP_207(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_tokenDiffBalance_3', '_protocolFee_1'] 
Function name: borrow
Library Call: sub
lnorm: u rnorm: -30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokenDiffBalance Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _protocolFee Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _protocolFee Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: TMP_207 Function: borrow
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_207

Name: TMP_207 Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
_tokenDiffBalance_4(uint256) := TMP_207(uint256)
Function name: borrow
asgn

Name: TMP_207 Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _tokenDiffBalance Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_208 = CONVERT 0 to address
has variable
[i] TMP_208 cleared
clearing ir...?
TMP_209(bool) = _borrowAsset_1 == TMP_208
has variable
[i] TMP_209 cleared
clearing ir...?
CONDITION TMP_209
typecheckig node...
TMP_208 = CONVERT 0 to address
Function name: borrow
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_208 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_208

Name: TMP_208 Function: borrow
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_209(bool) = _borrowAsset_1 == TMP_208
Function name: borrow
[i]Type for TMP_209

Name: TMP_209 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_209
Condition...
Conidtion: 
TMP_209
TMP_209
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:protocolFeeCollector_12, function:call, arguments:[''] value:_protocolFee_1 
clearing ir...?
protocolFeeCollector_13(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12'])
has variable
clearing ir...?
feeSuccess_1(bool)= UNPACK TUPLE_1 index: 0 
has variable
[i] feeSuccess cleared
typecheckig node...
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:protocolFeeCollector_12, function:call, arguments:[''] value:_protocolFee_1 
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeCollector_13(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12'])
Function name: borrow
Phi
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
feeSuccess_1(bool)= UNPACK TUPLE_1 index: 0 
Function name: borrow
Reading tuple TUPLE_1 index 0
Finding type for feeSuccess...
bool
SKIP bool
[i]Type for feeSuccess

Name: feeSuccess Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_212 = CONVERT _borrowAsset_1 to IERC20
has variable
[i] TMP_212 cleared
clearing ir...?
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_212', 'protocolFeeCollector_12', '_protocolFee_1'] 
typecheckig node...
TMP_212 = CONVERT _borrowAsset_1 to IERC20
Function name: borrow

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_212 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_212

Name: TMP_212 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_212', 'protocolFeeCollector_12', '_protocolFee_1'] 
Library Call: safeTransfer
done.
clearning node...
clearing ir...?
TMP_210(None) = SOLIDITY_CALL require(bool,string)(feeSuccess_1,Transfer fail)
typecheckig node...
TMP_210(None) = SOLIDITY_CALL require(bool,string)(feeSuccess_1,Transfer fail)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_214 = CONVERT _borrowAsset_1 to IERC20
has variable
[i] TMP_214 cleared
clearing ir...?
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_214', 'msg.sender', '_tokenDiffBalance_4'] 
typecheckig node...
TMP_214 = CONVERT _borrowAsset_1 to IERC20
Function name: borrow

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_214 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_214

Name: TMP_214 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_214', 'msg.sender', '_tokenDiffBalance_4'] 
Library Call: safeTransfer
done.
clearning node...
clearing ir...?
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:_tokenDiffBalance_4 
clearing ir...?
success_1(bool)= UNPACK TUPLE_2 index: 0 
has variable
[i] success cleared
typecheckig node...
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:_tokenDiffBalance_4 
[i]Type for TUPLE_2

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
success_1(bool)= UNPACK TUPLE_2 index: 0 
Function name: borrow
Reading tuple TUPLE_2 index 0
Finding type for success...
bool
SKIP bool
[i]Type for success

Name: success Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
Emit BorrowedFromCreditLine(_id_1,_tokenDiffBalance_4)
typecheckig node...
Emit BorrowedFromCreditLine(_id_1,_tokenDiffBalance_4)
clearning node...
clearing ir...?
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer fail)
typecheckig node...
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer fail)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "borrow":
 New undefined nodes- 4
 Old undefined nodes- 0
typecheckig node...
creditLineVariables_16(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: borrow
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_20(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: borrow
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
protocolFeeFraction_2(uint256) := ϕ(['protocolFeeFraction_0', 'protocolFeeFraction_9', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
Function name: borrow
Phi
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeCollector_2(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_0', 'protocolFeeCollector_12'])
Function name: borrow
Phi
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
MODIFIER_CALL, CreditLine.onlyCreditLineBorrower(uint256)(_id_1)
Internal call...
onlyCreditLineBorrower
_id
Function: onlyCreditLineBorrower
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
creditLineConstants_22(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_47'])
Function name: borrow
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
typecheckig node...
REF_129(CreditLine.CreditLineVariables) -> creditLineVariables_18[_id_1]
Function name: borrow
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: status
Finance Type: undef
Name: None
creditLineVariables
[i]Type for REF_129

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_129(CreditLine.CreditLineVariables) -> creditLineVariables_18[_id_1]
XXXXX
REF_130(CreditLine.CreditLineStatus) -> REF_129.status
Function name: borrow
MEMBER
REF_129
status
borrow
REF_129 Fields:
^^^
[i]Type for REF_130

Name: REF_129.status Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_129.status Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_131(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: borrow
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_131

Name: CreditLineStatus.ACTIVE Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_179(bool) = REF_130 == REF_131
Function name: borrow
[i]Type for TMP_179

Name: TMP_179 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_180(None) = SOLIDITY_CALL require(bool,string)(TMP_179,CreditLine: The credit line is not yet active.)
[i]Type for TMP_180

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_181(uint256) = INTERNAL_CALL, CreditLine.calculateBorrowableAmount(uint256)(_id_1)
Function name: borrow
Internal call...
calculateBorrowableAmount
_id
Function: calculateBorrowableAmount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
[i]Type for TMP_181

Name: TMP_181 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_19(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_5'])
Function name: borrow
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_23(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_6'])
Function name: borrow
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_borrowableAmount_1(uint256) := TMP_181(uint256)
Function name: borrow
asgn

Name: TMP_181 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _borrowableAmount Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowableAmount

Name: _borrowableAmount Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_borrowableAmount_1(uint256) := TMP_181(uint256)
XXXXX
typecheckig node...
TMP_182(bool) = _amount_1 <= _borrowableAmount_1
Function name: borrow
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_182 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_182

Name: TMP_182 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_182(bool) = _amount_1 <= _borrowableAmount_1
XXXXX
TMP_183(None) = SOLIDITY_CALL require(bool,string)(TMP_182,CreditLine::borrow - The current collateral ratio doesn't allow to withdraw the amount)
[i]Type for TMP_183

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_132(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
Function name: borrow
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_132

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_133(address) -> REF_132.borrowAsset
Function name: borrow
MEMBER
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_133

Name: creditLineConstants.borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
_borrowAsset_1(address) := REF_133(address)
Function name: borrow
asgn

Name: creditLineConstants.borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowAsset

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_134(CreditLine.CreditLineConstants) -> creditLineConstants_23[_id_1]
Function name: borrow
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_134

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_135(address) -> REF_134.lender
Function name: borrow
MEMBER
creditLineConstants
lender
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_135

Name: creditLineConstants.lender Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.lender Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_lender_1(address) := REF_135(address)
Function name: borrow
asgn

Name: creditLineConstants.lender Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _lender Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _lender

Name: _lender Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, CreditLine.updateinterestAccruedTillLastPrincipalUpdate(uint256)(_id_1)
Internal call...
updateinterestAccruedTillLastPrincipalUpdate
_id
Function: updateinterestAccruedTillLastPrincipalUpdate
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
creditLineVariables_20(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_8'])
Function name: borrow
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
typecheckig node...
REF_136(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
Function name: borrow
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_136

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_137(uint256) -> REF_136.principal
Function name: borrow
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_137

Name: creditLineVariables.principal Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_138(CreditLine.CreditLineVariables) -> creditLineVariables_20[_id_1]
Function name: borrow
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_138

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_139(uint256) -> REF_138.principal
Function name: borrow
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_139

Name: creditLineVariables.principal Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_185(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_139', '_amount_1'] 
Function name: borrow
Library Call: add

Name: TMP_185 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_185 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_185

Name: TMP_185 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_21(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_20'])
Function name: borrow
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_137 (->creditLineVariables_21) := TMP_185(uint256)
Function name: borrow
asgn

Name: TMP_185 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_137 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_137

Name: REF_137 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_137 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_141(CreditLine.CreditLineVariables) -> creditLineVariables_21[_id_1]
Function name: borrow
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_141

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_142(uint256) -> REF_141.lastPrincipalUpdateTime
Function name: borrow
MEMBER
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: lastPrincipalUpdateTime Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_142

Name: creditLineVariables.lastPrincipalUpdateTime Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.lastPrincipalUpdateTime Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastPrincipalUpdateTime Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_22(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_21'])
Function name: borrow
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_142 (->creditLineVariables_22) := block.timestamp(uint256)
Function name: borrow
asgn
block.timestamp

Name: REF_142 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_142

Name: REF_142 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_142 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastPrincipalUpdateTime Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_142 (->creditLineVariables_22) := block.timestamp(uint256)
XXXXX
typecheckig node...
typecheckig node...
TMP_186 = CONVERT 0 to address
Function name: borrow
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_186 Function: borrow
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_186

Name: TMP_186 Function: borrow
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_187(bool) = _borrowAsset_1 != TMP_186
Function name: borrow
[i]Type for TMP_187

Name: TMP_187 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_187
Condition...
Conidtion: 
TMP_187
TMP_187
typecheckig node...
TMP_196 = CONVERT _borrowAsset_1 to IERC20
Function name: borrow

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_196 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for TMP_196

Name: TMP_196 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TMP_197 = CONVERT this to address
Function name: borrow
[i]Type for TMP_197

Name: TMP_197 Function: borrow
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_198(uint256) = HIGH_LEVEL_CALL, dest:TMP_196(IERC20), function:balanceOf, arguments:['TMP_197']  
Function name: borrow
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_198
hlc contract name: BASSET func_name: balanceOf
wfc len: 0
COPIED
[i]Type for TMP_198

Name: TMP_198 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeFraction_10(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
Function name: borrow
Phi
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeCollector_10(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12'])
Function name: borrow
Phi
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_balanceBefore_scope_0_1(uint256) := TMP_198(uint256)
Function name: borrow
asgn

Name: TMP_198 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceBefore_scope_0 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _balanceBefore_scope_0

Name: _balanceBefore_scope_0 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_188 = CONVERT _borrowAsset_1 to IERC20
Function name: borrow

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_188 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for TMP_188

Name: TMP_188 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TMP_189 = CONVERT this to address
Function name: borrow
[i]Type for TMP_189

Name: TMP_189 Function: borrow
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_190(uint256) = HIGH_LEVEL_CALL, dest:TMP_188(IERC20), function:balanceOf, arguments:['TMP_189']  
Function name: borrow
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_190
hlc contract name: BASSET func_name: balanceOf
wfc len: 0
COPIED
[i]Type for TMP_190

Name: TMP_190 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeFraction_7(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_6', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
Function name: borrow
Phi
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeCollector_7(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12', 'protocolFeeCollector_6'])
Function name: borrow
Phi
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_balanceBefore_1(uint256) := TMP_190(uint256)
Function name: borrow
asgn

Name: TMP_190 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceBefore Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _balanceBefore

Name: _balanceBefore Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, CreditLine._withdrawBorrowAmount(address,uint256,address)(_borrowAsset_1,_amount_1,_lender_1)
Internal call...
_withdrawBorrowAmount
_borrowAsset
_amount
_lender
Function: _withdrawBorrowAmount
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[1], [-1], 0, 'BASSET', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[1], [-1], 0, 'BASSET', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0
done.
typecheckig node...
TMP_200 = CONVERT _borrowAsset_1 to IERC20
Function name: borrow

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_200 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for TMP_200

Name: TMP_200 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TMP_201 = CONVERT this to address
Function name: borrow
[i]Type for TMP_201

Name: TMP_201 Function: borrow
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_202(uint256) = HIGH_LEVEL_CALL, dest:TMP_200(IERC20), function:balanceOf, arguments:['TMP_201']  
Function name: borrow
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_202
hlc contract name: BASSET func_name: balanceOf
wfc len: 0
COPIED
[i]Type for TMP_202

Name: TMP_202 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeFraction_12(uint256) := ϕ(['protocolFeeFraction_9', 'protocolFeeFraction_11', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
Function name: borrow
Phi
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeCollector_12(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12', 'protocolFeeCollector_11'])
Function name: borrow
Phi
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_balanceAfter_scope_1_1(uint256) := TMP_202(uint256)
Function name: borrow
asgn

Name: TMP_202 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceAfter_scope_1 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _balanceAfter_scope_1

Name: _balanceAfter_scope_1 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, CreditLine._withdrawBorrowAmount(address,uint256,address)(_borrowAsset_1,_amount_1,_lender_1)
Internal call...
_withdrawBorrowAmount
_borrowAsset
_amount
_lender
Function: _withdrawBorrowAmount
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[1], [-1], 0, 'BASSET', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[1], [-1], 0, 'BASSET', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0
done.
typecheckig node...
TMP_192 = CONVERT _borrowAsset_1 to IERC20
Function name: borrow

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_192 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for TMP_192

Name: TMP_192 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TMP_193 = CONVERT this to address
Function name: borrow
[i]Type for TMP_193

Name: TMP_193 Function: borrow
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
TMP_194(uint256) = HIGH_LEVEL_CALL, dest:TMP_192(IERC20), function:balanceOf, arguments:['TMP_193']  
Function name: borrow
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_194
hlc contract name: BASSET func_name: balanceOf
wfc len: 0
COPIED
[i]Type for TMP_194

Name: TMP_194 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeFraction_9(uint256) := ϕ(['protocolFeeFraction_8', 'protocolFeeFraction_9', 'protocolFeeFraction_12', 'protocolFeeFraction_1'])
Function name: borrow
Phi
[i]Type for protocolFeeFraction

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeCollector_9(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12', 'protocolFeeCollector_8'])
Function name: borrow
Phi
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_balanceAfter_1(uint256) := TMP_194(uint256)
Function name: borrow
asgn

Name: TMP_194 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceAfter Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _balanceAfter

Name: _balanceAfter Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_203(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_balanceAfter_scope_1_1', '_balanceBefore_scope_0_1'] 
Function name: borrow
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _balanceAfter_scope_1 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceBefore_scope_0 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceBefore_scope_0 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_203 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_203

Name: TMP_203 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokenDiffBalance_2(uint256) := TMP_203(uint256)
Function name: borrow
asgn

Name: TMP_203 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenDiffBalance Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokenDiffBalance_3(uint256) := ϕ(['_tokenDiffBalance_2', '_tokenDiffBalance_1'])
Function name: borrow
Phi
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_195(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_balanceAfter_1', '_balanceBefore_1'] 
Function name: borrow
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _balanceAfter Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceBefore Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _balanceBefore Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_195 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_195

Name: TMP_195 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokenDiffBalance_1(uint256) := TMP_195(uint256)
Function name: borrow
asgn

Name: TMP_195 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenDiffBalance Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_204(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_tokenDiffBalance_3', 'protocolFeeFraction_12'] 
Function name: borrow
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_204 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_204

Name: TMP_204 Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_205(uint256) = 10 ** 30
Function name: borrow
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_205 Function: borrow
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:30
30
val: 10
1
[i]Type for TMP_205

Name: TMP_205 Function: borrow
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_206(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_204', 'TMP_205'] 
Function name: borrow
Library Call: div
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_206 Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_206

Name: TMP_206 Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
_protocolFee_1(uint256) := TMP_206(uint256)
Function name: borrow
asgn

Name: TMP_206 Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _protocolFee Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _protocolFee

Name: _protocolFee Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_207(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_tokenDiffBalance_3', '_protocolFee_1'] 
Function name: borrow
Library Call: sub
lnorm: u rnorm: -30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokenDiffBalance Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _protocolFee Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _protocolFee Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: TMP_207 Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_207

Name: TMP_207 Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
_tokenDiffBalance_4(uint256) := TMP_207(uint256)
Function name: borrow
asgn

Name: TMP_207 Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _tokenDiffBalance Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenDiffBalance

Name: _tokenDiffBalance Function: borrow
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_208 = CONVERT 0 to address
Function name: borrow
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_208 Function: borrow
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_208

Name: TMP_208 Function: borrow
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_209(bool) = _borrowAsset_1 == TMP_208
Function name: borrow
[i]Type for TMP_209

Name: TMP_209 Function: borrow
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_209
Condition...
Conidtion: 
TMP_209
TMP_209
typecheckig node...
typecheckig node...
TUPLE_1(bool,bytes) = LOW_LEVEL_CALL, dest:protocolFeeCollector_12, function:call, arguments:[''] value:_protocolFee_1 
[i]Type for TUPLE_1

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
protocolFeeCollector_13(address) := ϕ(['protocolFeeCollector_1', 'protocolFeeCollector_9', 'protocolFeeCollector_12'])
Function name: borrow
Phi
[i]Type for protocolFeeCollector

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
feeSuccess_1(bool)= UNPACK TUPLE_1 index: 0 
Function name: borrow
Reading tuple TUPLE_1 index 0
Finding type for feeSuccess...
bool
SKIP bool
[i]Type for feeSuccess

Name: feeSuccess Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_212 = CONVERT _borrowAsset_1 to IERC20
Function name: borrow

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_212 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for TMP_212

Name: TMP_212 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_212', 'protocolFeeCollector_12', '_protocolFee_1'] 
Library Call: safeTransfer
done.
typecheckig node...
TMP_210(None) = SOLIDITY_CALL require(bool,string)(feeSuccess_1,Transfer fail)
[i]Type for TMP_210

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_214 = CONVERT _borrowAsset_1 to IERC20
Function name: borrow

Name: _borrowAsset Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_214 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for TMP_214

Name: TMP_214 Function: borrow
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransfer(IERC20,address,uint256), arguments:['TMP_214', 'msg.sender', '_tokenDiffBalance_4'] 
Library Call: safeTransfer
done.
typecheckig node...
TUPLE_2(bool,bytes) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:_tokenDiffBalance_4 
[i]Type for TUPLE_2

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
success_1(bool)= UNPACK TUPLE_2 index: 0 
Function name: borrow
Reading tuple TUPLE_2 index 0
Finding type for success...
bool
SKIP bool
[i]Type for success

Name: success Function: borrow
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
Emit BorrowedFromCreditLine(_id_1,_tokenDiffBalance_4)
typecheckig node...
TMP_211(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer fail)
[i]Type for TMP_211

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "borrow":
 New undefined nodes- 4
 Old undefined nodes- 4
Saving return values for: borrow
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _repayFromSavingsAccount
Function _repayFromSavingsAccount not marked
Mark Iterations TRUE, proceeding anyway
Function name: _repayFromSavingsAccount
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _repay
Function _repay not marked
Mark Iterations TRUE, proceeding anyway
Function name: _repay
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: repay
Function name: repay
Function Visibility (test): external
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_amount
Finding type for _amount...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_fromSavingsAccount
Finding type for _fromSavingsAccount...
bool
SKIP bool
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
creditLineVariables_23(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
has variable
clearing ir...?
creditLineConstants_25(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
typecheckig node...
creditLineVariables_23(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_25(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: repay
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
REF_177(CreditLine.CreditLineVariables) -> creditLineVariables_24[_id_1]
has variable
clearing ir...?
REF_178(CreditLine.CreditLineStatus) -> REF_177.status
has variable
clearing ir...?
REF_179(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
has variable
clearing ir...?
TMP_253(bool) = REF_178 == REF_179
has variable
[i] TMP_253 cleared
clearing ir...?
TMP_254(None) = SOLIDITY_CALL require(bool,string)(TMP_253,CreditLine: The credit line is not yet active.)
typecheckig node...
REF_177(CreditLine.CreditLineVariables) -> creditLineVariables_24[_id_1]
Function name: repay
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
creditLineVariables
[i]Type for REF_177

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_177(CreditLine.CreditLineVariables) -> creditLineVariables_24[_id_1]
XXXXX
REF_178(CreditLine.CreditLineStatus) -> REF_177.status
Function name: repay
MEMBER
REF_177
status
repay
REF_177 Fields:
^^^
[i]Type for REF_178

Name: REF_177.status Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_177.status Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_179(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: repay
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_179

Name: CreditLineStatus.ACTIVE Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_253(bool) = REF_178 == REF_179
Function name: repay
[i]Type for TMP_253

Name: TMP_253 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_254(None) = SOLIDITY_CALL require(bool,string)(TMP_253,CreditLine: The credit line is not yet active.)
[i]Type for TMP_254

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_180(CreditLine.CreditLineConstants) -> creditLineConstants_26[_id_1]
has variable
clearing ir...?
REF_181(address) -> REF_180.lender
has variable
clearing ir...?
TMP_255(bool) = REF_181 != msg.sender
has variable
[i] TMP_255 cleared
clearing ir...?
TMP_256(None) = SOLIDITY_CALL require(bool,string)(TMP_255,Lender cant repay)
typecheckig node...
REF_180(CreditLine.CreditLineConstants) -> creditLineConstants_26[_id_1]
Function name: repay
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_180

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_180(CreditLine.CreditLineConstants) -> creditLineConstants_26[_id_1]
XXXXX
REF_181(address) -> REF_180.lender
Function name: repay
MEMBER
REF_180
lender
repay
REF_180 Fields:
^^^
[i]Type for REF_181

Name: REF_180.lender Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_180.lender Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_255(bool) = REF_181 != msg.sender
Function name: repay
[i]Type for TMP_255

Name: TMP_255 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_256(None) = SOLIDITY_CALL require(bool,string)(TMP_255,Lender cant repay)
[i]Type for TMP_256

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_257(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
has variable
[i] TMP_257 cleared
clearing ir...?
creditLineVariables_25(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
has variable
clearing ir...?
_interestSincePrincipalUpdate_1(uint256) := TMP_257(uint256)
has variable
[i] _interestSincePrincipalUpdate cleared
typecheckig node...
TMP_257(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
Function name: repay
Internal call...
calculateInterestAccrued
_id
Function: calculateInterestAccrued
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
[i]Type for TMP_257

Name: TMP_257 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_25(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
_interestSincePrincipalUpdate_1(uint256) := TMP_257(uint256)
Function name: repay
asgn

Name: TMP_257 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _interestSincePrincipalUpdate Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interestSincePrincipalUpdate

Name: _interestSincePrincipalUpdate Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_interestSincePrincipalUpdate_1(uint256) := TMP_257(uint256)
XXXXX
clearning node...
clearing ir...?
REF_182(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
has variable
clearing ir...?
REF_183(uint256) -> REF_182.interestAccruedTillLastPrincipalUpdate
has variable
clearing ir...?
TMP_258(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_183', '_interestSincePrincipalUpdate_1'] 
has variable
[i] TMP_258 cleared
clearing ir...?
_totalInterestAccrued_1(uint256) := TMP_258(uint256)
has variable
[i] _totalInterestAccrued cleared
typecheckig node...
REF_182(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_182

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_183(uint256) -> REF_182.interestAccruedTillLastPrincipalUpdate
Function name: repay
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_183

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_258(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_183', '_interestSincePrincipalUpdate_1'] 
Function name: repay
Library Call: add

Name: TMP_258 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_258 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_258

Name: TMP_258 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_258(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_183', '_interestSincePrincipalUpdate_1'] 
XXXXX
_totalInterestAccrued_1(uint256) := TMP_258(uint256)
Function name: repay
asgn

Name: TMP_258 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalInterestAccrued Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalInterestAccrued

Name: _totalInterestAccrued Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_186(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
has variable
clearing ir...?
REF_187(uint256) -> REF_186.totalInterestRepaid
has variable
clearing ir...?
TMP_259(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalInterestAccrued_1', 'REF_187'] 
has variable
[i] TMP_259 cleared
clearing ir...?
_interestToPay_1(uint256) := TMP_259(uint256)
has variable
[i] _interestToPay cleared
typecheckig node...
REF_186(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_186

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_187(uint256) -> REF_186.totalInterestRepaid
Function name: repay
MEMBER
creditLineVariables
totalInterestRepaid
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_187

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_259(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalInterestAccrued_1', 'REF_187'] 
Function name: repay
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalInterestAccrued Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_259 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_259

Name: TMP_259 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_interestToPay_1(uint256) := TMP_259(uint256)
Function name: repay
asgn

Name: TMP_259 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _interestToPay Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interestToPay

Name: _interestToPay Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_189(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
has variable
clearing ir...?
REF_190(uint256) -> REF_189.principal
has variable
clearing ir...?
TMP_260(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_interestToPay_1', 'REF_190'] 
has variable
[i] TMP_260 cleared
clearing ir...?
_totalCurrentDebt_1(uint256) := TMP_260(uint256)
has variable
[i] _totalCurrentDebt cleared
typecheckig node...
REF_189(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_189

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_190(uint256) -> REF_189.principal
Function name: repay
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_190

Name: creditLineVariables.principal Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_260(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_interestToPay_1', 'REF_190'] 
Function name: repay
Library Call: add

Name: TMP_260 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: creditLineVariables.principal Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_260 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_260

Name: TMP_260 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalCurrentDebt_1(uint256) := TMP_260(uint256)
Function name: repay
asgn

Name: TMP_260 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalCurrentDebt Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalCurrentDebt

Name: _totalCurrentDebt Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_principalPaid_1(uint256) := 0(uint256)
has variable
[i] _principalPaid cleared
typecheckig node...
_principalPaid_1(uint256) := 0(uint256)
Function name: repay
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _principalPaid Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _principalPaid

Name: _principalPaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_261(bool) = _amount_1 >= _totalCurrentDebt_1
has variable
[i] TMP_261 cleared
clearing ir...?
CONDITION TMP_261
typecheckig node...
TMP_261(bool) = _amount_1 >= _totalCurrentDebt_1
Function name: repay
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_261

Name: TMP_261 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_261
Condition...
Conidtion: 
TMP_261
TMP_261
clearning node...
clearing ir...?
Emit PartialCreditLineRepaid(_id_1,_amount_1)
typecheckig node...
Emit PartialCreditLineRepaid(_id_1,_amount_1)
clearning node...
clearing ir...?
_amount_2(uint256) := _totalCurrentDebt_1(uint256)
has variable
[i] _amount cleared
typecheckig node...
_amount_2(uint256) := _totalCurrentDebt_1(uint256)
Function name: repay
asgn

Name: _totalCurrentDebt Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _amount

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
has variable
[i] _amount cleared
typecheckig node...
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
Function name: repay
Phi
[i]Type for _amount

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit CompleteCreditLineRepaid(_id_1,_amount_2)
typecheckig node...
Emit CompleteCreditLineRepaid(_id_1,_amount_2)
clearning node...
clearing ir...?
TMP_264(bool) = _amount_3 > _interestToPay_1
has variable
[i] TMP_264 cleared
clearing ir...?
CONDITION TMP_264
typecheckig node...
TMP_264(bool) = _amount_3 > _interestToPay_1
Function name: repay
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _interestToPay Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_264

Name: TMP_264 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_264
Condition...
Conidtion: 
TMP_264
TMP_264
clearning node...
clearing ir...?
REF_201(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
has variable
clearing ir...?
REF_202(uint256) -> REF_201.totalInterestRepaid
has variable
clearing ir...?
REF_203(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
has variable
clearing ir...?
REF_204(uint256) -> REF_203.totalInterestRepaid
has variable
clearing ir...?
TMP_267(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_204', '_amount_3'] 
has variable
[i] TMP_267 cleared
clearing ir...?
creditLineVariables_26(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_25'])
has variable
clearing ir...?
REF_202 (->creditLineVariables_26) := TMP_267(uint256)
has variable
typecheckig node...
REF_201(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_201

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_202(uint256) -> REF_201.totalInterestRepaid
Function name: repay
MEMBER
creditLineVariables
totalInterestRepaid
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_202

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_203(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_203

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_204(uint256) -> REF_203.totalInterestRepaid
Function name: repay
MEMBER
creditLineVariables
totalInterestRepaid
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_204

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_267(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_204', '_amount_3'] 
Function name: repay
Library Call: add

Name: TMP_267 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_267 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_267

Name: TMP_267 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_26(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_25'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_202 (->creditLineVariables_26) := TMP_267(uint256)
Function name: repay
asgn

Name: TMP_267 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_202 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_202

Name: REF_202 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_202 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_191(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
has variable
clearing ir...?
REF_192(uint256) -> REF_191.principal
has variable
clearing ir...?
TMP_265(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCurrentDebt_1', '_amount_3'] 
has variable
[i] TMP_265 cleared
clearing ir...?
creditLineVariables_27(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_25'])
has variable
clearing ir...?
REF_192 (->creditLineVariables_27) := TMP_265(uint256)
has variable
typecheckig node...
REF_191(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_191

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_192(uint256) -> REF_191.principal
Function name: repay
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_192

Name: creditLineVariables.principal Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_265(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCurrentDebt_1', '_amount_3'] 
Function name: repay
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalCurrentDebt Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_265 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_265

Name: TMP_265 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_27(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_25'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_192 (->creditLineVariables_27) := TMP_265(uint256)
Function name: repay
asgn

Name: TMP_265 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_192 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_192

Name: REF_192 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_192 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_principalPaid_3(uint256) := ϕ(['_principalPaid_2', '_principalPaid_1'])
has variable
[i] _principalPaid cleared
clearing ir...?
creditLineVariables_31(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_26', 'creditLineVariables_30'])
has variable
typecheckig node...
_principalPaid_3(uint256) := ϕ(['_principalPaid_2', '_principalPaid_1'])
Function name: repay
Phi
[i]Type for _principalPaid

Name: _principalPaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_31(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_26', 'creditLineVariables_30'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_194(CreditLine.CreditLineVariables) -> creditLineVariables_27[_id_1]
has variable
clearing ir...?
REF_195(uint256) -> REF_194.interestAccruedTillLastPrincipalUpdate
has variable
clearing ir...?
creditLineVariables_28(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_27'])
has variable
clearing ir...?
REF_195 (->creditLineVariables_28) := _totalInterestAccrued_1(uint256)
has variable
typecheckig node...
REF_194(CreditLine.CreditLineVariables) -> creditLineVariables_27[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_194

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_195(uint256) -> REF_194.interestAccruedTillLastPrincipalUpdate
Function name: repay
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_195

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_28(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_27'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_195 (->creditLineVariables_28) := _totalInterestAccrued_1(uint256)
Function name: repay
asgn

Name: _totalInterestAccrued Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_195 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_195

Name: REF_195 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_195 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._repay(uint256,uint256,bool,uint256)(_id_1,_amount_3,_fromSavingsAccount_1,_principalPaid_3)
typecheckig node...
INTERNAL_CALL, CreditLine._repay(uint256,uint256,bool,uint256)(_id_1,_amount_3,_fromSavingsAccount_1,_principalPaid_3)
Internal call...
_repay
_id
_amount
_fromSavingsAccount
_principalPaid
Function: _repay
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _repay
Function Visibility: internal
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1'])
has variable
[i] _id cleared
clearing ir...?
_amount_1(uint256) := ϕ(['_amount_3'])
has variable
[i] _amount cleared
clearing ir...?
_fromSavingsAccount_1(bool) := ϕ(['_fromSavingsAccount_1'])
has variable
[i] _fromSavingsAccount cleared
clearing ir...?
_principalPaid_1(uint256) := ϕ(['_principalPaid_3'])
has variable
[i] _principalPaid cleared
clearing ir...?
creditLineConstants_24(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
savingsAccount_9(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
has variable
clearing ir...?
defaultStrategy_2(address) := ϕ(['defaultStrategy_0', 'defaultStrategy_1'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: _repay
Phi
[i]Type for _id

Name: _id Function: _repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_amount_1(uint256) := ϕ(['_amount_3'])
Function name: _repay
Phi
[i]Type for _amount

Name: _amount Function: _repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fromSavingsAccount_1(bool) := ϕ(['_fromSavingsAccount_1'])
Function name: _repay
Phi
[i]Type for _fromSavingsAccount

Name: _fromSavingsAccount Function: _repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_principalPaid_1(uint256) := ϕ(['_principalPaid_3'])
Function name: _repay
Phi
[i]Type for _principalPaid

Name: _principalPaid Function: _repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_24(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: _repay
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
savingsAccount_9(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _repay
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
defaultStrategy_2(address) := ϕ(['defaultStrategy_0', 'defaultStrategy_1'])
Function name: _repay
Phi
[i]Type for defaultStrategy

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_237 = CONVERT savingsAccount_9 to ISavingsAccount
has variable
[i] TMP_237 cleared
clearing ir...?
_savingsAccount_1(ISavingsAccount) := TMP_237(ISavingsAccount)
has variable
[i] _savingsAccount cleared
typecheckig node...
TMP_237 = CONVERT savingsAccount_9 to ISavingsAccount
Function name: _repay

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_237 Function: _repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_237

Name: TMP_237 Function: _repay
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_savingsAccount_1(ISavingsAccount) := TMP_237(ISavingsAccount)
Function name: _repay
asgn

Name: TMP_237 Function: _repay
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: _savingsAccount Function: _repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _savingsAccount

Name: _savingsAccount Function: _repay
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_defaultStrategy_1(address) := defaultStrategy_2(address)
has variable
[i] _defaultStrategy cleared
typecheckig node...
_defaultStrategy_1(address) := defaultStrategy_2(address)
Function name: _repay
asgn

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _defaultStrategy Function: _repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _defaultStrategy

Name: _defaultStrategy Function: _repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_168(CreditLine.CreditLineConstants) -> creditLineConstants_24[_id_1]
has variable
clearing ir...?
REF_169(address) -> REF_168.borrowAsset
has variable
clearing ir...?
_borrowAsset_1(address) := REF_169(address)
has variable
[i] _borrowAsset cleared
typecheckig node...
REF_168(CreditLine.CreditLineConstants) -> creditLineConstants_24[_id_1]
Function name: _repay
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_168

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_169(address) -> REF_168.borrowAsset
Function name: _repay
MEMBER
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_169

Name: creditLineConstants.borrowAsset Function: _repay
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: _repay
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
_borrowAsset_1(address) := REF_169(address)
Function name: _repay
asgn

Name: creditLineConstants.borrowAsset Function: _repay
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: _borrowAsset Function: _repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowAsset

Name: _borrowAsset Function: _repay
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_170(CreditLine.CreditLineConstants) -> creditLineConstants_24[_id_1]
has variable
clearing ir...?
REF_171(address) -> REF_170.lender
has variable
clearing ir...?
_lender_1(address) := REF_171(address)
has variable
[i] _lender cleared
typecheckig node...
REF_170(CreditLine.CreditLineConstants) -> creditLineConstants_24[_id_1]
Function name: _repay
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_170

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_171(address) -> REF_170.lender
Function name: _repay
MEMBER
creditLineConstants
lender
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_171

Name: creditLineConstants.lender Function: _repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.lender Function: _repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_lender_1(address) := REF_171(address)
Function name: _repay
asgn

Name: creditLineConstants.lender Function: _repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _lender Function: _repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _lender

Name: _lender Function: _repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_238 = ! _fromSavingsAccount_1 
clearing ir...?
CONDITION TMP_238
typecheckig node...
TMP_238 = ! _fromSavingsAccount_1 
[i]Type for TMP_238

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_238
Condition...
Conidtion: 
TMP_238
TMP_238
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._repayFromSavingsAccount(uint256,address,address)(_amount_1,_borrowAsset_1,_lender_1)
typecheckig node...
INTERNAL_CALL, CreditLine._repayFromSavingsAccount(uint256,address,address)(_amount_1,_borrowAsset_1,_lender_1)
Internal call...
_repayFromSavingsAccount
_amount
_borrowAsset
_lender
Function: _repayFromSavingsAccount
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[1], [-1], 0, 'BASSET', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _repayFromSavingsAccount
Function Visibility: internal
clearning node...
clearing ir...?
_amount_1(uint256) := ϕ(['_amount_1'])
has variable
[i] _amount cleared
clearing ir...?
_asset_1(address) := ϕ(['_borrowAsset_1'])
has variable
[i] _asset cleared
clearing ir...?
_lender_1(address) := ϕ(['_lender_1'])
has variable
[i] _lender cleared
clearing ir...?
savingsAccount_7(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
has variable
clearing ir...?
strategyRegistry_6(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
has variable
typecheckig node...
_amount_1(uint256) := ϕ(['_amount_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _amount

Name: _amount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_asset_1(address) := ϕ(['_borrowAsset_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _asset

Name: _asset Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: u
LF: BASSET
Fields: 
Finance Type: undef
done.
_lender_1(address) := ϕ(['_lender_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _lender

Name: _lender Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: _lender
Fields: 
Finance Type: undef
done.
savingsAccount_7(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_6(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_219 = CONVERT strategyRegistry_6 to IStrategyRegistry
has variable
[i] TMP_219 cleared
clearing ir...?
TMP_220(address[]) = HIGH_LEVEL_CALL, dest:TMP_219(IStrategyRegistry), function:getStrategies, arguments:[]  
has variable
[i] TMP_220 cleared
clearing ir...?
savingsAccount_8(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_7', 'savingsAccount_6', 'savingsAccount_1'])
has variable
clearing ir...?
strategyRegistry_7(address) := ϕ(['strategyRegistry_6', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
has variable
clearing ir...?
_strategyList_1(address[]) := TMP_220(address[])
has variable
[i] _strategyList cleared
typecheckig node...
TMP_219 = CONVERT strategyRegistry_6 to IStrategyRegistry
Function name: _repayFromSavingsAccount

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_219 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_219

Name: TMP_219 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_220(address[]) = HIGH_LEVEL_CALL, dest:TMP_219(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _repayFromSavingsAccount
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_220
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_220

Name: TMP_220 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
savingsAccount_8(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_7', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_7(address) := ϕ(['strategyRegistry_6', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_220(address[])
Function name: _repayFromSavingsAccount
asgn

Name: TMP_220 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_221 = CONVERT savingsAccount_8 to ISavingsAccount
has variable
[i] TMP_221 cleared
clearing ir...?
_savingsAccount_1(ISavingsAccount) := TMP_221(ISavingsAccount)
has variable
[i] _savingsAccount cleared
typecheckig node...
TMP_221 = CONVERT savingsAccount_8 to ISavingsAccount
Function name: _repayFromSavingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_221 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_221

Name: TMP_221 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_savingsAccount_1(ISavingsAccount) := TMP_221(ISavingsAccount)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_221 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: _savingsAccount Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _savingsAccount

Name: _savingsAccount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_index_1(uint256) := 0(uint256)
has variable
[i] _index cleared
typecheckig node...
_index_1(uint256) := 0(uint256)
Function name: _repayFromSavingsAccount
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
has variable
[i] _activeAmount cleared
clearing ir...?
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
has variable
[i] _index cleared
clearing ir...?
REF_157 -> LENGTH _strategyList_1
clearing ir...?
TMP_222(bool) = _index_2 < REF_157
has variable
[i] TMP_222 cleared
clearing ir...?
CONDITION TMP_222
typecheckig node...
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_157 -> LENGTH _strategyList_1
[i]Type for REF_157

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_222(bool) = _index_2 < REF_157
Function name: _repayFromSavingsAccount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_222 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_222

Name: TMP_222 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_222(bool) = _index_2 < REF_157
XXXXX
CONDITION TMP_222
Condition...
Conidtion: 
TMP_222
TMP_222
clearning node...
clearing ir...?
REF_158(address) -> _strategyList_1[_index_2]
has variable
clearing ir...?
TMP_223 = CONVERT 0 to address
has variable
[i] TMP_223 cleared
clearing ir...?
TMP_224(bool) = REF_158 == TMP_223
has variable
[i] TMP_224 cleared
clearing ir...?
CONDITION TMP_224
typecheckig node...
REF_158(address) -> _strategyList_1[_index_2]
Function name: _repayFromSavingsAccount
INDEX

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _repayFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_158

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_223 = CONVERT 0 to address
Function name: _repayFromSavingsAccount
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_223 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_223

Name: TMP_223 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_224(bool) = REF_158 == TMP_223
Function name: _repayFromSavingsAccount
[i]Type for TMP_224

Name: TMP_224 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_224
Condition...
Conidtion: 
TMP_224
TMP_224
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_236(None) = SOLIDITY_CALL revert(string)(CreditLine::_repayFromSavingsAccount - Insufficient balance)
typecheckig node...
TMP_236(None) = SOLIDITY_CALL revert(string)(CreditLine::_repayFromSavingsAccount - Insufficient balance)
[i]Type for TMP_236

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_160(address) -> _strategyList_1[_index_2]
has variable
clearing ir...?
TMP_225(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['msg.sender', '_asset_1', 'REF_160']  
has variable
[i] TMP_225 cleared
clearing ir...?
_liquidityShares_1(uint256) := TMP_225(uint256)
has variable
[i] _liquidityShares cleared
typecheckig node...
REF_160(address) -> _strategyList_1[_index_2]
Function name: _repayFromSavingsAccount
INDEX

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _repayFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_160

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_225(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['msg.sender', '_asset_1', 'REF_160']  
Function name: _repayFromSavingsAccount
High Call: balanceInShares
func name:balanceInShares
other func name:balanceInShares
TMP_225
hlc contract name: SAVE func_name: balanceInShares
wfc len: 0
COPIED
[i]Type for TMP_225

Name: TMP_225 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := TMP_225(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_225 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_226(bool) = _liquidityShares_1 == 0
has variable
[i] TMP_226 cleared
clearing ir...?
CONDITION TMP_226
typecheckig node...
TMP_226(bool) = _liquidityShares_1 == 0
Function name: _repayFromSavingsAccount
[i]Type for TMP_226

Name: TMP_226 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_226
Condition...
Conidtion: 
TMP_226
TMP_226
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: _liquidityShares Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_161(address) -> _strategyList_1[_index_2]
has variable
clearing ir...?
TMP_227 = CONVERT REF_161 to IYield
has variable
[i] TMP_227 cleared
clearing ir...?
TMP_228(uint256) = HIGH_LEVEL_CALL, dest:TMP_227(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_asset_1']  
has variable
[i] TMP_228 cleared
clearing ir...?
_tokenInStrategy_2(uint256) := TMP_228(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
REF_161(address) -> _strategyList_1[_index_2]
Function name: _repayFromSavingsAccount
INDEX

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _repayFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_161

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_227 = CONVERT REF_161 to IYield
Function name: _repayFromSavingsAccount

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_227 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_227

Name: TMP_227 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_228(uint256) = HIGH_LEVEL_CALL, dest:TMP_227(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_asset_1']  
Function name: _repayFromSavingsAccount
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_228
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_asset
wfc len: 1
Check copy_toekn_tuple
([1], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_228

Name: TMP_228 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_228(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_228 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
has variable
[i] _tokensToTransfer cleared
typecheckig node...
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_229(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
has variable
[i] TMP_229 cleared
clearing ir...?
TMP_230(bool) = TMP_229 >= _amount_1
has variable
[i] TMP_230 cleared
clearing ir...?
CONDITION TMP_230
typecheckig node...
TMP_229(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
Function name: _repayFromSavingsAccount
Library Call: add

Name: TMP_229 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_229 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_229

Name: TMP_229 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_229(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
XXXXX
TMP_230(bool) = TMP_229 >= _amount_1
Function name: _repayFromSavingsAccount
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_230

Name: TMP_230 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_230
Condition...
Conidtion: 
TMP_230
TMP_230
clearning node...
clearing ir...?
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_1', '_tokensToTransfer_2'])
has variable
[i] _tokensToTransfer cleared
typecheckig node...
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_1', '_tokensToTransfer_2'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_232(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
has variable
[i] TMP_232 cleared
clearing ir...?
_activeAmount_2(uint256) := TMP_232(uint256)
has variable
[i] _activeAmount cleared
typecheckig node...
TMP_232(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
Function name: _repayFromSavingsAccount
Library Call: add

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_232

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_232(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
XXXXX
_activeAmount_2(uint256) := TMP_232(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_231(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
has variable
[i] TMP_231 cleared
clearing ir...?
_tokensToTransfer_2(uint256) := TMP_231(uint256)
has variable
[i] _tokensToTransfer cleared
typecheckig node...
TMP_231(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
Function name: _repayFromSavingsAccount
Library Call: sub
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_231 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_231

Name: TMP_231 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_231(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_231 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_167(address) -> _strategyList_1[_index_2]
has variable
clearing ir...?
TMP_233(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_167', 'msg.sender', '_lender_1']  
has variable
[i] TMP_233 cleared
typecheckig node...
REF_167(address) -> _strategyList_1[_index_2]
Function name: _repayFromSavingsAccount
INDEX

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _repayFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_167

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_233(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_167', 'msg.sender', '_lender_1']  
Function name: _repayFromSavingsAccount
High Call: transferFrom
func name:transferFrom
other func name:transferFrom
TMP_233
hlc contract name: SAVE func_name: transferFrom
wfc len: 0
COPIED
[i]Type for TMP_233

Name: TMP_233 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_234(bool) = _amount_1 == _activeAmount_2
has variable
[i] TMP_234 cleared
clearing ir...?
CONDITION TMP_234
typecheckig node...
TMP_234(bool) = _amount_1 == _activeAmount_2
Function name: _repayFromSavingsAccount
[i]Type for TMP_234

Name: TMP_234 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_234
Condition...
Conidtion: 
TMP_234
TMP_234
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_235(uint256) := _index_2(uint256)
has variable
[i] TMP_235 cleared
clearing ir...?
_index_3(uint256) = _index_2 + 1
has variable
[i] _index cleared
typecheckig node...
TMP_235(uint256) := _index_2(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_235 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_235

Name: TMP_235 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_index_3(uint256) = _index_2 + 1
Function name: _repayFromSavingsAccount
val: 1

Name: _index Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_repayFromSavingsAccount":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
_amount_1(uint256) := ϕ(['_amount_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _amount

Name: _amount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_asset_1(address) := ϕ(['_borrowAsset_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _asset

Name: _asset Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: u
LF: BASSET
Fields: 
Finance Type: undef
done.
_lender_1(address) := ϕ(['_lender_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _lender

Name: _lender Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: _lender
Fields: 
Finance Type: undef
done.
savingsAccount_7(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_6(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_219 = CONVERT strategyRegistry_6 to IStrategyRegistry
Function name: _repayFromSavingsAccount

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_219 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_219

Name: TMP_219 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_220(address[]) = HIGH_LEVEL_CALL, dest:TMP_219(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _repayFromSavingsAccount
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_220
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_220

Name: TMP_220 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
savingsAccount_8(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_7', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_7(address) := ϕ(['strategyRegistry_6', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_220(address[])
Function name: _repayFromSavingsAccount
asgn

Name: TMP_220 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_221 = CONVERT savingsAccount_8 to ISavingsAccount
Function name: _repayFromSavingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_221 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_221

Name: TMP_221 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_savingsAccount_1(ISavingsAccount) := TMP_221(ISavingsAccount)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_221 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: _savingsAccount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _savingsAccount

Name: _savingsAccount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_index_1(uint256) := 0(uint256)
Function name: _repayFromSavingsAccount
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_157 -> LENGTH _strategyList_1
[i]Type for REF_157

Name: REF_157 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_222(bool) = _index_2 < REF_157
Function name: _repayFromSavingsAccount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_222 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_222

Name: TMP_222 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_222(bool) = _index_2 < REF_157
XXXXX
CONDITION TMP_222
Condition...
Conidtion: 
TMP_222
TMP_222
typecheckig node...
REF_158(address) -> _strategyList_1[_index_2]
Function name: _repayFromSavingsAccount
INDEX

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _repayFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_158

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_223 = CONVERT 0 to address
Function name: _repayFromSavingsAccount
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_223 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_223

Name: TMP_223 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_224(bool) = REF_158 == TMP_223
Function name: _repayFromSavingsAccount
[i]Type for TMP_224

Name: TMP_224 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_224
Condition...
Conidtion: 
TMP_224
TMP_224
typecheckig node...
typecheckig node...
TMP_236(None) = SOLIDITY_CALL revert(string)(CreditLine::_repayFromSavingsAccount - Insufficient balance)
[i]Type for TMP_236

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
REF_160(address) -> _strategyList_1[_index_2]
Function name: _repayFromSavingsAccount
INDEX

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _repayFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_160

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_225(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['msg.sender', '_asset_1', 'REF_160']  
Function name: _repayFromSavingsAccount
High Call: balanceInShares
func name:balanceInShares
other func name:balanceInShares
TMP_225
hlc contract name: SAVE func_name: balanceInShares
wfc len: 0
COPIED
[i]Type for TMP_225

Name: TMP_225 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := TMP_225(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_225 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_226(bool) = _liquidityShares_1 == 0
Function name: _repayFromSavingsAccount
[i]Type for TMP_226

Name: TMP_226 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_226
Condition...
Conidtion: 
TMP_226
TMP_226
typecheckig node...
typecheckig node...
typecheckig node...
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: _liquidityShares Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_161(address) -> _strategyList_1[_index_2]
Function name: _repayFromSavingsAccount
INDEX

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _repayFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_161

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_227 = CONVERT REF_161 to IYield
Function name: _repayFromSavingsAccount

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_227 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_227

Name: TMP_227 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_228(uint256) = HIGH_LEVEL_CALL, dest:TMP_227(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_asset_1']  
Function name: _repayFromSavingsAccount
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_228
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_asset
wfc len: 1
Check copy_toekn_tuple
([1], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_228

Name: TMP_228 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_228(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_228 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_229(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
Function name: _repayFromSavingsAccount
Library Call: add

Name: TMP_229 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_229 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_229

Name: TMP_229 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_230(bool) = TMP_229 >= _amount_1
Function name: _repayFromSavingsAccount
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_230

Name: TMP_230 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_230
Condition...
Conidtion: 
TMP_230
TMP_230
typecheckig node...
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_1', '_tokensToTransfer_2'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_232(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
Function name: _repayFromSavingsAccount
Library Call: add

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_232

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_activeAmount_2(uint256) := TMP_232(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_231(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
Function name: _repayFromSavingsAccount
Library Call: sub
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_231 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_231

Name: TMP_231 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_231(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_231 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_167(address) -> _strategyList_1[_index_2]
Function name: _repayFromSavingsAccount
INDEX

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _repayFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_167

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_233(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_167', 'msg.sender', '_lender_1']  
Function name: _repayFromSavingsAccount
High Call: transferFrom
func name:transferFrom
other func name:transferFrom
TMP_233
hlc contract name: SAVE func_name: transferFrom
wfc len: 0
COPIED
[i]Type for TMP_233

Name: TMP_233 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_234(bool) = _amount_1 == _activeAmount_2
Function name: _repayFromSavingsAccount
[i]Type for TMP_234

Name: TMP_234 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_234
Condition...
Conidtion: 
TMP_234
TMP_234
typecheckig node...
typecheckig node...
typecheckig node...
TMP_235(uint256) := _index_2(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_235 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_235

Name: TMP_235 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_index_3(uint256) = _index_2 + 1
Function name: _repayFromSavingsAccount
val: 1

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_repayFromSavingsAccount":
 New undefined nodes- 1
 Old undefined nodes- 3
typecheckig node...
_amount_1(uint256) := ϕ(['_amount_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _amount

Name: _amount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_asset_1(address) := ϕ(['_borrowAsset_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _asset

Name: _asset Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: u
LF: BASSET
Fields: 
Finance Type: undef
done.
_lender_1(address) := ϕ(['_lender_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _lender

Name: _lender Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: _lender
Fields: 
Finance Type: undef
done.
savingsAccount_7(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_6(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_219 = CONVERT strategyRegistry_6 to IStrategyRegistry
Function name: _repayFromSavingsAccount

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_219 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_219

Name: TMP_219 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_220(address[]) = HIGH_LEVEL_CALL, dest:TMP_219(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _repayFromSavingsAccount
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_220
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_220

Name: TMP_220 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
savingsAccount_8(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_7', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_7(address) := ϕ(['strategyRegistry_6', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_220(address[])
Function name: _repayFromSavingsAccount
asgn

Name: TMP_220 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_221 = CONVERT savingsAccount_8 to ISavingsAccount
Function name: _repayFromSavingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_221 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_221

Name: TMP_221 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_savingsAccount_1(ISavingsAccount) := TMP_221(ISavingsAccount)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_221 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: _savingsAccount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _savingsAccount

Name: _savingsAccount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_index_1(uint256) := 0(uint256)
Function name: _repayFromSavingsAccount
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_index_2(uint256) := ϕ(['_index_3', '_index_1'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_157 -> LENGTH _strategyList_1
[i]Type for REF_157

Name: REF_157 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_222(bool) = _index_2 < REF_157
Function name: _repayFromSavingsAccount
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_222 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_222

Name: TMP_222 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_222(bool) = _index_2 < REF_157
XXXXX
CONDITION TMP_222
Condition...
Conidtion: 
TMP_222
TMP_222
typecheckig node...
REF_158(address) -> _strategyList_1[_index_2]
Function name: _repayFromSavingsAccount
INDEX

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _repayFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_158

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_223 = CONVERT 0 to address
Function name: _repayFromSavingsAccount
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_223 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_223

Name: TMP_223 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_224(bool) = REF_158 == TMP_223
Function name: _repayFromSavingsAccount
[i]Type for TMP_224

Name: TMP_224 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_224
Condition...
Conidtion: 
TMP_224
TMP_224
typecheckig node...
typecheckig node...
TMP_236(None) = SOLIDITY_CALL revert(string)(CreditLine::_repayFromSavingsAccount - Insufficient balance)
[i]Type for TMP_236

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
REF_160(address) -> _strategyList_1[_index_2]
Function name: _repayFromSavingsAccount
INDEX

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _repayFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_160

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_225(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:balanceInShares, arguments:['msg.sender', '_asset_1', 'REF_160']  
Function name: _repayFromSavingsAccount
High Call: balanceInShares
func name:balanceInShares
other func name:balanceInShares
TMP_225
hlc contract name: SAVE func_name: balanceInShares
wfc len: 0
COPIED
[i]Type for TMP_225

Name: TMP_225 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := TMP_225(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_225 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_226(bool) = _liquidityShares_1 == 0
Function name: _repayFromSavingsAccount
[i]Type for TMP_226

Name: TMP_226 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_226
Condition...
Conidtion: 
TMP_226
TMP_226
typecheckig node...
typecheckig node...
typecheckig node...
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: _liquidityShares Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_161(address) -> _strategyList_1[_index_2]
Function name: _repayFromSavingsAccount
INDEX

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _repayFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_161

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_227 = CONVERT REF_161 to IYield
Function name: _repayFromSavingsAccount

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_227 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_227

Name: TMP_227 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_228(uint256) = HIGH_LEVEL_CALL, dest:TMP_227(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_asset_1']  
Function name: _repayFromSavingsAccount
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_228
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_asset
wfc len: 1
Check copy_toekn_tuple
([1], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_228

Name: TMP_228 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_228(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_228 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: _tokenInStrategy Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_229(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
Function name: _repayFromSavingsAccount
Library Call: add

Name: TMP_229 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_229 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_229

Name: TMP_229 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_230(bool) = TMP_229 >= _amount_1
Function name: _repayFromSavingsAccount
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_230

Name: TMP_230 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_230
Condition...
Conidtion: 
TMP_230
TMP_230
typecheckig node...
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_1', '_tokensToTransfer_2'])
Function name: _repayFromSavingsAccount
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_232(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
Function name: _repayFromSavingsAccount
Library Call: add

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_232

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_activeAmount_2(uint256) := TMP_232(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_232 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_231(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_1', '_activeAmount_1'] 
Function name: _repayFromSavingsAccount
Library Call: sub
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_231 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_231

Name: TMP_231 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_231(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: TMP_231 Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _repayFromSavingsAccount
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_167(address) -> _strategyList_1[_index_2]
Function name: _repayFromSavingsAccount
INDEX

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _repayFromSavingsAccount
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_167

Name: _strategyList Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_233(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:transferFrom, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_167', 'msg.sender', '_lender_1']  
Function name: _repayFromSavingsAccount
High Call: transferFrom
func name:transferFrom
other func name:transferFrom
TMP_233
hlc contract name: SAVE func_name: transferFrom
wfc len: 0
COPIED
[i]Type for TMP_233

Name: TMP_233 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_234(bool) = _amount_1 == _activeAmount_2
Function name: _repayFromSavingsAccount
[i]Type for TMP_234

Name: TMP_234 Function: _repayFromSavingsAccount
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_234
Condition...
Conidtion: 
TMP_234
TMP_234
typecheckig node...
typecheckig node...
typecheckig node...
TMP_235(uint256) := _index_2(uint256)
Function name: _repayFromSavingsAccount
asgn

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_235 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_235

Name: TMP_235 Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_index_3(uint256) = _index_2 + 1
Function name: _repayFromSavingsAccount
val: 1

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for _index

Name: _index Function: _repayFromSavingsAccount
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 2 for function call "_repayFromSavingsAccount":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _repayFromSavingsAccount
done.
This IR caused addback:
INTERNAL_CALL, CreditLine._repayFromSavingsAccount(uint256,address,address)(_amount_1,_borrowAsset_1,_lender_1)
XXXXX
clearning node...
clearing ir...?
TMP_239 = CONVERT 0 to address
has variable
[i] TMP_239 cleared
clearing ir...?
TMP_240(bool) = _borrowAsset_1 == TMP_239
has variable
[i] TMP_240 cleared
clearing ir...?
CONDITION TMP_240
typecheckig node...
TMP_239 = CONVERT 0 to address
Function name: _repay
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_239 Function: _repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_239

Name: TMP_239 Function: _repay
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_240(bool) = _borrowAsset_1 == TMP_239
Function name: _repay
[i]Type for TMP_240

Name: TMP_240 Function: _repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_240
Condition...
Conidtion: 
TMP_240
TMP_240
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_251(bool) = _principalPaid_1 != 0
has variable
[i] TMP_251 cleared
clearing ir...?
CONDITION TMP_251
typecheckig node...
TMP_251(bool) = _principalPaid_1 != 0
Function name: _repay
[i]Type for TMP_251

Name: TMP_251 Function: _repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_251
Condition...
Conidtion: 
TMP_251
TMP_251
clearning node...
clearing ir...?
TMP_241(bool) = msg.value == _amount_1
has variable
[i] TMP_241 cleared
clearing ir...?
TMP_242(None) = SOLIDITY_CALL require(bool,string)(TMP_241,creditLine::repay - Ether sent not equal to repay amount)
typecheckig node...
TMP_241(bool) = msg.value == _amount_1
Function name: _repay
[i]Type for TMP_241

Name: TMP_241 Function: _repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_242(None) = SOLIDITY_CALL require(bool,string)(TMP_241,creditLine::repay - Ether sent not equal to repay amount)
[i]Type for TMP_242

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_244 = CONVERT _borrowAsset_1 to IERC20
has variable
[i] TMP_244 cleared
clearing ir...?
TMP_245 = CONVERT this to address
has variable
[i] TMP_245 cleared
clearing ir...?
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_244', 'msg.sender', 'TMP_245', '_amount_1'] 
typecheckig node...
TMP_244 = CONVERT _borrowAsset_1 to IERC20
Function name: _repay

Name: _borrowAsset Function: _repay
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_244 Function: _repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_244

Name: TMP_244 Function: _repay
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TMP_245 = CONVERT this to address
Function name: _repay
[i]Type for TMP_245

Name: TMP_245 Function: _repay
Num: -1
Den: -1
Norm: u
LF: CreditLine
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_244', 'msg.sender', 'TMP_245', '_amount_1'] 
Library Call: safeTransferFrom
done.
clearning node...
clearing ir...?
TMP_243(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_borrowAsset_1', '_defaultStrategy_1', '_lender_1'] value:_amount_1 
has variable
[i] TMP_243 cleared
typecheckig node...
TMP_243(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_borrowAsset_1', '_defaultStrategy_1', '_lender_1'] value:_amount_1 
Function name: _repay
High Call: deposit
func name:deposit
other func name:deposit
TMP_243
hlc contract name: SAVE func_name: deposit
wfc len: 0
COPIED
[i]Type for TMP_243

Name: TMP_243 Function: _repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_247 = CONVERT _borrowAsset_1 to IERC20
has variable
[i] TMP_247 cleared
clearing ir...?
TMP_248(bool) = HIGH_LEVEL_CALL, dest:TMP_247(IERC20), function:approve, arguments:['_defaultStrategy_1', '_amount_1']  
has variable
[i] TMP_248 cleared
typecheckig node...
TMP_247 = CONVERT _borrowAsset_1 to IERC20
Function name: _repay

Name: _borrowAsset Function: _repay
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_247 Function: _repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_247

Name: TMP_247 Function: _repay
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TMP_248(bool) = HIGH_LEVEL_CALL, dest:TMP_247(IERC20), function:approve, arguments:['_defaultStrategy_1', '_amount_1']  
Function name: _repay
High Call: approve
func name:approve
other func name:approve
TMP_248
[i]Type for TMP_248

Name: TMP_248 Function: _repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:increaseAllowanceToCreditLine, arguments:['_principalPaid_1', '_borrowAsset_1', '_lender_1']  
typecheckig node...
HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:increaseAllowanceToCreditLine, arguments:['_principalPaid_1', '_borrowAsset_1', '_lender_1']  
High Call: increaseAllowanceToCreditLine
func name:increaseAllowanceToCreditLine
other func name:increaseAllowanceToCreditLine
done.
clearning node...
clearing ir...?
TMP_249(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_borrowAsset_1', '_defaultStrategy_1', '_lender_1']  
has variable
[i] TMP_249 cleared
typecheckig node...
TMP_249(uint256) = HIGH_LEVEL_CALL, dest:_savingsAccount_1(ISavingsAccount), function:deposit, arguments:['_amount_1', '_borrowAsset_1', '_defaultStrategy_1', '_lender_1']  
Function name: _repay
High Call: deposit
func name:deposit
other func name:deposit
TMP_249
hlc contract name: SAVE func_name: deposit
wfc len: 0
COPIED
[i]Type for TMP_249

Name: TMP_249 Function: _repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "_repay":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _repay
done.
clearning node...
clearing ir...?
REF_206(CreditLine.CreditLineVariables) -> creditLineVariables_32[_id_1]
has variable
clearing ir...?
REF_207(uint256) -> REF_206.principal
has variable
clearing ir...?
TMP_269(bool) = REF_207 == 0
has variable
[i] TMP_269 cleared
clearing ir...?
CONDITION TMP_269
typecheckig node...
REF_206(CreditLine.CreditLineVariables) -> creditLineVariables_32[_id_1]
Function name: repay
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
creditLineVariables
[i]Type for REF_206

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_206(CreditLine.CreditLineVariables) -> creditLineVariables_32[_id_1]
XXXXX
REF_207(uint256) -> REF_206.principal
Function name: repay
MEMBER
REF_206
principal
repay
REF_206 Fields:
^^^
[i]Type for REF_207

Name: REF_206.principal Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_206.principal Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_269(bool) = REF_207 == 0
Function name: repay
[i]Type for TMP_269

Name: TMP_269 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_269
Condition...
Conidtion: 
TMP_269
TMP_269
clearning node...
clearing ir...?
REF_196(CreditLine.CreditLineVariables) -> creditLineVariables_28[_id_1]
has variable
clearing ir...?
REF_197(uint256) -> REF_196.lastPrincipalUpdateTime
has variable
clearing ir...?
creditLineVariables_29(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_28'])
has variable
clearing ir...?
REF_197 (->creditLineVariables_29) := block.timestamp(uint256)
has variable
typecheckig node...
REF_196(CreditLine.CreditLineVariables) -> creditLineVariables_28[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_196

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_197(uint256) -> REF_196.lastPrincipalUpdateTime
Function name: repay
MEMBER
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: lastPrincipalUpdateTime Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_197

Name: creditLineVariables.lastPrincipalUpdateTime Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.lastPrincipalUpdateTime Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastPrincipalUpdateTime Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_29(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_28'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_197 (->creditLineVariables_29) := block.timestamp(uint256)
Function name: repay
asgn
block.timestamp

Name: REF_197 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_197

Name: REF_197 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_197 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastPrincipalUpdateTime Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_197 (->creditLineVariables_29) := block.timestamp(uint256)
XXXXX
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._resetCreditLine(uint256)(_id_1)
typecheckig node...
INTERNAL_CALL, CreditLine._resetCreditLine(uint256)(_id_1)
Internal call...
_resetCreditLine
_id
Function: _resetCreditLine
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _resetCreditLine
Function Visibility: internal
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1'])
has variable
[i] _id cleared
clearing ir...?
creditLineVariables_33(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: _resetCreditLine
Phi
[i]Type for _id

Name: _id Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_33(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: _resetCreditLine
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_208(CreditLine.CreditLineVariables) -> creditLineVariables_33[_id_1]
has variable
clearing ir...?
REF_209(uint256) -> REF_208.lastPrincipalUpdateTime
has variable
clearing ir...?
creditLineVariables_34(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_33'])
has variable
clearing ir...?
REF_209 (->creditLineVariables_34) := 0(uint256)
has variable
typecheckig node...
REF_208(CreditLine.CreditLineVariables) -> creditLineVariables_33[_id_1]
Function name: _resetCreditLine
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_208

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_209(uint256) -> REF_208.lastPrincipalUpdateTime
Function name: _resetCreditLine
MEMBER
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: lastPrincipalUpdateTime Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_209

Name: creditLineVariables.lastPrincipalUpdateTime Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.lastPrincipalUpdateTime Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastPrincipalUpdateTime Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_34(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_33'])
Function name: _resetCreditLine
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_209 (->creditLineVariables_34) := 0(uint256)
Function name: _resetCreditLine
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_209 Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_209

Name: REF_209 Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_209 Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastPrincipalUpdateTime Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_210(CreditLine.CreditLineVariables) -> creditLineVariables_34[_id_1]
has variable
clearing ir...?
REF_211(uint256) -> REF_210.totalInterestRepaid
has variable
clearing ir...?
creditLineVariables_35(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_34'])
has variable
clearing ir...?
REF_211 (->creditLineVariables_35) := 0(uint256)
has variable
typecheckig node...
REF_210(CreditLine.CreditLineVariables) -> creditLineVariables_34[_id_1]
Function name: _resetCreditLine
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_210

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_211(uint256) -> REF_210.totalInterestRepaid
Function name: _resetCreditLine
MEMBER
creditLineVariables
totalInterestRepaid
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_211

Name: creditLineVariables.totalInterestRepaid Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_35(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_34'])
Function name: _resetCreditLine
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_211 (->creditLineVariables_35) := 0(uint256)
Function name: _resetCreditLine
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_211 Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_211

Name: REF_211 Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_211 Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_212(CreditLine.CreditLineVariables) -> creditLineVariables_35[_id_1]
has variable
clearing ir...?
REF_213(uint256) -> REF_212.interestAccruedTillLastPrincipalUpdate
has variable
clearing ir...?
creditLineVariables_36(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_35'])
has variable
clearing ir...?
REF_213 (->creditLineVariables_36) := 0(uint256)
has variable
typecheckig node...
REF_212(CreditLine.CreditLineVariables) -> creditLineVariables_35[_id_1]
Function name: _resetCreditLine
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_212

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_213(uint256) -> REF_212.interestAccruedTillLastPrincipalUpdate
Function name: _resetCreditLine
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_213

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_36(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_35'])
Function name: _resetCreditLine
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_213 (->creditLineVariables_36) := 0(uint256)
Function name: _resetCreditLine
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_213 Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_213

Name: REF_213 Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_213 Function: _resetCreditLine
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
Emit CreditLineReset(_id_1)
typecheckig node...
Emit CreditLineReset(_id_1)
WORKLIST iteration 0 for function call "_resetCreditLine":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _resetCreditLine
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_198(CreditLine.CreditLineVariables) -> creditLineVariables_29[_id_1]
has variable
clearing ir...?
REF_199(uint256) -> REF_198.totalInterestRepaid
has variable
clearing ir...?
creditLineVariables_30(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_29'])
has variable
clearing ir...?
REF_199 (->creditLineVariables_30) := _totalInterestAccrued_1(uint256)
has variable
typecheckig node...
REF_198(CreditLine.CreditLineVariables) -> creditLineVariables_29[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_198

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_199(uint256) -> REF_198.totalInterestRepaid
Function name: repay
MEMBER
creditLineVariables
totalInterestRepaid
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_199

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_30(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_29'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_199 (->creditLineVariables_30) := _totalInterestAccrued_1(uint256)
Function name: repay
asgn

Name: _totalInterestAccrued Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_199 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_199

Name: REF_199 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_199 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_266(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_3', '_interestToPay_1'] 
has variable
[i] TMP_266 cleared
clearing ir...?
_principalPaid_2(uint256) := TMP_266(uint256)
has variable
[i] _principalPaid cleared
typecheckig node...
TMP_266(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_3', '_interestToPay_1'] 
Function name: repay
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _interestToPay Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _interestToPay Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_266 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_266

Name: TMP_266 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_principalPaid_2(uint256) := TMP_266(uint256)
Function name: repay
asgn

Name: TMP_266 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _principalPaid Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _principalPaid

Name: _principalPaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "repay":
 New undefined nodes- 6
 Old undefined nodes- 0
typecheckig node...
creditLineVariables_23(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_25(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: repay
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
REF_177(CreditLine.CreditLineVariables) -> creditLineVariables_24[_id_1]
Function name: repay
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: status
Finance Type: undef
Name: None
creditLineVariables
[i]Type for REF_177

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_177(CreditLine.CreditLineVariables) -> creditLineVariables_24[_id_1]
XXXXX
REF_178(CreditLine.CreditLineStatus) -> REF_177.status
Function name: repay
MEMBER
REF_177
status
repay
REF_177 Fields:
^^^
[i]Type for REF_178

Name: REF_177.status Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_177.status Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_179(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: repay
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_179

Name: CreditLineStatus.ACTIVE Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_253(bool) = REF_178 == REF_179
Function name: repay
[i]Type for TMP_253

Name: TMP_253 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_254(None) = SOLIDITY_CALL require(bool,string)(TMP_253,CreditLine: The credit line is not yet active.)
[i]Type for TMP_254

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_180(CreditLine.CreditLineConstants) -> creditLineConstants_26[_id_1]
Function name: repay
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: lender
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_180

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_180(CreditLine.CreditLineConstants) -> creditLineConstants_26[_id_1]
XXXXX
REF_181(address) -> REF_180.lender
Function name: repay
MEMBER
REF_180
lender
repay
REF_180 Fields:
^^^
[i]Type for REF_181

Name: REF_180.lender Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_180.lender Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_255(bool) = REF_181 != msg.sender
Function name: repay
[i]Type for TMP_255

Name: TMP_255 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_256(None) = SOLIDITY_CALL require(bool,string)(TMP_255,Lender cant repay)
[i]Type for TMP_256

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_257(uint256) = INTERNAL_CALL, CreditLine.calculateInterestAccrued(uint256)(_id_1)
Function name: repay
Internal call...
calculateInterestAccrued
_id
Function: calculateInterestAccrued
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
[i]Type for TMP_257

Name: TMP_257 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_25(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_1'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
_interestSincePrincipalUpdate_1(uint256) := TMP_257(uint256)
Function name: repay
asgn

Name: TMP_257 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _interestSincePrincipalUpdate Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interestSincePrincipalUpdate

Name: _interestSincePrincipalUpdate Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_interestSincePrincipalUpdate_1(uint256) := TMP_257(uint256)
XXXXX
typecheckig node...
REF_182(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_182

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_183(uint256) -> REF_182.interestAccruedTillLastPrincipalUpdate
Function name: repay
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_183

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_258(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_183', '_interestSincePrincipalUpdate_1'] 
Function name: repay
Library Call: add

Name: TMP_258 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_258 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_258

Name: TMP_258 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_258(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_183', '_interestSincePrincipalUpdate_1'] 
XXXXX
_totalInterestAccrued_1(uint256) := TMP_258(uint256)
Function name: repay
asgn

Name: TMP_258 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalInterestAccrued Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalInterestAccrued

Name: _totalInterestAccrued Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_186(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_186

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_187(uint256) -> REF_186.totalInterestRepaid
Function name: repay
MEMBER
creditLineVariables
totalInterestRepaid
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_187

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_259(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalInterestAccrued_1', 'REF_187'] 
Function name: repay
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalInterestAccrued Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_259 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_259

Name: TMP_259 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_interestToPay_1(uint256) := TMP_259(uint256)
Function name: repay
asgn

Name: TMP_259 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _interestToPay Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _interestToPay

Name: _interestToPay Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_189(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_189

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_190(uint256) -> REF_189.principal
Function name: repay
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_190

Name: creditLineVariables.principal Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_260(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_interestToPay_1', 'REF_190'] 
Function name: repay
Library Call: add

Name: TMP_260 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: creditLineVariables.principal Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_260 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_260

Name: TMP_260 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_totalCurrentDebt_1(uint256) := TMP_260(uint256)
Function name: repay
asgn

Name: TMP_260 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalCurrentDebt Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalCurrentDebt

Name: _totalCurrentDebt Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_principalPaid_1(uint256) := 0(uint256)
Function name: repay
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _principalPaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _principalPaid

Name: _principalPaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_261(bool) = _amount_1 >= _totalCurrentDebt_1
Function name: repay
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_261

Name: TMP_261 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_261
Condition...
Conidtion: 
TMP_261
TMP_261
typecheckig node...
Emit PartialCreditLineRepaid(_id_1,_amount_1)
typecheckig node...
_amount_2(uint256) := _totalCurrentDebt_1(uint256)
Function name: repay
asgn

Name: _totalCurrentDebt Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _amount

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_amount_3(uint256) := ϕ(['_amount_2', '_amount_1'])
Function name: repay
Phi
[i]Type for _amount

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
Emit CompleteCreditLineRepaid(_id_1,_amount_2)
typecheckig node...
TMP_264(bool) = _amount_3 > _interestToPay_1
Function name: repay
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _interestToPay Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_264

Name: TMP_264 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_264
Condition...
Conidtion: 
TMP_264
TMP_264
typecheckig node...
REF_201(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_201

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_202(uint256) -> REF_201.totalInterestRepaid
Function name: repay
MEMBER
creditLineVariables
totalInterestRepaid
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_202

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_203(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_203

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_204(uint256) -> REF_203.totalInterestRepaid
Function name: repay
MEMBER
creditLineVariables
totalInterestRepaid
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_204

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_267(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['REF_204', '_amount_3'] 
Function name: repay
Library Call: add

Name: TMP_267 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_267 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_267

Name: TMP_267 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_26(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_25'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_202 (->creditLineVariables_26) := TMP_267(uint256)
Function name: repay
asgn

Name: TMP_267 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_202 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_202

Name: REF_202 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_202 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_191(CreditLine.CreditLineVariables) -> creditLineVariables_25[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_191

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_192(uint256) -> REF_191.principal
Function name: repay
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_192

Name: creditLineVariables.principal Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_265(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCurrentDebt_1', '_amount_3'] 
Function name: repay
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalCurrentDebt Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_265 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_265

Name: TMP_265 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_27(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_25'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_192 (->creditLineVariables_27) := TMP_265(uint256)
Function name: repay
asgn

Name: TMP_265 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_192 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_192

Name: REF_192 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_192 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_principalPaid_3(uint256) := ϕ(['_principalPaid_2', '_principalPaid_1'])
Function name: repay
Phi
[i]Type for _principalPaid

Name: _principalPaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_31(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_26', 'creditLineVariables_30'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
typecheckig node...
REF_194(CreditLine.CreditLineVariables) -> creditLineVariables_27[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_194

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_195(uint256) -> REF_194.interestAccruedTillLastPrincipalUpdate
Function name: repay
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_195

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_28(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_27'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_195 (->creditLineVariables_28) := _totalInterestAccrued_1(uint256)
Function name: repay
asgn

Name: _totalInterestAccrued Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_195 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_195

Name: REF_195 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_195 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, CreditLine._repay(uint256,uint256,bool,uint256)(_id_1,_amount_3,_fromSavingsAccount_1,_principalPaid_3)
Internal call...
_repay
_id
_amount
_fromSavingsAccount
_principalPaid
Function: _repay
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0
done.
typecheckig node...
REF_206(CreditLine.CreditLineVariables) -> creditLineVariables_32[_id_1]
Function name: repay
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: principal
Finance Type: undef
Name: None
creditLineVariables
[i]Type for REF_206

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_206(CreditLine.CreditLineVariables) -> creditLineVariables_32[_id_1]
XXXXX
REF_207(uint256) -> REF_206.principal
Function name: repay
MEMBER
REF_206
principal
repay
REF_206 Fields:
^^^
[i]Type for REF_207

Name: REF_206.principal Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_206.principal Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_269(bool) = REF_207 == 0
Function name: repay
[i]Type for TMP_269

Name: TMP_269 Function: repay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_269
Condition...
Conidtion: 
TMP_269
TMP_269
typecheckig node...
REF_196(CreditLine.CreditLineVariables) -> creditLineVariables_28[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_196

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_197(uint256) -> REF_196.lastPrincipalUpdateTime
Function name: repay
MEMBER
creditLineVariables
lastPrincipalUpdateTime
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: lastPrincipalUpdateTime Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_197

Name: creditLineVariables.lastPrincipalUpdateTime Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.lastPrincipalUpdateTime Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastPrincipalUpdateTime Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_29(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_28'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_197 (->creditLineVariables_29) := block.timestamp(uint256)
Function name: repay
asgn
block.timestamp

Name: REF_197 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
not variable
[i]Type for REF_197

Name: REF_197 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_197 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lastPrincipalUpdateTime Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_197 (->creditLineVariables_29) := block.timestamp(uint256)
XXXXX
typecheckig node...
INTERNAL_CALL, CreditLine._resetCreditLine(uint256)(_id_1)
Internal call...
_resetCreditLine
_id
Function: _resetCreditLine
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
typecheckig node...
typecheckig node...
REF_198(CreditLine.CreditLineVariables) -> creditLineVariables_29[_id_1]
Function name: repay
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_198

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_199(uint256) -> REF_198.totalInterestRepaid
Function name: repay
MEMBER
creditLineVariables
totalInterestRepaid
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_199

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.totalInterestRepaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_30(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_29'])
Function name: repay
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_199 (->creditLineVariables_30) := _totalInterestAccrued_1(uint256)
Function name: repay
asgn

Name: _totalInterestAccrued Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_199 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_199

Name: REF_199 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_199 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: totalInterestRepaid Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_266(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amount_3', '_interestToPay_1'] 
Function name: repay
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _interestToPay Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _interestToPay Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_266 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_266

Name: TMP_266 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_principalPaid_2(uint256) := TMP_266(uint256)
Function name: repay
asgn

Name: TMP_266 Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _principalPaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _principalPaid

Name: _principalPaid Function: repay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "repay":
 New undefined nodes- 6
 Old undefined nodes- 6
Saving return values for: repay
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _resetCreditLine
Function _resetCreditLine not marked
Mark Iterations TRUE, proceeding anyway
Function name: _resetCreditLine
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: close
Function name: close
Function Visibility (test): external
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
creditLineVariables_37(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
has variable
clearing ir...?
creditLineConstants_27(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
typecheckig node...
creditLineVariables_37(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: close
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_27(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: close
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
clearing ir...?
creditLineVariables_38(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
has variable
typecheckig node...
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
Internal call...
ifCreditLineExists
_id
Function: ifCreditLineExists
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
creditLineVariables_38(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
Function name: close
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_214(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
has variable
clearing ir...?
REF_215(address) -> REF_214.borrower
has variable
clearing ir...?
TMP_273(bool) = msg.sender == REF_215
has variable
[i] TMP_273 cleared
clearing ir...?
REF_216(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
has variable
clearing ir...?
REF_217(address) -> REF_216.lender
has variable
clearing ir...?
TMP_274(bool) = msg.sender == REF_217
has variable
[i] TMP_274 cleared
clearing ir...?
TMP_275(bool) = TMP_273 || TMP_274
has variable
[i] TMP_275 cleared
clearing ir...?
TMP_276(None) = SOLIDITY_CALL require(bool,string)(TMP_275,CreditLine: Permission denied while closing Line of credit)
typecheckig node...
REF_214(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
Function name: close
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_214

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_214(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
XXXXX
REF_215(address) -> REF_214.borrower
Function name: close
MEMBER
REF_214
borrower
close
REF_214 Fields:
^^^
[i]Type for REF_215

Name: REF_214.borrower Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_214.borrower Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrower Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_273(bool) = msg.sender == REF_215
Function name: close
[i]Type for TMP_273

Name: TMP_273 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_216(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
Function name: close
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: borrower
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_216

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_216(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
XXXXX
REF_217(address) -> REF_216.lender
Function name: close
MEMBER
REF_216
lender
close
REF_216 Fields:
^^^
[i]Type for REF_217

Name: REF_216.lender Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_216.lender Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_274(bool) = msg.sender == REF_217
Function name: close
[i]Type for TMP_274

Name: TMP_274 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_275(bool) = TMP_273 || TMP_274
Function name: close
[i]Type for TMP_275

Name: TMP_275 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_276(None) = SOLIDITY_CALL require(bool,string)(TMP_275,CreditLine: Permission denied while closing Line of credit)
[i]Type for TMP_276

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_218(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
has variable
clearing ir...?
REF_219(CreditLine.CreditLineStatus) -> REF_218.status
has variable
clearing ir...?
REF_220(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
has variable
clearing ir...?
TMP_277(bool) = REF_219 == REF_220
has variable
[i] TMP_277 cleared
clearing ir...?
TMP_278(None) = SOLIDITY_CALL require(bool,string)(TMP_277,CreditLine: Credit line should be active.)
typecheckig node...
REF_218(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
Function name: close
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_218

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_219(CreditLine.CreditLineStatus) -> REF_218.status
Function name: close
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_219

Name: creditLineVariables.status Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_220(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: close
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_220

Name: CreditLineStatus.ACTIVE Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_277(bool) = REF_219 == REF_220
Function name: close
[i]Type for TMP_277

Name: TMP_277 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_278(None) = SOLIDITY_CALL require(bool,string)(TMP_277,CreditLine: Credit line should be active.)
[i]Type for TMP_278

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_221(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
has variable
clearing ir...?
REF_222(uint256) -> REF_221.principal
has variable
clearing ir...?
TMP_279(bool) = REF_222 == 0
has variable
[i] TMP_279 cleared
clearing ir...?
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,CreditLine: Cannot be closed since not repaid.)
typecheckig node...
REF_221(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
Function name: close
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_221

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_222(uint256) -> REF_221.principal
Function name: close
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_222

Name: creditLineVariables.principal Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_279(bool) = REF_222 == 0
Function name: close
[i]Type for TMP_279

Name: TMP_279 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,CreditLine: Cannot be closed since not repaid.)
[i]Type for TMP_280

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_223(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
has variable
clearing ir...?
REF_224(uint256) -> REF_223.interestAccruedTillLastPrincipalUpdate
has variable
clearing ir...?
TMP_281(bool) = REF_224 == 0
has variable
[i] TMP_281 cleared
clearing ir...?
TMP_282(None) = SOLIDITY_CALL require(bool,string)(TMP_281,CreditLine: Cannot be closed since not repaid.)
typecheckig node...
REF_223(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
Function name: close
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_223

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_224(uint256) -> REF_223.interestAccruedTillLastPrincipalUpdate
Function name: close
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_224

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_281(bool) = REF_224 == 0
Function name: close
[i]Type for TMP_281

Name: TMP_281 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_282(None) = SOLIDITY_CALL require(bool,string)(TMP_281,CreditLine: Cannot be closed since not repaid.)
[i]Type for TMP_282

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_225(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
has variable
clearing ir...?
REF_226(CreditLine.CreditLineStatus) -> REF_225.status
has variable
clearing ir...?
REF_227(CreditLine.CreditLineStatus) -> CreditLineStatus.CLOSED
has variable
clearing ir...?
creditLineVariables_39(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_38'])
has variable
clearing ir...?
REF_226 (->creditLineVariables_39) := REF_227(CreditLine.CreditLineStatus)
has variable
typecheckig node...
REF_225(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
Function name: close
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_225

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_226(CreditLine.CreditLineStatus) -> REF_225.status
Function name: close
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_226

Name: creditLineVariables.status Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_227(CreditLine.CreditLineStatus) -> CreditLineStatus.CLOSED
Function name: close
MEMBER
CreditLineStatus
CreditLineStatus
CLOSED
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
^^^
[i]Type for REF_227

Name: CreditLineStatus.CLOSED Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.CLOSED Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CLOSED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_39(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_38'])
Function name: close
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_226 (->creditLineVariables_39) := REF_227(CreditLine.CreditLineStatus)
Function name: close
asgn

Name: CreditLineStatus.CLOSED Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_226 Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_226

Name: REF_226 Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_226 Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_226 (->creditLineVariables_39) := REF_227(CreditLine.CreditLineStatus)
XXXXX
clearning node...
clearing ir...?
Emit CreditLineClosed(_id_1)
typecheckig node...
Emit CreditLineClosed(_id_1)
WORKLIST iteration 0 for function call "close":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
creditLineVariables_37(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: close
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_27(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: close
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
Internal call...
ifCreditLineExists
_id
Function: ifCreditLineExists
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
creditLineVariables_38(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
Function name: close
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
typecheckig node...
REF_214(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
Function name: close
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: borrower, lender
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_214

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_214(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
XXXXX
REF_215(address) -> REF_214.borrower
Function name: close
MEMBER
REF_214
borrower
close
REF_214 Fields:
^^^
[i]Type for REF_215

Name: REF_214.borrower Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_214.borrower Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrower Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_273(bool) = msg.sender == REF_215
Function name: close
[i]Type for TMP_273

Name: TMP_273 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_216(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
Function name: close
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: borrower, lender
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_216

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_216(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
XXXXX
REF_217(address) -> REF_216.lender
Function name: close
MEMBER
REF_216
lender
close
REF_216 Fields:
^^^
[i]Type for REF_217

Name: REF_216.lender Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_216.lender Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_274(bool) = msg.sender == REF_217
Function name: close
[i]Type for TMP_274

Name: TMP_274 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_275(bool) = TMP_273 || TMP_274
Function name: close
[i]Type for TMP_275

Name: TMP_275 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_276(None) = SOLIDITY_CALL require(bool,string)(TMP_275,CreditLine: Permission denied while closing Line of credit)
[i]Type for TMP_276

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_218(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
Function name: close
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_218

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_219(CreditLine.CreditLineStatus) -> REF_218.status
Function name: close
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_219

Name: creditLineVariables.status Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_220(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: close
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
CLOSED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_220

Name: CreditLineStatus.ACTIVE Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_277(bool) = REF_219 == REF_220
Function name: close
[i]Type for TMP_277

Name: TMP_277 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_278(None) = SOLIDITY_CALL require(bool,string)(TMP_277,CreditLine: Credit line should be active.)
[i]Type for TMP_278

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_221(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
Function name: close
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_221

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_222(uint256) -> REF_221.principal
Function name: close
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_222

Name: creditLineVariables.principal Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_279(bool) = REF_222 == 0
Function name: close
[i]Type for TMP_279

Name: TMP_279 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,CreditLine: Cannot be closed since not repaid.)
[i]Type for TMP_280

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_223(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
Function name: close
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_223

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_224(uint256) -> REF_223.interestAccruedTillLastPrincipalUpdate
Function name: close
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_224

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_281(bool) = REF_224 == 0
Function name: close
[i]Type for TMP_281

Name: TMP_281 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_282(None) = SOLIDITY_CALL require(bool,string)(TMP_281,CreditLine: Cannot be closed since not repaid.)
[i]Type for TMP_282

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_225(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
Function name: close
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_225

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_226(CreditLine.CreditLineStatus) -> REF_225.status
Function name: close
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_226

Name: creditLineVariables.status Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_227(CreditLine.CreditLineStatus) -> CreditLineStatus.CLOSED
Function name: close
MEMBER
CreditLineStatus
CreditLineStatus
CLOSED
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
CLOSED
^^^

Name: CLOSED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_227

Name: CreditLineStatus.CLOSED Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.CLOSED Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CLOSED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_39(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_38'])
Function name: close
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_226 (->creditLineVariables_39) := REF_227(CreditLine.CreditLineStatus)
Function name: close
asgn

Name: CreditLineStatus.CLOSED Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_226 Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_226

Name: REF_226 Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_226 Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
Emit CreditLineClosed(_id_1)
WORKLIST iteration 1 for function call "close":
 New undefined nodes- 1
 Old undefined nodes- 2
typecheckig node...
creditLineVariables_37(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: close
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_27(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: close
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
Internal call...
ifCreditLineExists
_id
Function: ifCreditLineExists
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
creditLineVariables_38(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_45'])
Function name: close
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
typecheckig node...
REF_214(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
Function name: close
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: borrower, lender
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_214

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_214(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
XXXXX
REF_215(address) -> REF_214.borrower
Function name: close
MEMBER
REF_214
borrower
close
REF_214 Fields:
^^^
[i]Type for REF_215

Name: REF_214.borrower Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_214.borrower Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrower Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_273(bool) = msg.sender == REF_215
Function name: close
[i]Type for TMP_273

Name: TMP_273 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_216(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
Function name: close
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: borrower, lender
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_216

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_216(CreditLine.CreditLineConstants) -> creditLineConstants_28[_id_1]
XXXXX
REF_217(address) -> REF_216.lender
Function name: close
MEMBER
REF_216
lender
close
REF_216 Fields:
^^^
[i]Type for REF_217

Name: REF_216.lender Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_216.lender Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_274(bool) = msg.sender == REF_217
Function name: close
[i]Type for TMP_274

Name: TMP_274 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_275(bool) = TMP_273 || TMP_274
Function name: close
[i]Type for TMP_275

Name: TMP_275 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_276(None) = SOLIDITY_CALL require(bool,string)(TMP_275,CreditLine: Permission denied while closing Line of credit)
[i]Type for TMP_276

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_218(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
Function name: close
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_218

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_219(CreditLine.CreditLineStatus) -> REF_218.status
Function name: close
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_219

Name: creditLineVariables.status Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_220(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: close
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
CLOSED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_220

Name: CreditLineStatus.ACTIVE Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_277(bool) = REF_219 == REF_220
Function name: close
[i]Type for TMP_277

Name: TMP_277 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_278(None) = SOLIDITY_CALL require(bool,string)(TMP_277,CreditLine: Credit line should be active.)
[i]Type for TMP_278

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_221(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
Function name: close
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_221

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_222(uint256) -> REF_221.principal
Function name: close
MEMBER
creditLineVariables
principal
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_222

Name: creditLineVariables.principal Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.principal Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_279(bool) = REF_222 == 0
Function name: close
[i]Type for TMP_279

Name: TMP_279 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_280(None) = SOLIDITY_CALL require(bool,string)(TMP_279,CreditLine: Cannot be closed since not repaid.)
[i]Type for TMP_280

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_223(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
Function name: close
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_223

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_224(uint256) -> REF_223.interestAccruedTillLastPrincipalUpdate
Function name: close
MEMBER
creditLineVariables
interestAccruedTillLastPrincipalUpdate
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_224

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.interestAccruedTillLastPrincipalUpdate Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: interestAccruedTillLastPrincipalUpdate Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_281(bool) = REF_224 == 0
Function name: close
[i]Type for TMP_281

Name: TMP_281 Function: close
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_282(None) = SOLIDITY_CALL require(bool,string)(TMP_281,CreditLine: Cannot be closed since not repaid.)
[i]Type for TMP_282

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_225(CreditLine.CreditLineVariables) -> creditLineVariables_38[_id_1]
Function name: close
INDEX

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_225

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_226(CreditLine.CreditLineStatus) -> REF_225.status
Function name: close
MEMBER
creditLineVariables
status
global
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_226

Name: creditLineVariables.status Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineVariables.status Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_227(CreditLine.CreditLineStatus) -> CreditLineStatus.CLOSED
Function name: close
MEMBER
CreditLineStatus
CreditLineStatus
CLOSED
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
CLOSED
^^^

Name: CLOSED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_227

Name: CreditLineStatus.CLOSED Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.CLOSED Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CLOSED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_39(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_38'])
Function name: close
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_226 (->creditLineVariables_39) := REF_227(CreditLine.CreditLineStatus)
Function name: close
asgn

Name: CreditLineStatus.CLOSED Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_226 Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_226

Name: REF_226 Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_226 Function: close
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
Emit CreditLineClosed(_id_1)
WORKLIST iteration 2 for function call "close":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: close
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: calculateCurrentCollateralRatio
Function name: calculateCurrentCollateralRatio
Function Visibility (test): public
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1'])
has variable
[i] _id cleared
clearing ir...?
creditLineConstants_29(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
priceOracle_6(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: calculateCurrentCollateralRatio
Phi
[i]Type for _id

Name: _id Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_29(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateCurrentCollateralRatio
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_6(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
Function name: calculateCurrentCollateralRatio
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
typecheckig node...
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
Internal call...
ifCreditLineExists
_id
Function: ifCreditLineExists
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_285 = CONVERT priceOracle_7 to IPriceOracle
has variable
[i] TMP_285 cleared
clearing ir...?
REF_229(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
has variable
clearing ir...?
REF_230(address) -> REF_229.collateralAsset
has variable
clearing ir...?
REF_231(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
has variable
clearing ir...?
REF_232(address) -> REF_231.borrowAsset
has variable
clearing ir...?
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_285(IPriceOracle), function:getLatestPrice, arguments:['REF_230', 'REF_232']  
has variable
clearing ir...?
creditLineConstants_31(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_30', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
priceOracle_8(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_7'])
has variable
clearing ir...?
_ratioOfPrices_1(uint256)= UNPACK TUPLE_3 index: 0 
has variable
[i] _ratioOfPrices cleared
clearing ir...?
_decimals_1(uint256)= UNPACK TUPLE_3 index: 1 
has variable
[i] _decimals cleared
typecheckig node...
TMP_285 = CONVERT priceOracle_7 to IPriceOracle
Function name: calculateCurrentCollateralRatio

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: TMP_285 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_285

Name: TMP_285 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_229(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
Function name: calculateCurrentCollateralRatio
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_229

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_229(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
XXXXX
REF_230(address) -> REF_229.collateralAsset
Function name: calculateCurrentCollateralRatio
MEMBER
REF_229
collateralAsset
calculateCurrentCollateralRatio
REF_229 Fields:
^^^
[i]Type for REF_230

Name: REF_229.collateralAsset Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_229.collateralAsset Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: collateralAsset Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_231(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
Function name: calculateCurrentCollateralRatio
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: collateralAsset
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_231

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_231(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
XXXXX
REF_232(address) -> REF_231.borrowAsset
Function name: calculateCurrentCollateralRatio
MEMBER
REF_231
borrowAsset
calculateCurrentCollateralRatio
REF_231 Fields:
^^^
[i]Type for REF_232

Name: REF_231.borrowAsset Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_231.borrowAsset Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowAsset Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_285(IPriceOracle), function:getLatestPrice, arguments:['REF_230', 'REF_232']  
Function name: calculateCurrentCollateralRatio
High Call: getLatestPrice
func name:getLatestPrice
other func name:getLatestPrice
TUPLE_3
hlc contract name: ORACLE func_name: getLatestPrice
('t', [2], [1], 0, None)
REF_230
REF_232
('c', [-1], [-1], 0, None)
REF_230
REF_232
wfc len: 2
COPIED
[i]Type for TUPLE_3

Name: TUPLE_3 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_31(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_30', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateCurrentCollateralRatio
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_8(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_7'])
Function name: calculateCurrentCollateralRatio
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
_ratioOfPrices_1(uint256)= UNPACK TUPLE_3 index: 0 
Function name: calculateCurrentCollateralRatio
Reading tuple TUPLE_3 index 0
Check copy_toekn_tuple
([], [], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_decimals_1(uint256)= UNPACK TUPLE_3 index: 1 
Function name: calculateCurrentCollateralRatio
Reading tuple TUPLE_3 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _decimals

Name: _decimals Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_286(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
has variable
[i] TMP_286 cleared
clearing ir...?
currentDebt_1(uint256) := TMP_286(uint256)
has variable
[i] currentDebt cleared
typecheckig node...
TMP_286(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
Function name: calculateCurrentCollateralRatio
Internal call...
calculateCurrentDebt
_id
Function: calculateCurrentDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_6 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_286 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_286

Name: TMP_286 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
currentDebt_1(uint256) := TMP_286(uint256)
Function name: calculateCurrentCollateralRatio
asgn

Name: TMP_286 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentDebt Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentDebt

Name: currentDebt Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_287(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
has variable
[i] TMP_287 cleared
clearing ir...?
TMP_288(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_287', '_ratioOfPrices_1'] 
has variable
[i] TMP_288 cleared
clearing ir...?
TMP_289(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_288', 'currentDebt_1'] 
has variable
[i] TMP_289 cleared
clearing ir...?
TMP_290(uint256) = 10 ** 30
has variable
[i] TMP_290 cleared
clearing ir...?
TMP_291(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_289', 'TMP_290'] 
has variable
[i] TMP_291 cleared
clearing ir...?
currentCollateralRatio_1(uint256) := TMP_291(uint256)
has variable
[i] currentCollateralRatio cleared
typecheckig node...
TMP_287(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
Function name: calculateCurrentCollateralRatio
Internal call...
calculateTotalCollateralTokens
_id
Function: calculateTotalCollateralTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_7 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_287 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_287

Name: TMP_287 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_288(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_287', '_ratioOfPrices_1'] 
Function name: calculateCurrentCollateralRatio
Library Call: mul
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_287 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_288 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_288

Name: TMP_288 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_288(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_287', '_ratioOfPrices_1'] 
XXXXX
TMP_289(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_288', 'currentDebt_1'] 
Function name: calculateCurrentCollateralRatio
Library Call: div
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_289 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_288 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_289 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_289

Name: TMP_289 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_290(uint256) = 10 ** 30
Function name: calculateCurrentCollateralRatio
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_290 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_290

Name: TMP_290 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_291(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_289', 'TMP_290'] 
Function name: calculateCurrentCollateralRatio
Library Call: mul
testing mul...
lnorm: 0 rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_289 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_291 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_291

Name: TMP_291 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
currentCollateralRatio_1(uint256) := TMP_291(uint256)
Function name: calculateCurrentCollateralRatio
asgn

Name: TMP_291 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef

Name: currentCollateralRatio Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentCollateralRatio

Name: currentCollateralRatio Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN currentCollateralRatio_1
typecheckig node...
RETURN currentCollateralRatio_1
RETURN

Name: currentCollateralRatio Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "calculateCurrentCollateralRatio":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: calculateCurrentCollateralRatio
Phi
[i]Type for _id

Name: _id Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_29(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateCurrentCollateralRatio
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_6(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
Function name: calculateCurrentCollateralRatio
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, CreditLine.ifCreditLineExists(uint256)(_id_1)
Internal call...
ifCreditLineExists
_id
Function: ifCreditLineExists
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
typecheckig node...
typecheckig node...
typecheckig node...
TMP_285 = CONVERT priceOracle_7 to IPriceOracle
Function name: calculateCurrentCollateralRatio

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: TMP_285 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[i]Type for TMP_285

Name: TMP_285 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_229(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
Function name: calculateCurrentCollateralRatio
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: collateralAsset, borrowAsset
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_229

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_229(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
XXXXX
REF_230(address) -> REF_229.collateralAsset
Function name: calculateCurrentCollateralRatio
MEMBER
REF_229
collateralAsset
calculateCurrentCollateralRatio
REF_229 Fields:
^^^
[i]Type for REF_230

Name: REF_229.collateralAsset Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_229.collateralAsset Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: collateralAsset Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_231(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
Function name: calculateCurrentCollateralRatio
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: collateralAsset, borrowAsset
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_231

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_231(CreditLine.CreditLineConstants) -> creditLineConstants_30[_id_1]
XXXXX
REF_232(address) -> REF_231.borrowAsset
Function name: calculateCurrentCollateralRatio
MEMBER
REF_231
borrowAsset
calculateCurrentCollateralRatio
REF_231 Fields:
^^^
[i]Type for REF_232

Name: REF_231.borrowAsset Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_231.borrowAsset Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowAsset Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_285(IPriceOracle), function:getLatestPrice, arguments:['REF_230', 'REF_232']  
Function name: calculateCurrentCollateralRatio
High Call: getLatestPrice
func name:getLatestPrice
other func name:getLatestPrice
TUPLE_3
hlc contract name: ORACLE func_name: getLatestPrice
('t', [2], [1], 0, None)
REF_230
REF_232
('c', [-1], [-1], 0, None)
REF_230
REF_232
wfc len: 2
COPIED
[i]Type for TUPLE_3

Name: TUPLE_3 Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_31(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_30', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateCurrentCollateralRatio
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_8(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_7'])
Function name: calculateCurrentCollateralRatio
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
_ratioOfPrices_1(uint256)= UNPACK TUPLE_3 index: 0 
Function name: calculateCurrentCollateralRatio
Reading tuple TUPLE_3 index 0
Check copy_toekn_tuple
([], [], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: calculateCurrentCollateralRatio
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_decimals_1(uint256)= UNPACK TUPLE_3 index: 1 
Function name: calculateCurrentCollateralRatio
Reading tuple TUPLE_3 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _decimals

Name: _decimals Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_286(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
Function name: calculateCurrentCollateralRatio
Internal call...
calculateCurrentDebt
_id
Function: calculateCurrentDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_6 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_286 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_286

Name: TMP_286 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
currentDebt_1(uint256) := TMP_286(uint256)
Function name: calculateCurrentCollateralRatio
asgn

Name: TMP_286 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentDebt Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentDebt

Name: currentDebt Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_287(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
Function name: calculateCurrentCollateralRatio
Internal call...
calculateTotalCollateralTokens
_id
Function: calculateTotalCollateralTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_7 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_287 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_287

Name: TMP_287 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_288(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_287', '_ratioOfPrices_1'] 
Function name: calculateCurrentCollateralRatio
Library Call: mul
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_287 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_288 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_288

Name: TMP_288 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_288(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_287', '_ratioOfPrices_1'] 
XXXXX
TMP_289(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_288', 'currentDebt_1'] 
Function name: calculateCurrentCollateralRatio
Library Call: div
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_289 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_288 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_289 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_289

Name: TMP_289 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_290(uint256) = 10 ** 30
Function name: calculateCurrentCollateralRatio
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_290 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:30
30
val: 10
1
[i]Type for TMP_290

Name: TMP_290 Function: calculateCurrentCollateralRatio
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_291(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_289', 'TMP_290'] 
Function name: calculateCurrentCollateralRatio
Library Call: mul
testing mul...
lnorm: 0 rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_289 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_291 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_291

Name: TMP_291 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
currentCollateralRatio_1(uint256) := TMP_291(uint256)
Function name: calculateCurrentCollateralRatio
asgn

Name: TMP_291 Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef

Name: currentCollateralRatio Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentCollateralRatio

Name: currentCollateralRatio Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
RETURN currentCollateralRatio_1
RETURN

Name: currentCollateralRatio Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "calculateCurrentCollateralRatio":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: calculateCurrentCollateralRatio

Name: currentCollateralRatio Function: calculateCurrentCollateralRatio
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
___
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: calculateTotalCollateralTokens
Function name: calculateTotalCollateralTokens
Function Visibility (test): public
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
has variable
[i] _id cleared
clearing ir...?
collateralShareInStrategy_11(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
creditLineConstants_32(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
strategyRegistry_8(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for _id

Name: _id Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_11(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_32(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
strategyRegistry_8(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_236(CreditLine.CreditLineConstants) -> creditLineConstants_32[_id_1]
has variable
clearing ir...?
REF_237(address) -> REF_236.collateralAsset
has variable
clearing ir...?
_collateralAsset_1(address) := REF_237(address)
has variable
[i] _collateralAsset cleared
typecheckig node...
REF_236(CreditLine.CreditLineConstants) -> creditLineConstants_32[_id_1]
Function name: calculateTotalCollateralTokens
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_236

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_237(address) -> REF_236.collateralAsset
Function name: calculateTotalCollateralTokens
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_237

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_237(address)
Function name: calculateTotalCollateralTokens
asgn

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: CASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_293 = CONVERT strategyRegistry_8 to IStrategyRegistry
has variable
[i] TMP_293 cleared
clearing ir...?
TMP_294(address[]) = HIGH_LEVEL_CALL, dest:TMP_293(IStrategyRegistry), function:getStrategies, arguments:[]  
has variable
[i] TMP_294 cleared
clearing ir...?
collateralShareInStrategy_12(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_11'])
has variable
clearing ir...?
strategyRegistry_9(address) := ϕ(['strategyRegistry_8', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
has variable
clearing ir...?
_strategyList_1(address[]) := TMP_294(address[])
has variable
[i] _strategyList cleared
typecheckig node...
TMP_293 = CONVERT strategyRegistry_8 to IStrategyRegistry
Function name: calculateTotalCollateralTokens

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_293

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_294(address[]) = HIGH_LEVEL_CALL, dest:TMP_293(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: calculateTotalCollateralTokens
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_294
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_294

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_12(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_11'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
strategyRegistry_9(address) := ϕ(['strategyRegistry_8', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_294(address[])
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
index_1(uint256) := 0(uint256)
has variable
[i] index cleared
typecheckig node...
index_1(uint256) := 0(uint256)
Function name: calculateTotalCollateralTokens
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_amount_1(uint256) := ϕ(['_amount_0', '_amount_2'])
has variable
[i] _amount cleared
clearing ir...?
index_2(uint256) := ϕ(['index_3', 'index_1'])
has variable
[i] index cleared
clearing ir...?
REF_239 -> LENGTH _strategyList_1
clearing ir...?
TMP_295(bool) = index_2 < REF_239
has variable
[i] TMP_295 cleared
clearing ir...?
CONDITION TMP_295
typecheckig node...
_amount_1(uint256) := ϕ(['_amount_0', '_amount_2'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
index_2(uint256) := ϕ(['index_3', 'index_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_239 -> LENGTH _strategyList_1
[i]Type for REF_239

Name: REF_239 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_295(bool) = index_2 < REF_239
Function name: calculateTotalCollateralTokens
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_295

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_295(bool) = index_2 < REF_239
XXXXX
CONDITION TMP_295
Condition...
Conidtion: 
TMP_295
TMP_295
clearning node...
clearing ir...?
REF_240(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_296 = CONVERT 0 to address
has variable
[i] TMP_296 cleared
clearing ir...?
TMP_297(bool) = REF_240 == TMP_296
has variable
[i] TMP_297 cleared
clearing ir...?
CONDITION TMP_297
typecheckig node...
REF_240(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_240

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_296 = CONVERT 0 to address
Function name: calculateTotalCollateralTokens
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_296

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_297(bool) = REF_240 == TMP_296
Function name: calculateTotalCollateralTokens
[i]Type for TMP_297

Name: TMP_297 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_297
Condition...
Conidtion: 
TMP_297
TMP_297
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_241(mapping(address => uint256)) -> collateralShareInStrategy_12[_id_1]
has variable
clearing ir...?
REF_242(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
REF_243(uint256) -> REF_241[REF_242]
has variable
clearing ir...?
_liquidityShares_1(uint256) := REF_243(uint256)
has variable
[i] _liquidityShares cleared
typecheckig node...
REF_241(mapping(address => uint256)) -> collateralShareInStrategy_12[_id_1]
Function name: calculateTotalCollateralTokens
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_241

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_242(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_242

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_243(uint256) -> REF_241[REF_242]
Function name: calculateTotalCollateralTokens
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_243

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := REF_243(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_244(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_298 = CONVERT REF_244 to IYield
has variable
[i] TMP_298 cleared
clearing ir...?
TMP_299(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
has variable
[i] TMP_299 cleared
clearing ir...?
collateralShareInStrategy_13(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
_tokenInStrategy_2(uint256) := TMP_299(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
REF_244(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_244

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_298 = CONVERT REF_244 to IYield
Function name: calculateTotalCollateralTokens

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_298

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_299(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
Function name: calculateTotalCollateralTokens
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_299
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_collateralAsset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_299

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_13(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_299(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _amount_1
typecheckig node...
RETURN _amount_1
RETURN

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
has variable
[i] TMP_300 cleared
clearing ir...?
_amount_2(uint256) := TMP_300(uint256)
has variable
[i] _amount cleared
typecheckig node...
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
Function name: calculateTotalCollateralTokens
Library Call: add

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_300

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_amount_2(uint256) := TMP_300(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_301(uint256) := index_2(uint256)
has variable
[i] TMP_301 cleared
clearing ir...?
index_3(uint256) = index_2 + 1
has variable
[i] index cleared
typecheckig node...
TMP_301(uint256) := index_2(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_301

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_3(uint256) = index_2 + 1
Function name: calculateTotalCollateralTokens
val: 1

Name: index Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "calculateTotalCollateralTokens":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for _id

Name: _id Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_11(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_32(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
strategyRegistry_8(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_236(CreditLine.CreditLineConstants) -> creditLineConstants_32[_id_1]
Function name: calculateTotalCollateralTokens
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_236

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_237(address) -> REF_236.collateralAsset
Function name: calculateTotalCollateralTokens
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_237

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_237(address)
Function name: calculateTotalCollateralTokens
asgn

Name: creditLineConstants.collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_293 = CONVERT strategyRegistry_8 to IStrategyRegistry
Function name: calculateTotalCollateralTokens

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_293

Name: TMP_293 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_294(address[]) = HIGH_LEVEL_CALL, dest:TMP_293(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: calculateTotalCollateralTokens
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_294
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_294

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_12(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_11'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
strategyRegistry_9(address) := ϕ(['strategyRegistry_8', 'strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_294(address[])
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_294 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
index_1(uint256) := 0(uint256)
Function name: calculateTotalCollateralTokens
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_amount_1(uint256) := ϕ(['_amount_0', '_amount_2'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
index_2(uint256) := ϕ(['index_3', 'index_1'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_239 -> LENGTH _strategyList_1
[i]Type for REF_239

Name: REF_239 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_295(bool) = index_2 < REF_239
Function name: calculateTotalCollateralTokens
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_295

Name: TMP_295 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_295(bool) = index_2 < REF_239
XXXXX
CONDITION TMP_295
Condition...
Conidtion: 
TMP_295
TMP_295
typecheckig node...
REF_240(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_240

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_296 = CONVERT 0 to address
Function name: calculateTotalCollateralTokens
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_296

Name: TMP_296 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_297(bool) = REF_240 == TMP_296
Function name: calculateTotalCollateralTokens
[i]Type for TMP_297

Name: TMP_297 Function: calculateTotalCollateralTokens
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_297
Condition...
Conidtion: 
TMP_297
TMP_297
typecheckig node...
typecheckig node...
typecheckig node...
typecheckig node...
REF_241(mapping(address => uint256)) -> collateralShareInStrategy_12[_id_1]
Function name: calculateTotalCollateralTokens
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_241

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_242(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_242

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_243(uint256) -> REF_241[REF_242]
Function name: calculateTotalCollateralTokens
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_243

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_liquidityShares_1(uint256) := REF_243(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _liquidityShares

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokenInStrategy_1(uint256) := _liquidityShares_1(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: _liquidityShares Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_244(address) -> _strategyList_1[index_2]
Function name: calculateTotalCollateralTokens
INDEX

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: calculateTotalCollateralTokens
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_244

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_298 = CONVERT REF_244 to IYield
Function name: calculateTotalCollateralTokens

Name: _strategyList Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_298

Name: TMP_298 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_299(uint256) = HIGH_LEVEL_CALL, dest:TMP_298(IYield), function:getTokensForShares, arguments:['_liquidityShares_1', '_collateralAsset_1']  
Function name: calculateTotalCollateralTokens
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_299
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
_liquidityShares
_collateralAsset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_299

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_13(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: calculateTotalCollateralTokens
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_299(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_299 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
RETURN _amount_1
RETURN

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
typecheckig node...
TMP_300(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_amount_1', '_tokenInStrategy_2'] 
Function name: calculateTotalCollateralTokens
Library Call: add

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_300

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_amount_2(uint256) := TMP_300(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: TMP_300 Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _amount

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_301(uint256) := index_2(uint256)
Function name: calculateTotalCollateralTokens
asgn

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_301

Name: TMP_301 Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_3(uint256) = index_2 + 1
Function name: calculateTotalCollateralTokens
val: 1

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: calculateTotalCollateralTokens
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "calculateTotalCollateralTokens":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: calculateTotalCollateralTokens

Name: _amount Function: calculateTotalCollateralTokens
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: withdrawCollateral
Function name: withdrawCollateral
Function Visibility (test): external
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: withdrawCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_amount
Finding type for _amount...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _amount Function: withdrawCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_toSavingsAccount
Finding type for _toSavingsAccount...
bool
SKIP bool
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
creditLineConstants_33(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
typecheckig node...
creditLineConstants_33(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: withdrawCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
MODIFIER_CALL, CreditLine.onlyCreditLineBorrower(uint256)(_id_1)
clearing ir...?
creditLineConstants_35(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_47'])
has variable
typecheckig node...
MODIFIER_CALL, CreditLine.onlyCreditLineBorrower(uint256)(_id_1)
Internal call...
onlyCreditLineBorrower
_id
Function: onlyCreditLineBorrower
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
creditLineConstants_35(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_47'])
Function name: withdrawCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_302(uint256) = INTERNAL_CALL, CreditLine.withdrawableCollateral(uint256)(_id_1)
has variable
[i] TMP_302 cleared
clearing ir...?
creditLineConstants_36(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40'])
has variable
clearing ir...?
_withdrawableCollateral_1(uint256) := TMP_302(uint256)
has variable
[i] _withdrawableCollateral cleared
typecheckig node...
TMP_302(uint256) = INTERNAL_CALL, CreditLine.withdrawableCollateral(uint256)(_id_1)
Function name: withdrawCollateral
Internal call...
withdrawableCollateral
_id
Function: withdrawableCollateral
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: withdrawableCollateral
Function Visibility: public
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1'])
has variable
[i] _id cleared
clearing ir...?
creditLineConstants_37(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
priceOracle_9(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: withdrawableCollateral
Phi
[i]Type for _id

Name: _id Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_37(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: withdrawableCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_9(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
Function name: withdrawableCollateral
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_309 = CONVERT priceOracle_9 to IPriceOracle
has variable
[i] TMP_309 cleared
clearing ir...?
REF_250(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
has variable
clearing ir...?
REF_251(address) -> REF_250.collateralAsset
has variable
clearing ir...?
REF_252(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
has variable
clearing ir...?
REF_253(address) -> REF_252.borrowAsset
has variable
clearing ir...?
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_309(IPriceOracle), function:getLatestPrice, arguments:['REF_251', 'REF_253']  
has variable
clearing ir...?
creditLineConstants_38(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_37', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
priceOracle_10(address) := ϕ(['priceOracle_9', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1'])
has variable
clearing ir...?
_ratioOfPrices_1(uint256)= UNPACK TUPLE_4 index: 0 
has variable
[i] _ratioOfPrices cleared
clearing ir...?
_decimals_1(uint256)= UNPACK TUPLE_4 index: 1 
has variable
[i] _decimals cleared
typecheckig node...
TMP_309 = CONVERT priceOracle_9 to IPriceOracle
Function name: withdrawableCollateral

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: TMP_309 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_309

Name: TMP_309 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_250(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
Function name: withdrawableCollateral
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_250

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_251(address) -> REF_250.collateralAsset
Function name: withdrawableCollateral
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_251

Name: creditLineConstants.collateralAsset Function: withdrawableCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: withdrawableCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
REF_252(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
Function name: withdrawableCollateral
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_252

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_253(address) -> REF_252.borrowAsset
Function name: withdrawableCollateral
MEMBER
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_253

Name: creditLineConstants.borrowAsset Function: withdrawableCollateral
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: withdrawableCollateral
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_309(IPriceOracle), function:getLatestPrice, arguments:['REF_251', 'REF_253']  
Function name: withdrawableCollateral
High Call: getLatestPrice
func name:getLatestPrice
other func name:getLatestPrice
TUPLE_4
hlc contract name: ORACLE func_name: getLatestPrice
('t', [2], [1], 0, None)
REF_251
REF_253
('c', [-1], [-1], 0, None)
REF_251
REF_253
wfc len: 2
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_38(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_37', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: withdrawableCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_10(address) := ϕ(['priceOracle_9', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1'])
Function name: withdrawableCollateral
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
_ratioOfPrices_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: withdrawableCollateral
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([1, -1], [-1, 2], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: withdrawableCollateral
Num: 1
Den: 2
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_decimals_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: withdrawableCollateral
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _decimals

Name: _decimals Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_310(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
has variable
[i] TMP_310 cleared
clearing ir...?
creditLineConstants_39(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
has variable
clearing ir...?
_totalCollateralTokens_1(uint256) := TMP_310(uint256)
has variable
[i] _totalCollateralTokens cleared
typecheckig node...
TMP_310(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
Function name: withdrawableCollateral
Internal call...
calculateTotalCollateralTokens
_id
Function: calculateTotalCollateralTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_7 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_39(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Function name: withdrawableCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_totalCollateralTokens_1(uint256) := TMP_310(uint256)
Function name: withdrawableCollateral
asgn

Name: TMP_310 Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_311(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
has variable
[i] TMP_311 cleared
clearing ir...?
_currentDebt_1(uint256) := TMP_311(uint256)
has variable
[i] _currentDebt cleared
typecheckig node...
TMP_311(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
Function name: withdrawableCollateral
Internal call...
calculateCurrentDebt
_id
Function: calculateCurrentDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_6 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_311 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_currentDebt_1(uint256) := TMP_311(uint256)
Function name: withdrawableCollateral
asgn

Name: TMP_311 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _currentDebt Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _currentDebt

Name: _currentDebt Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
has variable
clearing ir...?
REF_256(uint256) -> REF_255.idealCollateralRatio
has variable
clearing ir...?
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
has variable
[i] TMP_312 cleared
clearing ir...?
TMP_313(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_312', '_ratioOfPrices_1'] 
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(uint256) = 10 ** _decimals_1
has variable
[i] TMP_314 cleared
clearing ir...?
TMP_315(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_313', 'TMP_314'] 
has variable
[i] TMP_315 cleared
clearing ir...?
TMP_316(uint256) = 10 ** 30
has variable
[i] TMP_316 cleared
clearing ir...?
TMP_317(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_315', 'TMP_316'] 
has variable
[i] TMP_317 cleared
clearing ir...?
_collateralNeeded_1(uint256) := TMP_317(uint256)
has variable
[i] _collateralNeeded cleared
typecheckig node...
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
Function name: withdrawableCollateral
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_255

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
XXXXX
REF_256(uint256) -> REF_255.idealCollateralRatio
Function name: withdrawableCollateral
MEMBER
REF_255
idealCollateralRatio
withdrawableCollateral
REF_255 Fields:
^^^
[i]Type for REF_256

Name: REF_255.idealCollateralRatio Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_255.idealCollateralRatio Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
Function name: withdrawableCollateral
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _currentDebt Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_312 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_312

Name: TMP_312 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
XXXXX
TMP_313(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_312', '_ratioOfPrices_1'] 
Function name: withdrawableCollateral
Library Call: div
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_313 Function: withdrawableCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_36 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_313

Name: TMP_313 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(uint256) = 10 ** _decimals_1
Function name: withdrawableCollateral
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: _decimals Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_314 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_314

Name: TMP_314 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_315(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_313', 'TMP_314'] 
Function name: withdrawableCollateral
Library Call: mul
testing mul...
Error with TMP_315 in function withdrawableCollateral
Error with: TMP_315 in function withdrawableCollateral
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f5b30a0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f38c070>]
lnorm: 0 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_313 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_316(uint256) = 10 ** 30
Function name: withdrawableCollateral
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_316 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_316

Name: TMP_316 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_317(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_315', 'TMP_316'] 
Function name: withdrawableCollateral
Library Call: div
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_317 Function: withdrawableCollateral
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_317 Function: withdrawableCollateral
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_317

Name: TMP_317 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
_collateralNeeded_1(uint256) := TMP_317(uint256)
Function name: withdrawableCollateral
asgn

Name: TMP_317 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _collateralNeeded Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralNeeded

Name: _collateralNeeded Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_318(bool) = _collateralNeeded_1 >= _totalCollateralTokens_1
has variable
[i] TMP_318 cleared
clearing ir...?
CONDITION TMP_318
typecheckig node...
TMP_318(bool) = _collateralNeeded_1 >= _totalCollateralTokens_1
Function name: withdrawableCollateral
testing gt...
lnorm: -30 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
Error with TMP_318 in function withdrawableCollateral
Error with: TMP_318 in function withdrawableCollateral
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f5b30a0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f38c070>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f38c520>]
[i]Type for TMP_318

Name: TMP_318 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_318
Condition...
Conidtion: 
TMP_318
TMP_318
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_319(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCollateralTokens_1', '_collateralNeeded_1'] 
has variable
[i] TMP_319 cleared
clearing ir...?
RETURN TMP_319
typecheckig node...
TMP_319(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCollateralTokens_1', '_collateralNeeded_1'] 
Function name: withdrawableCollateral
Library Call: sub
lnorm: u rnorm: -30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _collateralNeeded Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
Error with TMP_319 in function withdrawableCollateral
Error with: TMP_319 in function withdrawableCollateral
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f5b30a0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f38c070>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f38c520>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f38c7f0>]
[i]Type for TMP_319

Name: TMP_319 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_319
RETURN

Name: TMP_319 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
RETURN 0
typecheckig node...
RETURN 0
RETURN
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "withdrawableCollateral":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: withdrawableCollateral
Phi
[i]Type for _id

Name: _id Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_37(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: withdrawableCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_9(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
Function name: withdrawableCollateral
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TMP_309 = CONVERT priceOracle_9 to IPriceOracle
Function name: withdrawableCollateral

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: TMP_309 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[i]Type for TMP_309

Name: TMP_309 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_250(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
Function name: withdrawableCollateral
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_250

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_251(address) -> REF_250.collateralAsset
Function name: withdrawableCollateral
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_251

Name: creditLineConstants.collateralAsset Function: withdrawableCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: withdrawableCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
REF_252(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
Function name: withdrawableCollateral
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_252

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_253(address) -> REF_252.borrowAsset
Function name: withdrawableCollateral
MEMBER
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_253

Name: creditLineConstants.borrowAsset Function: withdrawableCollateral
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: withdrawableCollateral
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_309(IPriceOracle), function:getLatestPrice, arguments:['REF_251', 'REF_253']  
Function name: withdrawableCollateral
High Call: getLatestPrice
func name:getLatestPrice
other func name:getLatestPrice
TUPLE_4
hlc contract name: ORACLE func_name: getLatestPrice
('t', [2], [1], 0, None)
REF_251
REF_253
('c', [-1], [-1], 0, None)
REF_251
REF_253
wfc len: 2
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_38(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_37', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: withdrawableCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_10(address) := ϕ(['priceOracle_9', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1'])
Function name: withdrawableCollateral
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
_ratioOfPrices_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: withdrawableCollateral
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([1, -1], [-1, 2], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: withdrawableCollateral
Num: 1
Den: 2
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_decimals_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: withdrawableCollateral
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _decimals

Name: _decimals Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_310(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
Function name: withdrawableCollateral
Internal call...
calculateTotalCollateralTokens
_id
Function: calculateTotalCollateralTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_7 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_39(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Function name: withdrawableCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_totalCollateralTokens_1(uint256) := TMP_310(uint256)
Function name: withdrawableCollateral
asgn

Name: TMP_310 Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_311(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
Function name: withdrawableCollateral
Internal call...
calculateCurrentDebt
_id
Function: calculateCurrentDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_6 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_311 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_currentDebt_1(uint256) := TMP_311(uint256)
Function name: withdrawableCollateral
asgn

Name: TMP_311 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _currentDebt Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _currentDebt

Name: _currentDebt Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
Function name: withdrawableCollateral
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: idealCollateralRatio
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_255

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
XXXXX
REF_256(uint256) -> REF_255.idealCollateralRatio
Function name: withdrawableCollateral
MEMBER
REF_255
idealCollateralRatio
withdrawableCollateral
REF_255 Fields:
^^^
[i]Type for REF_256

Name: REF_255.idealCollateralRatio Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_255.idealCollateralRatio Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
Function name: withdrawableCollateral
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _currentDebt Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_312 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_312

Name: TMP_312 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
XXXXX
TMP_313(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_312', '_ratioOfPrices_1'] 
Function name: withdrawableCollateral
Library Call: div
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_313 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_38 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_313

Name: TMP_313 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(uint256) = 10 ** _decimals_1
Function name: withdrawableCollateral
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: _decimals Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_314 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:*
-1
val: 10
1
[i]Type for TMP_314

Name: TMP_314 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_315(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_313', 'TMP_314'] 
Function name: withdrawableCollateral
Library Call: mul
testing mul...
[W] Initializing defined variable to constant
lnorm: 0 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_313 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_316(uint256) = 10 ** 30
Function name: withdrawableCollateral
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_316 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:30
30
val: 10
1
[i]Type for TMP_316

Name: TMP_316 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_317(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_315', 'TMP_316'] 
Function name: withdrawableCollateral
Library Call: div
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_317 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_317 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_317

Name: TMP_317 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
_collateralNeeded_1(uint256) := TMP_317(uint256)
Function name: withdrawableCollateral
asgn

Name: TMP_317 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _collateralNeeded Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralNeeded

Name: _collateralNeeded Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_318(bool) = _collateralNeeded_1 >= _totalCollateralTokens_1
Function name: withdrawableCollateral
testing gt...
lnorm: -30 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_318

Name: TMP_318 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_318
Condition...
Conidtion: 
TMP_318
TMP_318
typecheckig node...
typecheckig node...
TMP_319(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCollateralTokens_1', '_collateralNeeded_1'] 
Function name: withdrawableCollateral
Library Call: sub
lnorm: u rnorm: -30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _collateralNeeded Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_319

Name: TMP_319 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_319
RETURN

Name: TMP_319 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: -30
LF: None
Fields: 
Finance Type: undef
clearning node...
clearing ir...?
RETURN 0
typecheckig node...
RETURN 0
RETURN
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "withdrawableCollateral":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: withdrawableCollateral

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for TMP_302

Name: TMP_302 Function: withdrawCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_302(uint256) = INTERNAL_CALL, CreditLine.withdrawableCollateral(uint256)(_id_1)
XXXXX
creditLineConstants_36(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40'])
Function name: withdrawCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_withdrawableCollateral_1(uint256) := TMP_302(uint256)
Function name: withdrawCollateral
asgn

Name: TMP_302 Function: withdrawCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _withdrawableCollateral Function: withdrawCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _withdrawableCollateral

Name: _withdrawableCollateral Function: withdrawCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_303(bool) = _amount_1 <= _withdrawableCollateral_1
has variable
[i] TMP_303 cleared
clearing ir...?
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,Collateral ratio cant go below ideal)
typecheckig node...
TMP_303(bool) = _amount_1 <= _withdrawableCollateral_1
Function name: withdrawCollateral
testing lt...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_303

Name: TMP_303 Function: withdrawCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_304(None) = SOLIDITY_CALL require(bool,string)(TMP_303,Collateral ratio cant go below ideal)
[i]Type for TMP_304

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_247(CreditLine.CreditLineConstants) -> creditLineConstants_36[_id_1]
has variable
clearing ir...?
REF_248(address) -> REF_247.collateralAsset
has variable
clearing ir...?
_collateralAsset_1(address) := REF_248(address)
has variable
[i] _collateralAsset cleared
typecheckig node...
REF_247(CreditLine.CreditLineConstants) -> creditLineConstants_36[_id_1]
Function name: withdrawCollateral
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_247

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_248(address) -> REF_247.collateralAsset
Function name: withdrawCollateral
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_248

Name: creditLineConstants.collateralAsset Function: withdrawCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: withdrawCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_248(address)
Function name: withdrawCollateral
asgn

Name: creditLineConstants.collateralAsset Function: withdrawCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: _collateralAsset Function: withdrawCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: withdrawCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._transferCollateral(uint256,address,uint256,bool)(_id_1,_collateralAsset_1,_amount_1,_toSavingsAccount_1)
typecheckig node...
INTERNAL_CALL, CreditLine._transferCollateral(uint256,address,uint256,bool)(_id_1,_collateralAsset_1,_amount_1,_toSavingsAccount_1)
Internal call...
_transferCollateral
_id
_collateralAsset
_amount
_toSavingsAccount
Function: _transferCollateral
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [2]
    den: [-1]
    norm: 0
    link: CASSET
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [2]
    den: [-1]
    norm: 0
    link: CASSET
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[2], [-1], 0, 'CASSET', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _transferCollateral
Function Visibility: internal
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
has variable
[i] _id cleared
clearing ir...?
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
has variable
[i] _asset cleared
clearing ir...?
_amountInTokens_1(uint256) := ϕ(['_amount_1', '_totalCollateralTokens_1'])
has variable
[i] _amountInTokens cleared
clearing ir...?
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
has variable
[i] _toSavingsAccount cleared
clearing ir...?
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
savingsAccount_10(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
has variable
clearing ir...?
strategyRegistry_10(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
Function name: _transferCollateral
Phi
[i]Type for _id

Name: _id Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
Function name: _transferCollateral
Phi
[i]Type for _asset

Name: _asset Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: CASSET
Fields: 
Finance Type: undef
done.
_amountInTokens_1(uint256) := ϕ(['_amount_1', '_totalCollateralTokens_1'])
Function name: _transferCollateral
Phi
[i]Type for _amountInTokens

Name: _amountInTokens Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for _toSavingsAccount

Name: _toSavingsAccount Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_10(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_10(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
has variable
[i] TMP_320 cleared
clearing ir...?
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
has variable
[i] TMP_321 cleared
clearing ir...?
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
savingsAccount_11(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_10', 'savingsAccount_1'])
has variable
clearing ir...?
strategyRegistry_11(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_1'])
has variable
clearing ir...?
_strategyList_1(address[]) := TMP_321(address[])
has variable
[i] _strategyList cleared
typecheckig node...
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
Function name: _transferCollateral

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_320 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_320

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _transferCollateral
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_321
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_321

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_11(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_10', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_11(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_321(address[])
Function name: _transferCollateral
asgn

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
index_1(uint256) := 0(uint256)
has variable
[i] index cleared
typecheckig node...
index_1(uint256) := 0(uint256)
Function name: _transferCollateral
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
has variable
[i] _activeAmount cleared
clearing ir...?
index_2(uint256) := ϕ(['index_3', 'index_1'])
has variable
[i] index cleared
clearing ir...?
REF_262 -> LENGTH _strategyList_1
clearing ir...?
TMP_322(bool) = index_2 < REF_262
has variable
[i] TMP_322 cleared
clearing ir...?
CONDITION TMP_322
typecheckig node...
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Function name: _transferCollateral
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_2(uint256) := ϕ(['index_3', 'index_1'])
Function name: _transferCollateral
Phi
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_262 -> LENGTH _strategyList_1
[i]Type for REF_262

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_322(bool) = index_2 < REF_262
Function name: _transferCollateral
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_322 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_322

Name: TMP_322 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_322(bool) = index_2 < REF_262
XXXXX
CONDITION TMP_322
Condition...
Conidtion: 
TMP_322
TMP_322
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
typecheckig node...
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
[i]Type for TMP_342

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
has variable
clearing ir...?
REF_264(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
REF_265(uint256) -> REF_263[REF_264]
has variable
clearing ir...?
liquidityShares_1(uint256) := REF_265(uint256)
has variable
[i] liquidityShares cleared
typecheckig node...
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_263

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_264(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_264

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_265(uint256) -> REF_263[REF_264]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_265

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_1(uint256) := REF_265(uint256)
Function name: _transferCollateral
asgn

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_323(bool) = liquidityShares_1 == 0
has variable
[i] TMP_323 cleared
clearing ir...?
REF_266(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_324 = CONVERT 0 to address
has variable
[i] TMP_324 cleared
clearing ir...?
TMP_325(bool) = REF_266 == TMP_324
has variable
[i] TMP_325 cleared
clearing ir...?
TMP_326(bool) = TMP_323 || TMP_325
has variable
[i] TMP_326 cleared
clearing ir...?
CONDITION TMP_326
typecheckig node...
TMP_323(bool) = liquidityShares_1 == 0
Function name: _transferCollateral
[i]Type for TMP_323

Name: TMP_323 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_266(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_266

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_324 = CONVERT 0 to address
Function name: _transferCollateral
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_324 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_324

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_325(bool) = REF_266 == TMP_324
Function name: _transferCollateral
[i]Type for TMP_325

Name: TMP_325 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_326(bool) = TMP_323 || TMP_325
Function name: _transferCollateral
[i]Type for TMP_326

Name: TMP_326 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_326
Condition...
Conidtion: 
TMP_326
TMP_326
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
Function name: _transferCollateral
asgn

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_267(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_327 = CONVERT REF_267 to IYield
has variable
[i] TMP_327 cleared
clearing ir...?
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
has variable
[i] TMP_328 cleared
clearing ir...?
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
savingsAccount_12(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_11', 'savingsAccount_1'])
has variable
clearing ir...?
_tokenInStrategy_2(uint256) := TMP_328(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
REF_267(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_267

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_327 = CONVERT REF_267 to IYield
Function name: _transferCollateral

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_327 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_327

Name: TMP_327 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
Function name: _transferCollateral
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_328
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
liquidityShares
_asset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_328

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_12(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_11', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_328(uint256)
Function name: _transferCollateral
asgn

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
has variable
[i] _tokensToTransfer cleared
typecheckig node...
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Function name: _transferCollateral
asgn

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
has variable
[i] TMP_329 cleared
clearing ir...?
TMP_330(bool) = TMP_329 > _amountInTokens_1
has variable
[i] TMP_330 cleared
clearing ir...?
CONDITION TMP_330
typecheckig node...
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_329 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_329 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_329

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
XXXXX
TMP_330(bool) = TMP_329 > _amountInTokens_1
Function name: _transferCollateral
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_330

Name: TMP_330 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_330
Condition...
Conidtion: 
TMP_330
TMP_330
clearning node...
clearing ir...?
liquidityShares_3(uint256) := ϕ(['liquidityShares_1', 'liquidityShares_2'])
has variable
[i] liquidityShares cleared
clearing ir...?
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
has variable
[i] _tokensToTransfer cleared
typecheckig node...
liquidityShares_3(uint256) := ϕ(['liquidityShares_1', 'liquidityShares_2'])
Function name: _transferCollateral
Phi
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
Function name: _transferCollateral
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
has variable
[i] TMP_334 cleared
clearing ir...?
_activeAmount_2(uint256) := TMP_334(uint256)
has variable
[i] _activeAmount cleared
typecheckig node...
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_334 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_334 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_334

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
XXXXX
_activeAmount_2(uint256) := TMP_334(uint256)
Function name: _transferCollateral
asgn

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
has variable
[i] TMP_331 cleared
clearing ir...?
_tokensToTransfer_2(uint256) := TMP_331(uint256)
has variable
[i] _tokensToTransfer cleared
typecheckig node...
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_331 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_331

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_331(uint256)
Function name: _transferCollateral
asgn

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
has variable
clearing ir...?
REF_275(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
REF_276(uint256) -> REF_274[REF_275]
has variable
clearing ir...?
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
has variable
clearing ir...?
REF_278(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
REF_279(uint256) -> REF_277[REF_278]
has variable
clearing ir...?
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
has variable
[i] TMP_335 cleared
clearing ir...?
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
has variable
clearing ir...?
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
has variable
typecheckig node...
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_274

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_275(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_275

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_276(uint256) -> REF_274[REF_275]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_276

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_277

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_278(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_278

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_279(uint256) -> REF_277[REF_278]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_279

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_335 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_335

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
Function name: _transferCollateral
asgn

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_276

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
has variable
[i] TMP_332 cleared
clearing ir...?
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
has variable
[i] TMP_333 cleared
clearing ir...?
liquidityShares_2(uint256) := TMP_333(uint256)
has variable
[i] liquidityShares cleared
typecheckig node...
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
Function name: _transferCollateral
Library Call: mul
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_332 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_332

Name: TMP_332 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: div
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_333 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_40 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_333 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_333

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_2(uint256) := TMP_333(uint256)
Function name: _transferCollateral
asgn

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION _toSavingsAccount_1
typecheckig node...
CONDITION _toSavingsAccount_1
Condition...
Conidtion: 
_toSavingsAccount_1
_toSavingsAccount_1
clearning node...
clearing ir...?
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
has variable
[i] TMP_338 cleared
clearing ir...?
REF_284(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
has variable
[i] TMP_339 cleared
clearing ir...?
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_17'])
has variable
clearing ir...?
savingsAccount_13(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1'])
has variable
typecheckig node...
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_338 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_338

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_284(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_284

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
Function name: _transferCollateral
High Call: withdraw
func name:withdraw
other func name:withdraw
TMP_339
hlc contract name: SAVE func_name: withdraw
wfc len: 0
COPIED
[i]Type for TMP_339

Name: TMP_339 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_17'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_13(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
has variable
[i] TMP_336 cleared
clearing ir...?
REF_282(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
has variable
[i] TMP_337 cleared
clearing ir...?
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
savingsAccount_14(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_1'])
has variable
typecheckig node...
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_336 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_336

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_282(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_282

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
Function name: _transferCollateral
High Call: transfer
func name:transfer
other func name:transfer
TMP_337
hlc contract name: SAVE func_name: transfer
wfc len: 0
COPIED
[i]Type for TMP_337

Name: TMP_337 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_14(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
has variable
[i] TMP_340 cleared
clearing ir...?
CONDITION TMP_340
typecheckig node...
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
Function name: _transferCollateral
[i]Type for TMP_340

Name: TMP_340 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_340
Condition...
Conidtion: 
TMP_340
TMP_340
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_341(uint256) := index_2(uint256)
has variable
[i] TMP_341 cleared
clearing ir...?
index_3(uint256) = index_2 + 1
has variable
[i] index cleared
typecheckig node...
TMP_341(uint256) := index_2(uint256)
Function name: _transferCollateral
asgn

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_341

Name: TMP_341 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_3(uint256) = index_2 + 1
Function name: _transferCollateral
val: 1

Name: index Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_transferCollateral":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
Function name: _transferCollateral
Phi
[i]Type for _id

Name: _id Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
Function name: _transferCollateral
Phi
[i]Type for _asset

Name: _asset Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: CASSET
Fields: 
Finance Type: undef
done.
_amountInTokens_1(uint256) := ϕ(['_amount_1', '_totalCollateralTokens_1'])
Function name: _transferCollateral
Phi
[i]Type for _amountInTokens

Name: _amountInTokens Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for _toSavingsAccount

Name: _toSavingsAccount Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_10(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_10(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
Function name: _transferCollateral

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_320

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _transferCollateral
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_321
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_321

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_11(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_10', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_11(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_321(address[])
Function name: _transferCollateral
asgn

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
index_1(uint256) := 0(uint256)
Function name: _transferCollateral
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Function name: _transferCollateral
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
index_2(uint256) := ϕ(['index_3', 'index_1'])
Function name: _transferCollateral
Phi
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_262 -> LENGTH _strategyList_1
[i]Type for REF_262

Name: REF_262 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_322(bool) = index_2 < REF_262
Function name: _transferCollateral
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_322 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_322

Name: TMP_322 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_322(bool) = index_2 < REF_262
XXXXX
CONDITION TMP_322
Condition...
Conidtion: 
TMP_322
TMP_322
typecheckig node...
typecheckig node...
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
[i]Type for TMP_342

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_263

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_264(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_264

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_265(uint256) -> REF_263[REF_264]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_265

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_1(uint256) := REF_265(uint256)
Function name: _transferCollateral
asgn

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_323(bool) = liquidityShares_1 == 0
Function name: _transferCollateral
[i]Type for TMP_323

Name: TMP_323 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_266(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_266

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_324 = CONVERT 0 to address
Function name: _transferCollateral
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_324

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_325(bool) = REF_266 == TMP_324
Function name: _transferCollateral
[i]Type for TMP_325

Name: TMP_325 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_326(bool) = TMP_323 || TMP_325
Function name: _transferCollateral
[i]Type for TMP_326

Name: TMP_326 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_326
Condition...
Conidtion: 
TMP_326
TMP_326
typecheckig node...
typecheckig node...
typecheckig node...
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
Function name: _transferCollateral
asgn

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_267(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_267

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_327 = CONVERT REF_267 to IYield
Function name: _transferCollateral

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_327 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_327

Name: TMP_327 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
Function name: _transferCollateral
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_328
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
liquidityShares
_asset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_328

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_12(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_11', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_328(uint256)
Function name: _transferCollateral
asgn

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Function name: _transferCollateral
asgn

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_329

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_330(bool) = TMP_329 > _amountInTokens_1
Function name: _transferCollateral
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_330

Name: TMP_330 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_330
Condition...
Conidtion: 
TMP_330
TMP_330
typecheckig node...
liquidityShares_3(uint256) := ϕ(['liquidityShares_1', 'liquidityShares_2'])
Function name: _transferCollateral
Phi
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
Function name: _transferCollateral
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_334

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_activeAmount_2(uint256) := TMP_334(uint256)
Function name: _transferCollateral
asgn

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_331

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_331(uint256)
Function name: _transferCollateral
asgn

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_274

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_275(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_275

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_276(uint256) -> REF_274[REF_275]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_276

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_277

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_278(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_278

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_279(uint256) -> REF_277[REF_278]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_279

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_335

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
Function name: _transferCollateral
asgn

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_276

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
Function name: _transferCollateral
Library Call: mul
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_332 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_332

Name: TMP_332 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: div
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_41 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_333

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_2(uint256) := TMP_333(uint256)
Function name: _transferCollateral
asgn

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
CONDITION _toSavingsAccount_1
Condition...
Conidtion: 
_toSavingsAccount_1
_toSavingsAccount_1
typecheckig node...
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_338

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_284(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_284

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
Function name: _transferCollateral
High Call: withdraw
func name:withdraw
other func name:withdraw
TMP_339
hlc contract name: SAVE func_name: withdraw
wfc len: 0
COPIED
[i]Type for TMP_339

Name: TMP_339 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_17'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_13(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_336

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_282(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_282

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
Function name: _transferCollateral
High Call: transfer
func name:transfer
other func name:transfer
TMP_337
hlc contract name: SAVE func_name: transfer
wfc len: 0
COPIED
[i]Type for TMP_337

Name: TMP_337 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_14(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
Function name: _transferCollateral
[i]Type for TMP_340

Name: TMP_340 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_340
Condition...
Conidtion: 
TMP_340
TMP_340
typecheckig node...
typecheckig node...
typecheckig node...
TMP_341(uint256) := index_2(uint256)
Function name: _transferCollateral
asgn

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_341

Name: TMP_341 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_3(uint256) = index_2 + 1
Function name: _transferCollateral
val: 1

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_transferCollateral":
 New undefined nodes- 1
 Old undefined nodes- 3
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
Function name: _transferCollateral
Phi
[i]Type for _id

Name: _id Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
Function name: _transferCollateral
Phi
[i]Type for _asset

Name: _asset Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: CASSET
Fields: 
Finance Type: undef
done.
_amountInTokens_1(uint256) := ϕ(['_amount_1', '_totalCollateralTokens_1'])
Function name: _transferCollateral
Phi
[i]Type for _amountInTokens

Name: _amountInTokens Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for _toSavingsAccount

Name: _toSavingsAccount Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_10(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_10(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
Function name: _transferCollateral

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_320

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _transferCollateral
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_321
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_321

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_11(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_10', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_11(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_321(address[])
Function name: _transferCollateral
asgn

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
index_1(uint256) := 0(uint256)
Function name: _transferCollateral
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Function name: _transferCollateral
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
index_2(uint256) := ϕ(['index_3', 'index_1'])
Function name: _transferCollateral
Phi
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_262 -> LENGTH _strategyList_1
[i]Type for REF_262

Name: REF_262 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_322(bool) = index_2 < REF_262
Function name: _transferCollateral
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_322 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_322

Name: TMP_322 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_322(bool) = index_2 < REF_262
XXXXX
CONDITION TMP_322
Condition...
Conidtion: 
TMP_322
TMP_322
typecheckig node...
typecheckig node...
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
[i]Type for TMP_342

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_263

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_264(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_264

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_265(uint256) -> REF_263[REF_264]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_265

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_1(uint256) := REF_265(uint256)
Function name: _transferCollateral
asgn

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_323(bool) = liquidityShares_1 == 0
Function name: _transferCollateral
[i]Type for TMP_323

Name: TMP_323 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_266(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_266

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_324 = CONVERT 0 to address
Function name: _transferCollateral
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_324

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_325(bool) = REF_266 == TMP_324
Function name: _transferCollateral
[i]Type for TMP_325

Name: TMP_325 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_326(bool) = TMP_323 || TMP_325
Function name: _transferCollateral
[i]Type for TMP_326

Name: TMP_326 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_326
Condition...
Conidtion: 
TMP_326
TMP_326
typecheckig node...
typecheckig node...
typecheckig node...
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
Function name: _transferCollateral
asgn

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_267(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_267

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_327 = CONVERT REF_267 to IYield
Function name: _transferCollateral

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_327 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_327

Name: TMP_327 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
Function name: _transferCollateral
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_328
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
liquidityShares
_asset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_328

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_12(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_11', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_328(uint256)
Function name: _transferCollateral
asgn

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Function name: _transferCollateral
asgn

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_329

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_330(bool) = TMP_329 > _amountInTokens_1
Function name: _transferCollateral
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
True
[i]Type for TMP_330

Name: TMP_330 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_330
Condition...
Conidtion: 
TMP_330
TMP_330
typecheckig node...
liquidityShares_3(uint256) := ϕ(['liquidityShares_1', 'liquidityShares_2'])
Function name: _transferCollateral
Phi
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
Function name: _transferCollateral
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_334

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_activeAmount_2(uint256) := TMP_334(uint256)
Function name: _transferCollateral
asgn

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_331

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_331(uint256)
Function name: _transferCollateral
asgn

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_274

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_275(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_275

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_276(uint256) -> REF_274[REF_275]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_276

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_277

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_278(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_278

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_279(uint256) -> REF_277[REF_278]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_279

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_335

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
Function name: _transferCollateral
asgn

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_276

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
Function name: _transferCollateral
Library Call: mul
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_332 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_332

Name: TMP_332 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: div
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_42 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_333

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_2(uint256) := TMP_333(uint256)
Function name: _transferCollateral
asgn

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
CONDITION _toSavingsAccount_1
Condition...
Conidtion: 
_toSavingsAccount_1
_toSavingsAccount_1
typecheckig node...
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_338

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_284(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_284

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
Function name: _transferCollateral
High Call: withdraw
func name:withdraw
other func name:withdraw
TMP_339
hlc contract name: SAVE func_name: withdraw
wfc len: 0
COPIED
[i]Type for TMP_339

Name: TMP_339 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_17'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_13(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_336

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_282(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_282

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
Function name: _transferCollateral
High Call: transfer
func name:transfer
other func name:transfer
TMP_337
hlc contract name: SAVE func_name: transfer
wfc len: 0
COPIED
[i]Type for TMP_337

Name: TMP_337 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_14(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
Function name: _transferCollateral
[i]Type for TMP_340

Name: TMP_340 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_340
Condition...
Conidtion: 
TMP_340
TMP_340
typecheckig node...
typecheckig node...
typecheckig node...
TMP_341(uint256) := index_2(uint256)
Function name: _transferCollateral
asgn

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_341

Name: TMP_341 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_3(uint256) = index_2 + 1
Function name: _transferCollateral
val: 1

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 2 for function call "_transferCollateral":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _transferCollateral
done.
This IR caused addback:
INTERNAL_CALL, CreditLine._transferCollateral(uint256,address,uint256,bool)(_id_1,_collateralAsset_1,_amount_1,_toSavingsAccount_1)
XXXXX
clearning node...
clearing ir...?
Emit CollateralWithdrawn(_id_1,_amount_1)
typecheckig node...
Emit CollateralWithdrawn(_id_1,_amount_1)
WORKLIST iteration 0 for function call "withdrawCollateral":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: withdrawCollateral
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: withdrawableCollateral
Function name: withdrawableCollateral
Function Visibility (test): public
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1'])
has variable
[i] _id cleared
clearing ir...?
creditLineConstants_37(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
priceOracle_9(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: withdrawableCollateral
Phi
[i]Type for _id

Name: _id Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_37(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: withdrawableCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_9(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
Function name: withdrawableCollateral
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_309 = CONVERT priceOracle_9 to IPriceOracle
has variable
[i] TMP_309 cleared
clearing ir...?
REF_250(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
has variable
clearing ir...?
REF_251(address) -> REF_250.collateralAsset
has variable
clearing ir...?
REF_252(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
has variable
clearing ir...?
REF_253(address) -> REF_252.borrowAsset
has variable
clearing ir...?
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_309(IPriceOracle), function:getLatestPrice, arguments:['REF_251', 'REF_253']  
has variable
clearing ir...?
creditLineConstants_38(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_37', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
clearing ir...?
priceOracle_10(address) := ϕ(['priceOracle_9', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1'])
has variable
clearing ir...?
_ratioOfPrices_1(uint256)= UNPACK TUPLE_4 index: 0 
has variable
[i] _ratioOfPrices cleared
clearing ir...?
_decimals_1(uint256)= UNPACK TUPLE_4 index: 1 
has variable
[i] _decimals cleared
typecheckig node...
TMP_309 = CONVERT priceOracle_9 to IPriceOracle
Function name: withdrawableCollateral

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: TMP_309 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: ORACLE
Fields: 
Finance Type: undef
[i]Type for TMP_309

Name: TMP_309 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_250(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
Function name: withdrawableCollateral
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_250

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_251(address) -> REF_250.collateralAsset
Function name: withdrawableCollateral
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_251

Name: creditLineConstants.collateralAsset Function: withdrawableCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: withdrawableCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
REF_252(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
Function name: withdrawableCollateral
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_252

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_253(address) -> REF_252.borrowAsset
Function name: withdrawableCollateral
MEMBER
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_253

Name: creditLineConstants.borrowAsset Function: withdrawableCollateral
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: withdrawableCollateral
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_309(IPriceOracle), function:getLatestPrice, arguments:['REF_251', 'REF_253']  
Function name: withdrawableCollateral
High Call: getLatestPrice
func name:getLatestPrice
other func name:getLatestPrice
TUPLE_4
hlc contract name: ORACLE func_name: getLatestPrice
('t', [2], [1], 0, None)
REF_251
REF_253
('c', [-1], [-1], 0, None)
REF_251
REF_253
wfc len: 2
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_38(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_37', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: withdrawableCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_10(address) := ϕ(['priceOracle_9', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1'])
Function name: withdrawableCollateral
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
_ratioOfPrices_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: withdrawableCollateral
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([1, -1], [-1, 2], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: withdrawableCollateral
Num: 1
Den: 2
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_decimals_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: withdrawableCollateral
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _decimals

Name: _decimals Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_310(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
has variable
[i] TMP_310 cleared
clearing ir...?
creditLineConstants_39(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
has variable
clearing ir...?
_totalCollateralTokens_1(uint256) := TMP_310(uint256)
has variable
[i] _totalCollateralTokens cleared
typecheckig node...
TMP_310(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
Function name: withdrawableCollateral
Internal call...
calculateTotalCollateralTokens
_id
Function: calculateTotalCollateralTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_7 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_39(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Function name: withdrawableCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_totalCollateralTokens_1(uint256) := TMP_310(uint256)
Function name: withdrawableCollateral
asgn

Name: TMP_310 Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_311(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
has variable
[i] TMP_311 cleared
clearing ir...?
_currentDebt_1(uint256) := TMP_311(uint256)
has variable
[i] _currentDebt cleared
typecheckig node...
TMP_311(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
Function name: withdrawableCollateral
Internal call...
calculateCurrentDebt
_id
Function: calculateCurrentDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_6 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_311 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_currentDebt_1(uint256) := TMP_311(uint256)
Function name: withdrawableCollateral
asgn

Name: TMP_311 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _currentDebt Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _currentDebt

Name: _currentDebt Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
has variable
clearing ir...?
REF_256(uint256) -> REF_255.idealCollateralRatio
has variable
clearing ir...?
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
has variable
[i] TMP_312 cleared
clearing ir...?
TMP_313(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_312', '_ratioOfPrices_1'] 
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(uint256) = 10 ** _decimals_1
has variable
[i] TMP_314 cleared
clearing ir...?
TMP_315(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_313', 'TMP_314'] 
has variable
[i] TMP_315 cleared
clearing ir...?
TMP_316(uint256) = 10 ** 30
has variable
[i] TMP_316 cleared
clearing ir...?
TMP_317(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_315', 'TMP_316'] 
has variable
[i] TMP_317 cleared
clearing ir...?
_collateralNeeded_1(uint256) := TMP_317(uint256)
has variable
[i] _collateralNeeded cleared
typecheckig node...
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
Function name: withdrawableCollateral
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: idealCollateralRatio
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_255

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
XXXXX
REF_256(uint256) -> REF_255.idealCollateralRatio
Function name: withdrawableCollateral
MEMBER
REF_255
idealCollateralRatio
withdrawableCollateral
REF_255 Fields:
^^^
[i]Type for REF_256

Name: REF_255.idealCollateralRatio Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_255.idealCollateralRatio Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
Function name: withdrawableCollateral
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _currentDebt Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_312 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_312

Name: TMP_312 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
XXXXX
TMP_313(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_312', '_ratioOfPrices_1'] 
Function name: withdrawableCollateral
Library Call: div
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_313 Function: withdrawableCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_46 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_313

Name: TMP_313 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(uint256) = 10 ** _decimals_1
Function name: withdrawableCollateral
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: _decimals Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_314 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_314

Name: TMP_314 Function: withdrawableCollateral
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_315(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_313', 'TMP_314'] 
Function name: withdrawableCollateral
Library Call: mul
testing mul...
lnorm: 0 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_313 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_315(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_313', 'TMP_314'] 
XXXXX
TMP_316(uint256) = 10 ** 30
Function name: withdrawableCollateral
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_316 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_316

Name: TMP_316 Function: withdrawableCollateral
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_317(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_315', 'TMP_316'] 
Function name: withdrawableCollateral
Library Call: div
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_317 Function: withdrawableCollateral
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_317 Function: withdrawableCollateral
Num: 
Den: 
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_317

Name: TMP_317 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_317(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_315', 'TMP_316'] 
XXXXX
_collateralNeeded_1(uint256) := TMP_317(uint256)
Function name: withdrawableCollateral
asgn

Name: TMP_317 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _collateralNeeded Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralNeeded

Name: _collateralNeeded Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_318(bool) = _collateralNeeded_1 >= _totalCollateralTokens_1
has variable
[i] TMP_318 cleared
clearing ir...?
CONDITION TMP_318
typecheckig node...
TMP_318(bool) = _collateralNeeded_1 >= _totalCollateralTokens_1
Function name: withdrawableCollateral
testing gt...
lnorm: -30 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_318

Name: TMP_318 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_318
Condition...
Conidtion: 
TMP_318
TMP_318
clearning node...
clearing ir...?
RETURN 0
typecheckig node...
RETURN 0
RETURN
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_319(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCollateralTokens_1', '_collateralNeeded_1'] 
has variable
[i] TMP_319 cleared
clearing ir...?
RETURN TMP_319
typecheckig node...
TMP_319(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCollateralTokens_1', '_collateralNeeded_1'] 
Function name: withdrawableCollateral
Library Call: sub
lnorm: u rnorm: -30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _collateralNeeded Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_319

Name: TMP_319 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_319
RETURN

Name: TMP_319 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "withdrawableCollateral":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1'])
Function name: withdrawableCollateral
Phi
[i]Type for _id

Name: _id Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_37(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: withdrawableCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_9(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
Function name: withdrawableCollateral
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
typecheckig node...
TMP_309 = CONVERT priceOracle_9 to IPriceOracle
Function name: withdrawableCollateral

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: TMP_309 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[i]Type for TMP_309

Name: TMP_309 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
REF_250(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
Function name: withdrawableCollateral
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_250

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_251(address) -> REF_250.collateralAsset
Function name: withdrawableCollateral
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_251

Name: creditLineConstants.collateralAsset Function: withdrawableCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: withdrawableCollateral
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
REF_252(CreditLine.CreditLineConstants) -> creditLineConstants_37[_id_1]
Function name: withdrawableCollateral
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_252

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_253(address) -> REF_252.borrowAsset
Function name: withdrawableCollateral
MEMBER
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_253

Name: creditLineConstants.borrowAsset Function: withdrawableCollateral
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: withdrawableCollateral
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
TUPLE_4(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_309(IPriceOracle), function:getLatestPrice, arguments:['REF_251', 'REF_253']  
Function name: withdrawableCollateral
High Call: getLatestPrice
func name:getLatestPrice
other func name:getLatestPrice
TUPLE_4
hlc contract name: ORACLE func_name: getLatestPrice
('t', [2], [1], 0, None)
REF_251
REF_253
('c', [-1], [-1], 0, None)
REF_251
REF_253
wfc len: 2
COPIED
[i]Type for TUPLE_4

Name: TUPLE_4 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_38(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_37', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: withdrawableCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
priceOracle_10(address) := ϕ(['priceOracle_9', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1'])
Function name: withdrawableCollateral
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
_ratioOfPrices_1(uint256)= UNPACK TUPLE_4 index: 0 
Function name: withdrawableCollateral
Reading tuple TUPLE_4 index 0
Check copy_toekn_tuple
([1, -1], [-1, 2], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: withdrawableCollateral
Num: 1
Den: 2
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_decimals_1(uint256)= UNPACK TUPLE_4 index: 1 
Function name: withdrawableCollateral
Reading tuple TUPLE_4 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _decimals

Name: _decimals Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_310(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
Function name: withdrawableCollateral
Internal call...
calculateTotalCollateralTokens
_id
Function: calculateTotalCollateralTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_7 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_39(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Function name: withdrawableCollateral
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_totalCollateralTokens_1(uint256) := TMP_310(uint256)
Function name: withdrawableCollateral
asgn

Name: TMP_310 Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_311(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentDebt(uint256)(_id_1)
Function name: withdrawableCollateral
Internal call...
calculateCurrentDebt
_id
Function: calculateCurrentDebt
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_6 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_311 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_currentDebt_1(uint256) := TMP_311(uint256)
Function name: withdrawableCollateral
asgn

Name: TMP_311 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _currentDebt Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _currentDebt

Name: _currentDebt Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
Function name: withdrawableCollateral
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: idealCollateralRatio
Finance Type: undef
Name: None
creditLineConstants
[i]Type for REF_255

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_255(CreditLine.CreditLineConstants) -> creditLineConstants_40[_id_1]
XXXXX
REF_256(uint256) -> REF_255.idealCollateralRatio
Function name: withdrawableCollateral
MEMBER
REF_255
idealCollateralRatio
withdrawableCollateral
REF_255 Fields:
^^^
[i]Type for REF_256

Name: REF_255.idealCollateralRatio Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_255.idealCollateralRatio Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
Function name: withdrawableCollateral
Library Call: mul
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _currentDebt Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_312 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_312

Name: TMP_312 Function: withdrawableCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_312(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_currentDebt_1', 'REF_256'] 
XXXXX
TMP_313(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_312', '_ratioOfPrices_1'] 
Function name: withdrawableCollateral
Library Call: div
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_313 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_48 Function: None
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_313

Name: TMP_313 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(uint256) = 10 ** _decimals_1
Function name: withdrawableCollateral
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: _decimals Function: withdrawableCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_314 Function: withdrawableCollateral
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_314

Name: TMP_314 Function: withdrawableCollateral
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
TMP_315(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_313', 'TMP_314'] 
Function name: withdrawableCollateral
Library Call: mul
testing mul...
[W] Initializing defined variable to constant
lnorm: 0 rnorm: *
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_313 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_315(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_313', 'TMP_314'] 
XXXXX
TMP_316(uint256) = 10 ** 30
Function name: withdrawableCollateral
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_316 Function: withdrawableCollateral
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_316

Name: TMP_316 Function: withdrawableCollateral
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_317(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_315', 'TMP_316'] 
Function name: withdrawableCollateral
Library Call: div
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_317 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: TMP_315 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_317 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_317

Name: TMP_317 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_317(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_315', 'TMP_316'] 
XXXXX
_collateralNeeded_1(uint256) := TMP_317(uint256)
Function name: withdrawableCollateral
asgn

Name: TMP_317 Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef

Name: _collateralNeeded Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralNeeded

Name: _collateralNeeded Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_318(bool) = _collateralNeeded_1 >= _totalCollateralTokens_1
Function name: withdrawableCollateral
testing gt...
lnorm: -30 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_318

Name: TMP_318 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_318
Condition...
Conidtion: 
TMP_318
TMP_318
typecheckig node...
RETURN 0
RETURN
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
typecheckig node...
typecheckig node...
TMP_319(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_totalCollateralTokens_1', '_collateralNeeded_1'] 
Function name: withdrawableCollateral
Library Call: sub
lnorm: u rnorm: -30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalCollateralTokens Function: withdrawableCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _collateralNeeded Function: withdrawableCollateral
Num: 2
Den: 1
Norm: -30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_319

Name: TMP_319 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_319
RETURN

Name: TMP_319 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "withdrawableCollateral":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: withdrawableCollateral

Name: TMP_319 Function: withdrawableCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
___
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _transferCollateral
Function _transferCollateral not marked
Mark Iterations TRUE, proceeding anyway
Function name: _transferCollateral
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: liquidate
Function name: liquidate
Function Visibility (test): external
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_toSavingsAccount
Finding type for _toSavingsAccount...
bool
SKIP bool
amount
Finding type for amount...
uint256
Check copy_toekn_tuple
(1, -1, 0, None)
----
Type: uint256
uint256
Final Type: uint256

Name: amount Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
creditLineVariables_40(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
has variable
clearing ir...?
creditLineConstants_41(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
typecheckig node...
creditLineVariables_40(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: liquidate
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_41(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: liquidate
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
clearning node...
clearing ir...?
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
clearning node...
clearing ir...?
REF_285(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
has variable
clearing ir...?
REF_286(CreditLine.CreditLineStatus) -> REF_285.status
has variable
clearing ir...?
REF_287(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
has variable
clearing ir...?
TMP_343(bool) = REF_286 == REF_287
has variable
[i] TMP_343 cleared
clearing ir...?
TMP_344(None) = SOLIDITY_CALL require(bool,string)(TMP_343,CreditLine: Credit line should be active.)
typecheckig node...
REF_285(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
Function name: liquidate
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
creditLineVariables
[i]Type for REF_285

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_285(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
XXXXX
REF_286(CreditLine.CreditLineStatus) -> REF_285.status
Function name: liquidate
MEMBER
REF_285
status
liquidate
REF_285 Fields:
^^^
[i]Type for REF_286

Name: REF_285.status Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_285.status Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_287(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: liquidate
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
CLOSED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_287

Name: CreditLineStatus.ACTIVE Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_343(bool) = REF_286 == REF_287
Function name: liquidate
[i]Type for TMP_343

Name: TMP_343 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(None) = SOLIDITY_CALL require(bool,string)(TMP_343,CreditLine: Credit line should be active.)
[i]Type for TMP_344

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_288(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
has variable
clearing ir...?
REF_289(uint256) -> REF_288.principal
has variable
clearing ir...?
TMP_345(bool) = REF_289 != 0
has variable
[i] TMP_345 cleared
clearing ir...?
TMP_346(None) = SOLIDITY_CALL require(bool,string)(TMP_345,CreditLine: cannot liquidate if principal is 0)
typecheckig node...
REF_288(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
Function name: liquidate
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: status
Finance Type: undef
Name: None
creditLineVariables
[i]Type for REF_288

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_288(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
XXXXX
REF_289(uint256) -> REF_288.principal
Function name: liquidate
MEMBER
REF_288
principal
liquidate
REF_288 Fields:
^^^
[i]Type for REF_289

Name: REF_288.principal Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_288.principal Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(bool) = REF_289 != 0
Function name: liquidate
[i]Type for TMP_345

Name: TMP_345 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_346(None) = SOLIDITY_CALL require(bool,string)(TMP_345,CreditLine: cannot liquidate if principal is 0)
[i]Type for TMP_346

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_347(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentCollateralRatio(uint256)(_id_1)
has variable
[i] TMP_347 cleared
clearing ir...?
creditLineConstants_43(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_31'])
has variable
clearing ir...?
currentCollateralRatio_1(uint256) := TMP_347(uint256)
has variable
[i] currentCollateralRatio cleared
typecheckig node...
TMP_347(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentCollateralRatio(uint256)(_id_1)
Function name: liquidate
Internal call...
calculateCurrentCollateralRatio
_id
Function: calculateCurrentCollateralRatio
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_33 Function: None
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_43(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_31'])
Function name: liquidate
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
currentCollateralRatio_1(uint256) := TMP_347(uint256)
Function name: liquidate
asgn

Name: TMP_347 Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentCollateralRatio Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentCollateralRatio

Name: currentCollateralRatio Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_290(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
has variable
clearing ir...?
REF_291(uint256) -> REF_290.idealCollateralRatio
has variable
clearing ir...?
TMP_348(bool) = currentCollateralRatio_1 < REF_291
has variable
[i] TMP_348 cleared
clearing ir...?
TMP_349(None) = SOLIDITY_CALL require(bool,string)(TMP_348,CreditLine: Collateral ratio is higher than ideal value)
typecheckig node...
REF_290(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
Function name: liquidate
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_290

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_291(uint256) -> REF_290.idealCollateralRatio
Function name: liquidate
MEMBER
creditLineConstants
idealCollateralRatio
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_291

Name: creditLineConstants.idealCollateralRatio Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.idealCollateralRatio Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_348(bool) = currentCollateralRatio_1 < REF_291
Function name: liquidate
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_348

Name: TMP_348 Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_349(None) = SOLIDITY_CALL require(bool,string)(TMP_348,CreditLine: Collateral ratio is higher than ideal value)
[i]Type for TMP_349

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_292(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
has variable
clearing ir...?
REF_293(address) -> REF_292.collateralAsset
has variable
clearing ir...?
_collateralAsset_1(address) := REF_293(address)
has variable
[i] _collateralAsset cleared
typecheckig node...
REF_292(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
Function name: liquidate
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_292

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_293(address) -> REF_292.collateralAsset
Function name: liquidate
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_293

Name: creditLineConstants.collateralAsset Function: liquidate
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: liquidate
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_293(address)
Function name: liquidate
asgn

Name: creditLineConstants.collateralAsset Function: liquidate
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: _collateralAsset Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: liquidate
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_294(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
has variable
clearing ir...?
REF_295(address) -> REF_294.lender
has variable
clearing ir...?
_lender_1(address) := REF_295(address)
has variable
[i] _lender cleared
typecheckig node...
REF_294(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
Function name: liquidate
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_294

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_295(address) -> REF_294.lender
Function name: liquidate
MEMBER
creditLineConstants
lender
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_295

Name: creditLineConstants.lender Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.lender Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_lender_1(address) := REF_295(address)
Function name: liquidate
asgn

Name: creditLineConstants.lender Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _lender Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _lender

Name: _lender Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_350(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
has variable
[i] TMP_350 cleared
clearing ir...?
creditLineConstants_44(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
has variable
clearing ir...?
_totalCollateralTokens_1(uint256) := TMP_350(uint256)
has variable
[i] _totalCollateralTokens cleared
typecheckig node...
TMP_350(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
Function name: liquidate
Internal call...
calculateTotalCollateralTokens
_id
Function: calculateTotalCollateralTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_7 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_350 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_350

Name: TMP_350 Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_44(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Function name: liquidate
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_totalCollateralTokens_1(uint256) := TMP_350(uint256)
Function name: liquidate
asgn

Name: TMP_350 Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalCollateralTokens Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_296(CreditLine.CreditLineConstants) -> creditLineConstants_44[_id_1]
has variable
clearing ir...?
REF_297(address) -> REF_296.borrowAsset
has variable
clearing ir...?
_borrowAsset_1(address) := REF_297(address)
has variable
[i] _borrowAsset cleared
typecheckig node...
REF_296(CreditLine.CreditLineConstants) -> creditLineConstants_44[_id_1]
Function name: liquidate
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_296

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_297(address) -> REF_296.borrowAsset
Function name: liquidate
MEMBER
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_297

Name: creditLineConstants.borrowAsset Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
_borrowAsset_1(address) := REF_297(address)
Function name: liquidate
asgn

Name: creditLineConstants.borrowAsset Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: _borrowAsset Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowAsset

Name: _borrowAsset Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_298(CreditLine.CreditLineVariables) -> creditLineVariables_43[_id_1]
has variable
clearing ir...?
REF_299(CreditLine.CreditLineStatus) -> REF_298.status
has variable
clearing ir...?
REF_300(CreditLine.CreditLineStatus) -> CreditLineStatus.LIQUIDATED
has variable
clearing ir...?
creditLineVariables_44(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_43'])
has variable
clearing ir...?
REF_299 (->creditLineVariables_44) := REF_300(CreditLine.CreditLineStatus)
has variable
typecheckig node...
REF_298(CreditLine.CreditLineVariables) -> creditLineVariables_43[_id_1]
Function name: liquidate
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
creditLineVariables
[i]Type for REF_298

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_298(CreditLine.CreditLineVariables) -> creditLineVariables_43[_id_1]
XXXXX
REF_299(CreditLine.CreditLineStatus) -> REF_298.status
Function name: liquidate
MEMBER
REF_298
status
liquidate
REF_298 Fields:
^^^
[i]Type for REF_299

Name: REF_298.status Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_298.status Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_300(CreditLine.CreditLineStatus) -> CreditLineStatus.LIQUIDATED
Function name: liquidate
MEMBER
CreditLineStatus
CreditLineStatus
LIQUIDATED
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
CLOSED
^^^
[i]Type for REF_300

Name: CreditLineStatus.LIQUIDATED Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.LIQUIDATED Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: LIQUIDATED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_44(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_43'])
Function name: liquidate
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_299 (->creditLineVariables_44) := REF_300(CreditLine.CreditLineStatus)
Function name: liquidate
asgn

Name: CreditLineStatus.LIQUIDATED Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_299 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_299

Name: REF_299 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_299 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_299 (->creditLineVariables_44) := REF_300(CreditLine.CreditLineStatus)
XXXXX
clearning node...
clearing ir...?
REF_301(CreditLine.CreditLineConstants) -> creditLineConstants_44[_id_1]
has variable
clearing ir...?
REF_302(bool) -> REF_301.autoLiquidation
has variable
clearing ir...?
TMP_351(bool) = _lender_1 != msg.sender
has variable
[i] TMP_351 cleared
clearing ir...?
TMP_352(bool) = REF_302 && TMP_351
has variable
[i] TMP_352 cleared
clearing ir...?
CONDITION TMP_352
typecheckig node...
REF_301(CreditLine.CreditLineConstants) -> creditLineConstants_44[_id_1]
Function name: liquidate
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_301

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_302(bool) -> REF_301.autoLiquidation
Function name: liquidate
MEMBER
creditLineConstants
autoLiquidation
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: autoLiquidation Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_302

Name: creditLineConstants.autoLiquidation Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.autoLiquidation Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: autoLiquidation Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(bool) = _lender_1 != msg.sender
Function name: liquidate
[i]Type for TMP_351

Name: TMP_351 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_352(bool) = REF_302 && TMP_351
Function name: liquidate
[i]Type for TMP_352

Name: TMP_352 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_352
Condition...
Conidtion: 
TMP_352
TMP_352
clearning node...
clearing ir...?
TMP_353(uint256) = INTERNAL_CALL, CreditLine._borrowTokensToLiquidate(address,address,uint256)(_borrowAsset_1,_collateralAsset_1,_totalCollateralTokens_1)
has variable
[i] TMP_353 cleared
clearing ir...?
_borrowTokens_1(uint256) := TMP_353(uint256)
has variable
[i] _borrowTokens cleared
typecheckig node...
TMP_353(uint256) = INTERNAL_CALL, CreditLine._borrowTokensToLiquidate(address,address,uint256)(_borrowAsset_1,_collateralAsset_1,_totalCollateralTokens_1)
Function name: liquidate
Internal call...
_borrowTokensToLiquidate
_borrowAsset
_collateralAsset
_totalCollateralTokens
Function: _borrowTokensToLiquidate
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [2]
    den: [-1]
    norm: 0
    link: CASSET
    fields: []
    fintype: -1
Param: 2
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [2]
    den: [-1]
    norm: 0
    link: CASSET
    fields: []
    fintype: -1
Param: 2
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[1], [-1], 0, 'BASSET', [], -1]
[[2], [-1], 0, 'CASSET', [], -1]
[[2], [-1], 'u', None, [], -1]
added
xyz
Function name: _borrowTokensToLiquidate
Function Visibility: internal
clearning node...
clearing ir...?
_borrowAsset_1(address) := ϕ(['_borrowAsset_1', '_borrowAsset_1'])
has variable
[i] _borrowAsset cleared
clearing ir...?
_collateralAsset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
has variable
[i] _collateralAsset cleared
clearing ir...?
_totalCollateralTokens_1(uint256) := ϕ(['_totalCollateralTokens_1', '_totalCollateralTokens_1'])
has variable
[i] _totalCollateralTokens cleared
clearing ir...?
priceOracle_11(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
has variable
clearing ir...?
liquidatorRewardFraction_2(uint256) := ϕ(['liquidatorRewardFraction_0', 'liquidatorRewardFraction_3', 'liquidatorRewardFraction_1'])
has variable
typecheckig node...
_borrowAsset_1(address) := ϕ(['_borrowAsset_1', '_borrowAsset_1'])
Function name: _borrowTokensToLiquidate
Phi
[i]Type for _borrowAsset

Name: _borrowAsset Function: _borrowTokensToLiquidate
Num: 1
Den: -1
Norm: u
LF: BASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
Function name: _borrowTokensToLiquidate
Phi
[i]Type for _collateralAsset

Name: _collateralAsset Function: _borrowTokensToLiquidate
Num: 2
Den: -1
Norm: u
LF: CASSET
Fields: 
Finance Type: undef
done.
_totalCollateralTokens_1(uint256) := ϕ(['_totalCollateralTokens_1', '_totalCollateralTokens_1'])
Function name: _borrowTokensToLiquidate
Phi
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: _borrowTokensToLiquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
priceOracle_11(address) := ϕ(['priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1', 'priceOracle_0'])
Function name: _borrowTokensToLiquidate
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
liquidatorRewardFraction_2(uint256) := ϕ(['liquidatorRewardFraction_0', 'liquidatorRewardFraction_3', 'liquidatorRewardFraction_1'])
Function name: _borrowTokensToLiquidate
Phi
[i]Type for liquidatorRewardFraction

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_366 = CONVERT priceOracle_11 to IPriceOracle
has variable
[i] TMP_366 cleared
clearing ir...?
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_366(IPriceOracle), function:getLatestPrice, arguments:['_borrowAsset_1', '_collateralAsset_1']  
has variable
clearing ir...?
priceOracle_12(address) := ϕ(['priceOracle_11', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1'])
has variable
clearing ir...?
liquidatorRewardFraction_3(uint256) := ϕ(['liquidatorRewardFraction_2', 'liquidatorRewardFraction_3', 'liquidatorRewardFraction_1'])
has variable
clearing ir...?
_ratioOfPrices_1(uint256)= UNPACK TUPLE_6 index: 0 
has variable
[i] _ratioOfPrices cleared
clearing ir...?
_decimals_1(uint256)= UNPACK TUPLE_6 index: 1 
has variable
[i] _decimals cleared
typecheckig node...
TMP_366 = CONVERT priceOracle_11 to IPriceOracle
Function name: _borrowTokensToLiquidate

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef

Name: TMP_366 Function: _borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_366

Name: TMP_366 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
TUPLE_6(uint256,uint256) = HIGH_LEVEL_CALL, dest:TMP_366(IPriceOracle), function:getLatestPrice, arguments:['_borrowAsset_1', '_collateralAsset_1']  
Function name: _borrowTokensToLiquidate
High Call: getLatestPrice
func name:getLatestPrice
other func name:getLatestPrice
TUPLE_6
hlc contract name: ORACLE func_name: getLatestPrice
('t', [2], [1], 0, None)
_borrowAsset
_collateralAsset
('c', [-1], [-1], 0, None)
_borrowAsset
_collateralAsset
wfc len: 2
COPIED
[i]Type for TUPLE_6

Name: TUPLE_6 Function: _borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
priceOracle_12(address) := ϕ(['priceOracle_11', 'priceOracle_5', 'priceOracle_12', 'priceOracle_8', 'priceOracle_3', 'priceOracle_10', 'priceOracle_1'])
Function name: _borrowTokensToLiquidate
Phi
[i]Type for priceOracle

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
done.
liquidatorRewardFraction_3(uint256) := ϕ(['liquidatorRewardFraction_2', 'liquidatorRewardFraction_3', 'liquidatorRewardFraction_1'])
Function name: _borrowTokensToLiquidate
Phi
[i]Type for liquidatorRewardFraction

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_ratioOfPrices_1(uint256)= UNPACK TUPLE_6 index: 0 
Function name: _borrowTokensToLiquidate
Reading tuple TUPLE_6 index 0
Check copy_toekn_tuple
([2, -1], [-1, 1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _ratioOfPrices

Name: _ratioOfPrices Function: _borrowTokensToLiquidate
Num: 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_decimals_1(uint256)= UNPACK TUPLE_6 index: 1 
Function name: _borrowTokensToLiquidate
Reading tuple TUPLE_6 index 1
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _decimals

Name: _decimals Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_367(uint256) = 10 ** 30
has variable
[i] TMP_367 cleared
clearing ir...?
TMP_368 = CONVERT TMP_367 to uint256
has variable
[i] TMP_368 cleared
clearing ir...?
TMP_369(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_368', 'liquidatorRewardFraction_3'] 
has variable
[i] TMP_369 cleared
clearing ir...?
TMP_370(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralTokens_1', 'TMP_369'] 
has variable
[i] TMP_370 cleared
clearing ir...?
TMP_371(uint256) = 10 ** 30
has variable
[i] TMP_371 cleared
clearing ir...?
TMP_372(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_370', 'TMP_371'] 
has variable
[i] TMP_372 cleared
clearing ir...?
TMP_373(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_372', '_ratioOfPrices_1'] 
has variable
[i] TMP_373 cleared
clearing ir...?
_borrowTokens_1(uint256) := TMP_373(uint256)
has variable
[i] _borrowTokens cleared
typecheckig node...
TMP_367(uint256) = 10 ** 30
Function name: _borrowTokensToLiquidate
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_367 Function: _borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_367

Name: TMP_367 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_368 = CONVERT TMP_367 to uint256
Function name: _borrowTokensToLiquidate

Name: TMP_367 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef

Name: TMP_368 Function: _borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_368

Name: TMP_368 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_369(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['TMP_368', 'liquidatorRewardFraction_3'] 
Function name: _borrowTokensToLiquidate
Library Call: sub
lnorm: 30 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_368 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_369 Function: _borrowTokensToLiquidate
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_369

Name: TMP_369 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_370(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['_totalCollateralTokens_1', 'TMP_369'] 
Function name: _borrowTokensToLiquidate
Library Call: mul
testing mul...
lnorm: u rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _totalCollateralTokens Function: _borrowTokensToLiquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_370 Function: _borrowTokensToLiquidate
Num: 
Den: 
Norm: 30
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_370

Name: TMP_370 Function: _borrowTokensToLiquidate
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_371(uint256) = 10 ** 30
Function name: _borrowTokensToLiquidate
val: 10
1
val: 30

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: 30 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_371 Function: _borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
x:u
30
val: 10
1
[i]Type for TMP_371

Name: TMP_371 Function: _borrowTokensToLiquidate
Num: -1
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef
done.
TMP_372(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_370', 'TMP_371'] 
Function name: _borrowTokensToLiquidate
Library Call: div
lnorm: 30 rnorm: 30
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_372 Function: _borrowTokensToLiquidate
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_370 Function: _borrowTokensToLiquidate
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef

Name: TMP_372 Function: _borrowTokensToLiquidate
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_372

Name: TMP_372 Function: _borrowTokensToLiquidate
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_373(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['TMP_372', '_ratioOfPrices_1'] 
Function name: _borrowTokensToLiquidate
Library Call: mul
testing mul...
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_50 Function: None
Num: 2, 2
Den: 1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_373 Function: _borrowTokensToLiquidate
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_373

Name: TMP_373 Function: _borrowTokensToLiquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_borrowTokens_1(uint256) := TMP_373(uint256)
Function name: _borrowTokensToLiquidate
asgn

Name: TMP_373 Function: _borrowTokensToLiquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _borrowTokens Function: _borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowTokens

Name: _borrowTokens Function: _borrowTokensToLiquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _borrowTokens_1
typecheckig node...
RETURN _borrowTokens_1
RETURN

Name: _borrowTokens Function: _borrowTokensToLiquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_borrowTokensToLiquidate":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _borrowTokensToLiquidate

Name: _borrowTokens Function: _borrowTokensToLiquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_353

Name: TMP_353 Function: liquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_borrowTokens_1(uint256) := TMP_353(uint256)
Function name: liquidate
asgn

Name: TMP_353 Function: liquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _borrowTokens Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowTokens

Name: _borrowTokens Function: liquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_354 = CONVERT 0 to address
has variable
[i] TMP_354 cleared
clearing ir...?
TMP_355(bool) = _borrowAsset_1 == TMP_354
has variable
[i] TMP_355 cleared
clearing ir...?
CONDITION TMP_355
typecheckig node...
TMP_354 = CONVERT 0 to address
Function name: liquidate
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_354 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_354

Name: TMP_354 Function: liquidate
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_355(bool) = _borrowAsset_1 == TMP_354
Function name: liquidate
[i]Type for TMP_355

Name: TMP_355 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_355
Condition...
Conidtion: 
TMP_355
TMP_355
clearning node...
clearing ir...?
TMP_356(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256,string), arguments:['amount_1', '_borrowTokens_1', 'Insufficient ETH to liquidate'] 
has variable
[i] TMP_356 cleared
clearing ir...?
_returnETH_1(uint256) := TMP_356(uint256)
has variable
[i] _returnETH cleared
typecheckig node...
TMP_356(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256,string), arguments:['amount_1', '_borrowTokens_1', 'Insufficient ETH to liquidate'] 
Function name: liquidate
Library Call: sub
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _borrowTokens Function: liquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Error with TMP_356 in function liquidate
Error with: TMP_356 in function liquidate
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f5b30a0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f38c070>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f38c520>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f38c7f0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f3023d0>]
[i]Type for TMP_356

Name: TMP_356 Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_returnETH_1(uint256) := TMP_356(uint256)
Function name: liquidate
asgn

Name: TMP_356 Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _returnETH Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _returnETH

Name: _returnETH Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, CreditLine._transferCollateral(uint256,address,uint256,bool)(_id_1,_collateralAsset_1,_totalCollateralTokens_1,_toSavingsAccount_1)
typecheckig node...
INTERNAL_CALL, CreditLine._transferCollateral(uint256,address,uint256,bool)(_id_1,_collateralAsset_1,_totalCollateralTokens_1,_toSavingsAccount_1)
Internal call...
_transferCollateral
_id
_collateralAsset
_totalCollateralTokens
_toSavingsAccount
Function: _transferCollateral
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [2]
    den: [-1]
    norm: 0
    link: CASSET
    fields: []
    fintype: -1
Param: 2
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [2]
    den: [-1]
    norm: 0
    link: CASSET
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[2], [-1], 0, 'CASSET', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[2], [-1], 0, 'CASSET', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _transferCollateral
Function Visibility: internal
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
has variable
[i] _id cleared
clearing ir...?
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
has variable
[i] _asset cleared
clearing ir...?
_amountInTokens_1(uint256) := ϕ(['_amount_1', '_totalCollateralTokens_1'])
has variable
[i] _amountInTokens cleared
clearing ir...?
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
has variable
[i] _toSavingsAccount cleared
clearing ir...?
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
savingsAccount_10(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
has variable
clearing ir...?
strategyRegistry_10(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
Function name: _transferCollateral
Phi
[i]Type for _id

Name: _id Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
Function name: _transferCollateral
Phi
[i]Type for _asset

Name: _asset Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: CASSET
Fields: 
Finance Type: undef
done.
_amountInTokens_1(uint256) := ϕ(['_amount_1', '_totalCollateralTokens_1'])
Function name: _transferCollateral
Phi
[i]Type for _amountInTokens

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for _toSavingsAccount

Name: _toSavingsAccount Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_10(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_10(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
has variable
[i] TMP_320 cleared
clearing ir...?
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
has variable
[i] TMP_321 cleared
clearing ir...?
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
savingsAccount_11(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_10', 'savingsAccount_1'])
has variable
clearing ir...?
strategyRegistry_11(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_1'])
has variable
clearing ir...?
_strategyList_1(address[]) := TMP_321(address[])
has variable
[i] _strategyList cleared
typecheckig node...
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
Function name: _transferCollateral

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_320 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_320

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _transferCollateral
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_321
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_321

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_11(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_10', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_11(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_321(address[])
Function name: _transferCollateral
asgn

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
index_1(uint256) := 0(uint256)
has variable
[i] index cleared
typecheckig node...
index_1(uint256) := 0(uint256)
Function name: _transferCollateral
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
has variable
[i] _activeAmount cleared
clearing ir...?
index_2(uint256) := ϕ(['index_3', 'index_1'])
has variable
[i] index cleared
clearing ir...?
REF_262 -> LENGTH _strategyList_1
clearing ir...?
TMP_322(bool) = index_2 < REF_262
has variable
[i] TMP_322 cleared
clearing ir...?
CONDITION TMP_322
typecheckig node...
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Function name: _transferCollateral
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
index_2(uint256) := ϕ(['index_3', 'index_1'])
Function name: _transferCollateral
Phi
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_262 -> LENGTH _strategyList_1
[i]Type for REF_262

Name: REF_262 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_322(bool) = index_2 < REF_262
Function name: _transferCollateral
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_322 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_322

Name: TMP_322 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_322(bool) = index_2 < REF_262
XXXXX
CONDITION TMP_322
Condition...
Conidtion: 
TMP_322
TMP_322
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
typecheckig node...
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
[i]Type for TMP_342

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
has variable
clearing ir...?
REF_264(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
REF_265(uint256) -> REF_263[REF_264]
has variable
clearing ir...?
liquidityShares_1(uint256) := REF_265(uint256)
has variable
[i] liquidityShares cleared
typecheckig node...
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_263

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_264(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_264

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_265(uint256) -> REF_263[REF_264]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_265

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_1(uint256) := REF_265(uint256)
Function name: _transferCollateral
asgn

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_323(bool) = liquidityShares_1 == 0
has variable
[i] TMP_323 cleared
clearing ir...?
REF_266(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_324 = CONVERT 0 to address
has variable
[i] TMP_324 cleared
clearing ir...?
TMP_325(bool) = REF_266 == TMP_324
has variable
[i] TMP_325 cleared
clearing ir...?
TMP_326(bool) = TMP_323 || TMP_325
has variable
[i] TMP_326 cleared
clearing ir...?
CONDITION TMP_326
typecheckig node...
TMP_323(bool) = liquidityShares_1 == 0
Function name: _transferCollateral
[i]Type for TMP_323

Name: TMP_323 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_266(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_266

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_324 = CONVERT 0 to address
Function name: _transferCollateral
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_324 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_324

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_325(bool) = REF_266 == TMP_324
Function name: _transferCollateral
[i]Type for TMP_325

Name: TMP_325 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_326(bool) = TMP_323 || TMP_325
Function name: _transferCollateral
[i]Type for TMP_326

Name: TMP_326 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_326
Condition...
Conidtion: 
TMP_326
TMP_326
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
Function name: _transferCollateral
asgn

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_267(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_327 = CONVERT REF_267 to IYield
has variable
[i] TMP_327 cleared
clearing ir...?
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
has variable
[i] TMP_328 cleared
clearing ir...?
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
savingsAccount_12(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_11', 'savingsAccount_1'])
has variable
clearing ir...?
_tokenInStrategy_2(uint256) := TMP_328(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
REF_267(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_267

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_327 = CONVERT REF_267 to IYield
Function name: _transferCollateral

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_327 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_327

Name: TMP_327 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
Function name: _transferCollateral
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_328
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
liquidityShares
_asset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_328

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_12(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_11', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_328(uint256)
Function name: _transferCollateral
asgn

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
has variable
[i] _tokensToTransfer cleared
typecheckig node...
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Function name: _transferCollateral
asgn

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
has variable
[i] TMP_329 cleared
clearing ir...?
TMP_330(bool) = TMP_329 > _amountInTokens_1
has variable
[i] TMP_330 cleared
clearing ir...?
CONDITION TMP_330
typecheckig node...
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_329 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_329 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_329

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_330(bool) = TMP_329 > _amountInTokens_1
Function name: _transferCollateral
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
False
[i]Type for TMP_330

Name: TMP_330 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_330
Condition...
Conidtion: 
TMP_330
TMP_330
clearning node...
clearing ir...?
liquidityShares_3(uint256) := ϕ(['liquidityShares_1', 'liquidityShares_2'])
has variable
[i] liquidityShares cleared
clearing ir...?
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
has variable
[i] _tokensToTransfer cleared
typecheckig node...
liquidityShares_3(uint256) := ϕ(['liquidityShares_1', 'liquidityShares_2'])
Function name: _transferCollateral
Phi
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
Function name: _transferCollateral
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
has variable
[i] TMP_334 cleared
clearing ir...?
_activeAmount_2(uint256) := TMP_334(uint256)
has variable
[i] _activeAmount cleared
typecheckig node...
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_334 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_334 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_334

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_activeAmount_2(uint256) := TMP_334(uint256)
Function name: _transferCollateral
asgn

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
has variable
[i] TMP_331 cleared
clearing ir...?
_tokensToTransfer_2(uint256) := TMP_331(uint256)
has variable
[i] _tokensToTransfer cleared
typecheckig node...
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_331 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_331

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_331(uint256)
Function name: _transferCollateral
asgn

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
has variable
clearing ir...?
REF_275(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
REF_276(uint256) -> REF_274[REF_275]
has variable
clearing ir...?
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
has variable
clearing ir...?
REF_278(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
REF_279(uint256) -> REF_277[REF_278]
has variable
clearing ir...?
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
has variable
[i] TMP_335 cleared
clearing ir...?
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
has variable
clearing ir...?
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
has variable
typecheckig node...
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_274

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_275(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_275

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_276(uint256) -> REF_274[REF_275]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_276

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_277

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_278(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_278

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_279(uint256) -> REF_277[REF_278]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_279

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_335 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_335

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
Function name: _transferCollateral
asgn

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_276

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
has variable
[i] TMP_332 cleared
clearing ir...?
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
has variable
[i] TMP_333 cleared
clearing ir...?
liquidityShares_2(uint256) := TMP_333(uint256)
has variable
[i] liquidityShares cleared
typecheckig node...
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
Function name: _transferCollateral
Library Call: mul
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_332 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_332

Name: TMP_332 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: div
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_333 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_52 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_333 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_333

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_2(uint256) := TMP_333(uint256)
Function name: _transferCollateral
asgn

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION _toSavingsAccount_1
typecheckig node...
CONDITION _toSavingsAccount_1
Condition...
Conidtion: 
_toSavingsAccount_1
_toSavingsAccount_1
clearning node...
clearing ir...?
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
has variable
[i] TMP_338 cleared
clearing ir...?
REF_284(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
has variable
[i] TMP_339 cleared
clearing ir...?
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_17'])
has variable
clearing ir...?
savingsAccount_13(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1'])
has variable
typecheckig node...
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_338 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_338

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_284(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_284

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
Function name: _transferCollateral
High Call: withdraw
func name:withdraw
other func name:withdraw
TMP_339
hlc contract name: SAVE func_name: withdraw
wfc len: 0
COPIED
[i]Type for TMP_339

Name: TMP_339 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_17'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_13(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
has variable
[i] TMP_336 cleared
clearing ir...?
REF_282(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
has variable
[i] TMP_337 cleared
clearing ir...?
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
savingsAccount_14(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_1'])
has variable
typecheckig node...
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_336 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_336

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_282(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_282

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
Function name: _transferCollateral
High Call: transfer
func name:transfer
other func name:transfer
TMP_337
hlc contract name: SAVE func_name: transfer
wfc len: 0
COPIED
[i]Type for TMP_337

Name: TMP_337 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_14(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
has variable
[i] TMP_340 cleared
clearing ir...?
CONDITION TMP_340
typecheckig node...
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
Function name: _transferCollateral
[i]Type for TMP_340

Name: TMP_340 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_340
Condition...
Conidtion: 
TMP_340
TMP_340
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_341(uint256) := index_2(uint256)
has variable
[i] TMP_341 cleared
clearing ir...?
index_3(uint256) = index_2 + 1
has variable
[i] index cleared
typecheckig node...
TMP_341(uint256) := index_2(uint256)
Function name: _transferCollateral
asgn

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_341

Name: TMP_341 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_3(uint256) = index_2 + 1
Function name: _transferCollateral
val: 1

Name: index Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_transferCollateral":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
Function name: _transferCollateral
Phi
[i]Type for _id

Name: _id Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
Function name: _transferCollateral
Phi
[i]Type for _asset

Name: _asset Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: CASSET
Fields: 
Finance Type: undef
done.
_amountInTokens_1(uint256) := ϕ(['_amount_1', '_totalCollateralTokens_1'])
Function name: _transferCollateral
Phi
[i]Type for _amountInTokens

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for _toSavingsAccount

Name: _toSavingsAccount Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_10(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_10(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
Function name: _transferCollateral

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_320

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _transferCollateral
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_321
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_321

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_11(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_10', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_11(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_321(address[])
Function name: _transferCollateral
asgn

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
index_1(uint256) := 0(uint256)
Function name: _transferCollateral
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Function name: _transferCollateral
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
index_2(uint256) := ϕ(['index_3', 'index_1'])
Function name: _transferCollateral
Phi
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_262 -> LENGTH _strategyList_1
[i]Type for REF_262

Name: REF_262 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_322(bool) = index_2 < REF_262
Function name: _transferCollateral
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_322 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_322

Name: TMP_322 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_322(bool) = index_2 < REF_262
XXXXX
CONDITION TMP_322
Condition...
Conidtion: 
TMP_322
TMP_322
typecheckig node...
typecheckig node...
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
[i]Type for TMP_342

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_263

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_264(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_264

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_265(uint256) -> REF_263[REF_264]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_265

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_1(uint256) := REF_265(uint256)
Function name: _transferCollateral
asgn

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_323(bool) = liquidityShares_1 == 0
Function name: _transferCollateral
[i]Type for TMP_323

Name: TMP_323 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_266(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_266

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_324 = CONVERT 0 to address
Function name: _transferCollateral
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_324

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_325(bool) = REF_266 == TMP_324
Function name: _transferCollateral
[i]Type for TMP_325

Name: TMP_325 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_326(bool) = TMP_323 || TMP_325
Function name: _transferCollateral
[i]Type for TMP_326

Name: TMP_326 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_326
Condition...
Conidtion: 
TMP_326
TMP_326
typecheckig node...
typecheckig node...
typecheckig node...
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
Function name: _transferCollateral
asgn

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_267(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_267

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_327 = CONVERT REF_267 to IYield
Function name: _transferCollateral

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_327 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_327

Name: TMP_327 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
Function name: _transferCollateral
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_328
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
liquidityShares
_asset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_328

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_12(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_11', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_328(uint256)
Function name: _transferCollateral
asgn

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Function name: _transferCollateral
asgn

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_329

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_330(bool) = TMP_329 > _amountInTokens_1
Function name: _transferCollateral
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
False
[i]Type for TMP_330

Name: TMP_330 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_330
Condition...
Conidtion: 
TMP_330
TMP_330
typecheckig node...
liquidityShares_3(uint256) := ϕ(['liquidityShares_1', 'liquidityShares_2'])
Function name: _transferCollateral
Phi
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
Function name: _transferCollateral
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_334

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_activeAmount_2(uint256) := TMP_334(uint256)
Function name: _transferCollateral
asgn

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_331

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_331(uint256)
Function name: _transferCollateral
asgn

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_274

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_275(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_275

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_276(uint256) -> REF_274[REF_275]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_276

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_277

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_278(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_278

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_279(uint256) -> REF_277[REF_278]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_279

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_335

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
Function name: _transferCollateral
asgn

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_276

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
Function name: _transferCollateral
Library Call: mul
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_332 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_332

Name: TMP_332 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: div
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_53 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_333

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_2(uint256) := TMP_333(uint256)
Function name: _transferCollateral
asgn

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
CONDITION _toSavingsAccount_1
Condition...
Conidtion: 
_toSavingsAccount_1
_toSavingsAccount_1
typecheckig node...
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_338

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_284(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_284

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
Function name: _transferCollateral
High Call: withdraw
func name:withdraw
other func name:withdraw
TMP_339
hlc contract name: SAVE func_name: withdraw
wfc len: 0
COPIED
[i]Type for TMP_339

Name: TMP_339 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_17'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_13(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_336

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_282(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_282

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
Function name: _transferCollateral
High Call: transfer
func name:transfer
other func name:transfer
TMP_337
hlc contract name: SAVE func_name: transfer
wfc len: 0
COPIED
[i]Type for TMP_337

Name: TMP_337 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_14(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
Function name: _transferCollateral
[i]Type for TMP_340

Name: TMP_340 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_340
Condition...
Conidtion: 
TMP_340
TMP_340
typecheckig node...
typecheckig node...
typecheckig node...
TMP_341(uint256) := index_2(uint256)
Function name: _transferCollateral
asgn

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_341

Name: TMP_341 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_3(uint256) = index_2 + 1
Function name: _transferCollateral
val: 1

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_transferCollateral":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _transferCollateral
done.
This IR caused addback:
INTERNAL_CALL, CreditLine._transferCollateral(uint256,address,uint256,bool)(_id_1,_collateralAsset_1,_totalCollateralTokens_1,_toSavingsAccount_1)
XXXXX
clearning node...
clearing ir...?
TMP_359 = CONVERT _borrowAsset_1 to IERC20
has variable
[i] TMP_359 cleared
clearing ir...?
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_359', 'msg.sender', '_lender_1', '_borrowTokens_1'] 
typecheckig node...
TMP_359 = CONVERT _borrowAsset_1 to IERC20
Function name: liquidate

Name: _borrowAsset Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_359 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_359

Name: TMP_359 Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_359', 'msg.sender', '_lender_1', '_borrowTokens_1'] 
Library Call: safeTransferFrom
done.
clearning node...
clearing ir...?
Emit CreditLineLiquidated(_id_1,msg.sender)
typecheckig node...
Emit CreditLineLiquidated(_id_1,msg.sender)
clearning node...
clearing ir...?
TMP_357(bool) = _returnETH_1 != 0
has variable
[i] TMP_357 cleared
clearing ir...?
CONDITION TMP_357
typecheckig node...
TMP_357(bool) = _returnETH_1 != 0
Function name: liquidate
[i]Type for TMP_357

Name: TMP_357 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_357
Condition...
Conidtion: 
TMP_357
TMP_357
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_5(bool,bytes) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:_returnETH_1 
clearing ir...?
success_1(bool)= UNPACK TUPLE_5 index: 0 
has variable
[i] success cleared
typecheckig node...
TUPLE_5(bool,bytes) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:_returnETH_1 
[i]Type for TUPLE_5

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
success_1(bool)= UNPACK TUPLE_5 index: 0 
Function name: liquidate
Reading tuple TUPLE_5 index 0
Finding type for success...
bool
SKIP bool
[i]Type for success

Name: success Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_358(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer fail)
typecheckig node...
TMP_358(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer fail)
[i]Type for TMP_358

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "liquidate":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
creditLineVariables_40(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_22', 'creditLineVariables_4', 'creditLineVariables_32', 'creditLineVariables_8', 'creditLineVariables_0', 'creditLineVariables_2', 'creditLineVariables_1', 'creditLineVariables_10', 'creditLineVariables_36', 'creditLineVariables_45', 'creditLineVariables_12', 'creditLineVariables_39', 'creditLineVariables_15', 'creditLineVariables_44', 'creditLineVariables_5'])
Function name: liquidate
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
creditLineConstants_41(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: liquidate
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
typecheckig node...
MODIFIER_CALL, ReentrancyGuard.nonReentrant()()
Internal call...
nonReentrant
Function: nonReentrant
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0
done.
typecheckig node...
REF_285(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
Function name: liquidate
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: status, principal
Finance Type: undef
Name: None
creditLineVariables
[i]Type for REF_285

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_285(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
XXXXX
REF_286(CreditLine.CreditLineStatus) -> REF_285.status
Function name: liquidate
MEMBER
REF_285
status
liquidate
REF_285 Fields:
^^^
[i]Type for REF_286

Name: REF_285.status Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_285.status Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_287(CreditLine.CreditLineStatus) -> CreditLineStatus.ACTIVE
Function name: liquidate
MEMBER
CreditLineStatus
CreditLineStatus
ACTIVE
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
CLOSED
LIQUIDATED
^^^

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_287

Name: CreditLineStatus.ACTIVE Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.ACTIVE Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: ACTIVE Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_343(bool) = REF_286 == REF_287
Function name: liquidate
[i]Type for TMP_343

Name: TMP_343 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(None) = SOLIDITY_CALL require(bool,string)(TMP_343,CreditLine: Credit line should be active.)
[i]Type for TMP_344

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_288(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
Function name: liquidate
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: status, principal
Finance Type: undef
Name: None
creditLineVariables
[i]Type for REF_288

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_288(CreditLine.CreditLineVariables) -> creditLineVariables_41[_id_1]
XXXXX
REF_289(uint256) -> REF_288.principal
Function name: liquidate
MEMBER
REF_288
principal
liquidate
REF_288 Fields:
^^^
[i]Type for REF_289

Name: REF_288.principal Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_288.principal Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: principal Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_345(bool) = REF_289 != 0
Function name: liquidate
[i]Type for TMP_345

Name: TMP_345 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_346(None) = SOLIDITY_CALL require(bool,string)(TMP_345,CreditLine: cannot liquidate if principal is 0)
[i]Type for TMP_346

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_347(uint256) = INTERNAL_CALL, CreditLine.calculateCurrentCollateralRatio(uint256)(_id_1)
Function name: liquidate
Internal call...
calculateCurrentCollateralRatio
_id
Function: calculateCurrentCollateralRatio
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_33 Function: None
Num: 2
Den: -1
Norm: 30
LF: None
Fields: 
Finance Type: undef

Name: TMP_347 Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_347

Name: TMP_347 Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_43(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_31'])
Function name: liquidate
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
currentCollateralRatio_1(uint256) := TMP_347(uint256)
Function name: liquidate
asgn

Name: TMP_347 Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: currentCollateralRatio Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for currentCollateralRatio

Name: currentCollateralRatio Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_290(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
Function name: liquidate
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_290

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_291(uint256) -> REF_290.idealCollateralRatio
Function name: liquidate
MEMBER
creditLineConstants
idealCollateralRatio
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_291

Name: creditLineConstants.idealCollateralRatio Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.idealCollateralRatio Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: idealCollateralRatio Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_348(bool) = currentCollateralRatio_1 < REF_291
Function name: liquidate
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_348

Name: TMP_348 Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_349(None) = SOLIDITY_CALL require(bool,string)(TMP_348,CreditLine: Collateral ratio is higher than ideal value)
[i]Type for TMP_349

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_292(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
Function name: liquidate
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_292

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_293(address) -> REF_292.collateralAsset
Function name: liquidate
MEMBER
creditLineConstants
collateralAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
[i]Type for REF_293

Name: creditLineConstants.collateralAsset Function: liquidate
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.collateralAsset Function: liquidate
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_293(address)
Function name: liquidate
asgn

Name: creditLineConstants.collateralAsset Function: liquidate
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef

Name: _collateralAsset Function: liquidate
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: liquidate
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_294(CreditLine.CreditLineConstants) -> creditLineConstants_43[_id_1]
Function name: liquidate
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_294

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_295(address) -> REF_294.lender
Function name: liquidate
MEMBER
creditLineConstants
lender
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_295

Name: creditLineConstants.lender Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.lender Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: lender Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_lender_1(address) := REF_295(address)
Function name: liquidate
asgn

Name: creditLineConstants.lender Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _lender Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _lender

Name: _lender Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_350(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
Function name: liquidate
Internal call...
calculateTotalCollateralTokens
_id
Function: calculateTotalCollateralTokens
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0

Name: PIC_7 Function: None
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_350 Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_350

Name: TMP_350 Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_44(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Function name: liquidate
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_totalCollateralTokens_1(uint256) := TMP_350(uint256)
Function name: liquidate
asgn

Name: TMP_350 Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalCollateralTokens Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: liquidate
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_296(CreditLine.CreditLineConstants) -> creditLineConstants_44[_id_1]
Function name: liquidate
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_296

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_297(address) -> REF_296.borrowAsset
Function name: liquidate
MEMBER
creditLineConstants
borrowAsset
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for REF_297

Name: creditLineConstants.borrowAsset Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: creditLineConstants.borrowAsset Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
_borrowAsset_1(address) := REF_297(address)
Function name: liquidate
asgn

Name: creditLineConstants.borrowAsset Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: _borrowAsset Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowAsset

Name: _borrowAsset Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_298(CreditLine.CreditLineVariables) -> creditLineVariables_43[_id_1]
Function name: liquidate
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
creditLineVariables
[i]Type for REF_298

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_298(CreditLine.CreditLineVariables) -> creditLineVariables_43[_id_1]
XXXXX
REF_299(CreditLine.CreditLineStatus) -> REF_298.status
Function name: liquidate
MEMBER
REF_298
status
liquidate
REF_298 Fields:
^^^
[i]Type for REF_299

Name: REF_298.status Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_298.status Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_300(CreditLine.CreditLineStatus) -> CreditLineStatus.LIQUIDATED
Function name: liquidate
MEMBER
CreditLineStatus
CreditLineStatus
LIQUIDATED
global
CreditLineStatus Fields:
ACTIVE
REQUESTED
NOT_CREATED
CLOSED
LIQUIDATED
^^^

Name: LIQUIDATED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_300

Name: CreditLineStatus.LIQUIDATED Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: CreditLineStatus.LIQUIDATED Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: LIQUIDATED Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineVariables_44(mapping(uint256 => CreditLine.CreditLineVariables)) := ϕ(['creditLineVariables_43'])
Function name: liquidate
Phi
[i]Type for creditLineVariables

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
done.
REF_299 (->creditLineVariables_44) := REF_300(CreditLine.CreditLineStatus)
Function name: liquidate
asgn

Name: CreditLineStatus.LIQUIDATED Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_299 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_299

Name: REF_299 Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_299 Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_301(CreditLine.CreditLineConstants) -> creditLineConstants_44[_id_1]
Function name: liquidate
INDEX

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_301

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
REF_302(bool) -> REF_301.autoLiquidation
Function name: liquidate
MEMBER
creditLineConstants
autoLiquidation
global
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: autoLiquidation Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_302

Name: creditLineConstants.autoLiquidation Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: creditLineConstants.autoLiquidation Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: autoLiquidation Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(bool) = _lender_1 != msg.sender
Function name: liquidate
[i]Type for TMP_351

Name: TMP_351 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_352(bool) = REF_302 && TMP_351
Function name: liquidate
[i]Type for TMP_352

Name: TMP_352 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_352
Condition...
Conidtion: 
TMP_352
TMP_352
typecheckig node...
TMP_353(uint256) = INTERNAL_CALL, CreditLine._borrowTokensToLiquidate(address,address,uint256)(_borrowAsset_1,_collateralAsset_1,_totalCollateralTokens_1)
Function name: liquidate
Internal call...
_borrowTokensToLiquidate
_borrowAsset
_collateralAsset
_totalCollateralTokens
Function: _borrowTokensToLiquidate
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [2]
    den: [-1]
    norm: 0
    link: CASSET
    fields: []
    fintype: -1
Param: 2
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [2]
    den: [-1]
    norm: 0
    link: CASSET
    fields: []
    fintype: -1
Param: 2
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[1], [-1], 0, 'BASSET', [], -1]
cur_param: [[2], [-1], 0, 'CASSET', [], -1]
cur_param: [[2], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: BASSET
    fields: []
    fintype: -1
Param: 1
    num: [2]
    den: [-1]
    norm: 0
    link: CASSET
    fields: []
    fintype: -1
Param: 2
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[1], [-1], 0, 'BASSET', [], -1]
[[2], [-1], 0, 'CASSET', [], -1]
[[2], [-1], 'u', None, [], -1]
0

Name: PIC_51 Function: None
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_353 Function: liquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_353

Name: TMP_353 Function: liquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_borrowTokens_1(uint256) := TMP_353(uint256)
Function name: liquidate
asgn

Name: TMP_353 Function: liquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _borrowTokens Function: liquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowTokens

Name: _borrowTokens Function: liquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_354 = CONVERT 0 to address
Function name: liquidate
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_354 Function: liquidate
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_354

Name: TMP_354 Function: liquidate
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_355(bool) = _borrowAsset_1 == TMP_354
Function name: liquidate
[i]Type for TMP_355

Name: TMP_355 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_355
Condition...
Conidtion: 
TMP_355
TMP_355
typecheckig node...
TMP_356(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256,string), arguments:['amount_1', '_borrowTokens_1', 'Insufficient ETH to liquidate'] 
Function name: liquidate
Library Call: sub
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: amount Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _borrowTokens Function: liquidate
Num: 2, 2
Den: 1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_356

Name: TMP_356 Function: liquidate
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_returnETH_1(uint256) := TMP_356(uint256)
Function name: liquidate
asgn

Name: TMP_356 Function: liquidate
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _returnETH Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _returnETH

Name: _returnETH Function: liquidate
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, CreditLine._transferCollateral(uint256,address,uint256,bool)(_id_1,_collateralAsset_1,_totalCollateralTokens_1,_toSavingsAccount_1)
Internal call...
_transferCollateral
_id
_collateralAsset
_totalCollateralTokens
_toSavingsAccount
Function: _transferCollateral
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [2]
    den: [-1]
    norm: 0
    link: CASSET
    fields: []
    fintype: -1
Param: 2
    num: [2]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [2]
    den: [-1]
    norm: 0
    link: CASSET
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[2], [-1], 0, 'CASSET', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
-100
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[2], [-1], 0, 'CASSET', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _transferCollateral
Function Visibility: internal
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
has variable
[i] _id cleared
clearing ir...?
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
has variable
[i] _asset cleared
clearing ir...?
_amountInTokens_1(uint256) := ϕ(['_amount_1', '_totalCollateralTokens_1'])
has variable
[i] _amountInTokens cleared
clearing ir...?
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
has variable
[i] _toSavingsAccount cleared
clearing ir...?
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
savingsAccount_10(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
has variable
clearing ir...?
strategyRegistry_10(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
Function name: _transferCollateral
Phi
[i]Type for _id

Name: _id Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
Function name: _transferCollateral
Phi
[i]Type for _asset

Name: _asset Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: CASSET
Fields: 
Finance Type: undef
done.
_amountInTokens_1(uint256) := ϕ(['_amount_1', '_totalCollateralTokens_1'])
Function name: _transferCollateral
Phi
[i]Type for _amountInTokens

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for _toSavingsAccount

Name: _toSavingsAccount Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_10(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_10(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
has variable
[i] TMP_320 cleared
clearing ir...?
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
has variable
[i] TMP_321 cleared
clearing ir...?
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
savingsAccount_11(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_10', 'savingsAccount_1'])
has variable
clearing ir...?
strategyRegistry_11(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_1'])
has variable
clearing ir...?
_strategyList_1(address[]) := TMP_321(address[])
has variable
[i] _strategyList cleared
typecheckig node...
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
Function name: _transferCollateral

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_320 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_320

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _transferCollateral
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_321
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_321

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_11(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_10', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_11(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_321(address[])
Function name: _transferCollateral
asgn

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
index_1(uint256) := 0(uint256)
has variable
[i] index cleared
typecheckig node...
index_1(uint256) := 0(uint256)
Function name: _transferCollateral
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
has variable
[i] _activeAmount cleared
clearing ir...?
index_2(uint256) := ϕ(['index_3', 'index_1'])
has variable
[i] index cleared
clearing ir...?
REF_262 -> LENGTH _strategyList_1
clearing ir...?
TMP_322(bool) = index_2 < REF_262
has variable
[i] TMP_322 cleared
clearing ir...?
CONDITION TMP_322
typecheckig node...
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Function name: _transferCollateral
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
index_2(uint256) := ϕ(['index_3', 'index_1'])
Function name: _transferCollateral
Phi
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_262 -> LENGTH _strategyList_1
[i]Type for REF_262

Name: REF_262 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_322(bool) = index_2 < REF_262
Function name: _transferCollateral
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_322 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_322

Name: TMP_322 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_322(bool) = index_2 < REF_262
XXXXX
CONDITION TMP_322
Condition...
Conidtion: 
TMP_322
TMP_322
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
typecheckig node...
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
[i]Type for TMP_342

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
has variable
clearing ir...?
REF_264(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
REF_265(uint256) -> REF_263[REF_264]
has variable
clearing ir...?
liquidityShares_1(uint256) := REF_265(uint256)
has variable
[i] liquidityShares cleared
typecheckig node...
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_263

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_264(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_264

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_265(uint256) -> REF_263[REF_264]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_265

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_1(uint256) := REF_265(uint256)
Function name: _transferCollateral
asgn

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_323(bool) = liquidityShares_1 == 0
has variable
[i] TMP_323 cleared
clearing ir...?
REF_266(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_324 = CONVERT 0 to address
has variable
[i] TMP_324 cleared
clearing ir...?
TMP_325(bool) = REF_266 == TMP_324
has variable
[i] TMP_325 cleared
clearing ir...?
TMP_326(bool) = TMP_323 || TMP_325
has variable
[i] TMP_326 cleared
clearing ir...?
CONDITION TMP_326
typecheckig node...
TMP_323(bool) = liquidityShares_1 == 0
Function name: _transferCollateral
[i]Type for TMP_323

Name: TMP_323 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_266(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_266

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_324 = CONVERT 0 to address
Function name: _transferCollateral
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_324 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_324

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_325(bool) = REF_266 == TMP_324
Function name: _transferCollateral
[i]Type for TMP_325

Name: TMP_325 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_326(bool) = TMP_323 || TMP_325
Function name: _transferCollateral
[i]Type for TMP_326

Name: TMP_326 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_326
Condition...
Conidtion: 
TMP_326
TMP_326
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
Function name: _transferCollateral
asgn

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_267(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_327 = CONVERT REF_267 to IYield
has variable
[i] TMP_327 cleared
clearing ir...?
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
has variable
[i] TMP_328 cleared
clearing ir...?
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
savingsAccount_12(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_11', 'savingsAccount_1'])
has variable
clearing ir...?
_tokenInStrategy_2(uint256) := TMP_328(uint256)
has variable
[i] _tokenInStrategy cleared
typecheckig node...
REF_267(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_267

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_327 = CONVERT REF_267 to IYield
Function name: _transferCollateral

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_327 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_327

Name: TMP_327 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
Function name: _transferCollateral
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_328
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
liquidityShares
_asset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_328

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_12(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_11', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_328(uint256)
Function name: _transferCollateral
asgn

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
has variable
[i] _tokensToTransfer cleared
typecheckig node...
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Function name: _transferCollateral
asgn

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
has variable
[i] TMP_329 cleared
clearing ir...?
TMP_330(bool) = TMP_329 > _amountInTokens_1
has variable
[i] TMP_330 cleared
clearing ir...?
CONDITION TMP_330
typecheckig node...
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_329 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_329 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_329

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_330(bool) = TMP_329 > _amountInTokens_1
Function name: _transferCollateral
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
False
[i]Type for TMP_330

Name: TMP_330 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_330
Condition...
Conidtion: 
TMP_330
TMP_330
clearning node...
clearing ir...?
liquidityShares_3(uint256) := ϕ(['liquidityShares_1', 'liquidityShares_2'])
has variable
[i] liquidityShares cleared
clearing ir...?
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
has variable
[i] _tokensToTransfer cleared
typecheckig node...
liquidityShares_3(uint256) := ϕ(['liquidityShares_1', 'liquidityShares_2'])
Function name: _transferCollateral
Phi
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
Function name: _transferCollateral
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
has variable
[i] TMP_334 cleared
clearing ir...?
_activeAmount_2(uint256) := TMP_334(uint256)
has variable
[i] _activeAmount cleared
typecheckig node...
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_334 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_334 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_334

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_activeAmount_2(uint256) := TMP_334(uint256)
Function name: _transferCollateral
asgn

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
has variable
[i] TMP_331 cleared
clearing ir...?
_tokensToTransfer_2(uint256) := TMP_331(uint256)
has variable
[i] _tokensToTransfer cleared
typecheckig node...
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_331 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_331

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_331(uint256)
Function name: _transferCollateral
asgn

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
has variable
clearing ir...?
REF_275(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
REF_276(uint256) -> REF_274[REF_275]
has variable
clearing ir...?
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
has variable
clearing ir...?
REF_278(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
REF_279(uint256) -> REF_277[REF_278]
has variable
clearing ir...?
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
has variable
[i] TMP_335 cleared
clearing ir...?
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
has variable
clearing ir...?
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
has variable
typecheckig node...
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_274

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_275(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_275

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_276(uint256) -> REF_274[REF_275]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_276

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_277

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_278(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_278

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_279(uint256) -> REF_277[REF_278]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_279

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_335 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_335

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
Function name: _transferCollateral
asgn

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_276

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
has variable
[i] TMP_332 cleared
clearing ir...?
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
has variable
[i] TMP_333 cleared
clearing ir...?
liquidityShares_2(uint256) := TMP_333(uint256)
has variable
[i] liquidityShares cleared
typecheckig node...
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
Function name: _transferCollateral
Library Call: mul
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_332 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_332

Name: TMP_332 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: div
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_333 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_55 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_333 Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_333

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_2(uint256) := TMP_333(uint256)
Function name: _transferCollateral
asgn

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION _toSavingsAccount_1
typecheckig node...
CONDITION _toSavingsAccount_1
Condition...
Conidtion: 
_toSavingsAccount_1
_toSavingsAccount_1
clearning node...
clearing ir...?
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
has variable
[i] TMP_338 cleared
clearing ir...?
REF_284(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
has variable
[i] TMP_339 cleared
clearing ir...?
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_17'])
has variable
clearing ir...?
savingsAccount_13(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1'])
has variable
typecheckig node...
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_338 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_338

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_284(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_284

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
Function name: _transferCollateral
High Call: withdraw
func name:withdraw
other func name:withdraw
TMP_339
hlc contract name: SAVE func_name: withdraw
wfc len: 0
COPIED
[i]Type for TMP_339

Name: TMP_339 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_17'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_13(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
has variable
[i] TMP_336 cleared
clearing ir...?
REF_282(address) -> _strategyList_1[index_2]
has variable
clearing ir...?
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
has variable
[i] TMP_337 cleared
clearing ir...?
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
has variable
clearing ir...?
savingsAccount_14(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_1'])
has variable
typecheckig node...
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_336 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_336

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_282(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_282

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
Function name: _transferCollateral
High Call: transfer
func name:transfer
other func name:transfer
TMP_337
hlc contract name: SAVE func_name: transfer
wfc len: 0
COPIED
[i]Type for TMP_337

Name: TMP_337 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_14(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
has variable
[i] TMP_340 cleared
clearing ir...?
CONDITION TMP_340
typecheckig node...
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
Function name: _transferCollateral
[i]Type for TMP_340

Name: TMP_340 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_340
Condition...
Conidtion: 
TMP_340
TMP_340
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_341(uint256) := index_2(uint256)
has variable
[i] TMP_341 cleared
clearing ir...?
index_3(uint256) = index_2 + 1
has variable
[i] index cleared
typecheckig node...
TMP_341(uint256) := index_2(uint256)
Function name: _transferCollateral
asgn

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_341

Name: TMP_341 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_3(uint256) = index_2 + 1
Function name: _transferCollateral
val: 1

Name: index Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_transferCollateral":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1'])
Function name: _transferCollateral
Phi
[i]Type for _id

Name: _id Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_asset_1(address) := ϕ(['_collateralAsset_1', '_collateralAsset_1'])
Function name: _transferCollateral
Phi
[i]Type for _asset

Name: _asset Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: CASSET
Fields: 
Finance Type: undef
done.
_amountInTokens_1(uint256) := ϕ(['_amount_1', '_totalCollateralTokens_1'])
Function name: _transferCollateral
Phi
[i]Type for _amountInTokens

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_toSavingsAccount_1(bool) := ϕ(['_toSavingsAccount_1', '_toSavingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for _toSavingsAccount

Name: _toSavingsAccount Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_14(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_0', 'collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_10(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_10(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_0', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_320 = CONVERT strategyRegistry_10 to IStrategyRegistry
Function name: _transferCollateral

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[i]Type for TMP_320

Name: TMP_320 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
TMP_321(address[]) = HIGH_LEVEL_CALL, dest:TMP_320(IStrategyRegistry), function:getStrategies, arguments:[]  
Function name: _transferCollateral
High Call: getStrategies
func name:getStrategies
other func name:getStrategies
TMP_321
hlc contract name: REG func_name: getStrategies
('c', [-1], [-1], 0, 'YIELD')
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, 'YIELD', -1)
----
Type: address[]
address[]
address
Final Type: address
COPIED
[i]Type for TMP_321

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_15(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_14', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_11(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_10', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
strategyRegistry_11(address) := ϕ(['strategyRegistry_9', 'strategyRegistry_5', 'strategyRegistry_3', 'strategyRegistry_11', 'strategyRegistry_7', 'strategyRegistry_10', 'strategyRegistry_1'])
Function name: _transferCollateral
Phi
[i]Type for strategyRegistry

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
done.
_strategyList_1(address[]) := TMP_321(address[])
Function name: _transferCollateral
asgn

Name: TMP_321 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _strategyList

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
index_1(uint256) := 0(uint256)
Function name: _transferCollateral
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
_activeAmount_1(uint256) := ϕ(['_activeAmount_2', '_activeAmount_0'])
Function name: _transferCollateral
Phi
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
index_2(uint256) := ϕ(['index_3', 'index_1'])
Function name: _transferCollateral
Phi
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_262 -> LENGTH _strategyList_1
[i]Type for REF_262

Name: REF_262 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_322(bool) = index_2 < REF_262
Function name: _transferCollateral
testing lt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_322 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_322

Name: TMP_322 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_322(bool) = index_2 < REF_262
XXXXX
CONDITION TMP_322
Condition...
Conidtion: 
TMP_322
TMP_322
typecheckig node...
typecheckig node...
TMP_342(None) = SOLIDITY_CALL revert(string)(insufficient collateral)
[i]Type for TMP_342

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_263(mapping(address => uint256)) -> collateralShareInStrategy_15[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_263

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_264(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_264

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_265(uint256) -> REF_263[REF_264]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_265

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_1(uint256) := REF_265(uint256)
Function name: _transferCollateral
asgn

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_323(bool) = liquidityShares_1 == 0
Function name: _transferCollateral
[i]Type for TMP_323

Name: TMP_323 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_266(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_266

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_324 = CONVERT 0 to address
Function name: _transferCollateral
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_324

Name: TMP_324 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_325(bool) = REF_266 == TMP_324
Function name: _transferCollateral
[i]Type for TMP_325

Name: TMP_325 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_326(bool) = TMP_323 || TMP_325
Function name: _transferCollateral
[i]Type for TMP_326

Name: TMP_326 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_326
Condition...
Conidtion: 
TMP_326
TMP_326
typecheckig node...
typecheckig node...
typecheckig node...
_tokenInStrategy_1(uint256) := liquidityShares_1(uint256)
Function name: _transferCollateral
asgn

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_267(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_267

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_327 = CONVERT REF_267 to IYield
Function name: _transferCollateral

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef

Name: TMP_327 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
[i]Type for TMP_327

Name: TMP_327 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_328(uint256) = HIGH_LEVEL_CALL, dest:TMP_327(IYield), function:getTokensForShares, arguments:['liquidityShares_1', '_asset_1']  
Function name: _transferCollateral
High Call: getTokensForShares
func name:getTokensForShares
other func name:getTokensForShares
TMP_328
hlc contract name: YIELD func_name: getTokensForShares
('t', [2], [-1], 0, None)
liquidityShares
_asset
wfc len: 1
Check copy_toekn_tuple
([2], [-1, -1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_328

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_16(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_15', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_12(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_11', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
_tokenInStrategy_2(uint256) := TMP_328(uint256)
Function name: _transferCollateral
asgn

Name: TMP_328 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokenInStrategy

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_tokensToTransfer_1(uint256) := _tokenInStrategy_2(uint256)
Function name: _transferCollateral
asgn

Name: _tokenInStrategy Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_329(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_329

Name: TMP_329 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_330(bool) = TMP_329 > _amountInTokens_1
Function name: _transferCollateral
testing gt...
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
False
[i]Type for TMP_330

Name: TMP_330 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_330
Condition...
Conidtion: 
TMP_330
TMP_330
typecheckig node...
liquidityShares_3(uint256) := ϕ(['liquidityShares_1', 'liquidityShares_2'])
Function name: _transferCollateral
Phi
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_3(uint256) := ϕ(['_tokensToTransfer_2', '_tokensToTransfer_1'])
Function name: _transferCollateral
Phi
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_334(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.add(uint256,uint256), arguments:['_activeAmount_1', '_tokensToTransfer_3'] 
Function name: _transferCollateral
Library Call: add

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_334

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_activeAmount_2(uint256) := TMP_334(uint256)
Function name: _transferCollateral
asgn

Name: TMP_334 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _activeAmount

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_331(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['_amountInTokens_1', '_activeAmount_1'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _activeAmount Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _amountInTokens Function: _transferCollateral
Num: 2
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_331

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
_tokensToTransfer_2(uint256) := TMP_331(uint256)
Function name: _transferCollateral
asgn

Name: TMP_331 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _tokensToTransfer

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_274(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_274

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_275(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_275

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_276(uint256) -> REF_274[REF_275]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_276

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_277(mapping(address => uint256)) -> collateralShareInStrategy_16[_id_1]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_277

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_278(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_278

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
REF_279(uint256) -> REF_277[REF_278]
Function name: _transferCollateral
INDEX

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_279

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_335(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.sub(uint256,uint256), arguments:['REF_279', 'liquidityShares_3'] 
Function name: _transferCollateral
Library Call: sub
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_335

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_17(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_16'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_276 (->collateralShareInStrategy_17) := TMP_335(uint256)
Function name: _transferCollateral
asgn

Name: TMP_335 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_276

Name: REF_276 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_332(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.mul(uint256,uint256), arguments:['liquidityShares_1', '_tokensToTransfer_2'] 
Function name: _transferCollateral
Library Call: mul
testing mul...
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: _tokensToTransfer Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_332 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_332

Name: TMP_332 Function: _transferCollateral
Num: 2
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_333(uint256) = LIBRARY_CALL, dest:SafeMath, function:SafeMath.div(uint256,uint256), arguments:['TMP_332', '_tokenInStrategy_2'] 
Function name: _transferCollateral
Library Call: div
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: PIC_56 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_333

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
liquidityShares_2(uint256) := TMP_333(uint256)
Function name: _transferCollateral
asgn

Name: TMP_333 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for liquidityShares

Name: liquidityShares Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
CONDITION _toSavingsAccount_1
Condition...
Conidtion: 
_toSavingsAccount_1
_toSavingsAccount_1
typecheckig node...
TMP_338 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_338

Name: TMP_338 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_284(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_284

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_339(uint256) = HIGH_LEVEL_CALL, dest:TMP_338(ISavingsAccount), function:withdraw, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_284', 'msg.sender', 'False']  
Function name: _transferCollateral
High Call: withdraw
func name:withdraw
other func name:withdraw
TMP_339
hlc contract name: SAVE func_name: withdraw
wfc len: 0
COPIED
[i]Type for TMP_339

Name: TMP_339 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_18(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10', 'collateralShareInStrategy_17'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_13(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_12', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_336 = CONVERT savingsAccount_12 to ISavingsAccount
Function name: _transferCollateral

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[i]Type for TMP_336

Name: TMP_336 Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
REF_282(address) -> _strategyList_1[index_2]
Function name: _transferCollateral
INDEX

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
Name: _transferCollateral
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_282

Name: _strategyList Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: YIELD
Fields: 
Finance Type: undef
done.
TMP_337(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(ISavingsAccount), function:transfer, arguments:['_tokensToTransfer_3', '_asset_1', 'REF_282', 'msg.sender']  
Function name: _transferCollateral
High Call: transfer
func name:transfer
other func name:transfer
TMP_337
hlc contract name: SAVE func_name: transfer
wfc len: 0
COPIED
[i]Type for TMP_337

Name: TMP_337 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
collateralShareInStrategy_19(mapping(uint256 => mapping(address => uint256))) := ϕ(['collateralShareInStrategy_6', 'collateralShareInStrategy_19', 'collateralShareInStrategy_18', 'collateralShareInStrategy_12', 'collateralShareInStrategy_10'])
Function name: _transferCollateral
Phi
[i]Type for collateralShareInStrategy

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
savingsAccount_14(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_6', 'savingsAccount_1'])
Function name: _transferCollateral
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_340(bool) = _activeAmount_2 == _amountInTokens_1
Function name: _transferCollateral
[i]Type for TMP_340

Name: TMP_340 Function: _transferCollateral
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_340
Condition...
Conidtion: 
TMP_340
TMP_340
typecheckig node...
typecheckig node...
typecheckig node...
TMP_341(uint256) := index_2(uint256)
Function name: _transferCollateral
asgn

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_341 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_341

Name: TMP_341 Function: _transferCollateral
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
index_3(uint256) = index_2 + 1
Function name: _transferCollateral
val: 1

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for index

Name: index Function: _transferCollateral
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_transferCollateral":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _transferCollateral
done.
This IR caused addback:
INTERNAL_CALL, CreditLine._transferCollateral(uint256,address,uint256,bool)(_id_1,_collateralAsset_1,_totalCollateralTokens_1,_toSavingsAccount_1)
XXXXX
typecheckig node...
TMP_359 = CONVERT _borrowAsset_1 to IERC20
Function name: liquidate

Name: _borrowAsset Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef

Name: TMP_359 Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
[i]Type for TMP_359

Name: TMP_359 Function: liquidate
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
LIBRARY_CALL, dest:SafeERC20, function:SafeERC20.safeTransferFrom(IERC20,address,address,uint256), arguments:['TMP_359', 'msg.sender', '_lender_1', '_borrowTokens_1'] 
Library Call: safeTransferFrom
done.
typecheckig node...
Emit CreditLineLiquidated(_id_1,msg.sender)
typecheckig node...
TMP_357(bool) = _returnETH_1 != 0
Function name: liquidate
[i]Type for TMP_357

Name: TMP_357 Function: liquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_357
Condition...
Conidtion: 
TMP_357
TMP_357
typecheckig node...
typecheckig node...
typecheckig node...
TUPLE_5(bool,bytes) = LOW_LEVEL_CALL, dest:msg.sender, function:call, arguments:[''] value:_returnETH_1 
[i]Type for TUPLE_5

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
success_1(bool)= UNPACK TUPLE_5 index: 0 
Function name: liquidate
Reading tuple TUPLE_5 index 0
Finding type for success...
bool
SKIP bool
[i]Type for success

Name: success Function: liquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
TMP_358(None) = SOLIDITY_CALL require(bool,string)(success_1,Transfer fail)
[i]Type for TMP_358

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "liquidate":
 New undefined nodes- 3
 Old undefined nodes- 3
Saving return values for: liquidate
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: borrowTokensToLiquidate
Function borrowTokensToLiquidate not marked
Mark Iterations TRUE, proceeding anyway
Function name: borrowTokensToLiquidate
Function Visibility (test): external
_id
Finding type for _id...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
creditLineConstants_45(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
has variable
typecheckig node...
creditLineConstants_45(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: borrowTokensToLiquidate
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_306(CreditLine.CreditLineConstants) -> creditLineConstants_45[_id_1]
has variable
clearing ir...?
REF_307(address) -> REF_306.collateralAsset
has variable
clearing ir...?
_collateralAsset_1(address) := REF_307(address)
has variable
[i] _collateralAsset cleared
typecheckig node...
REF_306(CreditLine.CreditLineConstants) -> creditLineConstants_45[_id_1]
Function name: borrowTokensToLiquidate
INDEX
[i]Type for REF_306

Name: REF_306 Function: borrowTokensToLiquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_307(address) -> REF_306.collateralAsset
Function name: borrowTokensToLiquidate
MEMBER
REF_306
collateralAsset
borrowTokensToLiquidate
REF_306 Fields:
^^^
[i]Type for REF_307

Name: REF_306.collateralAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_306.collateralAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_307(address)
Function name: borrowTokensToLiquidate
asgn

Name: REF_306.collateralAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _collateralAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_collateralAsset_1(address) := REF_307(address)
XXXXX
clearning node...
clearing ir...?
TMP_364(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
has variable
[i] TMP_364 cleared
clearing ir...?
creditLineConstants_46(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
has variable
clearing ir...?
_totalCollateralTokens_1(uint256) := TMP_364(uint256)
has variable
[i] _totalCollateralTokens cleared
typecheckig node...
TMP_364(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
Function name: borrowTokensToLiquidate
Internal call...
calculateTotalCollateralTokens
_id
Function: calculateTotalCollateralTokens
ic
[i]Type for TMP_364

Name: TMP_364 Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_46(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Function name: borrowTokensToLiquidate
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_totalCollateralTokens_1(uint256) := TMP_364(uint256)
Function name: borrowTokensToLiquidate
asgn

Name: TMP_364 Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalCollateralTokens Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_totalCollateralTokens_1(uint256) := TMP_364(uint256)
XXXXX
clearning node...
clearing ir...?
REF_308(CreditLine.CreditLineConstants) -> creditLineConstants_46[_id_1]
has variable
clearing ir...?
REF_309(address) -> REF_308.borrowAsset
has variable
clearing ir...?
_borrowAsset_1(address) := REF_309(address)
has variable
[i] _borrowAsset cleared
typecheckig node...
REF_308(CreditLine.CreditLineConstants) -> creditLineConstants_46[_id_1]
Function name: borrowTokensToLiquidate
INDEX
[i]Type for REF_308

Name: REF_308 Function: borrowTokensToLiquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_309(address) -> REF_308.borrowAsset
Function name: borrowTokensToLiquidate
MEMBER
REF_308
borrowAsset
borrowTokensToLiquidate
REF_308 Fields:
^^^
[i]Type for REF_309

Name: REF_308.borrowAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_308.borrowAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
_borrowAsset_1(address) := REF_309(address)
Function name: borrowTokensToLiquidate
asgn

Name: REF_308.borrowAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _borrowAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowAsset

Name: _borrowAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_borrowAsset_1(address) := REF_309(address)
XXXXX
clearning node...
clearing ir...?
TMP_365(uint256) = INTERNAL_CALL, CreditLine._borrowTokensToLiquidate(address,address,uint256)(_borrowAsset_1,_collateralAsset_1,_totalCollateralTokens_1)
has variable
[i] TMP_365 cleared
clearing ir...?
RETURN TMP_365
typecheckig node...
TMP_365(uint256) = INTERNAL_CALL, CreditLine._borrowTokensToLiquidate(address,address,uint256)(_borrowAsset_1,_collateralAsset_1,_totalCollateralTokens_1)
Function name: borrowTokensToLiquidate
Internal call...
_borrowTokensToLiquidate
_borrowAsset
_collateralAsset
_totalCollateralTokens
Function: _borrowTokensToLiquidate
ic
[i]Type for TMP_365

Name: TMP_365 Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_365
RETURN

Name: TMP_365 Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "borrowTokensToLiquidate":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
creditLineConstants_45(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_40', 'creditLineConstants_23', 'creditLineConstants_24', 'creditLineConstants_44', 'creditLineConstants_26', 'creditLineConstants_31', 'creditLineConstants_0', 'creditLineConstants_46', 'creditLineConstants_2', 'creditLineConstants_28', 'creditLineConstants_19', 'creditLineConstants_32', 'creditLineConstants_36', 'creditLineConstants_47', 'creditLineConstants_7', 'creditLineConstants_6', 'creditLineConstants_18', 'creditLineConstants_48', 'creditLineConstants_17'])
Function name: borrowTokensToLiquidate
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
typecheckig node...
REF_306(CreditLine.CreditLineConstants) -> creditLineConstants_45[_id_1]
Function name: borrowTokensToLiquidate
INDEX
[i]Type for REF_306

Name: REF_306 Function: borrowTokensToLiquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_307(address) -> REF_306.collateralAsset
Function name: borrowTokensToLiquidate
MEMBER
REF_306
collateralAsset
borrowTokensToLiquidate
REF_306 Fields:
^^^
[i]Type for REF_307

Name: REF_306.collateralAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_306.collateralAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: collateralAsset Function: global
Num: 2
Den: -1
Norm: 0
LF: CASSET
Fields: 
Finance Type: undef
done.
_collateralAsset_1(address) := REF_307(address)
Function name: borrowTokensToLiquidate
asgn

Name: REF_306.collateralAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _collateralAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _collateralAsset

Name: _collateralAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_collateralAsset_1(address) := REF_307(address)
XXXXX
typecheckig node...
TMP_364(uint256) = INTERNAL_CALL, CreditLine.calculateTotalCollateralTokens(uint256)(_id_1)
Function name: borrowTokensToLiquidate
Internal call...
calculateTotalCollateralTokens
_id
Function: calculateTotalCollateralTokens
ic
[i]Type for TMP_364

Name: TMP_364 Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
creditLineConstants_46(mapping(uint256 => CreditLine.CreditLineConstants)) := ϕ(['creditLineConstants_32'])
Function name: borrowTokensToLiquidate
Phi
[i]Type for creditLineConstants

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
done.
_totalCollateralTokens_1(uint256) := TMP_364(uint256)
Function name: borrowTokensToLiquidate
asgn

Name: TMP_364 Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _totalCollateralTokens Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _totalCollateralTokens

Name: _totalCollateralTokens Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_totalCollateralTokens_1(uint256) := TMP_364(uint256)
XXXXX
typecheckig node...
REF_308(CreditLine.CreditLineConstants) -> creditLineConstants_46[_id_1]
Function name: borrowTokensToLiquidate
INDEX
[i]Type for REF_308

Name: REF_308 Function: borrowTokensToLiquidate
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_309(address) -> REF_308.borrowAsset
Function name: borrowTokensToLiquidate
MEMBER
REF_308
borrowAsset
borrowTokensToLiquidate
REF_308 Fields:
^^^
[i]Type for REF_309

Name: REF_308.borrowAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_308.borrowAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: borrowAsset Function: global
Num: 1
Den: -1
Norm: 0
LF: BASSET
Fields: 
Finance Type: undef
done.
_borrowAsset_1(address) := REF_309(address)
Function name: borrowTokensToLiquidate
asgn

Name: REF_308.borrowAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _borrowAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _borrowAsset

Name: _borrowAsset Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
_borrowAsset_1(address) := REF_309(address)
XXXXX
typecheckig node...
TMP_365(uint256) = INTERNAL_CALL, CreditLine._borrowTokensToLiquidate(address,address,uint256)(_borrowAsset_1,_collateralAsset_1,_totalCollateralTokens_1)
Function name: borrowTokensToLiquidate
Internal call...
_borrowTokensToLiquidate
_borrowAsset
_collateralAsset
_totalCollateralTokens
Function: _borrowTokensToLiquidate
ic
[i]Type for TMP_365

Name: TMP_365 Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_365
RETURN

Name: TMP_365 Function: borrowTokensToLiquidate
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "borrowTokensToLiquidate":
 New undefined nodes- 3
 Old undefined nodes- 3
No save for this scenario
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _borrowTokensToLiquidate
Function _borrowTokensToLiquidate not marked
Mark Iterations TRUE, proceeding anyway
Function name: _borrowTokensToLiquidate
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: receive
Function name: receive
Function Visibility (test): external
-100
Add new
clearning node...
clearing ir...?
savingsAccount_15(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
has variable
typecheckig node...
savingsAccount_15(address) := ϕ(['savingsAccount_14', 'savingsAccount_8', 'savingsAccount_13', 'savingsAccount_3', 'savingsAccount_0', 'savingsAccount_6', 'savingsAccount_1'])
Function name: receive
Phi
[i]Type for savingsAccount

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_374(bool) = msg.sender == savingsAccount_15
has variable
[i] TMP_374 cleared
clearing ir...?
TMP_375(None) = SOLIDITY_CALL require(bool,string)(TMP_374,CreditLine::receive invalid transaction)
typecheckig node...
TMP_374(bool) = msg.sender == savingsAccount_15
Function name: receive
[i]Type for TMP_374

Name: TMP_374 Function: receive
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_375(None) = SOLIDITY_CALL require(bool,string)(TMP_374,CreditLine::receive invalid transaction)
[i]Type for TMP_375

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "receive":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: receive
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: slitherConstructorConstantVariables
Function slitherConstructorConstantVariables not marked
Mark Iterations TRUE, proceeding anyway
Function name: slitherConstructorConstantVariables
Function Visibility (test): internal
State_var: savingsAccount
Finding type for savingsAccount...
address
Check copy_toekn_tuple
(-1, -1, 0, 'SAVE')
----
Type: address
address
Final Type: address

Name: savingsAccount Function: global
Num: -1
Den: -1
Norm: 0
LF: SAVE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: strategyRegistry
Finding type for strategyRegistry...
address
Check copy_toekn_tuple
(-1, -1, 0, 'REG')
----
Type: address
address
Final Type: address

Name: strategyRegistry Function: global
Num: -1
Den: -1
Norm: 0
LF: REG
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineVariables
Finding type for creditLineVariables...
mapping(uint256 => CreditLine.CreditLineVariables)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineVariables)
mapping(uint256 => CreditLine.CreditLineVariables)
CreditLine.CreditLineVariables
Final Type: CreditLine.CreditLineVariables
global
creditLineVariables
status
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
Type: CreditLine.CreditLineStatus
CreditLine.CreditLineStatus
Final Type: CreditLine.CreditLineStatus
 NO FIELDS
global
creditLineVariables
principal
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
totalInterestRepaid
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
lastPrincipalUpdateTime
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineVariables
interestAccruedTillLastPrincipalUpdate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
FIELDS:
creditLineVariables Fields:
status
principal
totalInterestRepaid
lastPrincipalUpdateTime
interestAccruedTillLastPrincipalUpdate
^^^

Name: creditLineVariables Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: status, principal, totalInterestRepaid, lastPrincipalUpdateTime, interestAccruedTillLastPrincipalUpdate
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineConstants
Finding type for creditLineConstants...
mapping(uint256 => CreditLine.CreditLineConstants)
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => CreditLine.CreditLineConstants)
mapping(uint256 => CreditLine.CreditLineConstants)
CreditLine.CreditLineConstants
Final Type: CreditLine.CreditLineConstants
global
creditLineConstants
lender
global
creditLineConstants
borrower
global
creditLineConstants
borrowLimit
global
creditLineConstants
idealCollateralRatio
global
creditLineConstants
borrowRate
Check copy_toekn_tuple
([-1], [-1], 'u', None)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
creditLineConstants
borrowAsset
Check copy_toekn_tuple
([1], [-1], [0], 'BASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
collateralAsset
Check copy_toekn_tuple
([2], [-1], [0], 'CASSET')
----
Type: address
address
Final Type: address
Type: address
address
Final Type: address
global
creditLineConstants
autoLiquidation
global
creditLineConstants
requestByLender
FIELDS:
creditLineConstants Fields:
requestByLender
idealCollateralRatio
autoLiquidation
borrowLimit
lender
borrower
borrowRate
borrowAsset
collateralAsset
^^^

Name: creditLineConstants Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: requestByLender, idealCollateralRatio, autoLiquidation, borrowLimit, lender, borrower, borrowRate, borrowAsset, collateralAsset
Finance Type: undef
[*]Type fetched successfully
State_var: priceOracle
Finding type for priceOracle...
address
Check copy_toekn_tuple
(-1, -1, 0, 'ORACLE')
----
Type: address
address
Final Type: address

Name: priceOracle Function: global
Num: -1
Den: -1
Norm: 0
LF: ORACLE
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: collateralShareInStrategy
Finding type for collateralShareInStrategy...
mapping(uint256 => mapping(address => uint256))
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: mapping(uint256 => mapping(address => uint256))
mapping(uint256 => mapping(address => uint256))
mapping(address => uint256)
uint256
Final Type: uint256

Name: collateralShareInStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: defaultStrategy
Finding type for defaultStrategy...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: defaultStrategy Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _NOT_ENTERED
Finding type for _NOT_ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _NOT_ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeCollector
Finding type for protocolFeeCollector...
address
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: address
address
Final Type: address

Name: protocolFeeCollector Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: protocolFeeFraction
Finding type for protocolFeeFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: protocolFeeFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _initialized
Finding type for _initialized...
bool
SKIP bool
State_var: _initializing
Finding type for _initializing...
bool
SKIP bool
State_var: liquidatorRewardFraction
Finding type for liquidatorRewardFraction...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: liquidatorRewardFraction Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: YEAR_IN_SECONDS
Finding type for YEAR_IN_SECONDS...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: YEAR_IN_SECONDS Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _ENTERED
Finding type for _ENTERED...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _ENTERED Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _status
Finding type for _status...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: _status Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: creditLineCounter
Finding type for creditLineCounter...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None)
----
Type: uint256
uint256
Final Type: uint256

Name: creditLineCounter Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Errors: [<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f5b30a0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f38c070>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f38c520>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f38c7f0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7f692f3023d0>]
Seen contract: {'CreditLine': True} Contract name out: SavingsAccountUtil
[x] SavingsAccountUtil not run
Seen contract: {'CreditLine': True, 'SavingsAccountUtil': True} Contract name out: IPriceOracle
[x] IPriceOracle not run
Seen contract: {'CreditLine': True, 'SavingsAccountUtil': True, 'IPriceOracle': True} Contract name out: ISavingsAccount
[x] ISavingsAccount not run
Seen contract: {'CreditLine': True, 'SavingsAccountUtil': True, 'IPriceOracle': True, 'ISavingsAccount': True} Contract name out: IStrategyRegistry
[x] IStrategyRegistry not run
Seen contract: {'CreditLine': True, 'SavingsAccountUtil': True, 'IPriceOracle': True, 'ISavingsAccount': True, 'IStrategyRegistry': True} Contract name out: IYield
[x] IYield not run
Seen contract: {'CreditLine': True, 'SavingsAccountUtil': True, 'IPriceOracle': True, 'ISavingsAccount': True, 'IStrategyRegistry': True, 'IYield': True} Contract name out: OwnableUpgradeable
[x] OwnableUpgradeable not run
Seen contract: {'CreditLine': True, 'SavingsAccountUtil': True, 'IPriceOracle': True, 'ISavingsAccount': True, 'IStrategyRegistry': True, 'IYield': True, 'OwnableUpgradeable': True} Contract name out: Initializable
[x] Initializable not run
Seen contract: {'CreditLine': True, 'SavingsAccountUtil': True, 'IPriceOracle': True, 'ISavingsAccount': True, 'IStrategyRegistry': True, 'IYield': True, 'OwnableUpgradeable': True, 'Initializable': True} Contract name out: AddressUpgradeable
[x] AddressUpgradeable not run
Seen contract: {'CreditLine': True, 'SavingsAccountUtil': True, 'IPriceOracle': True, 'ISavingsAccount': True, 'IStrategyRegistry': True, 'IYield': True, 'OwnableUpgradeable': True, 'Initializable': True, 'AddressUpgradeable': True} Contract name out: ContextUpgradeable
[x] ContextUpgradeable not run
Seen contract: {'CreditLine': True, 'SavingsAccountUtil': True, 'IPriceOracle': True, 'ISavingsAccount': True, 'IStrategyRegistry': True, 'IYield': True, 'OwnableUpgradeable': True, 'Initializable': True, 'AddressUpgradeable': True, 'ContextUpgradeable': True} Contract name out: SafeMath
[x] SafeMath not run
Seen contract: {'CreditLine': True, 'SavingsAccountUtil': True, 'IPriceOracle': True, 'ISavingsAccount': True, 'IStrategyRegistry': True, 'IYield': True, 'OwnableUpgradeable': True, 'Initializable': True, 'AddressUpgradeable': True, 'ContextUpgradeable': True, 'SafeMath': True} Contract name out: IERC20
[x] IERC20 not run
Seen contract: {'CreditLine': True, 'SavingsAccountUtil': True, 'IPriceOracle': True, 'ISavingsAccount': True, 'IStrategyRegistry': True, 'IYield': True, 'OwnableUpgradeable': True, 'Initializable': True, 'AddressUpgradeable': True, 'ContextUpgradeable': True, 'SafeMath': True, 'IERC20': True} Contract name out: SafeERC20
[x] SafeERC20 not run
Seen contract: {'CreditLine': True, 'SavingsAccountUtil': True, 'IPriceOracle': True, 'ISavingsAccount': True, 'IStrategyRegistry': True, 'IYield': True, 'OwnableUpgradeable': True, 'Initializable': True, 'AddressUpgradeable': True, 'ContextUpgradeable': True, 'SafeMath': True, 'IERC20': True, 'SafeERC20': True} Contract name out: Address
[x] Address not run
Seen contract: {'CreditLine': True, 'SavingsAccountUtil': True, 'IPriceOracle': True, 'ISavingsAccount': True, 'IStrategyRegistry': True, 'IYield': True, 'OwnableUpgradeable': True, 'Initializable': True, 'AddressUpgradeable': True, 'ContextUpgradeable': True, 'SafeMath': True, 'IERC20': True, 'SafeERC20': True, 'Address': True} Contract name out: ReentrancyGuard
[x] ReentrancyGuard not run
Function count: 45
