{
	"schemaVersion": "2.0.0",
	"contractName": "MockAggregatorValidator",
	"compilerOutput": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint8",
						"name": "id_",
						"type": "uint8"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "uint8",
						"name": "id",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "previousRoundId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "previousAnswer",
						"type": "int256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "currentRoundId",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "int256",
						"name": "currentAnswer",
						"type": "int256"
					}
				],
				"name": "ValidateCalled",
				"type": "event"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "previousRoundId",
						"type": "uint256"
					},
					{
						"internalType": "int256",
						"name": "previousAnswer",
						"type": "int256"
					},
					{
						"internalType": "uint256",
						"name": "currentRoundId",
						"type": "uint256"
					},
					{
						"internalType": "int256",
						"name": "currentAnswer",
						"type": "int256"
					}
				],
				"name": "validate",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"evm": {
			"bytecode": {
				"object": "0x60a060405234801561001057600080fd5b506040516101b63803806101b683398101604081905261002f9161005c565b60f81b7fff0000000000000000000000000000000000000000000000000000000000000016608052610084565b60006020828403121561006d578081fd5b815160ff8116811461007d578182fd5b9392505050565b60805160f81c6101156100a16000396000605f01526101156000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063beed9b5114610030575b600080fd5b61004361003e3660046100d7565b610057565b604051901515815260200160405180910390f35b6040805160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020810186905290810184905260608101839052608081018290526000907f9ef8f58acca419d2e95bed9bdae0cb763fe14db033353f206cded59ef3359d5d9060a00160405180910390a1506001949350505050565b600080600080608085870312156100ec578384fd5b505082359460208401359450604084013593606001359250905056fea164736f6c6343000803000a",
				"sourceMap": "115:605:18:-:0;;;210:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;239:8;;;;;;115:605;;14:293:24;;135:2;123:9;114:7;110:23;106:32;103:2;;;156:6;148;141:22;103:2;193:9;187:16;243:4;236:5;232:16;225:5;222:27;212:2;;268:6;260;253:22;212:2;296:5;93:214;-1:-1:-1;;;93:214:24:o;:::-;115:605:18;;;;;;;;;;;;"
			},
			"deployedBytecode": {
				"object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063beed9b5114610030575b600080fd5b61004361003e3660046100d7565b610057565b604051901515815260200160405180910390f35b6040805160ff7f00000000000000000000000000000000000000000000000000000000000000001681526020810186905290810184905260608101839052608081018290526000907f9ef8f58acca419d2e95bed9bdae0cb763fe14db033353f206cded59ef3359d5d9060a00160405180910390a1506001949350505050565b600080600080608085870312156100ec578384fd5b505082359460208401359450604084013593606001359250905056fea164736f6c6343000803000a",
				"sourceMap": "115:605:18:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;411:306;;;;;;:::i;:::-;;:::i;:::-;;;577:14:24;;570:22;552:41;;540:2;525:18;411:306:18;;;;;;;;613:82;;;885:4:24;628:2:18;873:17:24;855:36;;922:2;907:18;;900:34;;;950:18;;;943:34;;;1008:2;993:18;;986:34;;;1051:3;1036:19;;1029:35;;;589:4:18;;613:82;;842:3:24;827:19;613:82:18;;;;;;;-1:-1:-1;708:4:18;411:306;;;;;;:::o;14:393:24:-;;;;;175:3;163:9;154:7;150:23;146:33;143:2;;;197:6;189;182:22;143:2;-1:-1:-1;;225:23:24;;;295:2;280:18;;267:32;;-1:-1:-1;346:2:24;331:18;;318:32;;397:2;382:18;369:32;;-1:-1:-1;133:274:24;-1:-1:-1;133:274:24:o"
			},
			"methodIdentifiers": {
				"validate(uint256,int256,uint256,int256)": "beed9b51"
			}
		},
		"metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"id_\",\"type\":\"uint8\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"id\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousRoundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"previousAnswer\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"currentRoundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"currentAnswer\",\"type\":\"int256\"}],\"name\":\"ValidateCalled\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"previousRoundId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"previousAnswer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"currentRoundId\",\"type\":\"uint256\"},{\"internalType\":\"int256\",\"name\":\"currentAnswer\",\"type\":\"int256\"}],\"name\":\"validate\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.8/tests/MockAggregatorValidator.sol\":\"MockAggregatorValidator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.8/interfaces/AggregatorValidatorInterface.sol\":{\"keccak256\":\"0x26f14e7cd4b075f8259212010a3c35d62e12f25d79b8219c931cf8f64bd3166d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d3983259a2da6f573b85bdcdb510929efda8cc1cecd7cf18ad3d417fa7e850bf\",\"dweb:/ipfs/QmWt4wC8EtoYmetWLANaG383XVnjDS1QHEQdGiaKsruSJ5\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.8/tests/MockAggregatorValidator.sol\":{\"keccak256\":\"0x27980934c677055ace8b0a9fc9a0942411fb7768bbe66e9c394e478e641bc27c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb840e4129db4787e13d9b3d19cdef2032dca893b0f148a7e210478d98cd4110\",\"dweb:/ipfs/QmRz9xKrxDraSNJeC1shEDmVgV7u2X2C6HYTGeYKY1kDQP\"]}},\"version\":1}",
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"sources": {
		"tests/MockAggregatorValidator.sol": {
			"id": 18
		},
		"interfaces/AggregatorValidatorInterface.sol": {
			"id": 9
		}
	},
	"sourceCodes": {
		"tests/MockAggregatorValidator.sol": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"../interfaces/AggregatorValidatorInterface.sol\";\n\ncontract MockAggregatorValidator is AggregatorValidatorInterface {\n  \n  uint8 immutable id;\n\n  constructor(uint8 id_) {\n    id = id_;\n  }\n\n  event ValidateCalled(\n    uint8 id,\n    uint256 previousRoundId,\n    int256 previousAnswer,\n    uint256 currentRoundId,\n    int256 currentAnswer\n  );\n  \n  function validate(\n    uint256 previousRoundId,\n    int256 previousAnswer,\n    uint256 currentRoundId,\n    int256 currentAnswer\n  )\n    external\n    override\n    returns (\n      bool\n    )\n  {\n    emit ValidateCalled(id, previousRoundId, previousAnswer, currentRoundId, currentAnswer);\n    return true;\n  }\n\n}",
		"interfaces/AggregatorValidatorInterface.sol": "\n// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\ninterface AggregatorValidatorInterface {\n  function validate(\n    uint256 previousRoundId,\n    int256 previousAnswer,\n    uint256 currentRoundId,\n    int256 currentAnswer\n  )\n    external\n    returns (\n      bool\n    );\n}"
	},
	"sourceTreeHashHex": "0xb5b84290f1a1cf81cfba2fce082508805a8d0feaa603c4c4e73b443058f59e8d",
	"compiler": {
		"name": "solc",
		"version": "soljson-v0.8.3+commit.8d00100c.js",
		"settings": {
			"optimizer": {
				"runs": 1000000,
				"enabled": true
			},
			"outputSelection": {
				"*": {
					"*": [
						"abi",
						"devdoc",
						"userdoc",
						"evm.bytecode.object",
						"evm.bytecode.sourceMap",
						"evm.deployedBytecode.object",
						"evm.deployedBytecode.sourceMap",
						"evm.methodIdentifiers",
						"metadata"
					]
				}
			},
			"metadata": {
				"bytecodeHash": "none"
			},
			"remappings": []
		}
	},
	"chains": {}
}