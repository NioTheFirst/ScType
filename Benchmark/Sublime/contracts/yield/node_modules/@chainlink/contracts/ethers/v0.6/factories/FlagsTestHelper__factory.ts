/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from "..";
import { FlagsTestHelper } from "../FlagsTestHelper";

export class FlagsTestHelper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    flagsContract: string,
    overrides?: TransactionOverrides
  ): Promise<FlagsTestHelper> {
    return super.deploy(flagsContract, overrides) as Promise<FlagsTestHelper>;
  }
  getDeployTransaction(
    flagsContract: string,
    overrides?: TransactionOverrides
  ): UnsignedTransaction {
    return super.getDeployTransaction(flagsContract, overrides);
  }
  attach(address: string): FlagsTestHelper {
    return super.attach(address) as FlagsTestHelper;
  }
  connect(signer: Signer): FlagsTestHelper__factory {
    return super.connect(signer) as FlagsTestHelper__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FlagsTestHelper {
    return new Contract(address, _abi, signerOrProvider) as FlagsTestHelper;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "flagsContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "flags",
    outputs: [
      {
        internalType: "contract Flags",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "subject",
        type: "address",
      },
    ],
    name: "getFlag",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "subjects",
        type: "address[]",
      },
    ],
    name: "getFlags",
    outputs: [
      {
        internalType: "bool[]",
        name: "",
        type: "bool[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516104423803806104428339818101604052602081101561003357600080fd5b5051600080546001600160a01b039092166001600160a01b03199092169190911790556103dd806100656000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063357e47fe1461004657806364cc4aa51461008d5780637d723cac146100be575b600080fd5b6100796004803603602081101561005c57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661017e565b604080519115158252519081900360200190f35b610095610224565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b61012e600480360360208110156100d457600080fd5b8101906020810181356401000000008111156100ef57600080fd5b82018360208201111561010157600080fd5b8035906020019184602083028401116401000000008311171561012357600080fd5b509092509050610240565b60408051602080825283518183015283519192839290830191858101910280838360005b8381101561016a578181015183820152602001610152565b505050509050019250505060405180910390f35b60008054604080517f357e47fe00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85811660048301529151919092169163357e47fe916024808301926020929190829003018186803b1580156101f257600080fd5b505afa158015610206573d6000803e3d6000fd5b505050506040513d602081101561021c57600080fd5b505192915050565b60005473ffffffffffffffffffffffffffffffffffffffff1681565b6000546040517f7d723cac0000000000000000000000000000000000000000000000000000000081526020600482018181526024830185905260609373ffffffffffffffffffffffffffffffffffffffff1692637d723cac928792879290918291604401908590850280828437600081840152601f19601f820116905080830192505050935050505060006040518083038186803b1580156102e157600080fd5b505afa1580156102f5573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052602081101561033c57600080fd5b810190808051604051939291908464010000000082111561035c57600080fd5b90830190602082018581111561037157600080fd5b825186602082028301116401000000008211171561038e57600080fd5b82525081516020918201928201910280838360005b838110156103bb5781810151838201526020016103a3565b5050505090500160405250505090509291505056fea164736f6c6343000606000a";
