/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from "..";
import { VRFConsumer } from "../VRFConsumer";

export class VRFConsumer__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _vrfCoordinator: string,
    _link: string,
    overrides?: TransactionOverrides
  ): Promise<VRFConsumer> {
    return super.deploy(_vrfCoordinator, _link, overrides) as Promise<
      VRFConsumer
    >;
  }
  getDeployTransaction(
    _vrfCoordinator: string,
    _link: string,
    overrides?: TransactionOverrides
  ): UnsignedTransaction {
    return super.getDeployTransaction(_vrfCoordinator, _link, overrides);
  }
  attach(address: string): VRFConsumer {
    return super.attach(address) as VRFConsumer;
  }
  connect(signer: Signer): VRFConsumer__factory {
    return super.connect(signer) as VRFConsumer__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFConsumer {
    return new Contract(address, _abi, signerOrProvider) as VRFConsumer;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_vrfCoordinator",
        type: "address",
      },
      {
        internalType: "address",
        name: "_link",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "randomnessOutput",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "randomness",
        type: "uint256",
      },
    ],
    name: "rawFulfillRandomness",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "requestId",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_fee",
        type: "uint256",
      },
    ],
    name: "testRequestRandomness",
    outputs: [
      {
        internalType: "bytes32",
        name: "requestId",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b506040516104e63803806104e683398101604081905261002f91610069565b6001600160601b0319606092831b811660a052911b1660805261009b565b80516001600160a01b038116811461006457600080fd5b919050565b6000806040838503121561007b578182fd5b6100848361004d565b91506100926020840161004d565b90509250929050565b60805160601c60a05160601c61041a6100cc6000396000818160c701526101a301526000610167015261041a6000f3fe608060405234801561001057600080fd5b506004361061004b5760003560e01c80626d6cae146100505780632f47fd861461006b578063866ee7481461007457806394985ddd14610087575b600080fd5b61005960025481565b60405190815260200160405180910390f35b61005960015481565b610059610082366004610319565b61009c565b61009a610095366004610319565b6100af565b005b60006100a88383610163565b9392505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610152576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640160405180910390fd5b61015f8282600155600255565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016101e0929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161020d9392919061033a565b602060405180830381600087803b15801561022757600080fd5b505af115801561023b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025f91906102f9565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a0909101909252815191830191909120868452929091526102b99060016103d0565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b60006020828403121561030a578081fd5b815180151581146100a8578182fd5b6000806040838503121561032b578081fd5b50508035926020909101359150565b600073ffffffffffffffffffffffffffffffffffffffff8516825260208481840152606060408401528351806060850152825b818110156103895785810183015185820160800152820161036d565b8181111561039a5783608083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160800195945050505050565b60008219821115610408577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50019056fea164736f6c6343000803000a";
