/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from "..";
import { CheckedMathTestHelper } from "../CheckedMathTestHelper";

export class CheckedMathTestHelper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<CheckedMathTestHelper> {
    return super.deploy(overrides) as Promise<CheckedMathTestHelper>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): CheckedMathTestHelper {
    return super.attach(address) as CheckedMathTestHelper;
  }
  connect(signer: Signer): CheckedMathTestHelper__factory {
    return super.connect(signer) as CheckedMathTestHelper__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CheckedMathTestHelper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as CheckedMathTestHelper;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "add",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "div",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "mul",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "a",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "b",
        type: "int256",
      },
    ],
    name: "sub",
    outputs: [
      {
        internalType: "int256",
        name: "result",
        type: "int256",
      },
      {
        internalType: "bool",
        name: "ok",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506102fa806100206000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c80634350913814610051578063a5f3c23b1461008d578063adefc37b146100b0578063bbe93d91146100d3575b600080fd5b6100746004803603604081101561006757600080fd5b50803590602001356100f6565b6040805192835290151560208301528051918290030190f35b610074600480360360408110156100a357600080fd5b5080359060200135610115565b610074600480360360408110156100c657600080fd5b5080359060200135610128565b610074600480360360408110156100e957600080fd5b508035906020013561013b565b600080610109848463ffffffff61014e16565b915091505b9250929050565b600080610109848463ffffffff6101d716565b600080610109848463ffffffff61021f16565b600080610109848463ffffffff61025b16565b600080826101615750600090508061010e565b827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1480156101af57507f800000000000000000000000000000000000000000000000000000000000000084145b156101bf5750600090508061010e565b60008385816101ca57fe5b0595600195509350505050565b6000808383018184128015906101ec57508481125b8061020257506000841280156102025750848112155b1561021457506000915081905061010e565b946001945092505050565b60008082840381841280156102345750848113155b8061020257506000841215801561020257508481131561021457506000915081905061010e565b6000808361026f575060009050600161010e565b837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1480156102bd57507f800000000000000000000000000000000000000000000000000000000000000083145b156102cd5750600090508061010e565b838302838582816102da57fe5b051461021457506000915081905061010e56fea164736f6c6343000606000a";
