/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from "..";
import { VRFRequestIDBaseTestHelper } from "../VRFRequestIDBaseTestHelper";

export class VRFRequestIDBaseTestHelper__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: TransactionOverrides
  ): Promise<VRFRequestIDBaseTestHelper> {
    return super.deploy(overrides) as Promise<VRFRequestIDBaseTestHelper>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): VRFRequestIDBaseTestHelper {
    return super.attach(address) as VRFRequestIDBaseTestHelper;
  }
  connect(signer: Signer): VRFRequestIDBaseTestHelper__factory {
    return super.connect(signer) as VRFRequestIDBaseTestHelper__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): VRFRequestIDBaseTestHelper {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as VRFRequestIDBaseTestHelper;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_vRFInputSeed",
        type: "uint256",
      },
    ],
    name: "makeRequestId_",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "_keyHash",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "_userSeed",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_requester",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_nonce",
        type: "uint256",
      },
    ],
    name: "makeVRFInputSeed_",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061016d806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806337ab429a1461003b578063bda087ae146100af575b600080fd5b61009d61004936600461010a565b604080516020808201969096528082019490945273ffffffffffffffffffffffffffffffffffffffff9290921660608401526080808401919091528151808403909101815260a09092019052805191012090565b60405190815260200160405180910390f35b61009d6100bd3660046100e9565b604080516020808201949094528082019290925280518083038201815260609092019052805191012090565b600080604083850312156100fb578182fd5b50508035926020909101359150565b6000806000806080858703121561011f578182fd5b8435935060208501359250604085013573ffffffffffffffffffffffffffffffffffffffff81168114610150578283fd5b939692955092936060013592505056fea164736f6c6343000803000a";
