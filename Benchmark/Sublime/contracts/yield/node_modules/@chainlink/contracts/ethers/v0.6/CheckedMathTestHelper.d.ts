/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface CheckedMathTestHelperInterface extends Interface {
  functions: {
    add: TypedFunctionDescription<{
      encode([a, b]: [BigNumberish, BigNumberish]): string;
    }>;

    div: TypedFunctionDescription<{
      encode([a, b]: [BigNumberish, BigNumberish]): string;
    }>;

    mul: TypedFunctionDescription<{
      encode([a, b]: [BigNumberish, BigNumberish]): string;
    }>;

    sub: TypedFunctionDescription<{
      encode([a, b]: [BigNumberish, BigNumberish]): string;
    }>;
  };

  events: {};
}

export class CheckedMathTestHelper extends Contract {
  connect(signerOrProvider: Signer | Provider | string): CheckedMathTestHelper;
  attach(addressOrName: string): CheckedMathTestHelper;
  deployed(): Promise<CheckedMathTestHelper>;

  on(event: EventFilter | string, listener: Listener): CheckedMathTestHelper;
  once(event: EventFilter | string, listener: Listener): CheckedMathTestHelper;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): CheckedMathTestHelper;
  removeAllListeners(eventName: EventFilter | string): CheckedMathTestHelper;
  removeListener(eventName: any, listener: Listener): CheckedMathTestHelper;

  interface: CheckedMathTestHelperInterface;

  functions: {
    add(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

    "add(int256,int256)"(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

    div(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

    "div(int256,int256)"(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

    mul(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

    "mul(int256,int256)"(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

    sub(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

    "sub(int256,int256)"(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;
  };

  add(
    a: BigNumberish,
    b: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

  "add(int256,int256)"(
    a: BigNumberish,
    b: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

  div(
    a: BigNumberish,
    b: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

  "div(int256,int256)"(
    a: BigNumberish,
    b: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

  mul(
    a: BigNumberish,
    b: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

  "mul(int256,int256)"(
    a: BigNumberish,
    b: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

  sub(
    a: BigNumberish,
    b: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

  "sub(int256,int256)"(
    a: BigNumberish,
    b: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<[BigNumber, boolean] & { result: BigNumber; ok: boolean }>;

  filters: {};

  estimate: {
    add(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "add(int256,int256)"(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    div(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "div(int256,int256)"(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    mul(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "mul(int256,int256)"(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    sub(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "sub(int256,int256)"(
      a: BigNumberish,
      b: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
