'use strict'
Object.defineProperty(exports, '__esModule', { value: true })
const contract = require('@truffle/contract')
const MockV3Aggregator = contract({
 "contractName": "MockV3Aggregator",
 "abi": [
  {
   "inputs": [
    {
     "internalType": "uint8",
     "name": "_decimals",
     "type": "uint8"
    },
    {
     "internalType": "int256",
     "name": "_initialAnswer",
     "type": "int256"
    }
   ],
   "stateMutability": "nonpayable",
   "type": "constructor"
  },
  {
   "anonymous": false,
   "inputs": [
    {
     "indexed": true,
     "internalType": "int256",
     "name": "current",
     "type": "int256"
    },
    {
     "indexed": true,
     "internalType": "uint256",
     "name": "roundId",
     "type": "uint256"
    },
    {
     "indexed": false,
     "internalType": "uint256",
     "name": "updatedAt",
     "type": "uint256"
    }
   ],
   "name": "AnswerUpdated",
   "type": "event"
  },
  {
   "anonymous": false,
   "inputs": [
    {
     "indexed": true,
     "internalType": "uint256",
     "name": "roundId",
     "type": "uint256"
    },
    {
     "indexed": true,
     "internalType": "address",
     "name": "startedBy",
     "type": "address"
    },
    {
     "indexed": false,
     "internalType": "uint256",
     "name": "startedAt",
     "type": "uint256"
    }
   ],
   "name": "NewRound",
   "type": "event"
  },
  {
   "inputs": [],
   "name": "decimals",
   "outputs": [
    {
     "internalType": "uint8",
     "name": "",
     "type": "uint8"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  },
  {
   "inputs": [],
   "name": "description",
   "outputs": [
    {
     "internalType": "string",
     "name": "",
     "type": "string"
    }
   ],
   "stateMutability": "pure",
   "type": "function"
  },
  {
   "inputs": [
    {
     "internalType": "uint256",
     "name": "",
     "type": "uint256"
    }
   ],
   "name": "getAnswer",
   "outputs": [
    {
     "internalType": "int256",
     "name": "",
     "type": "int256"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  },
  {
   "inputs": [
    {
     "internalType": "uint80",
     "name": "_roundId",
     "type": "uint80"
    }
   ],
   "name": "getRoundData",
   "outputs": [
    {
     "internalType": "uint80",
     "name": "roundId",
     "type": "uint80"
    },
    {
     "internalType": "int256",
     "name": "answer",
     "type": "int256"
    },
    {
     "internalType": "uint256",
     "name": "startedAt",
     "type": "uint256"
    },
    {
     "internalType": "uint256",
     "name": "updatedAt",
     "type": "uint256"
    },
    {
     "internalType": "uint80",
     "name": "answeredInRound",
     "type": "uint80"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  },
  {
   "inputs": [
    {
     "internalType": "uint256",
     "name": "",
     "type": "uint256"
    }
   ],
   "name": "getTimestamp",
   "outputs": [
    {
     "internalType": "uint256",
     "name": "",
     "type": "uint256"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  },
  {
   "inputs": [],
   "name": "latestAnswer",
   "outputs": [
    {
     "internalType": "int256",
     "name": "",
     "type": "int256"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  },
  {
   "inputs": [],
   "name": "latestRound",
   "outputs": [
    {
     "internalType": "uint256",
     "name": "",
     "type": "uint256"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  },
  {
   "inputs": [],
   "name": "latestRoundData",
   "outputs": [
    {
     "internalType": "uint80",
     "name": "roundId",
     "type": "uint80"
    },
    {
     "internalType": "int256",
     "name": "answer",
     "type": "int256"
    },
    {
     "internalType": "uint256",
     "name": "startedAt",
     "type": "uint256"
    },
    {
     "internalType": "uint256",
     "name": "updatedAt",
     "type": "uint256"
    },
    {
     "internalType": "uint80",
     "name": "answeredInRound",
     "type": "uint80"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  },
  {
   "inputs": [],
   "name": "latestTimestamp",
   "outputs": [
    {
     "internalType": "uint256",
     "name": "",
     "type": "uint256"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  },
  {
   "inputs": [
    {
     "internalType": "int256",
     "name": "_answer",
     "type": "int256"
    }
   ],
   "name": "updateAnswer",
   "outputs": [],
   "stateMutability": "nonpayable",
   "type": "function"
  },
  {
   "inputs": [
    {
     "internalType": "uint80",
     "name": "_roundId",
     "type": "uint80"
    },
    {
     "internalType": "int256",
     "name": "_answer",
     "type": "int256"
    },
    {
     "internalType": "uint256",
     "name": "_timestamp",
     "type": "uint256"
    },
    {
     "internalType": "uint256",
     "name": "_startedAt",
     "type": "uint256"
    }
   ],
   "name": "updateRoundData",
   "outputs": [],
   "stateMutability": "nonpayable",
   "type": "function"
  },
  {
   "inputs": [],
   "name": "version",
   "outputs": [
    {
     "internalType": "uint256",
     "name": "",
     "type": "uint256"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  }
 ],
 "evm": {
  "bytecode": {
   "object": "0x608060405234801561001057600080fd5b506040516104e83803806104e88339818101604052604081101561003357600080fd5b5080516020909101516000805460ff191660ff84161790556100548161005b565b50506100a2565b600181815542600281905560038054909201808355600090815260046020908152604080832095909555835482526005815284822083905592548152600690925291902055565b610437806100b16000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c80638205bf6a11610081578063b5ab58dc1161005b578063b5ab58dc14610273578063b633620c14610290578063feaf968c146102ad576100d4565b80638205bf6a146101db5780639a6fc8f5146101e3578063a87a20ce14610256576100d4565b806354fd4d50116100b257806354fd4d501461014e578063668a0f02146101565780637284e4161461015e576100d4565b8063313ce567146100d95780634aa2011f146100f757806350d25bcd14610134575b600080fd5b6100e16102b5565b6040805160ff9092168252519081900360200190f35b6101326004803603608081101561010d57600080fd5b5069ffffffffffffffffffff81351690602081013590604081013590606001356102be565b005b61013c61030b565b60408051918252519081900360200190f35b61013c610311565b61013c610316565b61016661031c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a0578181015183820152602001610188565b50505050905090810190601f1680156101cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61013c610353565b61020c600480360360208110156101f957600080fd5b503569ffffffffffffffffffff16610359565b604051808669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1681526020019550505050505060405180910390f35b6101326004803603602081101561026c57600080fd5b5035610392565b61013c6004803603602081101561028957600080fd5b50356103d9565b61013c600480360360208110156102a657600080fd5b50356103eb565b61020c6103fd565b60005460ff1681565b69ffffffffffffffffffff90931660038181556001849055600283905560009182526004602090815260408084209590955581548352600581528483209390935554815260069091522055565b60015481565b600081565b60035481565b60408051808201909152601f81527f76302e362f74657374732f4d6f636b563341676772656761746f722e736f6c00602082015290565b60025481565b69ffffffffffffffffffff8116600090815260046020908152604080832054600683528184205460059093529220549293919290918490565b600181815542600281905560038054909201808355600090815260046020908152604080832095909555835482526005815284822083905592548152600690925291902055565b60046020526000908152604090205481565b60056020526000908152604090205481565b6003546000818152600460209081526040808320546006835281842054600590935292205483909192939456fea164736f6c6343000706000a",
   "sourceMap": "373:2121:36:-:0;;;804:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;804:129:36;;;;;;;874:8;:20;;-1:-1:-1;;874:20:36;;;;;;;900:28;804:129;900:12;:28::i;:::-;804:129;;373:2121;;937:287;1003:12;:22;;;1049:15;1031;:33;;;1070:11;:13;;;;;;;;-1:-1:-1;1089:22:36;;;:9;:22;;;;;;;;:32;;;;1140:11;;1127:25;;:12;:25;;;;;:43;;;1189:11;;1176:25;;:12;:25;;;;;;:43;937:287::o;373:2121::-;;;;;;;"
  },
  "deployedBytecode": {
   "object": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c80638205bf6a11610081578063b5ab58dc1161005b578063b5ab58dc14610273578063b633620c14610290578063feaf968c146102ad576100d4565b80638205bf6a146101db5780639a6fc8f5146101e3578063a87a20ce14610256576100d4565b806354fd4d50116100b257806354fd4d501461014e578063668a0f02146101565780637284e4161461015e576100d4565b8063313ce567146100d95780634aa2011f146100f757806350d25bcd14610134575b600080fd5b6100e16102b5565b6040805160ff9092168252519081900360200190f35b6101326004803603608081101561010d57600080fd5b5069ffffffffffffffffffff81351690602081013590604081013590606001356102be565b005b61013c61030b565b60408051918252519081900360200190f35b61013c610311565b61013c610316565b61016661031c565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101a0578181015183820152602001610188565b50505050905090810190601f1680156101cd5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61013c610353565b61020c600480360360208110156101f957600080fd5b503569ffffffffffffffffffff16610359565b604051808669ffffffffffffffffffff1681526020018581526020018481526020018381526020018269ffffffffffffffffffff1681526020019550505050505060405180910390f35b6101326004803603602081101561026c57600080fd5b5035610392565b61013c6004803603602081101561028957600080fd5b50356103d9565b61013c600480360360208110156102a657600080fd5b50356103eb565b61020c6103fd565b60005460ff1681565b69ffffffffffffffffffff90931660038181556001849055600283905560009182526004602090815260408084209590955581548352600581528483209390935554815260069091522055565b60015481565b600081565b60035481565b60408051808201909152601f81527f76302e362f74657374732f4d6f636b563341676772656761746f722e736f6c00602082015290565b60025481565b69ffffffffffffffffffff8116600090815260046020908152604080832054600683528184205460059093529220549293919290918490565b600181815542600281905560038054909201808355600090815260046020908152604080832095909555835482526005815284822083905592548152600690925291902055565b60046020526000908152604090205481565b60056020526000908152604090205481565b6003546000818152600460209081526040808320546006835281842054600590935292205483909192939456fea164736f6c6343000706000a",
   "sourceMap": "373:2121:36:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;479:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1228:352;;;;;;;;;;;;;;;;-1:-1:-1;1228:352:36;;;;;;;;;;;;;;;;;;;:::i;:::-;;513:35;;;:::i;:::-;;;;;;;;;;;;;;;;430:44;;;:::i;595:35::-;;;:::i;2341:151::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;552:39;;;:::i;1584:369::-;;;;;;;;;;;;;;;;-1:-1:-1;1584:369:36;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;937:287;;;;;;;;;;;;;;;;-1:-1:-1;937:287:36;;:::i;635:52::-;;;;;;;;;;;;;;;;-1:-1:-1;635:52:36;;:::i;691:56::-;;;;;;;;;;;;;;;;-1:-1:-1;691:56:36;;:::i;1957:380::-;;;:::i;479:30::-;;;;;;:::o;1228:352::-;1365:22;;;;:11;:22;;;1393:12;:22;;;-1:-1:-1;1421:28:36;;;-1:-1:-1;1455:22:36;;;:9;:22;;;;;;;;:32;;;;1506:11;;1493:25;;:12;:25;;;;;:38;;;;1550:11;1537:25;;:12;:25;;;;:38;1228:352::o;513:35::-;;;;:::o;430:44::-;473:1;430:44;:::o;595:35::-;;;;:::o;2341:151::-;2447:40;;;;;;;;;;;;;;;;;2341:151;:::o;552:39::-;;;;:::o;1584:369::-;1847:19;;;1686:14;1847:19;;;:9;:19;;;;;;;;;1874:12;:22;;;;;;1904:12;:22;;;;;;1847:19;;;;1874:22;;1847:19;;1584:369::o;937:287::-;1003:12;:22;;;1049:15;1031;:33;;;1070:11;:13;;;;;;;;-1:-1:-1;1089:22:36;;;:9;:22;;;;;;;;:32;;;;1140:11;;1127:25;;:12;:25;;;;;:43;;;1189:11;;1176:25;;:12;:25;;;;;;:43;937:287::o;635:52::-;;;;;;;;;;;;;:::o;691:56::-;;;;;;;;;;;;;:::o;1957:380::-;2191:11;;2039:14;2211:22;;;:9;:22;;;;;;;;;2241:12;:25;;;;;;2274:12;:25;;;;;;2191:11;1957:380;;;;;:::o"
  },
  "methodIdentifiers": {
   "decimals()": "313ce567",
   "description()": "7284e416",
   "getAnswer(uint256)": "b5ab58dc",
   "getRoundData(uint80)": "9a6fc8f5",
   "getTimestamp(uint256)": "b633620c",
   "latestAnswer()": "50d25bcd",
   "latestRound()": "668a0f02",
   "latestRoundData()": "feaf968c",
   "latestTimestamp()": "8205bf6a",
   "updateAnswer(int256)": "a87a20ce",
   "updateRoundData(uint80,int256,uint256,uint256)": "4aa2011f",
   "version()": "54fd4d50"
  }
 },
 "metadata": "{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_decimals\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"_initialAnswer\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"int256\",\"name\":\"current\",\"type\":\"int256\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"}],\"name\":\"AnswerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"roundId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"startedBy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"}],\"name\":\"NewRound\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"description\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"}],\"name\":\"getRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestAnswer\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRound\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestRoundData\",\"outputs\":[{\"internalType\":\"uint80\",\"name\":\"roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"startedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"updatedAt\",\"type\":\"uint256\"},{\"internalType\":\"uint80\",\"name\":\"answeredInRound\",\"type\":\"uint80\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"latestTimestamp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"_answer\",\"type\":\"int256\"}],\"name\":\"updateAnswer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint80\",\"name\":\"_roundId\",\"type\":\"uint80\"},{\"internalType\":\"int256\",\"name\":\"_answer\",\"type\":\"int256\"},{\"internalType\":\"uint256\",\"name\":\"_timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_startedAt\",\"type\":\"uint256\"}],\"name\":\"updateRoundData\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"MockV3Aggregator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Based on the FluxAggregator contractUse this contract when you need to test other contract's ability to read data from an aggregator contract, but how the aggregator got its answer is unimportant\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.7/tests/MockV3Aggregator.sol\":\"MockV3Aggregator\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.7/interfaces/AggregatorInterface.sol\":{\"keccak256\":\"0x8f764d57f6d3d8017ee2c261756b0c4845093134b167890cd65080a82de314e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://25a9ca03bc088fa2013dd01ea96868a9f2e1b2b59d68430d07c5adb8a5a357cd\",\"dweb:/ipfs/QmbqEEk1iSawv5ZDQTZh8URNP88GwprAHdDKVoZoB4kksH\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.7/interfaces/AggregatorV2V3Interface.sol\":{\"keccak256\":\"0xe77ec46d2fa2b5731df1222756756ee3922aaac5111b13b0ea6032f4b16ae043\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d72f2c3501a8a89a95582419ca1828a98ab14290aceedb1364f7959d1ef5cabe\",\"dweb:/ipfs/QmQ9RhLagQFJnG2dwnVMh39dV6wGjWfdmSZPdzHJxEMANL\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.7/interfaces/AggregatorV3Interface.sol\":{\"keccak256\":\"0x62c8752bb170233359e653c61d491d6a79fe1d7d7281377c5ac4e9c03ce811ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e38ee533afdf7d6d20a7c9fabc30ed1b904230402e7864db84d607dd2a570dfd\",\"dweb:/ipfs/QmUxobRD1bk13PZ398NrHGPjzKMYJSBTZKcgPNuEDRDMGY\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.7/tests/MockV3Aggregator.sol\":{\"keccak256\":\"0x8d68cbe6f9ca5bf0fd4ca06347550645663732dc4a3650b895a590922db23475\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f8450fdedc017b211645bf776fd6d14bd7d2b0776b3f519d2d5ea2b910332b6a\",\"dweb:/ipfs/QmWCUPBCopN5Jw2AfZMsSPTQ8GhZhATCjpwdLT21ztcq9U\"]}},\"version\":1}"
})

if (process.env.NODE_ENV === 'test') {
  try {
    eval('MockV3Aggregator.setProvider(web3.currentProvider)')
  } catch (e) {}
}

exports.MockV3Aggregator = MockV3Aggregator
