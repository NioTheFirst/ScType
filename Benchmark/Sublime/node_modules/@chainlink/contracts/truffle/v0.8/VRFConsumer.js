'use strict'
Object.defineProperty(exports, '__esModule', { value: true })
const contract = require('@truffle/contract')
const VRFConsumer = contract({
 "contractName": "VRFConsumer",
 "abi": [
  {
   "inputs": [
    {
     "internalType": "address",
     "name": "_vrfCoordinator",
     "type": "address"
    },
    {
     "internalType": "address",
     "name": "_link",
     "type": "address"
    }
   ],
   "stateMutability": "nonpayable",
   "type": "constructor"
  },
  {
   "inputs": [],
   "name": "randomnessOutput",
   "outputs": [
    {
     "internalType": "uint256",
     "name": "",
     "type": "uint256"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  },
  {
   "inputs": [
    {
     "internalType": "bytes32",
     "name": "requestId",
     "type": "bytes32"
    },
    {
     "internalType": "uint256",
     "name": "randomness",
     "type": "uint256"
    }
   ],
   "name": "rawFulfillRandomness",
   "outputs": [],
   "stateMutability": "nonpayable",
   "type": "function"
  },
  {
   "inputs": [],
   "name": "requestId",
   "outputs": [
    {
     "internalType": "bytes32",
     "name": "",
     "type": "bytes32"
    }
   ],
   "stateMutability": "view",
   "type": "function"
  },
  {
   "inputs": [
    {
     "internalType": "bytes32",
     "name": "_keyHash",
     "type": "bytes32"
    },
    {
     "internalType": "uint256",
     "name": "_fee",
     "type": "uint256"
    }
   ],
   "name": "testRequestRandomness",
   "outputs": [
    {
     "internalType": "bytes32",
     "name": "requestId",
     "type": "bytes32"
    }
   ],
   "stateMutability": "nonpayable",
   "type": "function"
  }
 ],
 "evm": {
  "bytecode": {
   "object": "0x60c060405234801561001057600080fd5b506040516104e63803806104e683398101604081905261002f91610069565b6001600160601b0319606092831b811660a052911b1660805261009b565b80516001600160a01b038116811461006457600080fd5b919050565b6000806040838503121561007b578182fd5b6100848361004d565b91506100926020840161004d565b90509250929050565b60805160601c60a05160601c61041a6100cc6000396000818160c701526101a301526000610167015261041a6000f3fe608060405234801561001057600080fd5b506004361061004b5760003560e01c80626d6cae146100505780632f47fd861461006b578063866ee7481461007457806394985ddd14610087575b600080fd5b61005960025481565b60405190815260200160405180910390f35b61005960015481565b610059610082366004610319565b61009c565b61009a610095366004610319565b6100af565b005b60006100a88383610163565b9392505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610152576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640160405180910390fd5b61015f8282600155600255565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016101e0929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161020d9392919061033a565b602060405180830381600087803b15801561022757600080fd5b505af115801561023b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025f91906102f9565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a0909101909252815191830191909120868452929091526102b99060016103d0565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b60006020828403121561030a578081fd5b815180151581146100a8578182fd5b6000806040838503121561032b578081fd5b50508035926020909101359150565b600073ffffffffffffffffffffffffffffffffffffffff8516825260208481840152606060408401528351806060850152825b818110156103895785810183015185820160800152820161036d565b8181111561039a5783608083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160800195945050505050565b60008219821115610408577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50019056fea164736f6c6343000803000a",
   "sourceMap": "142:604:19:-:0;;;251:167;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;;9370:32:3;;;;;;;;9408;;;;;142:604:19;;14:177:24;93:13;;-1:-1:-1;;;;;135:31:24;;125:42;;115:2;;181:1;178;171:12;115:2;74:117;;;:::o;196:303::-;;;336:2;324:9;315:7;311:23;307:32;304:2;;;357:6;349;342:22;304:2;385:40;415:9;385:40;:::i;:::-;375:50;;444:49;489:2;478:9;474:18;444:49;:::i;:::-;434:59;;294:205;;;;;:::o;:::-;142:604:19;;;;;;;;;;;;;;;;;;"
  },
  "deployedBytecode": {
   "object": "0x608060405234801561001057600080fd5b506004361061004b5760003560e01c80626d6cae146100505780632f47fd861461006b578063866ee7481461007457806394985ddd14610087575b600080fd5b61005960025481565b60405190815260200160405180910390f35b61005960015481565b610059610082366004610319565b61009c565b61009a610095366004610319565b6100af565b005b60006100a88383610163565b9392505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610152576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604482015260640160405180910390fd5b61015f8282600155600255565b5050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16634000aea07f0000000000000000000000000000000000000000000000000000000000000000848660006040516020016101e0929190918252602082015260400190565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161020d9392919061033a565b602060405180830381600087803b15801561022757600080fd5b505af115801561023b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025f91906102f9565b5060008381526020818152604080832054815180840188905280830185905230606082015260808082018390528351808303909101815260a0909101909252815191830191909120868452929091526102b99060016103d0565b6000858152602081815260409182902092909255805180830187905280820184905281518082038301815260609091019091528051910120949350505050565b60006020828403121561030a578081fd5b815180151581146100a8578182fd5b6000806040838503121561032b578081fd5b50508035926020909101359150565b600073ffffffffffffffffffffffffffffffffffffffff8516825260208481840152606060408401528351806060850152825b818110156103895785810183015185820160800152820161036d565b8181111561039a5783608083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160800195945050505050565b60008219821115610408577f4e487b710000000000000000000000000000000000000000000000000000000081526011600452602481fd5b50019056fea164736f6c6343000803000a",
   "sourceMap": "142:604:19:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;222:24;;;;;;;;;1836:25:24;;;1824:2;1809:18;222:24:19;;;;;;;187:31;;;;;;587:157;;;;;;:::i;:::-;;:::i;9640:225:3:-;;;;;;:::i;:::-;;:::i;:::-;;587:157:19;672:17;706:33;724:8;734:4;706:17;:33::i;:::-;699:40;587:157;-1:-1:-1;;;587:157:19:o;9640:225:3:-;9750:10;:28;9764:14;9750:28;;9742:72;;;;;;;2772:2:24;9742:72:3;;;2754:21:24;2811:2;2791:18;;;2784:30;2850:33;2830:18;;;2823:61;2901:18;;9742:72:3;;;;;;;;9820:40;9838:9;9849:10;520:16:19;:30;556:9;:22;422:161;9820:40:3;9640:225;;:::o;7753:1055::-;7857:17;7889:4;:20;;;7910:14;7926:4;7943:8;6610:1;7932:43;;;;;;;;2046:25:24;;;2102:2;2087:18;;2080:34;2034:2;2019:18;;2001:119;7932:43:3;;;;;;;;;;;;;7889:87;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;8207:15:3;8291:16;;;;;;;;;;;;1005:51:4;;;;;2356:25:24;;;2397:18;;;2390:34;;;8284:4:3;2440:18:24;;;2433:83;2532:18;;;;2525:34;;;1005:51:4;;;;;;;;;;2328:19:24;;;;1005:51:4;;;995:62;;;;;;;;;8738:16:3;;;;;;;:20;;8757:1;8738:20;:::i;:::-;8719:6;:16;;;;;;;;;;;;:39;;;;1600:41:4;;;;;736:19:24;;;771:12;;;764:28;;;1600:41:4;;;;;;;;;808:12:24;;;;1600:41:4;;;1590:52;;;;;8764:39:3;7753:1055;-1:-1:-1;;;;7753:1055:3:o;14:297:24:-;;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;192:9;186:16;245:5;238:13;231:21;224:5;221:32;211:2;;272:6;264;257:22;316:258;;;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;-1:-1:-1;;494:23:24;;;564:2;549:18;;;536:32;;-1:-1:-1;403:171:24:o;831:854::-;;1046:42;1038:6;1034:55;1023:9;1016:74;1109:2;1147:6;1142:2;1131:9;1127:18;1120:34;1190:2;1185;1174:9;1170:18;1163:30;1222:6;1216:13;1265:6;1260:2;1249:9;1245:18;1238:34;1290:4;1303:141;1317:6;1314:1;1311:13;1303:141;;;1413:14;;;1409:23;;1403:30;1378:17;;;1397:3;1374:27;1367:67;1332:10;;1303:141;;;1462:6;1459:1;1456:13;1453:2;;;1533:4;1527:3;1518:6;1507:9;1503:22;1499:32;1492:46;1453:2;-1:-1:-1;1600:2:24;1588:15;1605:66;1584:88;1569:104;;;;1675:3;1565:114;;1006:679;-1:-1:-1;;;;;1006:679:24:o;3112:286::-;;3183:1;3179:6;3176:1;3173:13;3170:2;;;3221:77;3216:3;3209:90;3322:4;3319:1;3312:15;3352:4;3347:3;3340:17;3170:2;-1:-1:-1;3383:9:24;;3160:238::o"
  },
  "methodIdentifiers": {
   "randomnessOutput()": "2f47fd86",
   "rawFulfillRandomness(bytes32,uint256)": "94985ddd",
   "requestId()": "006d6cae",
   "testRequestRandomness(bytes32,uint256)": "866ee748"
  }
 },
 "metadata": "{\"compiler\":{\"version\":\"0.8.3+commit.8d00100c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_vrfCoordinator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_link\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"randomnessOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"randomness\",\"type\":\"uint256\"}],\"name\":\"rawFulfillRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requestId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_keyHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"_fee\",\"type\":\"uint256\"}],\"name\":\"testRequestRandomness\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.8/tests/VRFConsumer.sol\":\"VRFConsumer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[]},\"sources\":{\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.8/dev/VRFConsumerBase.sol\":{\"keccak256\":\"0xbd52a0e8c4bf121c9527d2b890c49b4c6f25c8950165d67d74a51a75d441dfdb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://48316dd69637e68359eec33f3369c2a4a067b03a361e29400a23c23bc2893b2c\",\"dweb:/ipfs/QmQNiZfYb5c7YbU5MoH1eRLS6L2hEGN8hs7TZGFdpa69dG\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.8/dev/VRFRequestIDBase.sol\":{\"keccak256\":\"0x7c8dad07e6c6c9269d97fd1191ccf9c0f0068683f1f88003e688eef9373de0d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d88c83a359c70f6b2e2e05d8f7611cce4a3d316a65e5175e14bcf9a6ced98af\",\"dweb:/ipfs/QmeH3BEuVvaaQsz7sN5myEnFLoabTG4j85vS9Z6rfJkads\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0x50528c237386c55ff122d047f91b32be7abe24e9dfdc609de21cd605aae83b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92037bd13b34432f9377cb205c0039bd0724af66ea605598db31d4ccd33f879f\",\"dweb:/ipfs/QmdH6Ef5PZgcPrJuWboLX5MhmezzTFniZCwJ6fk2tYVua4\"]},\"/Users/steve/workspace/chainlink/evm-contracts/src/v0.8/tests/VRFConsumer.sol\":{\"keccak256\":\"0xdaa5614533431f6ea4dde991316b1e6b944268e17781e4224a3d8c5457db9a65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc9b2660f05219ab2ce4399b0552e3e26b83660dd0194a23b804a12021c61a56\",\"dweb:/ipfs/QmVewoiZyKmV8VMtKNfwvzoq1mwa88w6NTSH7c1BS6BY5T\"]}},\"version\":1}"
})

if (process.env.NODE_ENV === 'test') {
  try {
    eval('VRFConsumer.setProvider(web3.currentProvider)')
  } catch (e) {}
}

exports.VRFConsumer = VRFConsumer
