/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface OwnableInterfaceInterface extends Interface {
  functions: {
    acceptOwnership: TypedFunctionDescription<{ encode([]: []): string }>;

    owner: TypedFunctionDescription<{ encode([]: []): string }>;

    transferOwnership: TypedFunctionDescription<{
      encode([recipient]: [string]): string;
    }>;
  };

  events: {};
}

export class OwnableInterface extends Contract {
  connect(signerOrProvider: Signer | Provider | string): OwnableInterface;
  attach(addressOrName: string): OwnableInterface;
  deployed(): Promise<OwnableInterface>;

  on(event: EventFilter | string, listener: Listener): OwnableInterface;
  once(event: EventFilter | string, listener: Listener): OwnableInterface;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): OwnableInterface;
  removeAllListeners(eventName: EventFilter | string): OwnableInterface;
  removeListener(eventName: any, listener: Listener): OwnableInterface;

  interface: OwnableInterfaceInterface;

  functions: {
    acceptOwnership(
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "acceptOwnership()"(
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    owner(overrides?: TransactionOverrides): Promise<ContractTransaction>;

    "owner()"(overrides?: TransactionOverrides): Promise<ContractTransaction>;

    transferOwnership(
      recipient: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "transferOwnership(address)"(
      recipient: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  acceptOwnership(
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "acceptOwnership()"(
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  owner(overrides?: TransactionOverrides): Promise<ContractTransaction>;

  "owner()"(overrides?: TransactionOverrides): Promise<ContractTransaction>;

  transferOwnership(
    recipient: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "transferOwnership(address)"(
    recipient: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {};

  estimate: {
    acceptOwnership(overrides?: TransactionOverrides): Promise<BigNumber>;

    "acceptOwnership()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    owner(overrides?: TransactionOverrides): Promise<BigNumber>;

    "owner()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    transferOwnership(
      recipient: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "transferOwnership(address)"(
      recipient: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
