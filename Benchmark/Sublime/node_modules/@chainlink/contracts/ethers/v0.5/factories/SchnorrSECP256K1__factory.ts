/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractFactory, Signer } from "ethers";
import { Provider } from "ethers/providers";
import { UnsignedTransaction } from "ethers/utils/transaction";

import { TransactionOverrides } from "..";
import { SchnorrSECP256K1 } from "../SchnorrSECP256K1";

export class SchnorrSECP256K1__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: TransactionOverrides): Promise<SchnorrSECP256K1> {
    return super.deploy(overrides) as Promise<SchnorrSECP256K1>;
  }
  getDeployTransaction(overrides?: TransactionOverrides): UnsignedTransaction {
    return super.getDeployTransaction(overrides);
  }
  attach(address: string): SchnorrSECP256K1 {
    return super.attach(address) as SchnorrSECP256K1;
  }
  connect(signer: Signer): SchnorrSECP256K1__factory {
    return super.connect(signer) as SchnorrSECP256K1__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SchnorrSECP256K1 {
    return new Contract(address, _abi, signerOrProvider) as SchnorrSECP256K1;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "HALF_Q",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "Q",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [
      {
        name: "signingPubKeyX",
        type: "uint256",
      },
      {
        name: "pubKeyYParity",
        type: "uint8",
      },
      {
        name: "signature",
        type: "uint256",
      },
      {
        name: "msgHash",
        type: "uint256",
      },
      {
        name: "nonceTimesGeneratorAddress",
        type: "address",
      },
    ],
    name: "verifySignature",
    outputs: [
      {
        name: "",
        type: "bool",
      },
    ],
    payable: false,
    stateMutability: "pure",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610514806100206000396000f3fe6080604052600436106100565763ffffffff7c01000000000000000000000000000000000000000000000000000000006000350416638efb3bb2811461005b578063e493ef8c14610082578063ff51dff214610097575b600080fd5b34801561006757600080fd5b50610070610106565b60408051918252519081900360200190f35b34801561008e57600080fd5b5061007061012a565b3480156100a357600080fd5b506100f2600480360360a08110156100ba57600080fd5b50803590602081013560ff16906040810135906060810135906080013573ffffffffffffffffffffffffffffffffffffffff1661014e565b604080519115158252519081900360200190f35b7f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a181565b7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd036414181565b60007f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a186106101de57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f5075626c69632d6b65792078203e3d2048414c465f5100000000000000000000604482015290519081900360640190fd5b7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141841061029257604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f7369676e6174757265206d7573742062652072656475636564206d6f64756c6f60448201527f2051000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b73ffffffffffffffffffffffffffffffffffffffff8216158015906102b75750600086115b80156102c35750600084115b80156102cf5750600083115b151561033c57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f6e6f207a65726f20696e7075747320616c6c6f77656400000000000000000000604482015290519081900360640190fd5b6040805160208082018990527f010000000000000000000000000000000000000000000000000000000000000060ff89160282840152604182018690526c0100000000000000000000000073ffffffffffffffffffffffffffffffffffffffff86160260618301528251605581840301815260759092019092528051910120600060017ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141878a097ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641410360ff89161561041557601c610418565b601b5b8a7ffffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd03641418c870960010260405160008152602001604052604051808581526020018460ff1660ff1681526020018381526020018281526020019450505050506020604051602081039080840390855afa158015610497573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015173ffffffffffffffffffffffffffffffffffffffff86811691161493505050509594505050505056fea165627a7a7230582034c20ceef3b76be68cab42df5d780a7cb56f8cd451c857c9748c70bac1b837310029";
