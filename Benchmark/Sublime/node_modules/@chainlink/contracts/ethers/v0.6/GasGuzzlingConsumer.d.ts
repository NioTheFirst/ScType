/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface GasGuzzlingConsumerInterface extends Interface {
  functions: {
    addExternalRequest: TypedFunctionDescription<{
      encode([_oracle, _requestId]: [string, Arrayish]): string;
    }>;

    cancelRequest: TypedFunctionDescription<{
      encode([
        _oracle,
        _requestId,
        _payment,
        _callbackFunctionId,
        _expiration,
      ]: [string, Arrayish, BigNumberish, Arrayish, BigNumberish]): string;
    }>;

    currentPrice: TypedFunctionDescription<{ encode([]: []): string }>;

    fulfill: TypedFunctionDescription<{
      encode([_requestId, _price]: [Arrayish, Arrayish]): string;
    }>;

    gassyFulfill: TypedFunctionDescription<{
      encode([_requestId, _price]: [Arrayish, Arrayish]): string;
    }>;

    gassyMultiWordFulfill: TypedFunctionDescription<{
      encode([_requestId, _price]: [Arrayish, Arrayish]): string;
    }>;

    gassyMultiWordRequest: TypedFunctionDescription<{
      encode([_payment]: [BigNumberish]): string;
    }>;

    gassyRequestEthereumPrice: TypedFunctionDescription<{
      encode([_payment]: [BigNumberish]): string;
    }>;

    requestEthereumPrice: TypedFunctionDescription<{
      encode([_currency, _payment]: [string, BigNumberish]): string;
    }>;

    requestEthereumPriceByCallback: TypedFunctionDescription<{
      encode([_currency, _payment, _callback]: [
        string,
        BigNumberish,
        string
      ]): string;
    }>;

    withdrawLink: TypedFunctionDescription<{ encode([]: []): string }>;
  };

  events: {
    ChainlinkCancelled: TypedEventDescription<{
      encodeTopics([id]: [Arrayish | null]): string[];
    }>;

    ChainlinkFulfilled: TypedEventDescription<{
      encodeTopics([id]: [Arrayish | null]): string[];
    }>;

    ChainlinkRequested: TypedEventDescription<{
      encodeTopics([id]: [Arrayish | null]): string[];
    }>;

    RequestFulfilled: TypedEventDescription<{
      encodeTopics([requestId, price]: [
        Arrayish | null,
        Arrayish | null
      ]): string[];
    }>;
  };
}

export class GasGuzzlingConsumer extends Contract {
  connect(signerOrProvider: Signer | Provider | string): GasGuzzlingConsumer;
  attach(addressOrName: string): GasGuzzlingConsumer;
  deployed(): Promise<GasGuzzlingConsumer>;

  on(event: EventFilter | string, listener: Listener): GasGuzzlingConsumer;
  once(event: EventFilter | string, listener: Listener): GasGuzzlingConsumer;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): GasGuzzlingConsumer;
  removeAllListeners(eventName: EventFilter | string): GasGuzzlingConsumer;
  removeListener(eventName: any, listener: Listener): GasGuzzlingConsumer;

  interface: GasGuzzlingConsumerInterface;

  functions: {
    addExternalRequest(
      _oracle: string,
      _requestId: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "addExternalRequest(address,bytes32)"(
      _oracle: string,
      _requestId: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    cancelRequest(
      _oracle: string,
      _requestId: Arrayish,
      _payment: BigNumberish,
      _callbackFunctionId: Arrayish,
      _expiration: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "cancelRequest(address,bytes32,uint256,bytes4,uint256)"(
      _oracle: string,
      _requestId: Arrayish,
      _payment: BigNumberish,
      _callbackFunctionId: Arrayish,
      _expiration: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    currentPrice(overrides?: TransactionOverrides): Promise<string>;

    "currentPrice()"(overrides?: TransactionOverrides): Promise<string>;

    fulfill(
      _requestId: Arrayish,
      _price: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "fulfill(bytes32,bytes32)"(
      _requestId: Arrayish,
      _price: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    gassyFulfill(
      _requestId: Arrayish,
      _price: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "gassyFulfill(bytes32,bytes32)"(
      _requestId: Arrayish,
      _price: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    gassyMultiWordFulfill(
      _requestId: Arrayish,
      _price: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "gassyMultiWordFulfill(bytes32,bytes)"(
      _requestId: Arrayish,
      _price: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    gassyMultiWordRequest(
      _payment: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "gassyMultiWordRequest(uint256)"(
      _payment: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    gassyRequestEthereumPrice(
      _payment: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "gassyRequestEthereumPrice(uint256)"(
      _payment: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    requestEthereumPrice(
      _currency: string,
      _payment: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "requestEthereumPrice(string,uint256)"(
      _currency: string,
      _payment: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    requestEthereumPriceByCallback(
      _currency: string,
      _payment: BigNumberish,
      _callback: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "requestEthereumPriceByCallback(string,uint256,address)"(
      _currency: string,
      _payment: BigNumberish,
      _callback: string,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    withdrawLink(
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "withdrawLink()"(
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  addExternalRequest(
    _oracle: string,
    _requestId: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "addExternalRequest(address,bytes32)"(
    _oracle: string,
    _requestId: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  cancelRequest(
    _oracle: string,
    _requestId: Arrayish,
    _payment: BigNumberish,
    _callbackFunctionId: Arrayish,
    _expiration: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "cancelRequest(address,bytes32,uint256,bytes4,uint256)"(
    _oracle: string,
    _requestId: Arrayish,
    _payment: BigNumberish,
    _callbackFunctionId: Arrayish,
    _expiration: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  currentPrice(overrides?: TransactionOverrides): Promise<string>;

  "currentPrice()"(overrides?: TransactionOverrides): Promise<string>;

  fulfill(
    _requestId: Arrayish,
    _price: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "fulfill(bytes32,bytes32)"(
    _requestId: Arrayish,
    _price: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  gassyFulfill(
    _requestId: Arrayish,
    _price: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "gassyFulfill(bytes32,bytes32)"(
    _requestId: Arrayish,
    _price: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  gassyMultiWordFulfill(
    _requestId: Arrayish,
    _price: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "gassyMultiWordFulfill(bytes32,bytes)"(
    _requestId: Arrayish,
    _price: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  gassyMultiWordRequest(
    _payment: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "gassyMultiWordRequest(uint256)"(
    _payment: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  gassyRequestEthereumPrice(
    _payment: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "gassyRequestEthereumPrice(uint256)"(
    _payment: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  requestEthereumPrice(
    _currency: string,
    _payment: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "requestEthereumPrice(string,uint256)"(
    _currency: string,
    _payment: BigNumberish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  requestEthereumPriceByCallback(
    _currency: string,
    _payment: BigNumberish,
    _callback: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "requestEthereumPriceByCallback(string,uint256,address)"(
    _currency: string,
    _payment: BigNumberish,
    _callback: string,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  withdrawLink(overrides?: TransactionOverrides): Promise<ContractTransaction>;

  "withdrawLink()"(
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {
    ChainlinkCancelled(id: Arrayish | null): EventFilter;

    ChainlinkFulfilled(id: Arrayish | null): EventFilter;

    ChainlinkRequested(id: Arrayish | null): EventFilter;

    RequestFulfilled(
      requestId: Arrayish | null,
      price: Arrayish | null
    ): EventFilter;
  };

  estimate: {
    addExternalRequest(
      _oracle: string,
      _requestId: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "addExternalRequest(address,bytes32)"(
      _oracle: string,
      _requestId: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    cancelRequest(
      _oracle: string,
      _requestId: Arrayish,
      _payment: BigNumberish,
      _callbackFunctionId: Arrayish,
      _expiration: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "cancelRequest(address,bytes32,uint256,bytes4,uint256)"(
      _oracle: string,
      _requestId: Arrayish,
      _payment: BigNumberish,
      _callbackFunctionId: Arrayish,
      _expiration: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    currentPrice(overrides?: TransactionOverrides): Promise<BigNumber>;

    "currentPrice()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    fulfill(
      _requestId: Arrayish,
      _price: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "fulfill(bytes32,bytes32)"(
      _requestId: Arrayish,
      _price: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    gassyFulfill(
      _requestId: Arrayish,
      _price: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "gassyFulfill(bytes32,bytes32)"(
      _requestId: Arrayish,
      _price: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    gassyMultiWordFulfill(
      _requestId: Arrayish,
      _price: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "gassyMultiWordFulfill(bytes32,bytes)"(
      _requestId: Arrayish,
      _price: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    gassyMultiWordRequest(
      _payment: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "gassyMultiWordRequest(uint256)"(
      _payment: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    gassyRequestEthereumPrice(
      _payment: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "gassyRequestEthereumPrice(uint256)"(
      _payment: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    requestEthereumPrice(
      _currency: string,
      _payment: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "requestEthereumPrice(string,uint256)"(
      _currency: string,
      _payment: BigNumberish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    requestEthereumPriceByCallback(
      _currency: string,
      _payment: BigNumberish,
      _callback: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "requestEthereumPriceByCallback(string,uint256,address)"(
      _currency: string,
      _payment: BigNumberish,
      _callback: string,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    withdrawLink(overrides?: TransactionOverrides): Promise<BigNumber>;

    "withdrawLink()"(overrides?: TransactionOverrides): Promise<BigNumber>;
  };
}
