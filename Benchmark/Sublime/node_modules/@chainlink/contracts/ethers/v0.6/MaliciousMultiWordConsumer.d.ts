/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, ContractTransaction, EventFilter, Signer } from "ethers";
import { Listener, Provider } from "ethers/providers";
import { Arrayish, BigNumber, BigNumberish, Interface } from "ethers/utils";
import {
  TransactionOverrides,
  TypedEventDescription,
  TypedFunctionDescription,
} from ".";

interface MaliciousMultiWordConsumerInterface extends Interface {
  functions: {
    assertFail: TypedFunctionDescription<{
      encode([,]: [Arrayish, Arrayish]): string;
    }>;

    cancelRequestOnFulfill: TypedFunctionDescription<{
      encode([_requestId]: [Arrayish, Arrayish]): string;
    }>;

    doesNothing: TypedFunctionDescription<{
      encode([,]: [Arrayish, Arrayish]): string;
    }>;

    remove: TypedFunctionDescription<{ encode([]: []): string }>;

    requestData: TypedFunctionDescription<{
      encode([_id, _callbackFunc]: [Arrayish, Arrayish]): string;
    }>;

    stealEthCall: TypedFunctionDescription<{
      encode([_requestId]: [Arrayish, Arrayish]): string;
    }>;

    stealEthSend: TypedFunctionDescription<{
      encode([_requestId]: [Arrayish, Arrayish]): string;
    }>;

    stealEthTransfer: TypedFunctionDescription<{
      encode([_requestId]: [Arrayish, Arrayish]): string;
    }>;
  };

  events: {
    ChainlinkCancelled: TypedEventDescription<{
      encodeTopics([id]: [Arrayish | null]): string[];
    }>;

    ChainlinkFulfilled: TypedEventDescription<{
      encodeTopics([id]: [Arrayish | null]): string[];
    }>;

    ChainlinkRequested: TypedEventDescription<{
      encodeTopics([id]: [Arrayish | null]): string[];
    }>;
  };
}

export class MaliciousMultiWordConsumer extends Contract {
  connect(
    signerOrProvider: Signer | Provider | string
  ): MaliciousMultiWordConsumer;
  attach(addressOrName: string): MaliciousMultiWordConsumer;
  deployed(): Promise<MaliciousMultiWordConsumer>;

  on(
    event: EventFilter | string,
    listener: Listener
  ): MaliciousMultiWordConsumer;
  once(
    event: EventFilter | string,
    listener: Listener
  ): MaliciousMultiWordConsumer;
  addListener(
    eventName: EventFilter | string,
    listener: Listener
  ): MaliciousMultiWordConsumer;
  removeAllListeners(
    eventName: EventFilter | string
  ): MaliciousMultiWordConsumer;
  removeListener(
    eventName: any,
    listener: Listener
  ): MaliciousMultiWordConsumer;

  interface: MaliciousMultiWordConsumerInterface;

  functions: {
    assertFail(
      arg0: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<void>;

    "assertFail(bytes32,bytes)"(
      arg0: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<void>;

    cancelRequestOnFulfill(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "cancelRequestOnFulfill(bytes32,bytes)"(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    doesNothing(
      arg0: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<void>;

    "doesNothing(bytes32,bytes)"(
      arg0: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<void>;

    remove(overrides?: TransactionOverrides): Promise<ContractTransaction>;

    "remove()"(overrides?: TransactionOverrides): Promise<ContractTransaction>;

    requestData(
      _id: Arrayish,
      _callbackFunc: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "requestData(bytes32,bytes)"(
      _id: Arrayish,
      _callbackFunc: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    stealEthCall(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "stealEthCall(bytes32,bytes)"(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    stealEthSend(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "stealEthSend(bytes32,bytes)"(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    stealEthTransfer(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;

    "stealEthTransfer(bytes32,bytes)"(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<ContractTransaction>;
  };

  assertFail(
    arg0: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<void>;

  "assertFail(bytes32,bytes)"(
    arg0: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<void>;

  cancelRequestOnFulfill(
    _requestId: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "cancelRequestOnFulfill(bytes32,bytes)"(
    _requestId: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  doesNothing(
    arg0: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<void>;

  "doesNothing(bytes32,bytes)"(
    arg0: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<void>;

  remove(overrides?: TransactionOverrides): Promise<ContractTransaction>;

  "remove()"(overrides?: TransactionOverrides): Promise<ContractTransaction>;

  requestData(
    _id: Arrayish,
    _callbackFunc: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "requestData(bytes32,bytes)"(
    _id: Arrayish,
    _callbackFunc: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  stealEthCall(
    _requestId: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "stealEthCall(bytes32,bytes)"(
    _requestId: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  stealEthSend(
    _requestId: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "stealEthSend(bytes32,bytes)"(
    _requestId: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  stealEthTransfer(
    _requestId: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  "stealEthTransfer(bytes32,bytes)"(
    _requestId: Arrayish,
    arg1: Arrayish,
    overrides?: TransactionOverrides
  ): Promise<ContractTransaction>;

  filters: {
    ChainlinkCancelled(id: Arrayish | null): EventFilter;

    ChainlinkFulfilled(id: Arrayish | null): EventFilter;

    ChainlinkRequested(id: Arrayish | null): EventFilter;
  };

  estimate: {
    assertFail(
      arg0: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "assertFail(bytes32,bytes)"(
      arg0: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    cancelRequestOnFulfill(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "cancelRequestOnFulfill(bytes32,bytes)"(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    doesNothing(
      arg0: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "doesNothing(bytes32,bytes)"(
      arg0: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    remove(overrides?: TransactionOverrides): Promise<BigNumber>;

    "remove()"(overrides?: TransactionOverrides): Promise<BigNumber>;

    requestData(
      _id: Arrayish,
      _callbackFunc: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "requestData(bytes32,bytes)"(
      _id: Arrayish,
      _callbackFunc: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    stealEthCall(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "stealEthCall(bytes32,bytes)"(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    stealEthSend(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "stealEthSend(bytes32,bytes)"(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    stealEthTransfer(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;

    "stealEthTransfer(bytes32,bytes)"(
      _requestId: Arrayish,
      arg1: Arrayish,
      overrides?: TransactionOverrides
    ): Promise<BigNumber>;
  };
}
