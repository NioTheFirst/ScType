ITradingExtension
IStable
ExtendedIERC20
ERC20Permit
Trading
IGovNFT
IPairsContract
IPosition
IReferrals
IStableVault
ITrading
Ownable
IERC20
Context
Strings
ECDSA
Math
MetaContext
IPrice
TradingLibrary
contract name: ITradingExtension
WARNING!!!!
ITradingExtension_types.txt
Finance File not Found
Type File not found.
[x] ITradingExtension not run
contract name: IStable
WARNING!!!!
IStable_types.txt
Finance File not Found
Type File not found.
[x] IStable not run
contract name: ExtendedIERC20
WARNING!!!!
ExtendedIERC20_types.txt
Finance File not Found
Type File not found.
[x] ExtendedIERC20 not run
contract name: ERC20Permit
WARNING!!!!
ERC20Permit_types.txt
Finance File not Found
Type File not found.
[x] ERC20Permit not run
contract name: Trading
WARNING!!!!
Trading_types.txt
Finance file: Trading_ftypes.txt
"Trading_types.txt" opened successfully.
[*c], Trading

[sef], POSITION, ownerOf

[sef], POSITION, trades

[sef], _stableVault, stable, 1, {c, -1, -1, 0, _tigAsset}

{c, -1, -1, 0, _tigAsset}
['c', '-1', '-1', '0', '_tigAsset']
[sef], PAIRS, idToAsset

[sef], TRADINGEXTENSION, getRef

[sef], _tigAsset, balanceOf, 1, {c, -1, -1, 0}

{c, -1, -1, 0}
['c', '-1', '-1', '0']
[sef], _marginAsset, decimals

[sef], TRADINGEXTENSION, getVerifiedPrice, 2, {c, -1, -1, 0}, {c, -1, -1, 0}

{c, -1, -1, 0}
['c', '-1', '-1', '0']
{c, -1, -1, 0}
['c', '-1', '-1', '0']
[sef], PAIRS, idToOi

[xf], initiateMarketOrder

[xf], initiateCloseOrder

addToPosition

[xf], initiateLimitOrder

[xf], cancelLimitOrder

[xf], addMargin

[xf], removeMargin

[xf], updateTpSl

[xf], executeLimitOrder

[xf], liquidatePosition

[xf], setFees

[t], global, position, -1, -1, 0, POSITION

[t], global, tradingExtension, -1, -1, 0, TRADINGEXTENSION

[t], global, DIVISION_CONSTANT

[t], global, gov

[t], global, openFees

[t*], global, openFees, daoFees

[t*], global, openFees, burnFees

[t], global, limitDelay

[t], global, limitOrderPriceRange

[t], global, allowedVault

[t], global, pairsContract, -1, -1, 0, PAIRS

[t], global, maxWinPercent

[t], global, _owner

[t], global, proxyApprovals

[t], global, _isTrustedForwarder

[t], global, closeFees

[t], global, blockDelay

[t], global, blockDelayPassed

[t], global, vaultFundingPercent



[t], addToPosition, _id

[t], addToPosition, _addMargin

[t], addToPosition, _priceData

[t], addToPosition, _stableVault, -1, -1, 0, _stableVault

[t], addToPosition, _marginAsset

[t], addToPosition, _permitData

[t], addToPosition, _trader

[t*], addToPosition, _trade, tigAsset, -1, -1, 0, _tigAsset

[t*], addToPosition, _trade, asset, 1, -1, 0

Param: [*c]
Param:  Trading

Param: [sef]
Param:  POSITION
Param:  ownerOf

Param: [sef]
Param:  POSITION
Param:  trades

Param: [sef]
Param:  _stableVault
Param:  stable

Param: [sef]
Param:  PAIRS
Param:  idToAsset

Param: [sef]
Param:  TRADINGEXTENSION
Param:  getRef

Param: [sef]
Param:  _tigAsset
Param:  balanceOf
Param:  1
Param:  {c
Param:  -1
Param:  -1
Param:  0
Param:  f: 0}

Isolated Param: 0
F num: 0
Param: [sef]
Param:  _marginAsset
Param:  decimals

Param: [sef]
Param:  TRADINGEXTENSION
Param:  getVerifiedPrice
Param:  2
Param:  {c
Param:  -1
Param:  -1
Param:  0}
Param:  {c
Param:  -1
Param:  -1
Param:  0}

Param: [sef]
Param:  PAIRS
Param:  idToOi

Param: [xf]
Param:  initiateMarketOrder

Param: [xf]
Param:  initiateCloseOrder

Param: addToPosition

Param: [xf]
Param:  initiateLimitOrder

Param: [xf]
Param:  cancelLimitOrder

Param: [xf]
Param:  addMargin

Param: [xf]
Param:  removeMargin

Param: [xf]
Param:  updateTpSl

Param: [xf]
Param:  executeLimitOrder

Param: [xf]
Param:  liquidatePosition

Param: [xf]
Param:  setFees

Param: [t]
Param:  global
Param:  position
Param:  -1
Param:  -1
Param:  0
Param:  POSITION

Param: [t]
Param:  global
Param:  tradingExtension
Param:  -1
Param:  -1
Param:  0
Param:  TRADINGEXTENSION

Param: [t]
Param:  global
Param:  DIVISION_CONSTANT

Param: [t]
Param:  global
Param:  gov

Param: [t]
Param:  global
Param:  openFees

Param: [t*]
Param:  global
Param:  openFees
Param:  daoFees
Param:  f:10

Isolated Param: 10
F num: 10
Param: [t*]
Param:  global
Param:  openFees
Param:  burnFees
Param:  f:10

Isolated Param: 10
F num: 10
Param: [t]
Param:  global
Param:  limitDelay

Param: [t]
Param:  global
Param:  limitOrderPriceRange

Param: [t]
Param:  global
Param:  allowedVault

Param: [t]
Param:  global
Param:  pairsContract
Param:  -1
Param:  -1
Param:  0
Param:  PAIRS

Param: [t]
Param:  global
Param:  maxWinPercent

Param: [t]
Param:  global
Param:  _owner

Param: [t]
Param:  global
Param:  proxyApprovals

Param: [t]
Param:  global
Param:  _isTrustedForwarder

Param: [t]
Param:  global
Param:  closeFees

Param: [t]
Param:  global
Param:  blockDelay

Param: [t]
Param:  global
Param:  blockDelayPassed

Param: [t]
Param:  global
Param:  vaultFundingPercent

Param: 

Param: [t]
Param:  addToPosition
Param:  _id

Param: [t]
Param:  addToPosition
Param:  _addMargin
Param:  f:0

Isolated Param: 0
F num: 0
Param: [t]
Param:  addToPosition
Param:  _priceData

Param: [t]
Param:  addToPosition
Param:  _stableVault

Param: [t]
Param:  addToPosition
Param:  _marginAsset

Param: [t]
Param:  addToPosition
Param:  _permitData

Param: [t]
Param:  addToPosition
Param:  _trader

Param: [t*]
Param:  addToPosition
Param:  _trade
Param:  asset
Param:  1
Param:  -1
Param:  0

[*] Trading run
Checking... constructor Visibility: public
[x] No Binary
Checking... initiateMarketOrder Visibility: external
[o] Marked
Checking... initiateCloseOrder Visibility: external
[o] Marked
Checking... addToPosition Visibility: external
[o] Marked
Checking... initiateLimitOrder Visibility: external
[o] Marked
Checking... cancelLimitOrder Visibility: external
[o] Marked
Checking... addMargin Visibility: external
[o] Marked
Checking... removeMargin Visibility: external
[o] Marked
Checking... updateTpSl Visibility: external
[o] Marked
Checking... executeLimitOrder Visibility: external
[o] Marked
Checking... liquidatePosition Visibility: external
[o] Marked
Checking... limitClose Visibility: external
[x] No Binary
Checking... approveProxy Visibility: external
[x] No Binary
Checking... _closePosition Visibility: internal
[x] Not visible 
Checking... _handleDeposit Visibility: internal
[x] Not visible 
Checking... _handleWithdraw Visibility: internal
[x] Not visible 
Checking... _handleOpenFees Visibility: internal
[x] Not visible 
Checking... _handleCloseFees Visibility: internal
[x] Not visible 
Checking... _updateFunding Visibility: internal
[x] Not visible 
Checking... _checkSl Visibility: internal
[x] Not visible 
Checking... _checkOwner Visibility: internal
[x] Not visible 
Checking... _checkDelay Visibility: internal
[x] Not visible 
Checking... _checkVault Visibility: internal
[x] Not visible 
Checking... _validateProxy Visibility: internal
[x] Not visible 
Checking... setBlockDelay Visibility: external
[x] No Binary
Checking... setAllowedVault Visibility: external
[x] No Binary
Checking... setMaxWinPercent Visibility: external
[x] No Binary
Checking... setLimitOrderPriceRange Visibility: external
[x] No Binary
Checking... setFees Visibility: external
[o] Marked
Checking... setTradingExtension Visibility: external
[x] No Binary
Checking... slitherConstructorVariables Visibility: internal
[x] Not visible 
Checking... slitherConstructorConstantVariables Visibility: internal
[x] Not visible 
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
State_var: position
Finding type for position...
IPosition
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
State_var: blockDelay
Finding type for blockDelay...
uint256
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
State_var: closeFees
Finding type for closeFees...
Trading.Fees
State_var: openFees
Finding type for openFees...
Trading.Fees
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
State_var: gov
Finding type for gov...
IGovNFT
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
State_var: _owner
Finding type for _owner...
address
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
contract name: IGovNFT
WARNING!!!!
IGovNFT_types.txt
Finance File not Found
Type File not found.
[x] IGovNFT not run
contract name: IPairsContract
WARNING!!!!
IPairsContract_types.txt
Finance File not Found
Type File not found.
[x] IPairsContract not run
contract name: IPosition
WARNING!!!!
IPosition_types.txt
Finance File not Found
Type File not found.
[x] IPosition not run
contract name: IReferrals
WARNING!!!!
IReferrals_types.txt
Finance File not Found
Type File not found.
[x] IReferrals not run
contract name: IStableVault
WARNING!!!!
IStableVault_types.txt
Finance File not Found
Type File not found.
[x] IStableVault not run
contract name: ITrading
WARNING!!!!
ITrading_types.txt
Finance File not Found
Type File not found.
[x] ITrading not run
contract name: Ownable
WARNING!!!!
Ownable_types.txt
Finance File not Found
Type File not found.
[x] Ownable not run
contract name: IERC20
WARNING!!!!
IERC20_types.txt
Finance File not Found
Type File not found.
[x] IERC20 not run
contract name: Context
WARNING!!!!
Context_types.txt
Finance File not Found
Type File not found.
[x] Context not run
contract name: Strings
WARNING!!!!
Strings_types.txt
Finance File not Found
Type File not found.
[x] Strings not run
contract name: ECDSA
WARNING!!!!
ECDSA_types.txt
Finance File not Found
Type File not found.
[x] ECDSA not run
contract name: Math
WARNING!!!!
Math_types.txt
Finance File not Found
Type File not found.
[x] Math not run
contract name: MetaContext
WARNING!!!!
MetaContext_types.txt
Finance File not Found
Type File not found.
[x] MetaContext not run
contract name: IPrice
WARNING!!!!
IPrice_types.txt
Finance File not Found
Type File not found.
[x] IPrice not run
contract name: TradingLibrary
WARNING!!!!
TradingLibrary_types.txt
Finance File not Found
Type File not found.
[x] TradingLibrary not run
Seen contract: {} Contract name out: ITradingExtension
[x] ITradingExtension not run
Seen contract: {'ITradingExtension': True} Contract name out: IStable
[x] IStable not run
Seen contract: {'ITradingExtension': True, 'IStable': True} Contract name out: ExtendedIERC20
[x] ExtendedIERC20 not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True} Contract name out: ERC20Permit
[x] ERC20Permit not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True} Contract name out: Trading
[*] Trading run
Reading Function: constructor
Function constructor not marked
Mark Iterations TRUE, proceeding anyway
Function name: constructor
Function Visibility (test): public
_position
Finding type for _position...
address
_gov
Finding type for _gov...
address
_pairsContract
Finding type for _pairsContract...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _position
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: _gov
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: _pairsContract
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_22 = CONVERT _position_1 to IPosition
has variable
[i] TMP_22 cleared
clearing ir...?
position_1(IPosition) := TMP_22(IPosition)
has variable
typecheckig node...
TMP_22 = CONVERT _position_1 to IPosition
Function name: constructor

Name: _position Function: constructor
Num: -1
Den: -1
Norm: u
LF: _position
Fields: 
Finance Type: undef

Name: TMP_22 Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_22

Name: TMP_22 Function: constructor
Num: -1
Den: -1
Norm: u
LF: _position
Fields: 
Finance Type: undef
done.
position_1(IPosition) := TMP_22(IPosition)
Function name: constructor
asgn

Name: TMP_22 Function: constructor
Num: -1
Den: -1
Norm: u
LF: _position
Fields: 
Finance Type: undef

Name: position Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for position

Name: position Function: constructor
Num: -1
Den: -1
Norm: u
LF: _position
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_23 = CONVERT _gov_1 to IGovNFT
has variable
[i] TMP_23 cleared
clearing ir...?
gov_1(IGovNFT) := TMP_23(IGovNFT)
has variable
typecheckig node...
TMP_23 = CONVERT _gov_1 to IGovNFT
Function name: constructor

Name: _gov Function: constructor
Num: -1
Den: -1
Norm: u
LF: _gov
Fields: 
Finance Type: undef

Name: TMP_23 Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_23

Name: TMP_23 Function: constructor
Num: -1
Den: -1
Norm: u
LF: _gov
Fields: 
Finance Type: undef
done.
gov_1(IGovNFT) := TMP_23(IGovNFT)
Function name: constructor
asgn

Name: TMP_23 Function: constructor
Num: -1
Den: -1
Norm: u
LF: _gov
Fields: 
Finance Type: undef

Name: gov Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for gov

Name: gov Function: constructor
Num: -1
Den: -1
Norm: u
LF: _gov
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_24 = CONVERT _pairsContract_1 to IPairsContract
has variable
[i] TMP_24 cleared
clearing ir...?
pairsContract_1(IPairsContract) := TMP_24(IPairsContract)
has variable
typecheckig node...
TMP_24 = CONVERT _pairsContract_1 to IPairsContract
Function name: constructor

Name: _pairsContract Function: constructor
Num: -1
Den: -1
Norm: u
LF: _pairsContract
Fields: 
Finance Type: undef

Name: TMP_24 Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_24

Name: TMP_24 Function: constructor
Num: -1
Den: -1
Norm: u
LF: _pairsContract
Fields: 
Finance Type: undef
done.
pairsContract_1(IPairsContract) := TMP_24(IPairsContract)
Function name: constructor
asgn

Name: TMP_24 Function: constructor
Num: -1
Den: -1
Norm: u
LF: _pairsContract
Fields: 
Finance Type: undef

Name: pairsContract Function: constructor
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for pairsContract

Name: pairsContract Function: constructor
Num: -1
Den: -1
Norm: u
LF: _pairsContract
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "constructor":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: initiateMarketOrder
wooo
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: initiateCloseOrder
wooo
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: addToPosition
Function name: addToPosition
Function Visibility (test): external
_id
Finding type for _id...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: _id Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_addMargin
Finding type for _addMargin...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, 0)
----
Type: uint256
uint256
Final Type: uint256

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[*]Type fetched successfully
_priceData
Finding type for _priceData...
PriceData
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: PriceData
PriceData
Final Type: PriceData
addToPosition
_priceData
provider
addToPosition
_priceData
asset
addToPosition
_priceData
price
addToPosition
_priceData
spread
addToPosition
_priceData
timestamp
addToPosition
_priceData
isClosed
FIELDS:
_priceData Fields:
^^^

Name: _priceData Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_signature
Finding type for _signature...
bytes
SKIP bytes
_stableVault
Finding type for _stableVault...
address
Check copy_toekn_tuple
(-1, -1, 0, '_stableVault', -1)
----
Type: address
address
Final Type: address

Name: _stableVault Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _stableVault
Fields: 
Finance Type: undef
[*]Type fetched successfully
_marginAsset
Finding type for _marginAsset...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _marginAsset Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_permitData
Finding type for _permitData...
ITrading.ERC20PermitData
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: ITrading.ERC20PermitData
ITrading.ERC20PermitData
Final Type: ITrading.ERC20PermitData
addToPosition
_permitData
deadline
addToPosition
_permitData
amount
addToPosition
_permitData
v
addToPosition
_permitData
r
addToPosition
_permitData
s
addToPosition
_permitData
usePermit
FIELDS:
_permitData Fields:
^^^

Name: _permitData Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
_trader
Finding type for _trader...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _trader Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 0
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 6
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 7
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 0
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: []
    den: []
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 6
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 7
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
position_25(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_0', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
clearing ir...?
tradingExtension_22(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
typecheckig node...
position_25(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_0', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_22(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
typecheckig node...
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
Internal call...
_validateProxy
_trader
Function: _validateProxy
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _validateProxy
Function Visibility: internal
clearning node...
clearing ir...?
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
has variable
[i] _trader cleared
clearing ir...?
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
has variable
typecheckig node...
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
Function name: _validateProxy
Phi
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: _trader
Fields: 
Finance Type: undef
done.
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
Function name: _validateProxy
Phi
[i]Type for proxyApprovals

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
has variable
[i] TMP_421 cleared
clearing ir...?
TMP_422(bool) = _trader_1 != TMP_421
has variable
[i] TMP_422 cleared
clearing ir...?
CONDITION TMP_422
typecheckig node...
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
Function name: _validateProxy
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: _msgSender
Function Visibility: internal
clearning node...
clearing ir...?
_isTrustedForwarder_3(mapping(address => bool)) := ϕ(['_isTrustedForwarder_2', '_isTrustedForwarder_4', '_isTrustedForwarder_3', '_isTrustedForwarder_1', '_isTrustedForwarder_0'])
has variable
typecheckig node...
_isTrustedForwarder_3(mapping(address => bool)) := ϕ(['_isTrustedForwarder_2', '_isTrustedForwarder_4', '_isTrustedForwarder_3', '_isTrustedForwarder_1', '_isTrustedForwarder_0'])
Function name: _msgSender
Phi
[i]Type for _isTrustedForwarder

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_2(bool) -> _isTrustedForwarder_3[msg.sender]
has variable
clearing ir...?
CONDITION REF_2
typecheckig node...
REF_2(bool) -> _isTrustedForwarder_3[msg.sender]
Function name: _msgSender
INDEX

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE IS BOOL TYPE
[i]Type for REF_2

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION REF_2
Condition...
Conidtion: 
REF_2
REF_2
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_1(uint256) = SOLIDITY_CALL calldatasize()()
clearing ir...?
TMP_2(uint256) = TMP_1 - 20
has variable
[i] TMP_2 cleared
clearing ir...?
TMP_3(uint256) = SOLIDITY_CALL calldataload(uint256)(TMP_2)
clearing ir...?
TMP_4(uint256) = TMP_3 >> 96
has variable
[i] TMP_4 cleared
clearing ir...?
sender_1(address) := TMP_4(uint256)
has variable
[i] sender cleared
typecheckig node...
TMP_1(uint256) = SOLIDITY_CALL calldatasize()()
[i]Type for TMP_1

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_2(uint256) = TMP_1 - 20
Function name: _msgSender
val: 20
val: 20
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_1 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: 20 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 20

Name: 20 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_2 Function: _msgSender
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_2

Name: TMP_2 Function: _msgSender
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_2(uint256) = TMP_1 - 20
XXXXX
TMP_3(uint256) = SOLIDITY_CALL calldataload(uint256)(TMP_2)
[i]Type for TMP_3

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_4(uint256) = TMP_3 >> 96
Function name: _msgSender
[i]Type for TMP_4

Name: TMP_4 Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
sender_1(address) := TMP_4(uint256)
Function name: _msgSender
asgn

Name: TMP_4 Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: sender Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for sender

Name: sender Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
sender_1(address) := TMP_4(uint256)
XXXXX
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_5(address) = INTERNAL_CALL, Context._msgSender()()
has variable
[i] TMP_5 cleared
clearing ir...?
RETURN TMP_5
typecheckig node...
TMP_5(address) = INTERNAL_CALL, Context._msgSender()()
Function name: _msgSender
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
-100
Add new
Parameter length: 1
added
xyz
Function name: _msgSender
Function Visibility: internal
clearning node...
typecheckig node...
clearning node...
clearing ir...?
RETURN msg.sender
typecheckig node...
RETURN msg.sender
RETURN
msg.sender
WORKLIST iteration 0 for function call "_msgSender":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _msgSender

Name: PIC_1 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_5

Name: TMP_5 Function: _msgSender
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_5
RETURN

Name: TMP_5 Function: _msgSender
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_msgSender":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
_isTrustedForwarder_3(mapping(address => bool)) := ϕ(['_isTrustedForwarder_2', '_isTrustedForwarder_4', '_isTrustedForwarder_3', '_isTrustedForwarder_1', '_isTrustedForwarder_0'])
Function name: _msgSender
Phi
[i]Type for _isTrustedForwarder

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_2(bool) -> _isTrustedForwarder_3[msg.sender]
Function name: _msgSender
INDEX

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE IS BOOL TYPE
[i]Type for REF_2

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION REF_2
Condition...
Conidtion: 
REF_2
REF_2
typecheckig node...
typecheckig node...
TMP_1(uint256) = SOLIDITY_CALL calldatasize()()
[i]Type for TMP_1

Name: TMP_1 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_2(uint256) = TMP_1 - 20
Function name: _msgSender
val: 20
val: 20
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_1 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: 20 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 20

Name: 20 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_2 Function: _msgSender
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_2

Name: TMP_2 Function: _msgSender
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_2(uint256) = TMP_1 - 20
XXXXX
TMP_3(uint256) = SOLIDITY_CALL calldataload(uint256)(TMP_2)
[i]Type for TMP_3

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_4(uint256) = TMP_3 >> 96
Function name: _msgSender
[i]Type for TMP_4

Name: TMP_4 Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
sender_1(address) := TMP_4(uint256)
Function name: _msgSender
asgn

Name: TMP_4 Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: sender Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for sender

Name: sender Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
sender_1(address) := TMP_4(uint256)
XXXXX
typecheckig node...
clearning node...
clearing ir...?
TMP_5(address) = INTERNAL_CALL, Context._msgSender()()
has variable
[i] TMP_5 cleared
clearing ir...?
RETURN TMP_5
typecheckig node...
TMP_5(address) = INTERNAL_CALL, Context._msgSender()()
Function name: _msgSender
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_2 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_5 Function: _msgSender
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_5

Name: TMP_5 Function: _msgSender
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
RETURN TMP_5
RETURN

Name: TMP_5 Function: _msgSender
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 1 for function call "_msgSender":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _msgSender

Name: TMP_5 Function: _msgSender
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
XXXXX
TMP_422(bool) = _trader_1 != TMP_421
Function name: _validateProxy
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_422
Condition...
Conidtion: 
TMP_422
TMP_422
clearning node...
clearing ir...?
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
has variable
clearing ir...?
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
has variable
[i] _proxy cleared
typecheckig node...
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
Function name: _validateProxy
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
proxyApprovals
[i]Type for REF_345

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
XXXXX
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Function name: _validateProxy
asgn

Name: REF_345 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _proxy Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_346(address) -> _proxy_1.proxy
has variable
clearing ir...?
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
has variable
[i] TMP_423 cleared
clearing ir...?
TMP_424(bool) = REF_346 == TMP_423
has variable
[i] TMP_424 cleared
clearing ir...?
REF_347(uint256) -> _proxy_1.time
has variable
clearing ir...?
TMP_425(bool) = REF_347 >= block.timestamp
has variable
[i] TMP_425 cleared
clearing ir...?
TMP_426(bool) = TMP_424 && TMP_425
has variable
[i] TMP_426 cleared
clearing ir...?
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
typecheckig node...
REF_346(address) -> _proxy_1.proxy
Function name: _validateProxy
MEMBER
_proxy
proxy
_validateProxy
_proxy Fields:
^^^
[i]Type for REF_346

Name: _proxy.proxy Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _proxy.proxy Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: proxy Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
Function name: _validateProxy
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_3 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_423 Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_424(bool) = REF_346 == TMP_423
Function name: _validateProxy
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_347(uint256) -> _proxy_1.time
Function name: _validateProxy
MEMBER
_proxy
time
_validateProxy
_proxy Fields:
proxy
^^^
[i]Type for REF_347

Name: _proxy.time Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _proxy.time Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: time Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_425(bool) = REF_347 >= block.timestamp
Function name: _validateProxy
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1

Name: PIC_4 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_425 Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_425(bool) = REF_347 >= block.timestamp
XXXXX
TMP_426(bool) = TMP_424 && TMP_425
Function name: _validateProxy
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "_validateProxy":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
Function name: _validateProxy
Phi
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: _trader
Fields: 
Finance Type: undef
done.
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
Function name: _validateProxy
Phi
[i]Type for proxyApprovals

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
Function name: _validateProxy
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_3 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_422(bool) = _trader_1 != TMP_421
Function name: _validateProxy
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_422
Condition...
Conidtion: 
TMP_422
TMP_422
typecheckig node...
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
Function name: _validateProxy
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
proxyApprovals
[i]Type for REF_345

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
XXXXX
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Function name: _validateProxy
asgn

Name: REF_345 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _proxy Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: proxy, time
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: proxy, time
Finance Type: undef
done.
typecheckig node...
REF_346(address) -> _proxy_1.proxy
Function name: _validateProxy
MEMBER
_proxy
proxy
_validateProxy
_proxy Fields:
proxy
time
^^^

Name: proxy Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_346

Name: _proxy.proxy Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _proxy.proxy Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: proxy Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
Function name: _validateProxy
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_3 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_424(bool) = REF_346 == TMP_423
Function name: _validateProxy
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_347(uint256) -> _proxy_1.time
Function name: _validateProxy
MEMBER
_proxy
time
_validateProxy
_proxy Fields:
proxy
time
^^^

Name: time Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_347

Name: _proxy.time Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _proxy.time Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: time Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_425(bool) = REF_347 >= block.timestamp
Function name: _validateProxy
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_426(bool) = TMP_424 && TMP_425
Function name: _validateProxy
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 1 for function call "_validateProxy":
 New undefined nodes- 1
 Old undefined nodes- 2
typecheckig node...
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
Function name: _validateProxy
Phi
[i]Type for _trader

Name: _trader Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: _trader
Fields: 
Finance Type: undef
done.
proxyApprovals_2(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_1', 'proxyApprovals_0', 'proxyApprovals_3'])
Function name: _validateProxy
Phi
[i]Type for proxyApprovals

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_421(address) = INTERNAL_CALL, MetaContext._msgSender()()
Function name: _validateProxy
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_3 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_421

Name: TMP_421 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_422(bool) = _trader_1 != TMP_421
Function name: _validateProxy
[i]Type for TMP_422

Name: TMP_422 Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_422
Condition...
Conidtion: 
TMP_422
TMP_422
typecheckig node...
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
Function name: _validateProxy
INDEX

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: None
proxyApprovals
[i]Type for REF_345

Name: None Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_345(Trading.Proxy) -> proxyApprovals_3[_trader_1]
XXXXX
_proxy_1(Trading.Proxy) := REF_345(Trading.Proxy)
Function name: _validateProxy
asgn

Name: REF_345 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _proxy Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: proxy, time
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _proxy

Name: _proxy Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: proxy, time
Finance Type: undef
done.
typecheckig node...
REF_346(address) -> _proxy_1.proxy
Function name: _validateProxy
MEMBER
_proxy
proxy
_validateProxy
_proxy Fields:
proxy
time
^^^

Name: proxy Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_346

Name: _proxy.proxy Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _proxy.proxy Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: proxy Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_423(address) = INTERNAL_CALL, MetaContext._msgSender()()
Function name: _validateProxy
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_3 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_423

Name: TMP_423 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_424(bool) = REF_346 == TMP_423
Function name: _validateProxy
[i]Type for TMP_424

Name: TMP_424 Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_347(uint256) -> _proxy_1.time
Function name: _validateProxy
MEMBER
_proxy
time
_validateProxy
_proxy Fields:
proxy
time
^^^

Name: time Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_347

Name: _proxy.time Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _proxy.time Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: time Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_425(bool) = REF_347 >= block.timestamp
Function name: _validateProxy
testing gt...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_425

Name: TMP_425 Function: _validateProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_426(bool) = TMP_424 && TMP_425
Function name: _validateProxy
[i]Type for TMP_426

Name: TMP_426 Function: _validateProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_427(None) = SOLIDITY_CALL require(bool,string)(TMP_426,Proxy not approved)
[i]Type for TMP_427

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
WORKLIST iteration 2 for function call "_validateProxy":
 New undefined nodes- 1
 Old undefined nodes- 1
Saving return values for: _validateProxy
done.
This IR caused addback:
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
XXXXX
clearning node...
clearing ir...?
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
clearing ir...?
position_27(IPosition) := ϕ(['position_113'])
has variable
typecheckig node...
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
Internal call...
_checkOwner
_id
_trader
Function: _checkOwner
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _checkOwner
Function Visibility: internal
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
has variable
[i] _id cleared
clearing ir...?
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
has variable
[i] _trader cleared
clearing ir...?
position_112(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_0', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', '_id_1', '_id_1', '_id_1'])
Function name: _checkOwner
Phi
[i]Type for _id

Name: _id Function: _checkOwner
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1', '_trader_1'])
Function name: _checkOwner
Phi
[i]Type for _trader

Name: _trader Function: _checkOwner
Num: -1
Den: -1
Norm: u
LF: _trader
Fields: 
Finance Type: undef
done.
position_112(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_0', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: _checkOwner
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
has variable
[i] TMP_405 cleared
clearing ir...?
position_113(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_112', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
clearing ir...?
TMP_406(bool) = TMP_405 != _trader_1
has variable
[i] TMP_406 cleared
clearing ir...?
CONDITION TMP_406
typecheckig node...
TMP_405(address) = HIGH_LEVEL_CALL, dest:position_112(IPosition), function:ownerOf, arguments:['_id_1']  
Function name: _checkOwner
High Call: ownerOf
func name:ownerOf
other func name:ownerOf
TMP_405
hlc contract name: POSITION func_name: ownerOf
wfc len: 0
COPIED
[i]Type for TMP_405

Name: TMP_405 Function: _checkOwner
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
position_113(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_112', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: _checkOwner
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
TMP_406(bool) = TMP_405 != _trader_1
Function name: _checkOwner
[i]Type for TMP_406

Name: TMP_406 Function: _checkOwner
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_406
Condition...
Conidtion: 
TMP_406
TMP_406
clearning node...
clearing ir...?
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
typecheckig node...
TMP_407(None) = SOLIDITY_CALL revert(string)(2)
[i]Type for TMP_407

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
WORKLIST iteration 0 for function call "_checkOwner":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _checkOwner
done.
position_27(IPosition) := ϕ(['position_113'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(_id_1,True)
typecheckig node...
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(_id_1,True)
Internal call...
_checkDelay
_id
True
Function: _checkDelay
ic
val: True
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _checkDelay
Function Visibility: internal
clearning node...
clearing ir...?
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', 'TMP_26', '_id_1'])
has variable
[i] _id cleared
clearing ir...?
blockDelayPassed_1(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_5', 'blockDelayPassed_0'])
has variable
clearing ir...?
blockDelay_1(uint256) := ϕ(['blockDelay_0', 'blockDelay_2'])
has variable
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', 'TMP_26', '_id_1'])
Function name: _checkDelay
Phi
[i]Type for _id

Name: _id Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
blockDelayPassed_1(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_5', 'blockDelayPassed_0'])
Function name: _checkDelay
Phi
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
blockDelay_1(uint256) := ϕ(['blockDelay_0', 'blockDelay_2'])
Function name: _checkDelay
Phi
[i]Type for blockDelay

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_333(Trading.Delay) -> blockDelayPassed_1[_id_1]
has variable
clearing ir...?
_delay_1(Trading.Delay) := REF_333(Trading.Delay)
has variable
[i] _delay cleared
typecheckig node...
REF_333(Trading.Delay) -> blockDelayPassed_1[_id_1]
Function name: _checkDelay
INDEX

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_333

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_delay_1(Trading.Delay) := REF_333(Trading.Delay)
Function name: _checkDelay
asgn

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _delay Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _delay

Name: _delay Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_334(bool) -> _delay_1.actionType
has variable
clearing ir...?
TMP_408(bool) = REF_334 == _type_1
has variable
[i] TMP_408 cleared
clearing ir...?
CONDITION TMP_408
typecheckig node...
REF_334(bool) -> _delay_1.actionType
Function name: _checkDelay
MEMBER
_delay
actionType
_checkDelay
_delay Fields:
^^^
[i]Type for REF_334

Name: _delay.actionType Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _delay.actionType Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: actionType Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_408(bool) = REF_334 == _type_1
Function name: _checkDelay
[i]Type for TMP_408

Name: TMP_408 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_408
Condition...
Conidtion: 
TMP_408
TMP_408
clearning node...
clearing ir...?
REF_337(uint256) -> _delay_1.delay
has variable
clearing ir...?
TMP_410(bool) = block.number < REF_337
has variable
[i] TMP_410 cleared
clearing ir...?
CONDITION TMP_410
typecheckig node...
REF_337(uint256) -> _delay_1.delay
Function name: _checkDelay
MEMBER
_delay
delay
_checkDelay
_delay Fields:
actionType
^^^
[i]Type for REF_337

Name: _delay.delay Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _delay.delay Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delay Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_410(bool) = block.number < REF_337
Function name: _checkDelay
testing lt...
block.number
[i]Type for TMP_410

Name: TMP_410 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_410
Condition...
Conidtion: 
TMP_410
TMP_410
clearning node...
clearing ir...?
TMP_411(None) = SOLIDITY_CALL revert(string)(0)
typecheckig node...
TMP_411(None) = SOLIDITY_CALL revert(string)(0)
[i]Type for TMP_411

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_335(Trading.Delay) -> blockDelayPassed_1[_id_1]
has variable
clearing ir...?
REF_336(uint256) -> REF_335.delay
has variable
clearing ir...?
TMP_409(uint256) = block.number (c)+ blockDelay_1
has variable
[i] TMP_409 cleared
clearing ir...?
blockDelayPassed_4(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
has variable
clearing ir...?
REF_336 (->blockDelayPassed_4) := TMP_409(uint256)
has variable
typecheckig node...
REF_335(Trading.Delay) -> blockDelayPassed_1[_id_1]
Function name: _checkDelay
INDEX

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_335

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_336(uint256) -> REF_335.delay
Function name: _checkDelay
MEMBER
blockDelayPassed
delay
global
blockDelayPassed Fields:
^^^
[i]Type for REF_336

Name: blockDelayPassed.delay Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: blockDelayPassed.delay Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delay Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_409(uint256) = block.number (c)+ blockDelay_1
Function name: _checkDelay
block.number
[i]Type for TMP_409

Name: TMP_409 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
blockDelayPassed_4(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
Function name: _checkDelay
Phi
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: delay
Finance Type: undef
done.
REF_336 (->blockDelayPassed_4) := TMP_409(uint256)
Function name: _checkDelay
asgn

Name: TMP_409 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_336 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_336

Name: REF_336 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_336 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delay Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_336 (->blockDelayPassed_4) := TMP_409(uint256)
XXXXX
clearning node...
typecheckig node...
clearning node...
clearing ir...?
blockDelayPassed_5(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_4', 'blockDelayPassed_3'])
has variable
typecheckig node...
blockDelayPassed_5(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_4', 'blockDelayPassed_3'])
Function name: _checkDelay
Phi
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: delay
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_338(Trading.Delay) -> blockDelayPassed_1[_id_1]
has variable
clearing ir...?
REF_339(uint256) -> REF_338.delay
has variable
clearing ir...?
TMP_412(uint256) = block.number (c)+ blockDelay_1
has variable
[i] TMP_412 cleared
clearing ir...?
blockDelayPassed_2(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
has variable
clearing ir...?
REF_339 (->blockDelayPassed_2) := TMP_412(uint256)
has variable
typecheckig node...
REF_338(Trading.Delay) -> blockDelayPassed_1[_id_1]
Function name: _checkDelay
INDEX

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_338

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_339(uint256) -> REF_338.delay
Function name: _checkDelay
MEMBER
blockDelayPassed
delay
global
blockDelayPassed Fields:
^^^
[i]Type for REF_339

Name: blockDelayPassed.delay Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: blockDelayPassed.delay Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delay Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_412(uint256) = block.number (c)+ blockDelay_1
Function name: _checkDelay
block.number
[i]Type for TMP_412

Name: TMP_412 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
blockDelayPassed_2(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
Function name: _checkDelay
Phi
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: delay
Finance Type: undef
done.
REF_339 (->blockDelayPassed_2) := TMP_412(uint256)
Function name: _checkDelay
asgn

Name: TMP_412 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_339 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_339

Name: REF_339 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_339 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delay Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_339 (->blockDelayPassed_2) := TMP_412(uint256)
XXXXX
clearning node...
clearing ir...?
REF_340(Trading.Delay) -> blockDelayPassed_2[_id_1]
has variable
clearing ir...?
REF_341(bool) -> REF_340.actionType
has variable
clearing ir...?
blockDelayPassed_3(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_2'])
has variable
clearing ir...?
REF_341 (->blockDelayPassed_3) := _type_1(bool)
has variable
typecheckig node...
REF_340(Trading.Delay) -> blockDelayPassed_2[_id_1]
Function name: _checkDelay
INDEX

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: delay
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_340

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: delay
Finance Type: undef
done.
REF_341(bool) -> REF_340.actionType
Function name: _checkDelay
MEMBER
blockDelayPassed
actionType
global
blockDelayPassed Fields:
delay
^^^
[i]Type for REF_341

Name: blockDelayPassed.actionType Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: blockDelayPassed.actionType Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: actionType Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
blockDelayPassed_3(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_2'])
Function name: _checkDelay
Phi
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
done.
REF_341 (->blockDelayPassed_3) := _type_1(bool)
Function name: _checkDelay
asgn

Name: _type Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_341 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_341

Name: REF_341 Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_341 Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: actionType Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_checkDelay":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
_id_1(uint256) := ϕ(['_id_1', '_id_1', '_id_1', 'TMP_26', '_id_1'])
Function name: _checkDelay
Phi
[i]Type for _id

Name: _id Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
blockDelayPassed_1(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_5', 'blockDelayPassed_0'])
Function name: _checkDelay
Phi
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
done.
blockDelay_1(uint256) := ϕ(['blockDelay_0', 'blockDelay_2'])
Function name: _checkDelay
Phi
[i]Type for blockDelay

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_333(Trading.Delay) -> blockDelayPassed_1[_id_1]
Function name: _checkDelay
INDEX

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_333

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
done.
_delay_1(Trading.Delay) := REF_333(Trading.Delay)
Function name: _checkDelay
asgn

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef

Name: _delay Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _delay

Name: _delay Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
done.
typecheckig node...
REF_334(bool) -> _delay_1.actionType
Function name: _checkDelay
MEMBER
_delay
actionType
_checkDelay
_delay Fields:
actionType
delay
^^^

Name: actionType Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_334

Name: _delay.actionType Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _delay.actionType Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: actionType Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_408(bool) = REF_334 == _type_1
Function name: _checkDelay
[i]Type for TMP_408

Name: TMP_408 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_408
Condition...
Conidtion: 
TMP_408
TMP_408
typecheckig node...
REF_337(uint256) -> _delay_1.delay
Function name: _checkDelay
MEMBER
_delay
delay
_checkDelay
_delay Fields:
actionType
delay
^^^

Name: delay Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_337

Name: _delay.delay Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _delay.delay Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delay Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_410(bool) = block.number < REF_337
Function name: _checkDelay
testing lt...
block.number
[i]Type for TMP_410

Name: TMP_410 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_410
Condition...
Conidtion: 
TMP_410
TMP_410
typecheckig node...
TMP_411(None) = SOLIDITY_CALL revert(string)(0)
[i]Type for TMP_411

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_335(Trading.Delay) -> blockDelayPassed_1[_id_1]
Function name: _checkDelay
INDEX

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_335

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
done.
REF_336(uint256) -> REF_335.delay
Function name: _checkDelay
MEMBER
blockDelayPassed
delay
global
blockDelayPassed Fields:
actionType
delay
^^^

Name: delay Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_336

Name: blockDelayPassed.delay Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: blockDelayPassed.delay Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delay Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_409(uint256) = block.number (c)+ blockDelay_1
Function name: _checkDelay
block.number
[i]Type for TMP_409

Name: TMP_409 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
blockDelayPassed_4(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
Function name: _checkDelay
Phi
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
done.
REF_336 (->blockDelayPassed_4) := TMP_409(uint256)
Function name: _checkDelay
asgn

Name: TMP_409 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_336 Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_336

Name: REF_336 Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_336 Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delay Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_336 (->blockDelayPassed_4) := TMP_409(uint256)
XXXXX
typecheckig node...
typecheckig node...
blockDelayPassed_5(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_4', 'blockDelayPassed_3'])
Function name: _checkDelay
Phi
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
done.
typecheckig node...
REF_338(Trading.Delay) -> blockDelayPassed_1[_id_1]
Function name: _checkDelay
INDEX

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_338

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
done.
REF_339(uint256) -> REF_338.delay
Function name: _checkDelay
MEMBER
blockDelayPassed
delay
global
blockDelayPassed Fields:
actionType
delay
^^^

Name: delay Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_339

Name: blockDelayPassed.delay Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: blockDelayPassed.delay Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delay Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_412(uint256) = block.number (c)+ blockDelay_1
Function name: _checkDelay
block.number
[i]Type for TMP_412

Name: TMP_412 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
blockDelayPassed_2(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_1'])
Function name: _checkDelay
Phi
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
done.
REF_339 (->blockDelayPassed_2) := TMP_412(uint256)
Function name: _checkDelay
asgn

Name: TMP_412 Function: _checkDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_339 Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_339

Name: REF_339 Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_339 Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: delay Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_339 (->blockDelayPassed_2) := TMP_412(uint256)
XXXXX
typecheckig node...
REF_340(Trading.Delay) -> blockDelayPassed_2[_id_1]
Function name: _checkDelay
INDEX

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
Name: global
REFERENCE LEFT VALUE PROPAGATION
[i]Type for REF_340

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
done.
REF_341(bool) -> REF_340.actionType
Function name: _checkDelay
MEMBER
blockDelayPassed
actionType
global
blockDelayPassed Fields:
actionType
delay
^^^

Name: actionType Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_341

Name: blockDelayPassed.actionType Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: blockDelayPassed.actionType Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: actionType Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
blockDelayPassed_3(mapping(uint256 => Trading.Delay)) := ϕ(['blockDelayPassed_2'])
Function name: _checkDelay
Phi
[i]Type for blockDelayPassed

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
done.
REF_341 (->blockDelayPassed_3) := _type_1(bool)
Function name: _checkDelay
asgn

Name: _type Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_341 Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_341

Name: REF_341 Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_341 Function: _checkDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: actionType Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 1 for function call "_checkDelay":
 New undefined nodes- 2
 Old undefined nodes- 2
Saving return values for: _checkDelay
done.
This IR caused addback:
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(_id_1,True)
XXXXX
clearning node...
clearing ir...?
TMP_60(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_28(IPosition), function:trades, arguments:['_id_1']  
has variable
[i] TMP_60 cleared
clearing ir...?
position_29(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_28', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
clearing ir...?
tradingExtension_26(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_25', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
clearing ir...?
_trade_1(IPosition.Trade) := TMP_60(IPosition.Trade)
has variable
[i] _trade cleared
typecheckig node...
TMP_60(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_28(IPosition), function:trades, arguments:['_id_1']  
Function name: addToPosition
High Call: trades
func name:trades
other func name:trades
TMP_60
hlc contract name: POSITION func_name: trades
wfc len: 0
COPIED
[i]Type for TMP_60

Name: TMP_60 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
position_29(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_28', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_26(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_25', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_trade_1(IPosition.Trade) := TMP_60(IPosition.Trade)
Function name: addToPosition
asgn

Name: TMP_60 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _trade

Name: _trade Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_48(uint256) -> _trade_1.asset
has variable
clearing ir...?
REF_49(address) -> _trade_1.tigAsset
has variable
clearing ir...?
REF_50(uint256) -> _trade_1.margin
has variable
clearing ir...?
TMP_61(uint256) = REF_50 (c)+ _addMargin_1
has variable
[i] TMP_61 cleared
clearing ir...?
REF_51(uint256) -> _trade_1.leverage
has variable
clearing ir...?
HIGH_LEVEL_CALL, dest:tradingExtension_26(ITradingExtension), function:validateTrade, arguments:['REF_48', 'REF_49', 'TMP_61', 'REF_51']  
clearing ir...?
position_30(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_29', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
clearing ir...?
tradingExtension_27(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_26', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
typecheckig node...
REF_48(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
^^^
Check copy_toekn_tuple
([1], [-1], [0], None, -1)
----
Type: uint256
uint256
Final Type: uint256
Check copy_toekn_tuple
([1], [-1], [0], None, -1)
----
Type: None
None
Final Type: None
[i]Type for REF_48

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_49(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
^^^
Check copy_toekn_tuple
([-1], [-1], [0], '_tigAsset')
----
Type: address
address
Final Type: address
Check copy_toekn_tuple
([-1], [-1], [0], '_tigAsset')
----
Type: None
None
Final Type: None
[i]Type for REF_49

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
REF_50(uint256) -> _trade_1.margin
Function name: addToPosition
MEMBER
_trade
margin
addToPosition
_trade Fields:
asset
tigAsset
^^^
[i]Type for REF_50

Name: _trade.margin Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.margin Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_61(uint256) = REF_50 (c)+ _addMargin_1
Function name: addToPosition

Name: TMP_61 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: 0, Left type: -1
Final dest type: 0

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: TMP_61 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_61

Name: TMP_61 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
This IR caused addback:
TMP_61(uint256) = REF_50 (c)+ _addMargin_1
XXXXX
REF_51(uint256) -> _trade_1.leverage
Function name: addToPosition
MEMBER
_trade
leverage
addToPosition
_trade Fields:
asset
tigAsset
margin
^^^
[i]Type for REF_51

Name: _trade.leverage Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.leverage Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:tradingExtension_26(ITradingExtension), function:validateTrade, arguments:['REF_48', 'REF_49', 'TMP_61', 'REF_51']  
High Call: validateTrade
func name:validateTrade
other func name:validateTrade
done.
position_30(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_29', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_27(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_26', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, Trading._checkVault(address,address)(_stableVault_1,_marginAsset_1)
typecheckig node...
INTERNAL_CALL, Trading._checkVault(address,address)(_stableVault_1,_marginAsset_1)
Internal call...
_checkVault
_stableVault
_marginAsset
Function: _checkVault
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, '_stableVault', [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _checkVault
Function Visibility: internal
clearning node...
clearing ir...?
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', '_stableVault_1', 'REF_5', '_stableVault_1', 'REF_86'])
has variable
[i] _stableVault cleared
clearing ir...?
_token_1(address) := ϕ(['_outputToken_1', 'REF_6', '_marginAsset_1', 'REF_87', '_outputToken_1', '_marginAsset_1'])
has variable
[i] _token cleared
clearing ir...?
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
has variable
typecheckig node...
_stableVault_1(address) := ϕ(['_stableVault_1', '_stableVault_1', '_stableVault_1', 'REF_5', '_stableVault_1', 'REF_86'])
Function name: _checkVault
Phi
[i]Type for _stableVault

Name: _stableVault Function: _checkVault
Num: -1
Den: -1
Norm: u
LF: _stableVault
Fields: 
Finance Type: undef
done.
_token_1(address) := ϕ(['_outputToken_1', 'REF_6', '_marginAsset_1', 'REF_87', '_outputToken_1', '_marginAsset_1'])
Function name: _checkVault
Phi
[i]Type for _token

Name: _token Function: _checkVault
Num: -1
Den: -1
Norm: u
LF: _token
Fields: 
Finance Type: undef
done.
allowedVault_1(mapping(address => bool)) := ϕ(['allowedVault_2', 'allowedVault_1', 'allowedVault_0'])
Function name: _checkVault
Phi
[i]Type for allowedVault

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_342(bool) -> allowedVault_1[_stableVault_1]
has variable
clearing ir...?
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
typecheckig node...
REF_342(bool) -> allowedVault_1[_stableVault_1]
Function name: _checkVault
INDEX

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Name: global
REFERENCE IS BOOL TYPE
[i]Type for REF_342

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_413(None) = SOLIDITY_CALL require(bool,string)(REF_342,Unapproved stablevault)
[i]Type for TMP_413

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_414 = CONVERT _stableVault_1 to IStableVault
has variable
[i] TMP_414 cleared
clearing ir...?
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
has variable
[i] TMP_415 cleared
clearing ir...?
TMP_416(bool) = _token_1 == TMP_415
has variable
[i] TMP_416 cleared
clearing ir...?
TMP_417 = CONVERT _stableVault_1 to IStableVault
has variable
[i] TMP_417 cleared
clearing ir...?
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
has variable
[i] TMP_418 cleared
clearing ir...?
TMP_419(bool) = TMP_416 || TMP_418
has variable
[i] TMP_419 cleared
clearing ir...?
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
typecheckig node...
TMP_414 = CONVERT _stableVault_1 to IStableVault
Function name: _checkVault

Name: _stableVault Function: _checkVault
Num: -1
Den: -1
Norm: u
LF: _stableVault
Fields: 
Finance Type: undef

Name: TMP_414 Function: _checkVault
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_414

Name: TMP_414 Function: _checkVault
Num: -1
Den: -1
Norm: u
LF: _stableVault
Fields: 
Finance Type: undef
done.
TMP_415(address) = HIGH_LEVEL_CALL, dest:TMP_414(IStableVault), function:stable, arguments:[]  
Function name: _checkVault
High Call: stable
func name:stable
other func name:stable
TMP_415
hlc contract name: _stableVault func_name: stable
('c', [-1], [-1], 0, '_tigAsset', -1)
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, '_tigAsset', -1)
----
Type: address
address
Final Type: address
COPIED
[i]Type for TMP_415

Name: TMP_415 Function: _checkVault
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_416(bool) = _token_1 == TMP_415
Function name: _checkVault
[i]Type for TMP_416

Name: TMP_416 Function: _checkVault
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_417 = CONVERT _stableVault_1 to IStableVault
Function name: _checkVault

Name: _stableVault Function: _checkVault
Num: -1
Den: -1
Norm: u
LF: _stableVault
Fields: 
Finance Type: undef

Name: TMP_417 Function: _checkVault
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_417

Name: TMP_417 Function: _checkVault
Num: -1
Den: -1
Norm: u
LF: _stableVault
Fields: 
Finance Type: undef
done.
TMP_418(bool) = HIGH_LEVEL_CALL, dest:TMP_417(IStableVault), function:allowed, arguments:['_token_1']  
Function name: _checkVault
High Call: allowed
func name:allowed
other func name:allowed
TMP_418
[i]Type for TMP_418

Name: TMP_418 Function: _checkVault
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_419(bool) = TMP_416 || TMP_418
Function name: _checkVault
[i]Type for TMP_419

Name: TMP_419 Function: _checkVault
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_420(None) = SOLIDITY_CALL require(bool,string)(TMP_419,Token not approved in vault)
[i]Type for TMP_420

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_checkVault":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _checkVault
done.
clearning node...
clearing ir...?
REF_52(uint256) -> _trade_1.orderType
has variable
clearing ir...?
TMP_64(bool) = REF_52 != 0
has variable
[i] TMP_64 cleared
clearing ir...?
CONDITION TMP_64
typecheckig node...
REF_52(uint256) -> _trade_1.orderType
Function name: addToPosition
MEMBER
_trade
orderType
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
^^^
[i]Type for REF_52

Name: _trade.orderType Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.orderType Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: orderType Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_64(bool) = REF_52 != 0
Function name: addToPosition
[i]Type for TMP_64

Name: TMP_64 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_64
Condition...
Conidtion: 
TMP_64
TMP_64
clearning node...
clearing ir...?
TMP_65(None) = SOLIDITY_CALL revert(string)(4)
typecheckig node...
TMP_65(None) = SOLIDITY_CALL revert(string)(4)
[i]Type for TMP_65

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_53(uint256) -> _trade_1.asset
has variable
clearing ir...?
REF_54(uint256) -> _trade_1.leverage
has variable
clearing ir...?
TMP_66(uint256) = _addMargin_1 (c)* REF_54
has variable
[i] TMP_66 cleared
clearing ir...?
TMP_67(uint256) = TMP_66 (c)/ 1000000000000000000
has variable
[i] TMP_67 cleared
clearing ir...?
REF_55(address) -> _trade_1.tigAsset
has variable
clearing ir...?
TMP_68(uint256) = INTERNAL_CALL, Trading._handleOpenFees(uint256,uint256,address,address,bool)(REF_53,TMP_67,_trader_1,REF_55,False)
has variable
[i] TMP_68 cleared
clearing ir...?
tradingExtension_29(ITradingExtension) := ϕ(['tradingExtension_78'])
has variable
clearing ir...?
_fee_1(uint256) := TMP_68(uint256)
has variable
[i] _fee cleared
typecheckig node...
REF_53(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_53

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_54(uint256) -> _trade_1.leverage
Function name: addToPosition
MEMBER
_trade
leverage
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
^^^

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_54

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_66(uint256) = _addMargin_1 (c)* REF_54
Function name: addToPosition
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: 0
Final dest type: 0

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_66 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_66

Name: TMP_66 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_67(uint256) = TMP_66 (c)/ 1000000000000000000
Function name: addToPosition
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_67 Function: addToPosition
Num: 
Den: 
Norm: -18
LF: None
Fields: 
Finance Type: raw balance
val: 1000000000000000000
18
[i]Type for TMP_67

Name: TMP_67 Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: raw balance
done.
REF_55(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_55

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_68(uint256) = INTERNAL_CALL, Trading._handleOpenFees(uint256,uint256,address,address,bool)(REF_53,TMP_67,_trader_1,REF_55,False)
Function name: addToPosition
Internal call...
_handleOpenFees
REF_53
TMP_67
_trader
REF_55
False
Function: _handleOpenFees
ic
val: False
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: -18
    link: None
    fields: []
    fintype: 0
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: -18
    link: None
    fields: []
    fintype: 0
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[1], [-1], 0, None, [], -1]
[[-1], [-1], -18, None, [], 0]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, '_tigAsset', [], -1]
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _handleOpenFees
Function Visibility: internal
clearning node...
clearing ir...?
_asset_1(uint256) := ϕ(['REF_16', 'REF_149', 'REF_53'])
has variable
[i] _asset cleared
clearing ir...?
_positionSize_1(uint256) := ϕ(['TMP_155', 'TMP_67', 'TMP_34'])
has variable
[i] _positionSize cleared
clearing ir...?
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
has variable
[i] _trader cleared
clearing ir...?
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_153', 'REF_55'])
has variable
[i] _tigAsset cleared
clearing ir...?
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
openFees_1(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_0', 'openFees_2'])
has variable
clearing ir...?
pairsContract_14(IPairsContract) := ϕ(['pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_13'])
has variable
clearing ir...?
gov_2(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_0', 'gov_19'])
has variable
clearing ir...?
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
typecheckig node...
_asset_1(uint256) := ϕ(['REF_16', 'REF_149', 'REF_53'])
Function name: _handleOpenFees
Phi
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_positionSize_1(uint256) := ϕ(['TMP_155', 'TMP_67', 'TMP_34'])
Function name: _handleOpenFees
Phi
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
Function name: _handleOpenFees
Phi
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _trader
Fields: 
Finance Type: undef
done.
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_153', 'REF_55'])
Function name: _handleOpenFees
Phi
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
openFees_1(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_0', 'openFees_2'])
Function name: _handleOpenFees
Phi
[i]Type for openFees

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
pairsContract_14(IPairsContract) := ϕ(['pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_13'])
Function name: _handleOpenFees
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
gov_2(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_0', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
has variable
[i] TMP_303 cleared
clearing ir...?
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_1', 'openFees_2'])
has variable
clearing ir...?
pairsContract_15(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_14', 'pairsContract_13'])
has variable
clearing ir...?
gov_3(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_2', 'gov_19'])
has variable
clearing ir...?
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_76'])
has variable
clearing ir...?
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
has variable
[i] asset cleared
typecheckig node...
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
Function name: _handleOpenFees
High Call: idToAsset
func name:idToAsset
other func name:idToAsset
TMP_303
hlc contract name: PAIRS func_name: idToAsset
wfc len: 0
COPIED
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_1', 'openFees_2'])
Function name: _handleOpenFees
Phi
[i]Type for openFees

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
pairsContract_15(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_14', 'pairsContract_13'])
Function name: _handleOpenFees
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
gov_3(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_2', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_76'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Function name: _handleOpenFees
asgn

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
has variable
[i] _fees cleared
typecheckig node...
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Function name: _handleOpenFees
asgn

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_275(uint256) -> _fees_1.daoFees
has variable
clearing ir...?
REF_276(uint256) -> _fees_1.daoFees
has variable
clearing ir...?
REF_277(uint256) -> asset_1.feeMultiplier
has variable
clearing ir...?
TMP_304(uint256) = REF_276 * REF_277
has variable
[i] TMP_304 cleared
clearing ir...?
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
has variable
[i] TMP_305 cleared
clearing ir...?
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
has variable
[i] _fees cleared
clearing ir...?
REF_275 (->_fees_2) := TMP_305(uint256)
has variable
typecheckig node...
REF_275(uint256) -> _fees_1.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_276(uint256) -> _fees_1.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_277(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
^^^
[i]Type for REF_277

Name: asset.feeMultiplier Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_304(uint256) = REF_276 * REF_277
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_304 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
This IR caused addback:
TMP_304(uint256) = REF_276 * REF_277
XXXXX
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 110, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 110
Final dest type: 110

Name: TMP_305 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
REF_275 (->_fees_2) := TMP_305(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
clearning node...
clearing ir...?
REF_278(uint256) -> _fees_2.burnFees
has variable
clearing ir...?
REF_279(uint256) -> _fees_2.burnFees
has variable
clearing ir...?
REF_280(uint256) -> asset_1.feeMultiplier
has variable
clearing ir...?
TMP_306(uint256) = REF_279 * REF_280
has variable
[i] TMP_306 cleared
clearing ir...?
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
has variable
[i] TMP_307 cleared
clearing ir...?
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
has variable
[i] _fees cleared
clearing ir...?
REF_278 (->_fees_3) := TMP_307(uint256)
has variable
typecheckig node...
REF_278(uint256) -> _fees_2.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_279(uint256) -> _fees_2.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_280(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_280

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_306(uint256) = REF_279 * REF_280
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_306 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 110, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 110
Final dest type: 110

Name: TMP_307 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
REF_278 (->_fees_3) := TMP_307(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
clearning node...
clearing ir...?
REF_281(uint256) -> _fees_3.referralFees
has variable
clearing ir...?
REF_282(uint256) -> _fees_3.referralFees
has variable
clearing ir...?
REF_283(uint256) -> asset_1.feeMultiplier
has variable
clearing ir...?
TMP_308(uint256) = REF_282 * REF_283
has variable
[i] TMP_308 cleared
clearing ir...?
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
has variable
[i] TMP_309 cleared
clearing ir...?
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
has variable
[i] _fees cleared
clearing ir...?
REF_281 (->_fees_4) := TMP_309(uint256)
has variable
typecheckig node...
REF_281(uint256) -> _fees_3.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
daoFees
burnFees
^^^
[i]Type for REF_281

Name: _fees.referralFees Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_282(uint256) -> _fees_3.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
daoFees
burnFees
^^^
[i]Type for REF_282

Name: _fees.referralFees Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_283(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_283

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_308(uint256) = REF_282 * REF_283
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_308 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_308(uint256) = REF_282 * REF_283
XXXXX
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_309 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_281 (->_fees_4) := TMP_309(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_281 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_284(uint256) -> _fees_4.botFees
has variable
clearing ir...?
REF_285(uint256) -> _fees_4.botFees
has variable
clearing ir...?
REF_286(uint256) -> asset_1.feeMultiplier
has variable
clearing ir...?
TMP_310(uint256) = REF_285 * REF_286
has variable
[i] TMP_310 cleared
clearing ir...?
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
has variable
[i] TMP_311 cleared
clearing ir...?
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
has variable
[i] _fees cleared
clearing ir...?
REF_284 (->_fees_5) := TMP_311(uint256)
has variable
typecheckig node...
REF_284(uint256) -> _fees_4.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
referralFees
daoFees
burnFees
^^^
[i]Type for REF_284

Name: _fees.botFees Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_285(uint256) -> _fees_4.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
referralFees
daoFees
burnFees
^^^
[i]Type for REF_285

Name: _fees.botFees Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_286(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_286

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_310(uint256) = REF_285 * REF_286
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_310(uint256) = REF_285 * REF_286
XXXXX
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_311 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_284 (->_fees_5) := TMP_311(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_284 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
has variable
[i] TMP_312 cleared
clearing ir...?
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
gov_4(IGovNFT) := ϕ(['gov_3', 'gov_10', 'gov_1', 'gov_19'])
has variable
clearing ir...?
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_77', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
clearing ir...?
_referrer_1(address) := TMP_312(address)
has variable
[i] _referrer cleared
typecheckig node...
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
Function name: _handleOpenFees
High Call: getRef
func name:getRef
other func name:getRef
TMP_312
hlc contract name: TRADINGEXTENSION func_name: getRef
wfc len: 0
COPIED
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_4(IGovNFT) := ϕ(['gov_3', 'gov_10', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_77', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_referrer_1(address) := TMP_312(address)
Function name: _handleOpenFees
asgn

Name: TMP_312 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _referrer Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_313 = CONVERT 0 to address
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(bool) = _referrer_1 != TMP_313
has variable
[i] TMP_314 cleared
clearing ir...?
CONDITION TMP_314
typecheckig node...
TMP_313 = CONVERT 0 to address
Function name: _handleOpenFees
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_313 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = _referrer_1 != TMP_313
Function name: _handleOpenFees
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
clearning node...
clearing ir...?
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
has variable
[i] _fees cleared
typecheckig node...
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION _isBot_1
typecheckig node...
CONDITION _isBot_1
Condition...
Conidtion: 
_isBot_1
_isBot_1
clearning node...
clearing ir...?
REF_298(uint256) -> _fees_7.botFees
has variable
clearing ir...?
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
has variable
[i] _fees cleared
clearing ir...?
REF_298 (->_fees_8) := 0(uint256)
has variable
typecheckig node...
REF_298(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_298

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_298 (->_fees_8) := 0(uint256)
Function name: _handleOpenFees
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_315 = CONVERT _tigAsset_1 to IStable
has variable
[i] TMP_315 cleared
clearing ir...?
REF_289(uint256) -> _fees_5.referralFees
has variable
clearing ir...?
TMP_316(uint256) = _positionSize_1 * REF_289
has variable
[i] TMP_316 cleared
clearing ir...?
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
has variable
[i] TMP_317 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
clearing ir...?
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
gov_5(IGovNFT) := ϕ(['gov_10', 'gov_4', 'gov_1', 'gov_19'])
has variable
typecheckig node...
TMP_315 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_315 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
REF_289(uint256) -> _fees_5.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_289

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_316(uint256) = _positionSize_1 * REF_289
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_316 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_317 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_5(IGovNFT) := ϕ(['gov_10', 'gov_4', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_321 = CONVERT _tigAsset_1 to IStable
has variable
[i] TMP_321 cleared
clearing ir...?
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
has variable
[i] TMP_322 cleared
clearing ir...?
REF_294(uint256) -> _fees_7.botFees
has variable
clearing ir...?
TMP_323(uint256) = _positionSize_1 * REF_294
has variable
[i] TMP_323 cleared
clearing ir...?
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
has variable
[i] TMP_324 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
clearing ir...?
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
gov_7(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_6', 'gov_19'])
has variable
typecheckig node...
TMP_321 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_321 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
Function name: _handleOpenFees
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_3 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_322 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_294(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_294

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_323(uint256) = _positionSize_1 * REF_294
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_323 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_324 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_7(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_6', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
has variable
[i] _fees cleared
typecheckig node...
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_290(uint256) -> _fees_5.daoFees
has variable
clearing ir...?
REF_291(uint256) -> _fees_5.daoFees
has variable
clearing ir...?
REF_292(uint256) -> _fees_5.referralFees
has variable
clearing ir...?
TMP_319(uint256) = REF_292 * 2
has variable
[i] TMP_319 cleared
clearing ir...?
TMP_320(uint256) = REF_291 - TMP_319
has variable
[i] TMP_320 cleared
clearing ir...?
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
has variable
[i] _fees cleared
clearing ir...?
REF_290 (->_fees_6) := TMP_320(uint256)
has variable
typecheckig node...
REF_290(uint256) -> _fees_5.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_291(uint256) -> _fees_5.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_292(uint256) -> _fees_5.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_292

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_319(uint256) = REF_292 * 2
Function name: _handleOpenFees
testing mul...
val: 2
val: 2
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 2

Name: 2 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_319 Function: _handleOpenFees
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_320(uint256) = REF_291 - TMP_319
Function name: _handleOpenFees
lnorm: u rnorm: 0
Dest type: 10, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_320 Function: _handleOpenFees
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_290 (->_fees_6) := TMP_320(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
clearning node...
clearing ir...?
REF_299(uint256) -> _fees_10.daoFees
has variable
clearing ir...?
TMP_327(uint256) = _positionSize_1 * REF_299
has variable
[i] TMP_327 cleared
clearing ir...?
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
has variable
[i] TMP_328 cleared
clearing ir...?
_daoFeesPaid_1(uint256) := TMP_328(uint256)
has variable
[i] _daoFeesPaid cleared
typecheckig node...
REF_299(uint256) -> _fees_10.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_327(uint256) = _positionSize_1 * REF_299
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (0, 10)
Func: mul
Dest type: 13, Update_ratios: {10: -1, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 10, Left type: 0
Left side: 0, Right side: 10, Checked Ratio: 10
False
Final dest type: 13

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_327 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13

Name: TMP_328 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: _daoFeesPaid Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (13, -1)
Func: assign
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
clearning node...
clearing ir...?
REF_295(uint256) -> _fees_7.daoFees
has variable
clearing ir...?
REF_296(uint256) -> _fees_7.daoFees
has variable
clearing ir...?
REF_297(uint256) -> _fees_7.botFees
has variable
clearing ir...?
TMP_326(uint256) = REF_296 - REF_297
has variable
[i] TMP_326 cleared
clearing ir...?
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
has variable
[i] _fees cleared
clearing ir...?
REF_295 (->_fees_9) := TMP_326(uint256)
has variable
typecheckig node...
REF_295(uint256) -> _fees_7.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_296(uint256) -> _fees_7.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_297(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_297

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_326(uint256) = REF_296 - REF_297
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_326 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_295 (->_fees_9) := TMP_326(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
clearning node...
clearing ir...?
REF_300(uint256) -> _fees_10.burnFees
has variable
clearing ir...?
REF_301(uint256) -> _fees_10.botFees
has variable
clearing ir...?
TMP_329(uint256) = REF_300 + REF_301
has variable
[i] TMP_329 cleared
clearing ir...?
TMP_330(uint256) = _positionSize_1 * TMP_329
has variable
[i] TMP_330 cleared
clearing ir...?
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
has variable
[i] TMP_331 cleared
clearing ir...?
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
has variable
[i] TMP_332 cleared
clearing ir...?
_feePaid_1(uint256) := TMP_332(uint256)
has variable
[i] _feePaid cleared
typecheckig node...
REF_300(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_301(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_301

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_329(uint256) = REF_300 + REF_301
Function name: _handleOpenFees

Name: TMP_329 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_329 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_330(uint256) = _positionSize_1 * TMP_329
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (0, 10)
Func: mul
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 110, Left type: 0
Left side: 0, Right side: 10, Checked Ratio: 10
True
Inconsistent updating of 10 by 0 and 110
Error with TMP_330 in function _handleOpenFees
Error with: TMP_330 in function _handleOpenFees
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f591c0>]

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13

Name: TMP_331 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Function name: _handleOpenFees

Name: TMP_332 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Finance type key: (13, 13)
Func: add
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 13, Left type: 13
Final dest type: 13

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: TMP_332 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
_feePaid_1(uint256) := TMP_332(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: _feePaid Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (13, -1)
Func: assign
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
clearning node...
clearing ir...?
TMP_340 = CONVERT 0 to address
has variable
[i] TMP_340 cleared
clearing ir...?
TMP_341(bool) = _referrer_1 != TMP_340
has variable
[i] TMP_341 cleared
clearing ir...?
CONDITION TMP_341
typecheckig node...
TMP_340 = CONVERT 0 to address
Function name: _handleOpenFees
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(bool) = _referrer_1 != TMP_340
Function name: _handleOpenFees
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_341
Condition...
Conidtion: 
TMP_341
TMP_341
clearning node...
clearing ir...?
REF_305(uint256) -> _fees_10.burnFees
has variable
clearing ir...?
TMP_342(uint256) = _positionSize_1 * REF_305
has variable
[i] TMP_342 cleared
clearing ir...?
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
has variable
[i] TMP_343 cleared
clearing ir...?
REF_306(uint256) -> _fees_10.referralFees
has variable
clearing ir...?
TMP_344(uint256) = _positionSize_1 * REF_306
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
has variable
[i] TMP_345 cleared
clearing ir...?
REF_307(uint256) -> _fees_10.botFees
has variable
clearing ir...?
TMP_346(uint256) = _positionSize_1 * REF_307
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
has variable
[i] TMP_347 cleared
clearing ir...?
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_343,TMP_345,TMP_347,_referrer_1)
typecheckig node...
REF_305(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_342(uint256) = _positionSize_1 * REF_305
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (0, 10)
Func: mul
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 10, Left type: 0
Left side: 0, Right side: 10, Checked Ratio: 10
False
Final dest type: 13

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_342 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13

Name: TMP_343 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
REF_306(uint256) -> _fees_10.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_306

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = _positionSize_1 * REF_306
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_345 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
REF_307(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_307

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_346(uint256) = _positionSize_1 * REF_307
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_347 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_343,TMP_345,TMP_347,_referrer_1)
clearning node...
clearing ir...?
REF_308(uint256) -> _fees_10.burnFees
has variable
clearing ir...?
TMP_349(uint256) = _positionSize_1 * REF_308
has variable
[i] TMP_349 cleared
clearing ir...?
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
has variable
[i] TMP_350 cleared
clearing ir...?
REF_309(uint256) -> _fees_10.botFees
has variable
clearing ir...?
TMP_351(uint256) = _positionSize_1 * REF_309
has variable
[i] TMP_351 cleared
clearing ir...?
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
has variable
[i] TMP_352 cleared
clearing ir...?
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_350,0,TMP_352,_referrer_1)
typecheckig node...
REF_308(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_349(uint256) = _positionSize_1 * REF_308
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (0, 10)
Func: mul
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 10, Left type: 0
Left side: 0, Right side: 10, Checked Ratio: 10
False
Final dest type: 13

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_349 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13

Name: TMP_350 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
REF_309(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_309

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(uint256) = _positionSize_1 * REF_309
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_351 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_352 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_350,0,TMP_352,_referrer_1)
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_333 = CONVERT _tigAsset_1 to IStable
has variable
[i] TMP_333 cleared
clearing ir...?
TMP_334 = CONVERT this to address
has variable
[i] TMP_334 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
clearing ir...?
gov_8(IGovNFT) := ϕ(['gov_10', 'gov_7', 'gov_1', 'gov_19'])
has variable
typecheckig node...
TMP_333 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_333 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_334 = CONVERT this to address
Function name: _handleOpenFees
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
gov_8(IGovNFT) := ϕ(['gov_10', 'gov_7', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_336 = CONVERT _tigAsset_1 to IStable
has variable
[i] TMP_336 cleared
clearing ir...?
TMP_337 = CONVERT this to address
has variable
[i] TMP_337 cleared
clearing ir...?
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
has variable
[i] TMP_338 cleared
clearing ir...?
gov_9(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_8', 'gov_19'])
has variable
clearing ir...?
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
clearing ir...?
gov_10(IGovNFT) := ϕ(['gov_10', 'gov_9', 'gov_1', 'gov_19'])
has variable
typecheckig node...
TMP_336 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_336 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_337 = CONVERT this to address
Function name: _handleOpenFees
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
Function name: _handleOpenFees
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_338
hlc contract name: _tigAsset func_name: balanceOf
('c', [-1], [-1], 0, None, 0)
TMP_337
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, None, 0)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
gov_9(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_8', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
High Call: distribute
func name:distribute
other func name:distribute
done.
gov_10(IGovNFT) := ϕ(['gov_10', 'gov_9', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _feePaid_1
typecheckig node...
RETURN _feePaid_1
RETURN

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
WORKLIST iteration 0 for function call "_handleOpenFees":
 New undefined nodes- 3
 Old undefined nodes- 0
typecheckig node...
_asset_1(uint256) := ϕ(['REF_16', 'REF_149', 'REF_53'])
Function name: _handleOpenFees
Phi
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_positionSize_1(uint256) := ϕ(['TMP_155', 'TMP_67', 'TMP_34'])
Function name: _handleOpenFees
Phi
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
Function name: _handleOpenFees
Phi
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _trader
Fields: 
Finance Type: undef
done.
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_153', 'REF_55'])
Function name: _handleOpenFees
Phi
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
openFees_1(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_0', 'openFees_2'])
Function name: _handleOpenFees
Phi
[i]Type for openFees

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
pairsContract_14(IPairsContract) := ϕ(['pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_13'])
Function name: _handleOpenFees
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
gov_2(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_0', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
Function name: _handleOpenFees
High Call: idToAsset
func name:idToAsset
other func name:idToAsset
TMP_303
hlc contract name: PAIRS func_name: idToAsset
wfc len: 0
COPIED
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_1', 'openFees_2'])
Function name: _handleOpenFees
Phi
[i]Type for openFees

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
pairsContract_15(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_14', 'pairsContract_13'])
Function name: _handleOpenFees
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
gov_3(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_2', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_76'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Function name: _handleOpenFees
asgn

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: feeMultiplier
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: feeMultiplier
Finance Type: undef
done.
typecheckig node...
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Function name: _handleOpenFees
asgn

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
typecheckig node...
REF_275(uint256) -> _fees_1.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_276(uint256) -> _fees_1.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_277(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_277

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_304(uint256) = REF_276 * REF_277
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 110
Final dest type: 110

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_275 (->_fees_2) := TMP_305(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
typecheckig node...
REF_278(uint256) -> _fees_2.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_279(uint256) -> _fees_2.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_280(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_280

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_306(uint256) = REF_279 * REF_280
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 110
Final dest type: 110

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_278 (->_fees_3) := TMP_307(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
typecheckig node...
REF_281(uint256) -> _fees_3.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_281

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_282(uint256) -> _fees_3.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_282

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_283(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_283

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_308(uint256) = REF_282 * REF_283
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_308 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_281 (->_fees_4) := TMP_309(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_284(uint256) -> _fees_4.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_284

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_285(uint256) -> _fees_4.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_285

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_286(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_286

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_310(uint256) = REF_285 * REF_286
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_284 (->_fees_5) := TMP_311(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
Function name: _handleOpenFees
High Call: getRef
func name:getRef
other func name:getRef
TMP_312
hlc contract name: TRADINGEXTENSION func_name: getRef
wfc len: 0
COPIED
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_4(IGovNFT) := ϕ(['gov_3', 'gov_10', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_77', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_referrer_1(address) := TMP_312(address)
Function name: _handleOpenFees
asgn

Name: TMP_312 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _referrer Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_313 = CONVERT 0 to address
Function name: _handleOpenFees
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = _referrer_1 != TMP_313
Function name: _handleOpenFees
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
typecheckig node...
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
typecheckig node...
CONDITION _isBot_1
Condition...
Conidtion: 
_isBot_1
_isBot_1
typecheckig node...
REF_298(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_298

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_298 (->_fees_8) := 0(uint256)
Function name: _handleOpenFees
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_315 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_315 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
REF_289(uint256) -> _fees_5.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_289

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_316(uint256) = _positionSize_1 * REF_289
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_5(IGovNFT) := ϕ(['gov_10', 'gov_4', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_321 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_321 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
Function name: _handleOpenFees
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_3 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_294(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_294

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_323(uint256) = _positionSize_1 * REF_294
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_7(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_6', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
typecheckig node...
REF_290(uint256) -> _fees_5.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_291(uint256) -> _fees_5.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_292(uint256) -> _fees_5.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_292

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_319(uint256) = REF_292 * 2
Function name: _handleOpenFees
testing mul...
val: 2
val: 2
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 2

Name: 2 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_320(uint256) = REF_291 - TMP_319
Function name: _handleOpenFees
lnorm: u rnorm: 0
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_290 (->_fees_6) := TMP_320(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
typecheckig node...
REF_299(uint256) -> _fees_10.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_327(uint256) = _positionSize_1 * REF_299
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (0, 10)
Func: mul
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 10, Left type: 0
Left side: 0, Right side: 10, Checked Ratio: 10
False
Final dest type: 13

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
Finance type key: (13, -1)
Func: assign
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
typecheckig node...
REF_295(uint256) -> _fees_7.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_296(uint256) -> _fees_7.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_297(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_297

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_326(uint256) = REF_296 - REF_297
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_295 (->_fees_9) := TMP_326(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
typecheckig node...
REF_300(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_301(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_301

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_329(uint256) = REF_300 + REF_301
Function name: _handleOpenFees

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_330(uint256) = _positionSize_1 * TMP_329
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (0, 10)
Func: mul
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 110, Left type: 0
Left side: 0, Right side: 10, Checked Ratio: 10
True
Inconsistent updating of 10 by 0 and 110

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Function name: _handleOpenFees

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
initlize checks
;;;
lnorm: u rnorm: u
Finance type key: (13, 13)
Func: add
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 13, Left type: 13
Final dest type: 13

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
_feePaid_1(uint256) := TMP_332(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
Finance type key: (13, -1)
Func: assign
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
typecheckig node...
TMP_340 = CONVERT 0 to address
Function name: _handleOpenFees
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(bool) = _referrer_1 != TMP_340
Function name: _handleOpenFees
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_341
Condition...
Conidtion: 
TMP_341
TMP_341
typecheckig node...
REF_305(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_342(uint256) = _positionSize_1 * REF_305
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (0, 10)
Func: mul
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 10, Left type: 0
Left side: 0, Right side: 10, Checked Ratio: 10
False
Final dest type: 13

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
REF_306(uint256) -> _fees_10.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_306

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = _positionSize_1 * REF_306
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
REF_307(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_307

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_346(uint256) = _positionSize_1 * REF_307
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_343,TMP_345,TMP_347,_referrer_1)
typecheckig node...
REF_308(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_349(uint256) = _positionSize_1 * REF_308
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (0, 10)
Func: mul
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 10, Left type: 0
Left side: 0, Right side: 10, Checked Ratio: 10
False
Final dest type: 13

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
REF_309(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_309

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(uint256) = _positionSize_1 * REF_309
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_350,0,TMP_352,_referrer_1)
typecheckig node...
typecheckig node...
TMP_333 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_333 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_334 = CONVERT this to address
Function name: _handleOpenFees
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
gov_8(IGovNFT) := ϕ(['gov_10', 'gov_7', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_336 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_336 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_337 = CONVERT this to address
Function name: _handleOpenFees
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
Function name: _handleOpenFees
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_338
hlc contract name: _tigAsset func_name: balanceOf
('c', [-1], [-1], 0, None, 0)
TMP_337
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, None, 0)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
gov_9(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_8', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
High Call: distribute
func name:distribute
other func name:distribute
done.
gov_10(IGovNFT) := ϕ(['gov_10', 'gov_9', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _feePaid_1
typecheckig node...
RETURN _feePaid_1
RETURN

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
WORKLIST iteration 1 for function call "_handleOpenFees":
 New undefined nodes- 0
 Old undefined nodes- 3
typecheckig node...
_asset_1(uint256) := ϕ(['REF_16', 'REF_149', 'REF_53'])
Function name: _handleOpenFees
Phi
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_positionSize_1(uint256) := ϕ(['TMP_155', 'TMP_67', 'TMP_34'])
Function name: _handleOpenFees
Phi
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
Function name: _handleOpenFees
Phi
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _trader
Fields: 
Finance Type: undef
done.
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_153', 'REF_55'])
Function name: _handleOpenFees
Phi
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
openFees_1(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_0', 'openFees_2'])
Function name: _handleOpenFees
Phi
[i]Type for openFees

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
pairsContract_14(IPairsContract) := ϕ(['pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_13'])
Function name: _handleOpenFees
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
gov_2(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_0', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
Function name: _handleOpenFees
High Call: idToAsset
func name:idToAsset
other func name:idToAsset
TMP_303
hlc contract name: PAIRS func_name: idToAsset
wfc len: 0
COPIED
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_1', 'openFees_2'])
Function name: _handleOpenFees
Phi
[i]Type for openFees

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
pairsContract_15(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_14', 'pairsContract_13'])
Function name: _handleOpenFees
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
gov_3(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_2', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_76'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Function name: _handleOpenFees
asgn

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: feeMultiplier
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: feeMultiplier
Finance Type: undef
done.
typecheckig node...
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Function name: _handleOpenFees
asgn

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
typecheckig node...
REF_275(uint256) -> _fees_1.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_276(uint256) -> _fees_1.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_277(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_277

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_304(uint256) = REF_276 * REF_277
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 110
Final dest type: 110

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_275 (->_fees_2) := TMP_305(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
typecheckig node...
REF_278(uint256) -> _fees_2.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_279(uint256) -> _fees_2.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_280(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_280

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_306(uint256) = REF_279 * REF_280
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 110
Final dest type: 110

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_278 (->_fees_3) := TMP_307(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
typecheckig node...
REF_281(uint256) -> _fees_3.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_281

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_282(uint256) -> _fees_3.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_282

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_283(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_283

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_308(uint256) = REF_282 * REF_283
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_308 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_281 (->_fees_4) := TMP_309(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_284(uint256) -> _fees_4.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_284

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_285(uint256) -> _fees_4.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_285

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_286(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_286

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_310(uint256) = REF_285 * REF_286
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_284 (->_fees_5) := TMP_311(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
Function name: _handleOpenFees
High Call: getRef
func name:getRef
other func name:getRef
TMP_312
hlc contract name: TRADINGEXTENSION func_name: getRef
wfc len: 0
COPIED
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_4(IGovNFT) := ϕ(['gov_3', 'gov_10', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_77', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_referrer_1(address) := TMP_312(address)
Function name: _handleOpenFees
asgn

Name: TMP_312 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _referrer Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_313 = CONVERT 0 to address
Function name: _handleOpenFees
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = _referrer_1 != TMP_313
Function name: _handleOpenFees
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
typecheckig node...
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
typecheckig node...
CONDITION _isBot_1
Condition...
Conidtion: 
_isBot_1
_isBot_1
typecheckig node...
REF_298(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_298

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_298 (->_fees_8) := 0(uint256)
Function name: _handleOpenFees
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_315 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_315 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
REF_289(uint256) -> _fees_5.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_289

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_316(uint256) = _positionSize_1 * REF_289
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_5(IGovNFT) := ϕ(['gov_10', 'gov_4', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_321 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_321 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
Function name: _handleOpenFees
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_3 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_294(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_294

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_323(uint256) = _positionSize_1 * REF_294
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_7(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_6', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
typecheckig node...
REF_290(uint256) -> _fees_5.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_291(uint256) -> _fees_5.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_292(uint256) -> _fees_5.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_292

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_319(uint256) = REF_292 * 2
Function name: _handleOpenFees
testing mul...
val: 2
val: 2
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 2

Name: 2 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_320(uint256) = REF_291 - TMP_319
Function name: _handleOpenFees
lnorm: u rnorm: 0
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_290 (->_fees_6) := TMP_320(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
typecheckig node...
REF_299(uint256) -> _fees_10.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_327(uint256) = _positionSize_1 * REF_299
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (0, 10)
Func: mul
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 10, Left type: 0
Left side: 0, Right side: 10, Checked Ratio: 10
False
Final dest type: 13

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
Finance type key: (13, -1)
Func: assign
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
typecheckig node...
REF_295(uint256) -> _fees_7.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_296(uint256) -> _fees_7.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_297(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_297

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_326(uint256) = REF_296 - REF_297
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_295 (->_fees_9) := TMP_326(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
typecheckig node...
REF_300(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_301(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_301

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_329(uint256) = REF_300 + REF_301
Function name: _handleOpenFees

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_330(uint256) = _positionSize_1 * TMP_329
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (0, 10)
Func: mul
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 110, Left type: 0
Left side: 0, Right side: 10, Checked Ratio: 10
True
Inconsistent updating of 10 by 0 and 110

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Function name: _handleOpenFees

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
initlize checks
;;;
lnorm: u rnorm: u
Finance type key: (13, 13)
Func: add
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 13, Left type: 13
Final dest type: 13

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
_feePaid_1(uint256) := TMP_332(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
Finance type key: (13, -1)
Func: assign
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
typecheckig node...
TMP_340 = CONVERT 0 to address
Function name: _handleOpenFees
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
val: 0
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(bool) = _referrer_1 != TMP_340
Function name: _handleOpenFees
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_341
Condition...
Conidtion: 
TMP_341
TMP_341
typecheckig node...
REF_305(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_342(uint256) = _positionSize_1 * REF_305
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (0, 10)
Func: mul
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 10, Left type: 0
Left side: 0, Right side: 10, Checked Ratio: 10
False
Final dest type: 13

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
REF_306(uint256) -> _fees_10.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_306

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = _positionSize_1 * REF_306
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
REF_307(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_307

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_346(uint256) = _positionSize_1 * REF_307
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_343,TMP_345,TMP_347,_referrer_1)
typecheckig node...
REF_308(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_349(uint256) = _positionSize_1 * REF_308
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (0, 10)
Func: mul
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 10, Left type: 0
Left side: 0, Right side: 10, Checked Ratio: 10
False
Final dest type: 13

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
REF_309(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_309

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(uint256) = _positionSize_1 * REF_309
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
done.
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_350,0,TMP_352,_referrer_1)
typecheckig node...
typecheckig node...
TMP_333 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_333 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_334 = CONVERT this to address
Function name: _handleOpenFees
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
gov_8(IGovNFT) := ϕ(['gov_10', 'gov_7', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_336 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_336 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_337 = CONVERT this to address
Function name: _handleOpenFees
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
Function name: _handleOpenFees
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_338
hlc contract name: _tigAsset func_name: balanceOf
('c', [-1], [-1], 0, None, 0)
TMP_337
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, None, 0)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
gov_9(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_8', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
High Call: distribute
func name:distribute
other func name:distribute
done.
gov_10(IGovNFT) := ϕ(['gov_10', 'gov_9', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _feePaid_1
typecheckig node...
RETURN _feePaid_1
RETURN

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
WORKLIST iteration 2 for function call "_handleOpenFees":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _handleOpenFees

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
___
[i]Type for TMP_68

Name: TMP_68 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
tradingExtension_29(ITradingExtension) := ϕ(['tradingExtension_78'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_fee_1(uint256) := TMP_68(uint256)
Function name: addToPosition
asgn

Name: TMP_68 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: _fee Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (13, -1)
Func: assign
Dest type: 13, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 13
Final dest type: 13
[i]Type for _fee

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
done.
clearning node...
clearing ir...?
REF_56(address) -> _trade_1.tigAsset
has variable
clearing ir...?
TMP_69(uint256) = _addMargin_1 (c)- _fee_1
has variable
[i] TMP_69 cleared
clearing ir...?
INTERNAL_CALL, Trading._handleDeposit(address,address,uint256,address,ITrading.ERC20PermitData,address)(REF_56,_marginAsset_1,TMP_69,_stableVault_1,_permitData_1 (-> []),_trader_1)
typecheckig node...
REF_56(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_56

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_69(uint256) = _addMargin_1 (c)- _fee_1
Function name: addToPosition
lnorm: u rnorm: u
Finance type key: (0, 13)
Func: sub
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 13, Left type: 0
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: TMP_69 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_69

Name: TMP_69 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
INTERNAL_CALL, Trading._handleDeposit(address,address,uint256,address,ITrading.ERC20PermitData,address)(REF_56,_marginAsset_1,TMP_69,_stableVault_1,_permitData_1 (-> []),_trader_1)
Internal call...
_handleDeposit
REF_56
_marginAsset
TMP_69
_stableVault
_permitData
_trader
Function: _handleDeposit
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Parameter length: 1
[[-1], [-1], 0, '_tigAsset', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], 1]
[[-1], [-1], 0, '_stableVault', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
added
xyz
Function name: _handleDeposit
Function Visibility: internal
clearning node...
clearing ir...?
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_116', '_tigAsset_1', 'REF_56'])
has variable
[i] _tigAsset cleared
clearing ir...?
_marginAsset_1(address) := ϕ(['REF_90', 'REF_20', '_marginAsset_1', '_marginAsset_1'])
has variable
[i] _marginAsset cleared
clearing ir...?
_margin_1(uint256) := ϕ(['TMP_69', '_addMargin_1', 'REF_91', 'REF_21'])
has variable
[i] _margin cleared
clearing ir...?
_stableVault_1(address) := ϕ(['_stableVault_1', 'REF_92', 'REF_22', '_stableVault_1'])
has variable
[i] _stableVault cleared
clearing ir...?
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
has variable
[i] _permitData cleared
clearing ir...?
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
has variable
[i] _trader cleared
typecheckig node...
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_116', '_tigAsset_1', 'REF_56'])
Function name: _handleDeposit
Phi
[i]Type for _tigAsset

Name: _tigAsset Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
_marginAsset_1(address) := ϕ(['REF_90', 'REF_20', '_marginAsset_1', '_marginAsset_1'])
Function name: _handleDeposit
Phi
[i]Type for _marginAsset

Name: _marginAsset Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _marginAsset
Fields: 
Finance Type: undef
done.
_margin_1(uint256) := ϕ(['TMP_69', '_addMargin_1', 'REF_91', 'REF_21'])
Function name: _handleDeposit
Phi
[i]Type for _margin

Name: _margin Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
_stableVault_1(address) := ϕ(['_stableVault_1', 'REF_92', 'REF_22', '_stableVault_1'])
Function name: _handleDeposit
Phi
[i]Type for _stableVault

Name: _stableVault Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _stableVault
Fields: 
Finance Type: undef
done.
_permitData_1 (-> [])(ITrading.ERC20PermitData) := ϕ(['_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])', '_permitData_1 (-> [])'])
Function name: _handleDeposit
Phi
[i]Type for _permitData

Name: _permitData Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_trader_1(address) := ϕ(['_trader_1', '_trader_1', '_trader_1', '_trader_1'])
Function name: _handleDeposit
Phi
[i]Type for _trader

Name: _trader Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _trader
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_254 = CONVERT _tigAsset_1 to IStable
has variable
[i] TMP_254 cleared
clearing ir...?
tigAsset_1(IStable) := TMP_254(IStable)
has variable
[i] tigAsset cleared
typecheckig node...
TMP_254 = CONVERT _tigAsset_1 to IStable
Function name: _handleDeposit

Name: _tigAsset Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_254 Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_254

Name: TMP_254 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
tigAsset_1(IStable) := TMP_254(IStable)
Function name: _handleDeposit
asgn

Name: TMP_254 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for tigAsset

Name: tigAsset Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
has variable
[i] TMP_255 cleared
clearing ir...?
CONDITION TMP_255
typecheckig node...
TMP_255(bool) = _tigAsset_1 != _marginAsset_1
Function name: _handleDeposit
[i]Type for TMP_255

Name: TMP_255 Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_255
Condition...
Conidtion: 
TMP_255
TMP_255
clearning node...
clearing ir...?
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
typecheckig node...
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['_trader_1', '_margin_1']  
High Call: burnFrom
func name:burnFrom
other func name:burnFrom
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_248(bool) -> _permitData_1 (-> []).usePermit
has variable
clearing ir...?
CONDITION REF_248
typecheckig node...
REF_248(bool) -> _permitData_1 (-> []).usePermit
Function name: _handleDeposit
MEMBER
_permitData
usePermit
_handleDeposit
_permitData Fields:
^^^
[i]Type for REF_248

Name: _permitData.usePermit Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _permitData.usePermit Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: usePermit Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION REF_248
Condition...
Conidtion: 
REF_248
REF_248
clearning node...
clearing ir...?
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
has variable
[i] TMP_256 cleared
clearing ir...?
TMP_257 = CONVERT this to address
has variable
[i] TMP_257 cleared
clearing ir...?
REF_250(uint256) -> _permitData_1 (-> []).amount
has variable
clearing ir...?
REF_251(uint256) -> _permitData_1 (-> []).deadline
has variable
clearing ir...?
REF_252(uint8) -> _permitData_1 (-> []).v
has variable
clearing ir...?
REF_253(bytes32) -> _permitData_1 (-> []).r
has variable
clearing ir...?
REF_254(bytes32) -> _permitData_1 (-> []).s
has variable
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
typecheckig node...
TMP_256 = CONVERT _marginAsset_1 to ERC20Permit
Function name: _handleDeposit

Name: _marginAsset Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _marginAsset
Fields: 
Finance Type: undef

Name: TMP_256 Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_256

Name: TMP_256 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _marginAsset
Fields: 
Finance Type: undef
done.
TMP_257 = CONVERT this to address
Function name: _handleDeposit
[i]Type for TMP_257

Name: TMP_257 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
REF_250(uint256) -> _permitData_1 (-> []).amount
Function name: _handleDeposit
MEMBER
_permitData
amount
_handleDeposit
_permitData Fields:
usePermit
^^^
[i]Type for REF_250

Name: _permitData.amount Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _permitData.amount Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: amount Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_251(uint256) -> _permitData_1 (-> []).deadline
Function name: _handleDeposit
MEMBER
_permitData
deadline
_handleDeposit
_permitData Fields:
usePermit
amount
^^^
[i]Type for REF_251

Name: _permitData.deadline Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _permitData.deadline Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: deadline Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_252(uint8) -> _permitData_1 (-> []).v
Function name: _handleDeposit
MEMBER
_permitData
v
_handleDeposit
_permitData Fields:
usePermit
amount
deadline
^^^
[i]Type for REF_252

Name: _permitData.v Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _permitData.v Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: v Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_253(bytes32) -> _permitData_1 (-> []).r
Function name: _handleDeposit
MEMBER
_permitData
r
_handleDeposit
_permitData Fields:
usePermit
amount
deadline
v
^^^
[i]Type for REF_253

Name: _permitData.r Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _permitData.r Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: r Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_254(bytes32) -> _permitData_1 (-> []).s
Function name: _handleDeposit
MEMBER
_permitData
s
_handleDeposit
_permitData Fields:
usePermit
amount
deadline
v
r
^^^
[i]Type for REF_254

Name: _permitData.s Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _permitData.s Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: s Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:TMP_256(ERC20Permit), function:permit, arguments:['_trader_1', 'TMP_257', 'REF_250', 'REF_251', 'REF_252', 'REF_253', 'REF_254']  
High Call: permit
func name:permit
other func name:permit
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_259 = CONVERT this to address
has variable
[i] TMP_259 cleared
clearing ir...?
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
has variable
[i] TMP_260 cleared
clearing ir...?
_balBefore_1(uint256) := TMP_260(uint256)
has variable
[i] _balBefore cleared
typecheckig node...
TMP_259 = CONVERT this to address
Function name: _handleDeposit
[i]Type for TMP_259

Name: TMP_259 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
TMP_260(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_259']  
Function name: _handleDeposit
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_260
hlc contract name: _tigAsset func_name: balanceOf
('c', [-1], [-1], 0, None, 0)
TMP_259
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, None, 0)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_260

Name: TMP_260 Function: _handleDeposit
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
_balBefore_1(uint256) := TMP_260(uint256)
Function name: _handleDeposit
asgn

Name: TMP_260 Function: _handleDeposit
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance

Name: _balBefore Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (0, -1)
Func: assign
Dest type: 0, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 0
Final dest type: 0
[i]Type for _balBefore

Name: _balBefore Function: _handleDeposit
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
clearning node...
clearing ir...?
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
has variable
[i] TMP_261 cleared
clearing ir...?
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
has variable
[i] TMP_262 cleared
clearing ir...?
TMP_263(uint256) = 18 (c)- TMP_262
has variable
[i] TMP_263 cleared
clearing ir...?
TMP_264(uint256) = 10 (c)** TMP_263
has variable
[i] TMP_264 cleared
clearing ir...?
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
has variable
[i] _marginDecMultiplier cleared
typecheckig node...
TMP_261 = CONVERT _marginAsset_1 to ExtendedIERC20
Function name: _handleDeposit

Name: _marginAsset Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _marginAsset
Fields: 
Finance Type: undef

Name: TMP_261 Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_261

Name: TMP_261 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _marginAsset
Fields: 
Finance Type: undef
done.
TMP_262(uint256) = HIGH_LEVEL_CALL, dest:TMP_261(ExtendedIERC20), function:decimals, arguments:[]  
Function name: _handleDeposit
High Call: decimals
func name:decimals
other func name:decimals
TMP_262
hlc contract name: _marginAsset func_name: decimals
wfc len: 0
COPIED
[i]Type for TMP_262

Name: TMP_262 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_263(uint256) = 18 (c)- TMP_262
Function name: _handleDeposit
val: 18
val: 18
lnorm: 0 rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: 18 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_262 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_262 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_263 Function: _handleDeposit
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_263

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_264(uint256) = 10 (c)** TMP_263
Function name: _handleDeposit
val: 10
1

Name: 10 Function: None
Num: -1
Den: -1
Norm: 1
LF: None
Fields: 
Finance Type: undef

Name: TMP_263 Function: _handleDeposit
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_264 Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
x:u
-1
val: 10
1
[i]Type for TMP_264

Name: TMP_264 Function: _handleDeposit
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
_marginDecMultiplier_1(uint256) := TMP_264(uint256)
Function name: _handleDeposit
asgn

Name: TMP_264 Function: _handleDeposit
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef

Name: _marginDecMultiplier Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _marginDecMultiplier

Name: _marginDecMultiplier Function: _handleDeposit
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_265 = CONVERT _marginAsset_1 to IERC20
has variable
[i] TMP_265 cleared
clearing ir...?
TMP_266 = CONVERT this to address
has variable
[i] TMP_266 cleared
clearing ir...?
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
has variable
[i] TMP_267 cleared
clearing ir...?
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
has variable
[i] TMP_268 cleared
typecheckig node...
TMP_265 = CONVERT _marginAsset_1 to IERC20
Function name: _handleDeposit

Name: _marginAsset Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _marginAsset
Fields: 
Finance Type: undef

Name: TMP_265 Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_265

Name: TMP_265 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _marginAsset
Fields: 
Finance Type: undef
done.
TMP_266 = CONVERT this to address
Function name: _handleDeposit
[i]Type for TMP_266

Name: TMP_266 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
TMP_267(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
Function name: _handleDeposit
lnorm: u rnorm: *
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_267 Function: _handleDeposit
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_267

Name: TMP_267 Function: _handleDeposit
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: net balance
done.
TMP_268(bool) = HIGH_LEVEL_CALL, dest:TMP_265(IERC20), function:transferFrom, arguments:['_trader_1', 'TMP_266', 'TMP_267']  
Function name: _handleDeposit
High Call: transferFrom
func name:transferFrom
other func name:transferFrom
TMP_268
[i]Type for TMP_268

Name: TMP_268 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_269 = CONVERT _marginAsset_1 to IERC20
has variable
[i] TMP_269 cleared
clearing ir...?
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
has variable
[i] TMP_271 cleared
clearing ir...?
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
has variable
[i] TMP_272 cleared
typecheckig node...
TMP_269 = CONVERT _marginAsset_1 to IERC20
Function name: _handleDeposit

Name: _marginAsset Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _marginAsset
Fields: 
Finance Type: undef

Name: TMP_269 Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_269

Name: TMP_269 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _marginAsset
Fields: 
Finance Type: undef
done.
TMP_271(uint256) := 115792089237316195423570985008687907853269984665640564039457584007913129639935(uint256)
Function name: _handleDeposit
asgn
val: 115792089237316195423570985008687907853269984665640564039457584007913129639935

Name: 115792089237316195423570985008687907853269984665640564039457584007913129639935 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_271 Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 115792089237316195423570985008687907853269984665640564039457584007913129639935
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for TMP_271

Name: TMP_271 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_272(bool) = HIGH_LEVEL_CALL, dest:TMP_269(IERC20), function:approve, arguments:['_stableVault_1', 'TMP_271']  
Function name: _handleDeposit
High Call: approve
func name:approve
other func name:approve
TMP_272
[i]Type for TMP_272

Name: TMP_272 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_273 = CONVERT this to address
has variable
[i] TMP_273 cleared
clearing ir...?
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
has variable
[i] TMP_274 cleared
clearing ir...?
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
has variable
[i] TMP_275 cleared
clearing ir...?
TMP_276(bool) = TMP_274 != TMP_275
has variable
[i] TMP_276 cleared
clearing ir...?
CONDITION TMP_276
typecheckig node...
TMP_273 = CONVERT this to address
Function name: _handleDeposit
[i]Type for TMP_273

Name: TMP_273 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
TMP_274(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_273']  
Function name: _handleDeposit
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_274
hlc contract name: _tigAsset func_name: balanceOf
('c', [-1], [-1], 0, None, 0)
TMP_273
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, None, 0)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_274

Name: TMP_274 Function: _handleDeposit
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
TMP_275(uint256) = _balBefore_1 (c)+ _margin_1
Function name: _handleDeposit

Name: TMP_275 Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: 0 rnorm: u
Finance type key: (0, 1)
Error with TMP_275 in function _handleDeposit
Error with: TMP_275 in function _handleDeposit
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f591c0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434fef220>]

Name: _margin Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_275 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_275

Name: TMP_275 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_276(bool) = TMP_274 != TMP_275
Function name: _handleDeposit
[i]Type for TMP_276

Name: TMP_276 Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_276
Condition...
Conidtion: 
TMP_276
TMP_276
clearning node...
clearing ir...?
TMP_277(int256) = 1 (c)+ 1
has variable
[i] TMP_277 cleared
clearing ir...?
a_1(int256) := TMP_277(int256)
has variable
[i] a cleared
typecheckig node...
TMP_277(int256) = 1 (c)+ 1
Function name: _handleDeposit
val: 1
val: 1

Name: TMP_277 Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
val: 1
val: 1
lnorm: 0 rnorm: 0
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 1

Name: 1 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_277 Function: _handleDeposit
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_277

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
a_1(int256) := TMP_277(int256)
Function name: _handleDeposit
asgn

Name: TMP_277 Function: _handleDeposit
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: a Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for a

Name: a Function: _handleDeposit
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_278 = CONVERT _stableVault_1 to IStableVault
has variable
[i] TMP_278 cleared
clearing ir...?
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
has variable
[i] TMP_279 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
typecheckig node...
TMP_278 = CONVERT _stableVault_1 to IStableVault
Function name: _handleDeposit

Name: _stableVault Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _stableVault
Fields: 
Finance Type: undef

Name: TMP_278 Function: _handleDeposit
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_278

Name: TMP_278 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: _stableVault
Fields: 
Finance Type: undef
done.
TMP_279(uint256) = _margin_1 (c)/ _marginDecMultiplier_1
Function name: _handleDeposit
lnorm: u rnorm: *
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_279 Function: _handleDeposit
Num: 
Den: 
Norm: *
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_279

Name: TMP_279 Function: _handleDeposit
Num: -1
Den: -1
Norm: *
LF: None
Fields: 
Finance Type: net balance
done.
HIGH_LEVEL_CALL, dest:TMP_278(IStableVault), function:deposit, arguments:['_marginAsset_1', 'TMP_279']  
High Call: deposit
func name:deposit
other func name:deposit
done.
clearning node...
clearing ir...?
TMP_281 = CONVERT this to address
has variable
[i] TMP_281 cleared
clearing ir...?
TMP_282 = CONVERT this to address
has variable
[i] TMP_282 cleared
clearing ir...?
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
has variable
[i] TMP_283 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
typecheckig node...
TMP_281 = CONVERT this to address
Function name: _handleDeposit
[i]Type for TMP_281

Name: TMP_281 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
TMP_282 = CONVERT this to address
Function name: _handleDeposit
[i]Type for TMP_282

Name: TMP_282 Function: _handleDeposit
Num: -1
Den: -1
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
TMP_283(uint256) = HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:balanceOf, arguments:['TMP_282']  
Function name: _handleDeposit
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_283
hlc contract name: _tigAsset func_name: balanceOf
('c', [-1], [-1], 0, None, 0)
TMP_282
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, None, 0)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_283

Name: TMP_283 Function: _handleDeposit
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
HIGH_LEVEL_CALL, dest:tigAsset_1(IStable), function:burnFrom, arguments:['TMP_281', 'TMP_283']  
High Call: burnFrom
func name:burnFrom
other func name:burnFrom
done.
WORKLIST iteration 0 for function call "_handleDeposit":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _handleDeposit
done.
clearning node...
clearing ir...?
HIGH_LEVEL_CALL, dest:position_33(IPosition), function:setAccInterest, arguments:['_id_1']  
clearing ir...?
position_34(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_33', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
clearing ir...?
tradingExtension_31(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_30', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
typecheckig node...
HIGH_LEVEL_CALL, dest:position_33(IPosition), function:setAccInterest, arguments:['_id_1']  
High Call: setAccInterest
func name:setAccInterest
other func name:setAccInterest
done.
position_34(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_33', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_31(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_30', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_75(bool) -> _trade_1.direction
has variable
clearing ir...?
CONDITION REF_75
typecheckig node...
REF_75(bool) -> _trade_1.direction
Function name: addToPosition
MEMBER
_trade
direction
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
^^^
[i]Type for REF_75

Name: _trade.direction Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.direction Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: direction Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION REF_75
Condition...
Conidtion: 
REF_75
REF_75
clearning node...
clearing ir...?
REF_77(uint256) -> _trade_1.asset
has variable
clearing ir...?
TUPLE_2(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_31(ITradingExtension), function:getVerifiedPrice, arguments:['REF_77', '_priceData_1 (-> [])', '_signature_1', '1']  
has variable
clearing ir...?
position_35(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56', 'position_34'])
has variable
clearing ir...?
tradingExtension_32(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_31', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
clearing ir...?
_price_1(uint256)= UNPACK TUPLE_2 index: 0 
has variable
[i] _price cleared
typecheckig node...
REF_77(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_2(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_31(ITradingExtension), function:getVerifiedPrice, arguments:['REF_77', '_priceData_1 (-> [])', '_signature_1', '1']  
Function name: addToPosition
High Call: getVerifiedPrice
func name:getVerifiedPrice
other func name:getVerifiedPrice
TUPLE_2
hlc contract name: TRADINGEXTENSION func_name: getVerifiedPrice
('c', [-1], [-1], 0, None, -1)
REF_77
_priceData
_signature
1
('c', [-1], [-1], 0, None, -1)
REF_77
_priceData
_signature
1
wfc len: 2
COPIED
[i]Type for TUPLE_2

Name: TUPLE_2 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
position_35(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56', 'position_34'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_32(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_31', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_price_1(uint256)= UNPACK TUPLE_2 index: 0 
Function name: addToPosition
Reading tuple TUPLE_2 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _price

Name: _price Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_79(uint256) -> _trade_1.asset
has variable
clearing ir...?
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_31(ITradingExtension), function:getVerifiedPrice, arguments:['REF_79', '_priceData_1 (-> [])', '_signature_1', '2']  
has variable
clearing ir...?
position_36(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_35', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
clearing ir...?
tradingExtension_33(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_32', 'tradingExtension_14'])
has variable
clearing ir...?
_price_2(uint256)= UNPACK TUPLE_3 index: 0 
has variable
[i] _price cleared
typecheckig node...
REF_79(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_31(ITradingExtension), function:getVerifiedPrice, arguments:['REF_79', '_priceData_1 (-> [])', '_signature_1', '2']  
Function name: addToPosition
High Call: getVerifiedPrice
func name:getVerifiedPrice
other func name:getVerifiedPrice
TUPLE_3
hlc contract name: TRADINGEXTENSION func_name: getVerifiedPrice
('c', [-1], [-1], 0, None, -1)
REF_79
_priceData
_signature
2
('c', [-1], [-1], 0, None, -1)
REF_79
_priceData
_signature
2
wfc len: 2
COPIED
[i]Type for TUPLE_3

Name: TUPLE_3 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
position_36(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_35', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_33(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_32', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_price_2(uint256)= UNPACK TUPLE_3 index: 0 
Function name: addToPosition
Reading tuple TUPLE_3 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _price

Name: _price Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_price_3(uint256) := ϕ(['_price_1', '_price_2'])
has variable
[i] _price cleared
typecheckig node...
_price_3(uint256) := ϕ(['_price_1', '_price_2'])
Function name: addToPosition
Phi
[i]Type for _price

Name: _price Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_72(uint256) = _addMargin_1 (c)- _fee_1
has variable
[i] TMP_72 cleared
clearing ir...?
REF_58(uint256) -> _trade_1.leverage
has variable
clearing ir...?
TMP_73(uint256) = TMP_72 (c)* REF_58
has variable
[i] TMP_73 cleared
clearing ir...?
TMP_74(uint256) = TMP_73 (c)/ 1000000000000000000
has variable
[i] TMP_74 cleared
clearing ir...?
_positionSize_1(uint256) := TMP_74(uint256)
has variable
[i] _positionSize cleared
typecheckig node...
TMP_72(uint256) = _addMargin_1 (c)- _fee_1
Function name: addToPosition
lnorm: u rnorm: u
Finance type key: (0, 13)
Func: sub
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 13, Left type: 0
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: TMP_72 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_72

Name: TMP_72 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
REF_58(uint256) -> _trade_1.leverage
Function name: addToPosition
MEMBER
_trade
leverage
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
^^^

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_58

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_73(uint256) = TMP_72 (c)* REF_58
Function name: addToPosition
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_73 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_73

Name: TMP_73 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_74(uint256) = TMP_73 (c)/ 1000000000000000000
Function name: addToPosition
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_74 Function: addToPosition
Num: 
Den: 
Norm: -18
LF: None
Fields: 
Finance Type: net balance
val: 1000000000000000000
18
[i]Type for TMP_74

Name: TMP_74 Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
done.
_positionSize_1(uint256) := TMP_74(uint256)
Function name: addToPosition
asgn

Name: TMP_74 Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance

Name: _positionSize Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for _positionSize

Name: _positionSize Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
done.
clearning node...
clearing ir...?
REF_59(bool) -> _trade_1.direction
has variable
clearing ir...?
CONDITION REF_59
typecheckig node...
REF_59(bool) -> _trade_1.direction
Function name: addToPosition
MEMBER
_trade
direction
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
^^^

Name: direction Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_59

Name: _trade.direction Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.direction Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: direction Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION REF_59
Condition...
Conidtion: 
REF_59
REF_59
clearning node...
clearing ir...?
REF_61(uint256) -> _trade_1.asset
has variable
clearing ir...?
REF_62(address) -> _trade_1.tigAsset
has variable
clearing ir...?
HIGH_LEVEL_CALL, dest:tradingExtension_33(ITradingExtension), function:modifyLongOi, arguments:['REF_61', 'REF_62', 'True', '_positionSize_1']  
clearing ir...?
position_38(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_37', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
clearing ir...?
tradingExtension_35(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_66', 'tradingExtension_13', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_75', 'tradingExtension_82', 'tradingExtension_78', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_60'])
has variable
typecheckig node...
REF_61(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_61

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_62(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_62

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:tradingExtension_33(ITradingExtension), function:modifyLongOi, arguments:['REF_61', 'REF_62', 'True', '_positionSize_1']  
High Call: modifyLongOi
func name:modifyLongOi
other func name:modifyLongOi
done.
position_38(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_37', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_35(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_66', 'tradingExtension_13', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_75', 'tradingExtension_82', 'tradingExtension_78', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_60'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_64(uint256) -> _trade_1.asset
has variable
clearing ir...?
REF_65(address) -> _trade_1.tigAsset
has variable
clearing ir...?
HIGH_LEVEL_CALL, dest:tradingExtension_33(ITradingExtension), function:modifyShortOi, arguments:['REF_64', 'REF_65', 'True', '_positionSize_1']  
clearing ir...?
position_37(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_36', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
clearing ir...?
tradingExtension_34(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_33', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
typecheckig node...
REF_64(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_64

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_65(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_65

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:tradingExtension_33(ITradingExtension), function:modifyShortOi, arguments:['REF_64', 'REF_65', 'True', '_positionSize_1']  
High Call: modifyShortOi
func name:modifyShortOi
other func name:modifyShortOi
done.
position_37(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_36', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_34(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_33', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
clearning node...
typecheckig node...
clearning node...
clearing ir...?
REF_66(uint256) -> _trade_1.asset
has variable
clearing ir...?
REF_67(address) -> _trade_1.tigAsset
has variable
clearing ir...?
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_66,REF_67)
clearing ir...?
position_39(IPosition) := ϕ(['position_111'])
has variable
typecheckig node...
REF_66(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_66

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_67(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_67

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_66,REF_67)
Internal call...
_updateFunding
REF_66
REF_67
Function: _updateFunding
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
-100
Add new
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Parameter length: 1
[[1], [-1], 0, None, [], -1]
[[-1], [-1], 0, '_tigAsset', [], -1]
added
xyz
Function name: _updateFunding
Function Visibility: internal
clearning node...
clearing ir...?
_asset_1(uint256) := ϕ(['REF_220', 'REF_189', 'REF_38', 'REF_66', 'REF_232'])
has variable
[i] _asset cleared
clearing ir...?
_tigAsset_1(address) := ϕ(['REF_67', 'REF_233', 'REF_221', '_tigAsset_1', 'REF_190'])
has variable
[i] _tigAsset cleared
clearing ir...?
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_6', 'vaultFundingPercent_5'])
has variable
clearing ir...?
pairsContract_18(IPairsContract) := ϕ(['pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_13'])
has variable
clearing ir...?
position_107(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_0', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
typecheckig node...
_asset_1(uint256) := ϕ(['REF_220', 'REF_189', 'REF_38', 'REF_66', 'REF_232'])
Function name: _updateFunding
Phi
[i]Type for _asset

Name: _asset Function: _updateFunding
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tigAsset_1(address) := ϕ(['REF_67', 'REF_233', 'REF_221', '_tigAsset_1', 'REF_190'])
Function name: _updateFunding
Phi
[i]Type for _tigAsset

Name: _tigAsset Function: _updateFunding
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
vaultFundingPercent_1(uint256) := ϕ(['vaultFundingPercent_0', 'vaultFundingPercent_6', 'vaultFundingPercent_5'])
Function name: _updateFunding
Phi
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairsContract_18(IPairsContract) := ϕ(['pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_13'])
Function name: _updateFunding
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
position_107(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_0', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: _updateFunding
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
has variable
[i] TMP_395 cleared
clearing ir...?
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_6', 'vaultFundingPercent_5', 'vaultFundingPercent_1'])
has variable
clearing ir...?
pairsContract_19(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17', 'pairsContract_1', 'pairsContract_13'])
has variable
clearing ir...?
position_108(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_107', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
clearing ir...?
REF_327(uint256) -> TMP_395.longOi
has variable
clearing ir...?
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
has variable
[i] TMP_396 cleared
clearing ir...?
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_2', 'vaultFundingPercent_6', 'vaultFundingPercent_5'])
has variable
clearing ir...?
pairsContract_20(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_19', 'pairsContract_13'])
has variable
clearing ir...?
position_109(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_108', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
clearing ir...?
REF_329(uint256) -> TMP_396.shortOi
has variable
clearing ir...?
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
has variable
[i] TMP_397 cleared
clearing ir...?
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_6', 'vaultFundingPercent_5'])
has variable
clearing ir...?
pairsContract_21(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_20', 'pairsContract_13'])
has variable
clearing ir...?
position_110(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
clearing ir...?
REF_331(uint256) -> TMP_397.baseFundingRate
has variable
clearing ir...?
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
clearing ir...?
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_6', 'vaultFundingPercent_5', 'vaultFundingPercent_4'])
has variable
clearing ir...?
pairsContract_22(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_21', 'pairsContract_13'])
has variable
clearing ir...?
position_111(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_110', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
typecheckig node...
TMP_395(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_18(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
Function name: _updateFunding
High Call: idToOi
func name:idToOi
other func name:idToOi
TMP_395
hlc contract name: PAIRS func_name: idToOi
wfc len: 0
COPIED
[i]Type for TMP_395

Name: TMP_395 Function: _updateFunding
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaultFundingPercent_2(uint256) := ϕ(['vaultFundingPercent_6', 'vaultFundingPercent_5', 'vaultFundingPercent_1'])
Function name: _updateFunding
Phi
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairsContract_19(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_18', 'pairsContract_17', 'pairsContract_1', 'pairsContract_13'])
Function name: _updateFunding
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
position_108(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_107', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: _updateFunding
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
REF_327(uint256) -> TMP_395.longOi
Function name: _updateFunding
MEMBER
TMP_395
longOi
_updateFunding
TMP_395 Fields:
^^^
[i]Type for REF_327

Name: TMP_395.longOi Function: _updateFunding
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_395.longOi Function: _updateFunding
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: longOi Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_396(IPairsContract.OpenInterest) = HIGH_LEVEL_CALL, dest:pairsContract_19(IPairsContract), function:idToOi, arguments:['_asset_1', '_tigAsset_1']  
Function name: _updateFunding
High Call: idToOi
func name:idToOi
other func name:idToOi
TMP_396
hlc contract name: PAIRS func_name: idToOi
wfc len: 0
COPIED
[i]Type for TMP_396

Name: TMP_396 Function: _updateFunding
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaultFundingPercent_3(uint256) := ϕ(['vaultFundingPercent_2', 'vaultFundingPercent_6', 'vaultFundingPercent_5'])
Function name: _updateFunding
Phi
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairsContract_20(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_19', 'pairsContract_13'])
Function name: _updateFunding
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
position_109(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_108', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: _updateFunding
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
REF_329(uint256) -> TMP_396.shortOi
Function name: _updateFunding
MEMBER
TMP_396
shortOi
_updateFunding
TMP_396 Fields:
^^^
[i]Type for REF_329

Name: TMP_396.shortOi Function: _updateFunding
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_396.shortOi Function: _updateFunding
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: shortOi Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_397(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_20(IPairsContract), function:idToAsset, arguments:['_asset_1']  
Function name: _updateFunding
High Call: idToAsset
func name:idToAsset
other func name:idToAsset
TMP_397
hlc contract name: PAIRS func_name: idToAsset
wfc len: 0
COPIED
[i]Type for TMP_397

Name: TMP_397 Function: _updateFunding
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
vaultFundingPercent_4(uint256) := ϕ(['vaultFundingPercent_3', 'vaultFundingPercent_6', 'vaultFundingPercent_5'])
Function name: _updateFunding
Phi
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairsContract_21(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_20', 'pairsContract_13'])
Function name: _updateFunding
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
position_110(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_109', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: _updateFunding
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
REF_331(uint256) -> TMP_397.baseFundingRate
Function name: _updateFunding
MEMBER
TMP_397
baseFundingRate
_updateFunding
TMP_397 Fields:
^^^
[i]Type for REF_331

Name: TMP_397.baseFundingRate Function: _updateFunding
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_397.baseFundingRate Function: _updateFunding
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: baseFundingRate Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:position_110(IPosition), function:updateFunding, arguments:['_asset_1', '_tigAsset_1', 'REF_327', 'REF_329', 'REF_331', 'vaultFundingPercent_4']  
High Call: updateFunding
func name:updateFunding
other func name:updateFunding
done.
vaultFundingPercent_5(uint256) := ϕ(['vaultFundingPercent_6', 'vaultFundingPercent_5', 'vaultFundingPercent_4'])
Function name: _updateFunding
Phi
[i]Type for vaultFundingPercent

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
pairsContract_22(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_21', 'pairsContract_13'])
Function name: _updateFunding
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
position_111(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_110', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: _updateFunding
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "_updateFunding":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _updateFunding
done.
position_39(IPosition) := ϕ(['position_111'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_addMargin_2(uint256) = _addMargin_1 - _fee_1
has variable
[i] _addMargin cleared
typecheckig node...
_addMargin_2(uint256) = _addMargin_1 - _fee_1
Function name: addToPosition
lnorm: u rnorm: u
Finance type key: (0, 13)
Func: sub
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 13, Left type: 0
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)

Name: _addMargin Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for _addMargin

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
clearning node...
clearing ir...?
REF_68(uint256) -> _trade_1.margin
has variable
clearing ir...?
TMP_78(uint256) = REF_68 + _addMargin_2
has variable
[i] TMP_78 cleared
clearing ir...?
_newMargin_1(uint256) := TMP_78(uint256)
has variable
[i] _newMargin cleared
typecheckig node...
REF_68(uint256) -> _trade_1.margin
Function name: addToPosition
MEMBER
_trade
margin
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
^^^

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_68

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_78(uint256) = REF_68 + _addMargin_2
Function name: addToPosition

Name: TMP_78 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: -1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_78 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_78

Name: TMP_78 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
_newMargin_1(uint256) := TMP_78(uint256)
Function name: addToPosition
asgn

Name: TMP_78 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: _newMargin Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for _newMargin

Name: _newMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
clearning node...
clearing ir...?
REF_69(uint256) -> _trade_1.price
has variable
clearing ir...?
REF_70(uint256) -> _trade_1.margin
has variable
clearing ir...?
TMP_79(uint256) = REF_69 * REF_70
has variable
[i] TMP_79 cleared
clearing ir...?
TMP_80(uint256) = TMP_79 / _newMargin_1
has variable
[i] TMP_80 cleared
clearing ir...?
TMP_81(uint256) = _price_3 * _addMargin_2
has variable
[i] TMP_81 cleared
clearing ir...?
TMP_82(uint256) = TMP_81 / _newMargin_1
has variable
[i] TMP_82 cleared
clearing ir...?
TMP_83(uint256) = TMP_80 + TMP_82
has variable
[i] TMP_83 cleared
clearing ir...?
_newPrice_1(uint256) := TMP_83(uint256)
has variable
[i] _newPrice cleared
typecheckig node...
REF_69(uint256) -> _trade_1.price
Function name: addToPosition
MEMBER
_trade
price
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
^^^
[i]Type for REF_69

Name: _trade.price Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.price Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: price Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_70(uint256) -> _trade_1.margin
Function name: addToPosition
MEMBER
_trade
margin
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
^^^

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_70

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_79(uint256) = REF_69 * REF_70
Function name: addToPosition
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_79 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_79

Name: TMP_79 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
TMP_79(uint256) = REF_69 * REF_70
XXXXX
TMP_80(uint256) = TMP_79 / _newMargin_1
Function name: addToPosition
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: -1
Final dest type: 1

Name: TMP_80 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_80

Name: TMP_80 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_81(uint256) = _price_3 * _addMargin_2
Function name: addToPosition
testing mul...
lnorm: 0 rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: -1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_81 Function: addToPosition
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_81

Name: TMP_81 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
done.
TMP_82(uint256) = TMP_81 / _newMargin_1
Function name: addToPosition
lnorm: 0 rnorm: u
Finance type key: (1, 1)
Func: div
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: TMP_82 Function: addToPosition
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_82

Name: TMP_82 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
done.
TMP_83(uint256) = TMP_80 + TMP_82
Function name: addToPosition

Name: TMP_83 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: 0
Finance type key: (1, 1)
Func: add
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: TMP_82 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance

Name: TMP_83 Function: addToPosition
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_83

Name: TMP_83 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
done.
_newPrice_1(uint256) := TMP_83(uint256)
Function name: addToPosition
asgn

Name: TMP_83 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance

Name: _newPrice Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for _newPrice

Name: _newPrice Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
done.
clearning node...
clearing ir...?
REF_72(uint256) -> _trade_1.id
has variable
clearing ir...?
HIGH_LEVEL_CALL, dest:position_39(IPosition), function:addToPosition, arguments:['REF_72', '_newMargin_1', '_newPrice_1']  
clearing ir...?
position_40(IPosition) := ϕ(['position_39', 'position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
has variable
typecheckig node...
REF_72(uint256) -> _trade_1.id
Function name: addToPosition
MEMBER
_trade
id
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
^^^
[i]Type for REF_72

Name: _trade.id Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.id Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: id Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:position_39(IPosition), function:addToPosition, arguments:['REF_72', '_newMargin_1', '_newPrice_1']  
High Call: addToPosition
func name:addToPosition
other func name:addToPosition
done.
position_40(IPosition) := ϕ(['position_39', 'position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_73(uint256) -> _trade_1.id
has variable
clearing ir...?
REF_74(address) -> _trade_1.trader
has variable
clearing ir...?
Emit AddToPosition(REF_73,_newMargin_1,_newPrice_1,REF_74)
typecheckig node...
REF_73(uint256) -> _trade_1.id
Function name: addToPosition
MEMBER
_trade
id
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
^^^

Name: id Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_73

Name: _trade.id Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.id Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: id Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_74(address) -> _trade_1.trader
Function name: addToPosition
MEMBER
_trade
trader
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
^^^
[i]Type for REF_74

Name: _trade.trader Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.trader Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: trader Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
Emit AddToPosition(REF_73,_newMargin_1,_newPrice_1,REF_74)
WORKLIST iteration 0 for function call "addToPosition":
 New undefined nodes- 2
 Old undefined nodes- 0
typecheckig node...
position_25(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_0', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_22(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
Internal call...
_validateProxy
_trader
Function: _validateProxy
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
typecheckig node...
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
Internal call...
_checkOwner
_id
_trader
Function: _checkOwner
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0
done.
position_27(IPosition) := ϕ(['position_113'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(_id_1,True)
Internal call...
_checkDelay
_id
True
Function: _checkDelay
ic
val: True
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, None, [], -1]
0
done.
typecheckig node...
TMP_60(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_28(IPosition), function:trades, arguments:['_id_1']  
Function name: addToPosition
High Call: trades
func name:trades
other func name:trades
TMP_60
hlc contract name: POSITION func_name: trades
wfc len: 0
COPIED
[i]Type for TMP_60

Name: TMP_60 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
position_29(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_28', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_26(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_25', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_trade_1(IPosition.Trade) := TMP_60(IPosition.Trade)
Function name: addToPosition
asgn

Name: TMP_60 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: asset, tigAsset, margin, leverage, orderType, direction, price, id, trader
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _trade

Name: _trade Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: asset, tigAsset, margin, leverage, orderType, direction, price, id, trader
Finance Type: undef
done.
typecheckig node...
REF_48(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_48

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_49(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_49

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
REF_50(uint256) -> _trade_1.margin
Function name: addToPosition
MEMBER
_trade
margin
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_50

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_61(uint256) = REF_50 (c)+ _addMargin_1
Function name: addToPosition

Name: TMP_61 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: raw balance
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: -1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_61 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_61

Name: TMP_61 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
REF_51(uint256) -> _trade_1.leverage
Function name: addToPosition
MEMBER
_trade
leverage
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_51

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:tradingExtension_26(ITradingExtension), function:validateTrade, arguments:['REF_48', 'REF_49', 'TMP_61', 'REF_51']  
High Call: validateTrade
func name:validateTrade
other func name:validateTrade
done.
position_30(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_29', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_27(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_26', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, Trading._checkVault(address,address)(_stableVault_1,_marginAsset_1)
Internal call...
_checkVault
_stableVault
_marginAsset
Function: _checkVault
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, '_stableVault', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, '_stableVault', [], -1]
[[-1], [-1], 'u', None, [], -1]
0
done.
typecheckig node...
REF_52(uint256) -> _trade_1.orderType
Function name: addToPosition
MEMBER
_trade
orderType
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: orderType Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_52

Name: _trade.orderType Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.orderType Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: orderType Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_64(bool) = REF_52 != 0
Function name: addToPosition
[i]Type for TMP_64

Name: TMP_64 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_64
Condition...
Conidtion: 
TMP_64
TMP_64
typecheckig node...
TMP_65(None) = SOLIDITY_CALL revert(string)(4)
[i]Type for TMP_65

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_53(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_53

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_54(uint256) -> _trade_1.leverage
Function name: addToPosition
MEMBER
_trade
leverage
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_54

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_66(uint256) = _addMargin_1 (c)* REF_54
Function name: addToPosition
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_66 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_66

Name: TMP_66 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_67(uint256) = TMP_66 (c)/ 1000000000000000000
Function name: addToPosition
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_67 Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
val: 1000000000000000000
18
[i]Type for TMP_67

Name: TMP_67 Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
done.
REF_55(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_55

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_68(uint256) = INTERNAL_CALL, Trading._handleOpenFees(uint256,uint256,address,address,bool)(REF_53,TMP_67,_trader_1,REF_55,False)
Function name: addToPosition
Internal call...
_handleOpenFees
REF_53
TMP_67
_trader
REF_55
False
Function: _handleOpenFees
ic
val: False
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: -18
    link: None
    fields: []
    fintype: 1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: -18
    link: None
    fields: []
    fintype: 0
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[1], [-1], 0, None, [], -1]
cur_param: [[-1], [-1], -18, None, [], 0]
-100
Parameter length: 1
[[1], [-1], 0, None, [], -1]
[[-1], [-1], -18, None, [], 0]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, '_tigAsset', [], -1]
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _handleOpenFees
Function Visibility: internal
clearning node...
clearing ir...?
_asset_1(uint256) := ϕ(['REF_16', 'REF_149', 'REF_53'])
has variable
[i] _asset cleared
clearing ir...?
_positionSize_1(uint256) := ϕ(['TMP_155', 'TMP_67', 'TMP_34'])
has variable
[i] _positionSize cleared
clearing ir...?
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
has variable
[i] _trader cleared
clearing ir...?
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_153', 'REF_55'])
has variable
[i] _tigAsset cleared
clearing ir...?
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
openFees_1(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_0', 'openFees_2'])
has variable
clearing ir...?
pairsContract_14(IPairsContract) := ϕ(['pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_13'])
has variable
clearing ir...?
gov_2(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_0', 'gov_19'])
has variable
clearing ir...?
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
typecheckig node...
_asset_1(uint256) := ϕ(['REF_16', 'REF_149', 'REF_53'])
Function name: _handleOpenFees
Phi
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_positionSize_1(uint256) := ϕ(['TMP_155', 'TMP_67', 'TMP_34'])
Function name: _handleOpenFees
Phi
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
Function name: _handleOpenFees
Phi
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _trader
Fields: 
Finance Type: undef
done.
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_153', 'REF_55'])
Function name: _handleOpenFees
Phi
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
openFees_1(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_0', 'openFees_2'])
Function name: _handleOpenFees
Phi
[i]Type for openFees

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
pairsContract_14(IPairsContract) := ϕ(['pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_13'])
Function name: _handleOpenFees
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
gov_2(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_0', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
has variable
[i] TMP_303 cleared
clearing ir...?
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_1', 'openFees_2'])
has variable
clearing ir...?
pairsContract_15(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_14', 'pairsContract_13'])
has variable
clearing ir...?
gov_3(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_2', 'gov_19'])
has variable
clearing ir...?
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_76'])
has variable
clearing ir...?
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
has variable
[i] asset cleared
typecheckig node...
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
Function name: _handleOpenFees
High Call: idToAsset
func name:idToAsset
other func name:idToAsset
TMP_303
hlc contract name: PAIRS func_name: idToAsset
wfc len: 0
COPIED
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_1', 'openFees_2'])
Function name: _handleOpenFees
Phi
[i]Type for openFees

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
pairsContract_15(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_14', 'pairsContract_13'])
Function name: _handleOpenFees
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
gov_3(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_2', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_76'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Function name: _handleOpenFees
asgn

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: feeMultiplier
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: feeMultiplier
Finance Type: undef
done.
clearning node...
clearing ir...?
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
has variable
[i] _fees cleared
typecheckig node...
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Function name: _handleOpenFees
asgn

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_275(uint256) -> _fees_1.daoFees
has variable
clearing ir...?
REF_276(uint256) -> _fees_1.daoFees
has variable
clearing ir...?
REF_277(uint256) -> asset_1.feeMultiplier
has variable
clearing ir...?
TMP_304(uint256) = REF_276 * REF_277
has variable
[i] TMP_304 cleared
clearing ir...?
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
has variable
[i] TMP_305 cleared
clearing ir...?
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
has variable
[i] _fees cleared
clearing ir...?
REF_275 (->_fees_2) := TMP_305(uint256)
has variable
typecheckig node...
REF_275(uint256) -> _fees_1.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_276(uint256) -> _fees_1.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_277(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_277

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_304(uint256) = REF_276 * REF_277
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_304 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 110
Final dest type: 110

Name: TMP_305 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_275 (->_fees_2) := TMP_305(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
clearning node...
clearing ir...?
REF_278(uint256) -> _fees_2.burnFees
has variable
clearing ir...?
REF_279(uint256) -> _fees_2.burnFees
has variable
clearing ir...?
REF_280(uint256) -> asset_1.feeMultiplier
has variable
clearing ir...?
TMP_306(uint256) = REF_279 * REF_280
has variable
[i] TMP_306 cleared
clearing ir...?
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
has variable
[i] TMP_307 cleared
clearing ir...?
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
has variable
[i] _fees cleared
clearing ir...?
REF_278 (->_fees_3) := TMP_307(uint256)
has variable
typecheckig node...
REF_278(uint256) -> _fees_2.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_279(uint256) -> _fees_2.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_280(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_280

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_306(uint256) = REF_279 * REF_280
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_306 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 110
Final dest type: 110

Name: TMP_307 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_278 (->_fees_3) := TMP_307(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
clearning node...
clearing ir...?
REF_281(uint256) -> _fees_3.referralFees
has variable
clearing ir...?
REF_282(uint256) -> _fees_3.referralFees
has variable
clearing ir...?
REF_283(uint256) -> asset_1.feeMultiplier
has variable
clearing ir...?
TMP_308(uint256) = REF_282 * REF_283
has variable
[i] TMP_308 cleared
clearing ir...?
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
has variable
[i] TMP_309 cleared
clearing ir...?
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
has variable
[i] _fees cleared
clearing ir...?
REF_281 (->_fees_4) := TMP_309(uint256)
has variable
typecheckig node...
REF_281(uint256) -> _fees_3.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_281

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_282(uint256) -> _fees_3.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_282

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_283(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_283

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_308(uint256) = REF_282 * REF_283
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_308 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_309 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_281 (->_fees_4) := TMP_309(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_284(uint256) -> _fees_4.botFees
has variable
clearing ir...?
REF_285(uint256) -> _fees_4.botFees
has variable
clearing ir...?
REF_286(uint256) -> asset_1.feeMultiplier
has variable
clearing ir...?
TMP_310(uint256) = REF_285 * REF_286
has variable
[i] TMP_310 cleared
clearing ir...?
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
has variable
[i] TMP_311 cleared
clearing ir...?
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
has variable
[i] _fees cleared
clearing ir...?
REF_284 (->_fees_5) := TMP_311(uint256)
has variable
typecheckig node...
REF_284(uint256) -> _fees_4.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_284

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_285(uint256) -> _fees_4.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_285

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_286(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_286

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_310(uint256) = REF_285 * REF_286
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_311 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_284 (->_fees_5) := TMP_311(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
has variable
[i] TMP_312 cleared
clearing ir...?
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
gov_4(IGovNFT) := ϕ(['gov_3', 'gov_10', 'gov_1', 'gov_19'])
has variable
clearing ir...?
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_77', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
clearing ir...?
_referrer_1(address) := TMP_312(address)
has variable
[i] _referrer cleared
typecheckig node...
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
Function name: _handleOpenFees
High Call: getRef
func name:getRef
other func name:getRef
TMP_312
hlc contract name: TRADINGEXTENSION func_name: getRef
wfc len: 0
COPIED
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_4(IGovNFT) := ϕ(['gov_3', 'gov_10', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_77', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_referrer_1(address) := TMP_312(address)
Function name: _handleOpenFees
asgn

Name: TMP_312 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _referrer Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_313 = CONVERT 0 to address
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(bool) = _referrer_1 != TMP_313
has variable
[i] TMP_314 cleared
clearing ir...?
CONDITION TMP_314
typecheckig node...
TMP_313 = CONVERT 0 to address
Function name: _handleOpenFees
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_313 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = _referrer_1 != TMP_313
Function name: _handleOpenFees
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
clearning node...
clearing ir...?
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
has variable
[i] _fees cleared
typecheckig node...
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION _isBot_1
typecheckig node...
CONDITION _isBot_1
Condition...
Conidtion: 
_isBot_1
_isBot_1
clearning node...
clearing ir...?
REF_298(uint256) -> _fees_7.botFees
has variable
clearing ir...?
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
has variable
[i] _fees cleared
clearing ir...?
REF_298 (->_fees_8) := 0(uint256)
has variable
typecheckig node...
REF_298(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_298

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_298 (->_fees_8) := 0(uint256)
Function name: _handleOpenFees
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_315 = CONVERT _tigAsset_1 to IStable
has variable
[i] TMP_315 cleared
clearing ir...?
REF_289(uint256) -> _fees_5.referralFees
has variable
clearing ir...?
TMP_316(uint256) = _positionSize_1 * REF_289
has variable
[i] TMP_316 cleared
clearing ir...?
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
has variable
[i] TMP_317 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
clearing ir...?
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
gov_5(IGovNFT) := ϕ(['gov_10', 'gov_4', 'gov_1', 'gov_19'])
has variable
typecheckig node...
TMP_315 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_315 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
REF_289(uint256) -> _fees_5.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_289

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_316(uint256) = _positionSize_1 * REF_289
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_316 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_317 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_5(IGovNFT) := ϕ(['gov_10', 'gov_4', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_321 = CONVERT _tigAsset_1 to IStable
has variable
[i] TMP_321 cleared
clearing ir...?
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
has variable
[i] TMP_322 cleared
clearing ir...?
REF_294(uint256) -> _fees_7.botFees
has variable
clearing ir...?
TMP_323(uint256) = _positionSize_1 * REF_294
has variable
[i] TMP_323 cleared
clearing ir...?
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
has variable
[i] TMP_324 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
clearing ir...?
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
gov_7(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_6', 'gov_19'])
has variable
typecheckig node...
TMP_321 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_321 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
Function name: _handleOpenFees
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_3 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_322 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_294(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_294

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_323(uint256) = _positionSize_1 * REF_294
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_323 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_324 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_7(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_6', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
has variable
[i] _fees cleared
typecheckig node...
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_290(uint256) -> _fees_5.daoFees
has variable
clearing ir...?
REF_291(uint256) -> _fees_5.daoFees
has variable
clearing ir...?
REF_292(uint256) -> _fees_5.referralFees
has variable
clearing ir...?
TMP_319(uint256) = REF_292 * 2
has variable
[i] TMP_319 cleared
clearing ir...?
TMP_320(uint256) = REF_291 - TMP_319
has variable
[i] TMP_320 cleared
clearing ir...?
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
has variable
[i] _fees cleared
clearing ir...?
REF_290 (->_fees_6) := TMP_320(uint256)
has variable
typecheckig node...
REF_290(uint256) -> _fees_5.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_291(uint256) -> _fees_5.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_292(uint256) -> _fees_5.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_292

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_319(uint256) = REF_292 * 2
Function name: _handleOpenFees
testing mul...
val: 2
val: 2
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 2

Name: 2 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_319 Function: _handleOpenFees
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_320(uint256) = REF_291 - TMP_319
Function name: _handleOpenFees
lnorm: u rnorm: 0
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_320 Function: _handleOpenFees
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_290 (->_fees_6) := TMP_320(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
clearning node...
clearing ir...?
REF_299(uint256) -> _fees_10.daoFees
has variable
clearing ir...?
TMP_327(uint256) = _positionSize_1 * REF_299
has variable
[i] TMP_327 cleared
clearing ir...?
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
has variable
[i] TMP_328 cleared
clearing ir...?
_daoFeesPaid_1(uint256) := TMP_328(uint256)
has variable
[i] _daoFeesPaid cleared
typecheckig node...
REF_299(uint256) -> _fees_10.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_327(uint256) = _positionSize_1 * REF_299
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (1, 10)
Error with TMP_327 in function _handleOpenFees
Error with: TMP_327 in function _handleOpenFees
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f591c0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434fef220>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f4ea90>]

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_328 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _daoFeesPaid Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_295(uint256) -> _fees_7.daoFees
has variable
clearing ir...?
REF_296(uint256) -> _fees_7.daoFees
has variable
clearing ir...?
REF_297(uint256) -> _fees_7.botFees
has variable
clearing ir...?
TMP_326(uint256) = REF_296 - REF_297
has variable
[i] TMP_326 cleared
clearing ir...?
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
has variable
[i] _fees cleared
clearing ir...?
REF_295 (->_fees_9) := TMP_326(uint256)
has variable
typecheckig node...
REF_295(uint256) -> _fees_7.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_296(uint256) -> _fees_7.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_297(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_297

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_326(uint256) = REF_296 - REF_297
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_326 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_295 (->_fees_9) := TMP_326(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
clearning node...
clearing ir...?
REF_300(uint256) -> _fees_10.burnFees
has variable
clearing ir...?
REF_301(uint256) -> _fees_10.botFees
has variable
clearing ir...?
TMP_329(uint256) = REF_300 + REF_301
has variable
[i] TMP_329 cleared
clearing ir...?
TMP_330(uint256) = _positionSize_1 * TMP_329
has variable
[i] TMP_330 cleared
clearing ir...?
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
has variable
[i] TMP_331 cleared
clearing ir...?
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
has variable
[i] TMP_332 cleared
clearing ir...?
_feePaid_1(uint256) := TMP_332(uint256)
has variable
[i] _feePaid cleared
typecheckig node...
REF_300(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_301(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_301

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_329(uint256) = REF_300 + REF_301
Function name: _handleOpenFees

Name: TMP_329 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_329 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_330(uint256) = _positionSize_1 * TMP_329
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (1, 10)

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: TMP_330 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_331 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Function name: _handleOpenFees

Name: TMP_332 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_332 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_feePaid_1(uint256) := TMP_332(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _feePaid Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340 = CONVERT 0 to address
has variable
[i] TMP_340 cleared
clearing ir...?
TMP_341(bool) = _referrer_1 != TMP_340
has variable
[i] TMP_341 cleared
clearing ir...?
CONDITION TMP_341
typecheckig node...
TMP_340 = CONVERT 0 to address
Function name: _handleOpenFees
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(bool) = _referrer_1 != TMP_340
Function name: _handleOpenFees
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_341
Condition...
Conidtion: 
TMP_341
TMP_341
clearning node...
clearing ir...?
REF_305(uint256) -> _fees_10.burnFees
has variable
clearing ir...?
TMP_342(uint256) = _positionSize_1 * REF_305
has variable
[i] TMP_342 cleared
clearing ir...?
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
has variable
[i] TMP_343 cleared
clearing ir...?
REF_306(uint256) -> _fees_10.referralFees
has variable
clearing ir...?
TMP_344(uint256) = _positionSize_1 * REF_306
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
has variable
[i] TMP_345 cleared
clearing ir...?
REF_307(uint256) -> _fees_10.botFees
has variable
clearing ir...?
TMP_346(uint256) = _positionSize_1 * REF_307
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
has variable
[i] TMP_347 cleared
clearing ir...?
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_343,TMP_345,TMP_347,_referrer_1)
typecheckig node...
REF_305(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_342(uint256) = _positionSize_1 * REF_305
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (1, 10)
Error with TMP_342 in function _handleOpenFees
Error with: TMP_342 in function _handleOpenFees
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f591c0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434fef220>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f4ea90>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f622b0>]

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_343 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_306(uint256) -> _fees_10.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_306

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = _positionSize_1 * REF_306
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_345 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
REF_307(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_307

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_346(uint256) = _positionSize_1 * REF_307
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_347 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_343,TMP_345,TMP_347,_referrer_1)
clearning node...
clearing ir...?
REF_308(uint256) -> _fees_10.burnFees
has variable
clearing ir...?
TMP_349(uint256) = _positionSize_1 * REF_308
has variable
[i] TMP_349 cleared
clearing ir...?
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
has variable
[i] TMP_350 cleared
clearing ir...?
REF_309(uint256) -> _fees_10.botFees
has variable
clearing ir...?
TMP_351(uint256) = _positionSize_1 * REF_309
has variable
[i] TMP_351 cleared
clearing ir...?
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
has variable
[i] TMP_352 cleared
clearing ir...?
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_350,0,TMP_352,_referrer_1)
typecheckig node...
REF_308(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_349(uint256) = _positionSize_1 * REF_308
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (1, 10)
Error with TMP_349 in function _handleOpenFees
Error with: TMP_349 in function _handleOpenFees
[<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f591c0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434fef220>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f4ea90>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f622b0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f59b50>]

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_350 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_309(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_309

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(uint256) = _positionSize_1 * REF_309
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_351 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_352 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_350,0,TMP_352,_referrer_1)
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_333 = CONVERT _tigAsset_1 to IStable
has variable
[i] TMP_333 cleared
clearing ir...?
TMP_334 = CONVERT this to address
has variable
[i] TMP_334 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
clearing ir...?
gov_8(IGovNFT) := ϕ(['gov_10', 'gov_7', 'gov_1', 'gov_19'])
has variable
typecheckig node...
TMP_333 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_333 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_334 = CONVERT this to address
Function name: _handleOpenFees
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
gov_8(IGovNFT) := ϕ(['gov_10', 'gov_7', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_336 = CONVERT _tigAsset_1 to IStable
has variable
[i] TMP_336 cleared
clearing ir...?
TMP_337 = CONVERT this to address
has variable
[i] TMP_337 cleared
clearing ir...?
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
has variable
[i] TMP_338 cleared
clearing ir...?
gov_9(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_8', 'gov_19'])
has variable
clearing ir...?
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
clearing ir...?
gov_10(IGovNFT) := ϕ(['gov_10', 'gov_9', 'gov_1', 'gov_19'])
has variable
typecheckig node...
TMP_336 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_336 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_337 = CONVERT this to address
Function name: _handleOpenFees
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
Function name: _handleOpenFees
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_338
hlc contract name: _tigAsset func_name: balanceOf
('c', [-1], [-1], 0, None, 0)
TMP_337
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, None, 0)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
gov_9(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_8', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
High Call: distribute
func name:distribute
other func name:distribute
done.
gov_10(IGovNFT) := ϕ(['gov_10', 'gov_9', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _feePaid_1
typecheckig node...
RETURN _feePaid_1
RETURN

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_handleOpenFees":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _handleOpenFees

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_68

Name: TMP_68 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_29(ITradingExtension) := ϕ(['tradingExtension_78'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_fee_1(uint256) := TMP_68(uint256)
Function name: addToPosition
asgn

Name: TMP_68 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: transaction fee (n)
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _fee

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_56(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_56

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_69(uint256) = _addMargin_1 (c)- _fee_1
Function name: addToPosition
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_69 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_69

Name: TMP_69 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
INTERNAL_CALL, Trading._handleDeposit(address,address,uint256,address,ITrading.ERC20PermitData,address)(REF_56,_marginAsset_1,TMP_69,_stableVault_1,_permitData_1 (-> []),_trader_1)
Internal call...
_handleDeposit
REF_56
_marginAsset
TMP_69
_stableVault
_permitData
_trader
Function: _handleDeposit
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, '_tigAsset', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], 1]
cur_param: [[-1], [-1], 0, '_stableVault', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, '_tigAsset', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], 1]
[[-1], [-1], 0, '_stableVault', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0
done.
typecheckig node...
HIGH_LEVEL_CALL, dest:position_33(IPosition), function:setAccInterest, arguments:['_id_1']  
High Call: setAccInterest
func name:setAccInterest
other func name:setAccInterest
done.
position_34(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_33', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_31(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_30', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_75(bool) -> _trade_1.direction
Function name: addToPosition
MEMBER
_trade
direction
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: direction Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_75

Name: _trade.direction Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.direction Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: direction Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION REF_75
Condition...
Conidtion: 
REF_75
REF_75
typecheckig node...
REF_77(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_2(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_31(ITradingExtension), function:getVerifiedPrice, arguments:['REF_77', '_priceData_1 (-> [])', '_signature_1', '1']  
Function name: addToPosition
High Call: getVerifiedPrice
func name:getVerifiedPrice
other func name:getVerifiedPrice
TUPLE_2
hlc contract name: TRADINGEXTENSION func_name: getVerifiedPrice
('c', [-1], [-1], 0, None, -1)
REF_77
_priceData
_signature
1
('c', [-1], [-1], 0, None, -1)
REF_77
_priceData
_signature
1
wfc len: 2
COPIED
[i]Type for TUPLE_2

Name: TUPLE_2 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
position_35(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56', 'position_34'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_32(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_31', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_price_1(uint256)= UNPACK TUPLE_2 index: 0 
Function name: addToPosition
Reading tuple TUPLE_2 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _price

Name: _price Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_79(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_31(ITradingExtension), function:getVerifiedPrice, arguments:['REF_79', '_priceData_1 (-> [])', '_signature_1', '2']  
Function name: addToPosition
High Call: getVerifiedPrice
func name:getVerifiedPrice
other func name:getVerifiedPrice
TUPLE_3
hlc contract name: TRADINGEXTENSION func_name: getVerifiedPrice
('c', [-1], [-1], 0, None, -1)
REF_79
_priceData
_signature
2
('c', [-1], [-1], 0, None, -1)
REF_79
_priceData
_signature
2
wfc len: 2
COPIED
[i]Type for TUPLE_3

Name: TUPLE_3 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
position_36(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_35', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_33(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_32', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_price_2(uint256)= UNPACK TUPLE_3 index: 0 
Function name: addToPosition
Reading tuple TUPLE_3 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _price

Name: _price Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_price_3(uint256) := ϕ(['_price_1', '_price_2'])
Function name: addToPosition
Phi
[i]Type for _price

Name: _price Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_72(uint256) = _addMargin_1 (c)- _fee_1
Function name: addToPosition
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_72 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_72

Name: TMP_72 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
REF_58(uint256) -> _trade_1.leverage
Function name: addToPosition
MEMBER
_trade
leverage
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_58

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_73(uint256) = TMP_72 (c)* REF_58
Function name: addToPosition
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_73 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_73

Name: TMP_73 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_74(uint256) = TMP_73 (c)/ 1000000000000000000
Function name: addToPosition
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_74 Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
val: 1000000000000000000
18
[i]Type for TMP_74

Name: TMP_74 Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
done.
_positionSize_1(uint256) := TMP_74(uint256)
Function name: addToPosition
asgn

Name: TMP_74 Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance

Name: _positionSize Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for _positionSize

Name: _positionSize Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
REF_59(bool) -> _trade_1.direction
Function name: addToPosition
MEMBER
_trade
direction
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: direction Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_59

Name: _trade.direction Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.direction Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: direction Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION REF_59
Condition...
Conidtion: 
REF_59
REF_59
typecheckig node...
REF_61(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_61

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_62(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_62

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:tradingExtension_33(ITradingExtension), function:modifyLongOi, arguments:['REF_61', 'REF_62', 'True', '_positionSize_1']  
High Call: modifyLongOi
func name:modifyLongOi
other func name:modifyLongOi
done.
position_38(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_37', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_35(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_66', 'tradingExtension_13', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_75', 'tradingExtension_82', 'tradingExtension_78', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_60'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_64(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_64

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_65(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_65

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:tradingExtension_33(ITradingExtension), function:modifyShortOi, arguments:['REF_64', 'REF_65', 'True', '_positionSize_1']  
High Call: modifyShortOi
func name:modifyShortOi
other func name:modifyShortOi
done.
position_37(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_36', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_34(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_33', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_66(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_66

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_67(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_67

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_66,REF_67)
Internal call...
_updateFunding
REF_66
REF_67
Function: _updateFunding
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
cur_param: [[1], [-1], 0, None, [], -1]
cur_param: [[-1], [-1], 0, '_tigAsset', [], -1]
Its the same:
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
0
Parameter length: 1
[[1], [-1], 0, None, [], -1]
[[-1], [-1], 0, '_tigAsset', [], -1]
0
done.
position_39(IPosition) := ϕ(['position_111'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
typecheckig node...
_addMargin_2(uint256) = _addMargin_1 - _fee_1
Function name: addToPosition
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for _addMargin

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
REF_68(uint256) -> _trade_1.margin
Function name: addToPosition
MEMBER
_trade
margin
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_68

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_78(uint256) = REF_68 + _addMargin_2
Function name: addToPosition

Name: TMP_78 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: -1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_78 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_78

Name: TMP_78 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
_newMargin_1(uint256) := TMP_78(uint256)
Function name: addToPosition
asgn

Name: TMP_78 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: _newMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for _newMargin

Name: _newMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
REF_69(uint256) -> _trade_1.price
Function name: addToPosition
MEMBER
_trade
price
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: price Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_69

Name: _trade.price Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.price Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: price Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_70(uint256) -> _trade_1.margin
Function name: addToPosition
MEMBER
_trade
margin
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_70

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_79(uint256) = REF_69 * REF_70
Function name: addToPosition
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_79 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_79

Name: TMP_79 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_80(uint256) = TMP_79 / _newMargin_1
Function name: addToPosition
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: -1
Final dest type: 1

Name: TMP_80 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_80

Name: TMP_80 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_81(uint256) = _price_3 * _addMargin_2
Function name: addToPosition
testing mul...
lnorm: 0 rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: -1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_81 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_81

Name: TMP_81 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
done.
TMP_82(uint256) = TMP_81 / _newMargin_1
Function name: addToPosition
lnorm: 0 rnorm: u
Finance type key: (1, 1)
Func: div
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: TMP_82 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_82

Name: TMP_82 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
done.
TMP_83(uint256) = TMP_80 + TMP_82
Function name: addToPosition

Name: TMP_83 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
initlize checks
;;;
lnorm: u rnorm: 0
Finance type key: (1, 1)
Func: add
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: TMP_82 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance

Name: TMP_83 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_83

Name: TMP_83 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
done.
_newPrice_1(uint256) := TMP_83(uint256)
Function name: addToPosition
asgn

Name: TMP_83 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance

Name: _newPrice Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for _newPrice

Name: _newPrice Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
REF_72(uint256) -> _trade_1.id
Function name: addToPosition
MEMBER
_trade
id
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: id Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_72

Name: _trade.id Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.id Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: id Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:position_39(IPosition), function:addToPosition, arguments:['REF_72', '_newMargin_1', '_newPrice_1']  
High Call: addToPosition
func name:addToPosition
other func name:addToPosition
done.
position_40(IPosition) := ϕ(['position_39', 'position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_73(uint256) -> _trade_1.id
Function name: addToPosition
MEMBER
_trade
id
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: id Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_73

Name: _trade.id Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.id Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: id Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_74(address) -> _trade_1.trader
Function name: addToPosition
MEMBER
_trade
trader
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: trader Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_74

Name: _trade.trader Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.trader Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: trader Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
Emit AddToPosition(REF_73,_newMargin_1,_newPrice_1,REF_74)
WORKLIST iteration 1 for function call "addToPosition":
 New undefined nodes- 0
 Old undefined nodes- 2
typecheckig node...
position_25(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_0', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_22(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, Trading._validateProxy(address)(_trader_1)
Internal call...
_validateProxy
_trader
Function: _validateProxy
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
0
done.
typecheckig node...
INTERNAL_CALL, Trading._checkOwner(uint256,address)(_id_1,_trader_1)
Internal call...
_checkOwner
_id
_trader
Function: _checkOwner
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0
done.
position_27(IPosition) := ϕ(['position_113'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(_id_1,True)
Internal call...
_checkDelay
_id
True
Function: _checkDelay
ic
val: True
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 0, None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, None, [], -1]
0
done.
typecheckig node...
TMP_60(IPosition.Trade) = HIGH_LEVEL_CALL, dest:position_28(IPosition), function:trades, arguments:['_id_1']  
Function name: addToPosition
High Call: trades
func name:trades
other func name:trades
TMP_60
hlc contract name: POSITION func_name: trades
wfc len: 0
COPIED
[i]Type for TMP_60

Name: TMP_60 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
position_29(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_28', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_26(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_25', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_trade_1(IPosition.Trade) := TMP_60(IPosition.Trade)
Function name: addToPosition
asgn

Name: TMP_60 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: asset, tigAsset, margin, leverage, orderType, direction, price, id, trader
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _trade

Name: _trade Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: asset, tigAsset, margin, leverage, orderType, direction, price, id, trader
Finance Type: undef
done.
typecheckig node...
REF_48(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_48

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_49(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_49

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
REF_50(uint256) -> _trade_1.margin
Function name: addToPosition
MEMBER
_trade
margin
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_50

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_61(uint256) = REF_50 (c)+ _addMargin_1
Function name: addToPosition

Name: TMP_61 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: -1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_61 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_61

Name: TMP_61 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
REF_51(uint256) -> _trade_1.leverage
Function name: addToPosition
MEMBER
_trade
leverage
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_51

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:tradingExtension_26(ITradingExtension), function:validateTrade, arguments:['REF_48', 'REF_49', 'TMP_61', 'REF_51']  
High Call: validateTrade
func name:validateTrade
other func name:validateTrade
done.
position_30(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_29', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_27(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_26', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
typecheckig node...
INTERNAL_CALL, Trading._checkVault(address,address)(_stableVault_1,_marginAsset_1)
Internal call...
_checkVault
_stableVault
_marginAsset
Function: _checkVault
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, '_stableVault', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, '_stableVault', [], -1]
[[-1], [-1], 'u', None, [], -1]
0
done.
typecheckig node...
REF_52(uint256) -> _trade_1.orderType
Function name: addToPosition
MEMBER
_trade
orderType
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: orderType Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_52

Name: _trade.orderType Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.orderType Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: orderType Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_64(bool) = REF_52 != 0
Function name: addToPosition
[i]Type for TMP_64

Name: TMP_64 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_64
Condition...
Conidtion: 
TMP_64
TMP_64
typecheckig node...
TMP_65(None) = SOLIDITY_CALL revert(string)(4)
[i]Type for TMP_65

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_53(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_53

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_54(uint256) -> _trade_1.leverage
Function name: addToPosition
MEMBER
_trade
leverage
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_54

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_66(uint256) = _addMargin_1 (c)* REF_54
Function name: addToPosition
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_66 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_66

Name: TMP_66 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_67(uint256) = TMP_66 (c)/ 1000000000000000000
Function name: addToPosition
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_67 Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
val: 1000000000000000000
18
[i]Type for TMP_67

Name: TMP_67 Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
done.
REF_55(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_55

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_68(uint256) = INTERNAL_CALL, Trading._handleOpenFees(uint256,uint256,address,address,bool)(REF_53,TMP_67,_trader_1,REF_55,False)
Function name: addToPosition
Internal call...
_handleOpenFees
REF_53
TMP_67
_trader
REF_55
False
Function: _handleOpenFees
ic
val: False
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: -18
    link: None
    fields: []
    fintype: 1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: -18
    link: None
    fields: []
    fintype: 0
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
cur_param: [[1], [-1], 0, None, [], -1]
cur_param: [[-1], [-1], -18, None, [], 0]
-100
Parameter length: 1
[[1], [-1], 0, None, [], -1]
[[-1], [-1], -18, None, [], 0]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 0, '_tigAsset', [], -1]
[[-1], [-1], 0, None, [], -1]
added
xyz
Function name: _handleOpenFees
Function Visibility: internal
clearning node...
clearing ir...?
_asset_1(uint256) := ϕ(['REF_16', 'REF_149', 'REF_53'])
has variable
[i] _asset cleared
clearing ir...?
_positionSize_1(uint256) := ϕ(['TMP_155', 'TMP_67', 'TMP_34'])
has variable
[i] _positionSize cleared
clearing ir...?
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
has variable
[i] _trader cleared
clearing ir...?
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_153', 'REF_55'])
has variable
[i] _tigAsset cleared
clearing ir...?
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
openFees_1(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_0', 'openFees_2'])
has variable
clearing ir...?
pairsContract_14(IPairsContract) := ϕ(['pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_13'])
has variable
clearing ir...?
gov_2(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_0', 'gov_19'])
has variable
clearing ir...?
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
typecheckig node...
_asset_1(uint256) := ϕ(['REF_16', 'REF_149', 'REF_53'])
Function name: _handleOpenFees
Phi
[i]Type for _asset

Name: _asset Function: _handleOpenFees
Num: 1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_positionSize_1(uint256) := ϕ(['TMP_155', 'TMP_67', 'TMP_34'])
Function name: _handleOpenFees
Phi
[i]Type for _positionSize

Name: _positionSize Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
_trader_1(address) := ϕ(['_trader_1', 'REF_152', '_trader_1'])
Function name: _handleOpenFees
Phi
[i]Type for _trader

Name: _trader Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _trader
Fields: 
Finance Type: undef
done.
_tigAsset_1(address) := ϕ(['_tigAsset_1', 'REF_153', 'REF_55'])
Function name: _handleOpenFees
Phi
[i]Type for _tigAsset

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_19(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
openFees_1(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_0', 'openFees_2'])
Function name: _handleOpenFees
Phi
[i]Type for openFees

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
pairsContract_14(IPairsContract) := ϕ(['pairsContract_0', 'pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_13'])
Function name: _handleOpenFees
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
gov_2(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_0', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_76(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
has variable
[i] TMP_303 cleared
clearing ir...?
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_1', 'openFees_2'])
has variable
clearing ir...?
pairsContract_15(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_14', 'pairsContract_13'])
has variable
clearing ir...?
gov_3(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_2', 'gov_19'])
has variable
clearing ir...?
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_76'])
has variable
clearing ir...?
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
has variable
[i] asset cleared
typecheckig node...
TMP_303(IPairsContract.Asset) = HIGH_LEVEL_CALL, dest:pairsContract_14(IPairsContract), function:idToAsset, arguments:['_asset_1']  
Function name: _handleOpenFees
High Call: idToAsset
func name:idToAsset
other func name:idToAsset
TMP_303
hlc contract name: PAIRS func_name: idToAsset
wfc len: 0
COPIED
[i]Type for TMP_303

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_20(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_19', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
openFees_2(Trading.Fees) := ϕ(['openFees_4', 'openFees_8', 'openFees_1', 'openFees_2'])
Function name: _handleOpenFees
Phi
[i]Type for openFees

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
done.
pairsContract_15(IPairsContract) := ϕ(['pairsContract_15', 'pairsContract_7', 'pairsContract_22', 'pairsContract_17', 'pairsContract_1', 'pairsContract_14', 'pairsContract_13'])
Function name: _handleOpenFees
Phi
[i]Type for pairsContract

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
done.
gov_3(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_2', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_77(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14', 'tradingExtension_76'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
asset_1(IPairsContract.Asset) := TMP_303(IPairsContract.Asset)
Function name: _handleOpenFees
asgn

Name: TMP_303 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: feeMultiplier
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for asset

Name: asset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: feeMultiplier
Finance Type: undef
done.
clearning node...
clearing ir...?
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
has variable
[i] _fees cleared
typecheckig node...
_fees_1(Trading.Fees) := openFees_2(Trading.Fees)
Function name: _handleOpenFees
asgn

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef

Name: _fees Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_275(uint256) -> _fees_1.daoFees
has variable
clearing ir...?
REF_276(uint256) -> _fees_1.daoFees
has variable
clearing ir...?
REF_277(uint256) -> asset_1.feeMultiplier
has variable
clearing ir...?
TMP_304(uint256) = REF_276 * REF_277
has variable
[i] TMP_304 cleared
clearing ir...?
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
has variable
[i] TMP_305 cleared
clearing ir...?
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
has variable
[i] _fees cleared
clearing ir...?
REF_275 (->_fees_2) := TMP_305(uint256)
has variable
typecheckig node...
REF_275(uint256) -> _fees_1.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_275

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_276(uint256) -> _fees_1.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_276

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_277(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_277

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_304(uint256) = REF_276 * REF_277
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_304 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_304

Name: TMP_304 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_305(uint256) = TMP_304 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 110
Final dest type: 110

Name: TMP_305 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_305

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_2(Trading.Fees) := ϕ(['_fees_1'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_275 (->_fees_2) := TMP_305(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_305 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_275

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_275 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
clearning node...
clearing ir...?
REF_278(uint256) -> _fees_2.burnFees
has variable
clearing ir...?
REF_279(uint256) -> _fees_2.burnFees
has variable
clearing ir...?
REF_280(uint256) -> asset_1.feeMultiplier
has variable
clearing ir...?
TMP_306(uint256) = REF_279 * REF_280
has variable
[i] TMP_306 cleared
clearing ir...?
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
has variable
[i] TMP_307 cleared
clearing ir...?
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
has variable
[i] _fees cleared
clearing ir...?
REF_278 (->_fees_3) := TMP_307(uint256)
has variable
typecheckig node...
REF_278(uint256) -> _fees_2.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_278

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_279(uint256) -> _fees_2.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_279

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_280(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_280

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_306(uint256) = REF_279 * REF_280
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_306 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_306

Name: TMP_306 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_307(uint256) = TMP_306 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 110
Final dest type: 110

Name: TMP_307 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_307

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_3(Trading.Fees) := ϕ(['_fees_2'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_278 (->_fees_3) := TMP_307(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_307 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_278

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_278 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
clearning node...
clearing ir...?
REF_281(uint256) -> _fees_3.referralFees
has variable
clearing ir...?
REF_282(uint256) -> _fees_3.referralFees
has variable
clearing ir...?
REF_283(uint256) -> asset_1.feeMultiplier
has variable
clearing ir...?
TMP_308(uint256) = REF_282 * REF_283
has variable
[i] TMP_308 cleared
clearing ir...?
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
has variable
[i] TMP_309 cleared
clearing ir...?
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
has variable
[i] _fees cleared
clearing ir...?
REF_281 (->_fees_4) := TMP_309(uint256)
has variable
typecheckig node...
REF_281(uint256) -> _fees_3.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_281

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_282(uint256) -> _fees_3.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_282

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_283(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_283

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_308(uint256) = REF_282 * REF_283
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_308 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_308

Name: TMP_308 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_309(uint256) = TMP_308 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_309 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_309

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_4(Trading.Fees) := ϕ(['_fees_3'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_281 (->_fees_4) := TMP_309(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_309 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_281

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_281 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_284(uint256) -> _fees_4.botFees
has variable
clearing ir...?
REF_285(uint256) -> _fees_4.botFees
has variable
clearing ir...?
REF_286(uint256) -> asset_1.feeMultiplier
has variable
clearing ir...?
TMP_310(uint256) = REF_285 * REF_286
has variable
[i] TMP_310 cleared
clearing ir...?
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
has variable
[i] TMP_311 cleared
clearing ir...?
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
has variable
[i] _fees cleared
clearing ir...?
REF_284 (->_fees_5) := TMP_311(uint256)
has variable
typecheckig node...
REF_284(uint256) -> _fees_4.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_284

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_285(uint256) -> _fees_4.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_285

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_286(uint256) -> asset_1.feeMultiplier
Function name: _handleOpenFees
MEMBER
asset
feeMultiplier
_handleOpenFees
asset Fields:
feeMultiplier
^^^

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_286

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: feeMultiplier Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_310(uint256) = REF_285 * REF_286
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: asset.feeMultiplier Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_310 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_310

Name: TMP_310 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_311(uint256) = TMP_310 / DIVISION_CONSTANT_20
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_311 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_311

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_5(Trading.Fees) := ϕ(['_fees_4'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_284 (->_fees_5) := TMP_311(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_311 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_284

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_284 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
has variable
[i] TMP_312 cleared
clearing ir...?
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
gov_4(IGovNFT) := ϕ(['gov_3', 'gov_10', 'gov_1', 'gov_19'])
has variable
clearing ir...?
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_77', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
clearing ir...?
_referrer_1(address) := TMP_312(address)
has variable
[i] _referrer cleared
typecheckig node...
TMP_312(address) = HIGH_LEVEL_CALL, dest:tradingExtension_77(ITradingExtension), function:getRef, arguments:['_trader_1']  
Function name: _handleOpenFees
High Call: getRef
func name:getRef
other func name:getRef
TMP_312
hlc contract name: TRADINGEXTENSION func_name: getRef
wfc len: 0
COPIED
[i]Type for TMP_312

Name: TMP_312 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_21(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_20', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_4(IGovNFT) := ϕ(['gov_3', 'gov_10', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_78(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_77', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: _handleOpenFees
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_referrer_1(address) := TMP_312(address)
Function name: _handleOpenFees
asgn

Name: TMP_312 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _referrer Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _referrer

Name: _referrer Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_313 = CONVERT 0 to address
has variable
[i] TMP_313 cleared
clearing ir...?
TMP_314(bool) = _referrer_1 != TMP_313
has variable
[i] TMP_314 cleared
clearing ir...?
CONDITION TMP_314
typecheckig node...
TMP_313 = CONVERT 0 to address
Function name: _handleOpenFees
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_313 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_313

Name: TMP_313 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_314(bool) = _referrer_1 != TMP_313
Function name: _handleOpenFees
[i]Type for TMP_314

Name: TMP_314 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_314
Condition...
Conidtion: 
TMP_314
TMP_314
clearning node...
clearing ir...?
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
has variable
[i] _fees cleared
typecheckig node...
_fees_7(Trading.Fees) := ϕ(['_fees_5', '_fees_6'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
clearning node...
clearing ir...?
CONDITION _isBot_1
typecheckig node...
CONDITION _isBot_1
Condition...
Conidtion: 
_isBot_1
_isBot_1
clearning node...
clearing ir...?
REF_298(uint256) -> _fees_7.botFees
has variable
clearing ir...?
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
has variable
[i] _fees cleared
clearing ir...?
REF_298 (->_fees_8) := 0(uint256)
has variable
typecheckig node...
REF_298(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_298

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_fees_8(Trading.Fees) := ϕ(['_fees_7'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_298 (->_fees_8) := 0(uint256)
Function name: _handleOpenFees
asgn
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_298

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_298 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_315 = CONVERT _tigAsset_1 to IStable
has variable
[i] TMP_315 cleared
clearing ir...?
REF_289(uint256) -> _fees_5.referralFees
has variable
clearing ir...?
TMP_316(uint256) = _positionSize_1 * REF_289
has variable
[i] TMP_316 cleared
clearing ir...?
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
has variable
[i] TMP_317 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
clearing ir...?
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
gov_5(IGovNFT) := ϕ(['gov_10', 'gov_4', 'gov_1', 'gov_19'])
has variable
typecheckig node...
TMP_315 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_315 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_315

Name: TMP_315 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
REF_289(uint256) -> _fees_5.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_289

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_316(uint256) = _positionSize_1 * REF_289
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_316 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_316

Name: TMP_316 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_317(uint256) = TMP_316 / DIVISION_CONSTANT_21
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_317 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_317

Name: TMP_317 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
HIGH_LEVEL_CALL, dest:TMP_315(IStable), function:mintFor, arguments:['_referrer_1', 'TMP_317']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
DIVISION_CONSTANT_22(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_5(IGovNFT) := ϕ(['gov_10', 'gov_4', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_321 = CONVERT _tigAsset_1 to IStable
has variable
[i] TMP_321 cleared
clearing ir...?
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
has variable
[i] TMP_322 cleared
clearing ir...?
REF_294(uint256) -> _fees_7.botFees
has variable
clearing ir...?
TMP_323(uint256) = _positionSize_1 * REF_294
has variable
[i] TMP_323 cleared
clearing ir...?
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
has variable
[i] TMP_324 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
clearing ir...?
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
gov_7(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_6', 'gov_19'])
has variable
typecheckig node...
TMP_321 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_321 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_321

Name: TMP_321 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_322(address) = INTERNAL_CALL, MetaContext._msgSender()()
Function name: _handleOpenFees
Internal call...
_msgSender
Function: _msgSender
ic
Internal cal param_cache
Its the same:
0
Parameter length: 1
0

Name: PIC_3 Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_322 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_322

Name: TMP_322 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_294(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_294

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_323(uint256) = _positionSize_1 * REF_294
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_323 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_323

Name: TMP_323 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_324(uint256) = TMP_323 / DIVISION_CONSTANT_23
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_324 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_324

Name: TMP_324 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
HIGH_LEVEL_CALL, dest:TMP_321(IStable), function:mintFor, arguments:['TMP_322', 'TMP_324']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
DIVISION_CONSTANT_24(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_23', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: _handleOpenFees
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
gov_7(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_6', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
has variable
[i] _fees cleared
typecheckig node...
_fees_10(Trading.Fees) := ϕ(['_fees_8', '_fees_9'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_290(uint256) -> _fees_5.daoFees
has variable
clearing ir...?
REF_291(uint256) -> _fees_5.daoFees
has variable
clearing ir...?
REF_292(uint256) -> _fees_5.referralFees
has variable
clearing ir...?
TMP_319(uint256) = REF_292 * 2
has variable
[i] TMP_319 cleared
clearing ir...?
TMP_320(uint256) = REF_291 - TMP_319
has variable
[i] TMP_320 cleared
clearing ir...?
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
has variable
[i] _fees cleared
clearing ir...?
REF_290 (->_fees_6) := TMP_320(uint256)
has variable
typecheckig node...
REF_290(uint256) -> _fees_5.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_290

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_291(uint256) -> _fees_5.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_291

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_292(uint256) -> _fees_5.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_292

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_319(uint256) = REF_292 * 2
Function name: _handleOpenFees
testing mul...
val: 2
val: 2
lnorm: u rnorm: 0
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
val: 2

Name: 2 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_319 Function: _handleOpenFees
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_319

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_320(uint256) = REF_291 - TMP_319
Function name: _handleOpenFees
lnorm: u rnorm: 0
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_319 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_320 Function: _handleOpenFees
Num: 
Den: 
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_320

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_6(Trading.Fees) := ϕ(['_fees_5'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_290 (->_fees_6) := TMP_320(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_320 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_290

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_290 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
clearning node...
clearing ir...?
REF_299(uint256) -> _fees_10.daoFees
has variable
clearing ir...?
TMP_327(uint256) = _positionSize_1 * REF_299
has variable
[i] TMP_327 cleared
clearing ir...?
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
has variable
[i] TMP_328 cleared
clearing ir...?
_daoFeesPaid_1(uint256) := TMP_328(uint256)
has variable
[i] _daoFeesPaid cleared
typecheckig node...
REF_299(uint256) -> _fees_10.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_299

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_327(uint256) = _positionSize_1 * REF_299
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (1, 10)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_327 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_327

Name: TMP_327 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_328(uint256) = TMP_327 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_328 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_328

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_daoFeesPaid_1(uint256) := TMP_328(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_328 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _daoFeesPaid Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _daoFeesPaid

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
REF_295(uint256) -> _fees_7.daoFees
has variable
clearing ir...?
REF_296(uint256) -> _fees_7.daoFees
has variable
clearing ir...?
REF_297(uint256) -> _fees_7.botFees
has variable
clearing ir...?
TMP_326(uint256) = REF_296 - REF_297
has variable
[i] TMP_326 cleared
clearing ir...?
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
has variable
[i] _fees cleared
clearing ir...?
REF_295 (->_fees_9) := TMP_326(uint256)
has variable
typecheckig node...
REF_295(uint256) -> _fees_7.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_295

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_296(uint256) -> _fees_7.daoFees
Function name: _handleOpenFees
MEMBER
_fees
daoFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_296

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_297(uint256) -> _fees_7.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_297

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_326(uint256) = REF_296 - REF_297
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.daoFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_326 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_326

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
_fees_9(Trading.Fees) := ϕ(['_fees_7'])
Function name: _handleOpenFees
Phi
[i]Type for _fees

Name: _fees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: botFees, referralFees, daoFees, burnFees
Finance Type: undef
done.
REF_295 (->_fees_9) := TMP_326(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_326 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
Finance type key: (10, -1)
Func: assign
Dest type: 110, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 110
Final dest type: 110
[i]Type for REF_295

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: REF_295 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: daoFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
clearning node...
clearing ir...?
REF_300(uint256) -> _fees_10.burnFees
has variable
clearing ir...?
REF_301(uint256) -> _fees_10.botFees
has variable
clearing ir...?
TMP_329(uint256) = REF_300 + REF_301
has variable
[i] TMP_329 cleared
clearing ir...?
TMP_330(uint256) = _positionSize_1 * TMP_329
has variable
[i] TMP_330 cleared
clearing ir...?
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
has variable
[i] TMP_331 cleared
clearing ir...?
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
has variable
[i] TMP_332 cleared
clearing ir...?
_feePaid_1(uint256) := TMP_332(uint256)
has variable
[i] _feePaid cleared
typecheckig node...
REF_300(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_300

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
REF_301(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_301

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_329(uint256) = REF_300 + REF_301
Function name: _handleOpenFees

Name: TMP_329 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 10, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Dest updated
Right type: -1, Left type: 10
Final dest type: 110

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_329 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
[i]Type for TMP_329

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)
done.
TMP_330(uint256) = _positionSize_1 * TMP_329
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (1, 10)

Name: TMP_329 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: updated compound fee ratio (t)

Name: TMP_330 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_330

Name: TMP_330 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_331(uint256) = TMP_330 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_331 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_331

Name: TMP_331 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_332(uint256) = TMP_331 + _daoFeesPaid_1
Function name: _handleOpenFees

Name: TMP_332 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
initlize checks
;;;
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: _daoFeesPaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_332 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_332

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_feePaid_1(uint256) := TMP_332(uint256)
Function name: _handleOpenFees
asgn

Name: TMP_332 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _feePaid Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _feePaid

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_340 = CONVERT 0 to address
has variable
[i] TMP_340 cleared
clearing ir...?
TMP_341(bool) = _referrer_1 != TMP_340
has variable
[i] TMP_341 cleared
clearing ir...?
CONDITION TMP_341
typecheckig node...
TMP_340 = CONVERT 0 to address
Function name: _handleOpenFees
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_340 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_340

Name: TMP_340 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TMP_341(bool) = _referrer_1 != TMP_340
Function name: _handleOpenFees
[i]Type for TMP_341

Name: TMP_341 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION TMP_341
Condition...
Conidtion: 
TMP_341
TMP_341
clearning node...
clearing ir...?
REF_305(uint256) -> _fees_10.burnFees
has variable
clearing ir...?
TMP_342(uint256) = _positionSize_1 * REF_305
has variable
[i] TMP_342 cleared
clearing ir...?
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
has variable
[i] TMP_343 cleared
clearing ir...?
REF_306(uint256) -> _fees_10.referralFees
has variable
clearing ir...?
TMP_344(uint256) = _positionSize_1 * REF_306
has variable
[i] TMP_344 cleared
clearing ir...?
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
has variable
[i] TMP_345 cleared
clearing ir...?
REF_307(uint256) -> _fees_10.botFees
has variable
clearing ir...?
TMP_346(uint256) = _positionSize_1 * REF_307
has variable
[i] TMP_346 cleared
clearing ir...?
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
has variable
[i] TMP_347 cleared
clearing ir...?
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_343,TMP_345,TMP_347,_referrer_1)
typecheckig node...
REF_305(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_305

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_342(uint256) = _positionSize_1 * REF_305
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (1, 10)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_342 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_342

Name: TMP_342 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_343(uint256) = TMP_342 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_343 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_343

Name: TMP_343 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_306(uint256) -> _fees_10.referralFees
Function name: _handleOpenFees
MEMBER
_fees
referralFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_306

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: referralFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_344(uint256) = _positionSize_1 * REF_306
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _fees.referralFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_344 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_344

Name: TMP_344 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_345(uint256) = TMP_344 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_345 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_345

Name: TMP_345 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
REF_307(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_307

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_346(uint256) = _positionSize_1 * REF_307
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_346 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_346

Name: TMP_346 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_347(uint256) = TMP_346 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_347 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_347

Name: TMP_347 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_343,TMP_345,TMP_347,_referrer_1)
clearning node...
clearing ir...?
REF_308(uint256) -> _fees_10.burnFees
has variable
clearing ir...?
TMP_349(uint256) = _positionSize_1 * REF_308
has variable
[i] TMP_349 cleared
clearing ir...?
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
has variable
[i] TMP_350 cleared
clearing ir...?
REF_309(uint256) -> _fees_10.botFees
has variable
clearing ir...?
TMP_351(uint256) = _positionSize_1 * REF_309
has variable
[i] TMP_351 cleared
clearing ir...?
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
has variable
[i] TMP_352 cleared
clearing ir...?
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_350,0,TMP_352,_referrer_1)
typecheckig node...
REF_308(uint256) -> _fees_10.burnFees
Function name: _handleOpenFees
MEMBER
_fees
burnFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
[i]Type for REF_308

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: burnFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)
done.
TMP_349(uint256) = _positionSize_1 * REF_308
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Finance type key: (1, 10)

Name: _fees.burnFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: compound fee ratio (t)

Name: TMP_349 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_349

Name: TMP_349 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_350(uint256) = TMP_349 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: TMP_350 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_350

Name: TMP_350 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_309(uint256) -> _fees_10.botFees
Function name: _handleOpenFees
MEMBER
_fees
botFees
_handleOpenFees
_fees Fields:
botFees
referralFees
daoFees
burnFees
^^^

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_309

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: botFees Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_351(uint256) = _positionSize_1 * REF_309
Function name: _handleOpenFees
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _fees.botFees Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_351 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_351

Name: TMP_351 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_352(uint256) = TMP_351 / DIVISION_CONSTANT_24
Function name: _handleOpenFees
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_352 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_352

Name: TMP_352 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
Emit FeesDistributed(_tigAsset_1,_daoFeesPaid_1,TMP_350,0,TMP_352,_referrer_1)
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_333 = CONVERT _tigAsset_1 to IStable
has variable
[i] TMP_333 cleared
clearing ir...?
TMP_334 = CONVERT this to address
has variable
[i] TMP_334 cleared
clearing ir...?
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
clearing ir...?
gov_8(IGovNFT) := ϕ(['gov_10', 'gov_7', 'gov_1', 'gov_19'])
has variable
typecheckig node...
TMP_333 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_333 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_333

Name: TMP_333 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_334 = CONVERT this to address
Function name: _handleOpenFees
[i]Type for TMP_334

Name: TMP_334 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:TMP_333(IStable), function:mintFor, arguments:['TMP_334', '_daoFeesPaid_1']  
High Call: mintFor
func name:mintFor
other func name:mintFor
done.
gov_8(IGovNFT) := ϕ(['gov_10', 'gov_7', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_336 = CONVERT _tigAsset_1 to IStable
has variable
[i] TMP_336 cleared
clearing ir...?
TMP_337 = CONVERT this to address
has variable
[i] TMP_337 cleared
clearing ir...?
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
has variable
[i] TMP_338 cleared
clearing ir...?
gov_9(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_8', 'gov_19'])
has variable
clearing ir...?
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
clearing ir...?
gov_10(IGovNFT) := ϕ(['gov_10', 'gov_9', 'gov_1', 'gov_19'])
has variable
typecheckig node...
TMP_336 = CONVERT _tigAsset_1 to IStable
Function name: _handleOpenFees

Name: _tigAsset Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef

Name: TMP_336 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for TMP_336

Name: TMP_336 Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_337 = CONVERT this to address
Function name: _handleOpenFees
[i]Type for TMP_337

Name: TMP_337 Function: _handleOpenFees
Num: 
Den: 
Norm: u
LF: Trading
Fields: 
Finance Type: undef
done.
TMP_338(uint256) = HIGH_LEVEL_CALL, dest:TMP_336(IStable), function:balanceOf, arguments:['TMP_337']  
Function name: _handleOpenFees
High Call: balanceOf
func name:balanceOf
other func name:balanceOf
TMP_338
hlc contract name: _tigAsset func_name: balanceOf
('c', [-1], [-1], 0, None, 0)
TMP_337
wfc len: 1
Check copy_toekn_tuple
([-1], [-1], 0, None, 0)
----
Type: uint256
uint256
Final Type: uint256
COPIED
[i]Type for TMP_338

Name: TMP_338 Function: _handleOpenFees
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: raw balance
done.
gov_9(IGovNFT) := ϕ(['gov_10', 'gov_1', 'gov_8', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:gov_9(IGovNFT), function:distribute, arguments:['_tigAsset_1', 'TMP_338']  
High Call: distribute
func name:distribute
other func name:distribute
done.
gov_10(IGovNFT) := ϕ(['gov_10', 'gov_9', 'gov_1', 'gov_19'])
Function name: _handleOpenFees
Phi
[i]Type for gov

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
RETURN _feePaid_1
typecheckig node...
RETURN _feePaid_1
RETURN

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
WORKLIST iteration 0 for function call "_handleOpenFees":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: _handleOpenFees

Name: _feePaid Function: _handleOpenFees
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
___
[i]Type for TMP_68

Name: TMP_68 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_29(ITradingExtension) := ϕ(['tradingExtension_78'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_fee_1(uint256) := TMP_68(uint256)
Function name: addToPosition
asgn

Name: TMP_68 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for _fee

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_56(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_56

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
TMP_69(uint256) = _addMargin_1 (c)- _fee_1
Function name: addToPosition
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_69 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_69

Name: TMP_69 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
INTERNAL_CALL, Trading._handleDeposit(address,address,uint256,address,ITrading.ERC20PermitData,address)(REF_56,_marginAsset_1,TMP_69,_stableVault_1,_permitData_1 (-> []),_trader_1)
Internal call...
_handleDeposit
REF_56
_marginAsset
TMP_69
_stableVault
_permitData
_trader
Function: _handleDeposit
ic
Internal cal param_cache
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
cur_param: [[-1], [-1], 0, '_tigAsset', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], 1]
cur_param: [[-1], [-1], 0, '_stableVault', [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
cur_param: [[-1], [-1], 'u', None, [], -1]
Its the same:
Param: 0
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: 1
Param: 3
    num: [-1]
    den: [-1]
    norm: 0
    link: _stableVault
    fields: []
    fintype: -1
Param: 4
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 5
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
0
Parameter length: 1
[[-1], [-1], 0, '_tigAsset', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], 1]
[[-1], [-1], 0, '_stableVault', [], -1]
[[-1], [-1], 'u', None, [], -1]
[[-1], [-1], 'u', None, [], -1]
0
done.
typecheckig node...
HIGH_LEVEL_CALL, dest:position_33(IPosition), function:setAccInterest, arguments:['_id_1']  
High Call: setAccInterest
func name:setAccInterest
other func name:setAccInterest
done.
position_34(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_33', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_31(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_30', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_75(bool) -> _trade_1.direction
Function name: addToPosition
MEMBER
_trade
direction
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: direction Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_75

Name: _trade.direction Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.direction Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: direction Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION REF_75
Condition...
Conidtion: 
REF_75
REF_75
typecheckig node...
REF_77(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_77

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_2(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_31(ITradingExtension), function:getVerifiedPrice, arguments:['REF_77', '_priceData_1 (-> [])', '_signature_1', '1']  
Function name: addToPosition
High Call: getVerifiedPrice
func name:getVerifiedPrice
other func name:getVerifiedPrice
TUPLE_2
hlc contract name: TRADINGEXTENSION func_name: getVerifiedPrice
('c', [-1], [-1], 0, None, -1)
REF_77
_priceData
_signature
1
('c', [-1], [-1], 0, None, -1)
REF_77
_priceData
_signature
1
wfc len: 2
COPIED
[i]Type for TUPLE_2

Name: TUPLE_2 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
position_35(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56', 'position_34'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_32(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_31', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_price_1(uint256)= UNPACK TUPLE_2 index: 0 
Function name: addToPosition
Reading tuple TUPLE_2 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _price

Name: _price Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_79(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_79

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
TUPLE_3(uint256,uint256) = HIGH_LEVEL_CALL, dest:tradingExtension_31(ITradingExtension), function:getVerifiedPrice, arguments:['REF_79', '_priceData_1 (-> [])', '_signature_1', '2']  
Function name: addToPosition
High Call: getVerifiedPrice
func name:getVerifiedPrice
other func name:getVerifiedPrice
TUPLE_3
hlc contract name: TRADINGEXTENSION func_name: getVerifiedPrice
('c', [-1], [-1], 0, None, -1)
REF_79
_priceData
_signature
2
('c', [-1], [-1], 0, None, -1)
REF_79
_priceData
_signature
2
wfc len: 2
COPIED
[i]Type for TUPLE_3

Name: TUPLE_3 Function: addToPosition
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
position_36(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_35', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_33(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_32', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_price_2(uint256)= UNPACK TUPLE_3 index: 0 
Function name: addToPosition
Reading tuple TUPLE_3 index 0
Check copy_toekn_tuple
([-1], [-1], 0, None, -1)
----
Type: uint256
uint256
Final Type: uint256
[i]Type for _price

Name: _price Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
_price_3(uint256) := ϕ(['_price_1', '_price_2'])
Function name: addToPosition
Phi
[i]Type for _price

Name: _price Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
typecheckig node...
TMP_72(uint256) = _addMargin_1 (c)- _fee_1
Function name: addToPosition
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_72 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_72

Name: TMP_72 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
REF_58(uint256) -> _trade_1.leverage
Function name: addToPosition
MEMBER
_trade
leverage
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_58

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: leverage Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_73(uint256) = TMP_72 (c)* REF_58
Function name: addToPosition
testing mul...
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _trade.leverage Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_73 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_73

Name: TMP_73 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_74(uint256) = TMP_73 (c)/ 1000000000000000000
Function name: addToPosition
val: 1000000000000000000
18
val: 1000000000000000000
18
lnorm: u rnorm: 18
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: TMP_74 Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
val: 1000000000000000000
18
[i]Type for TMP_74

Name: TMP_74 Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
done.
_positionSize_1(uint256) := TMP_74(uint256)
Function name: addToPosition
asgn

Name: TMP_74 Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance

Name: _positionSize Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for _positionSize

Name: _positionSize Function: addToPosition
Num: -1
Den: -1
Norm: -18
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
REF_59(bool) -> _trade_1.direction
Function name: addToPosition
MEMBER
_trade
direction
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: direction Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_59

Name: _trade.direction Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.direction Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: direction Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
CONDITION REF_59
Condition...
Conidtion: 
REF_59
REF_59
typecheckig node...
REF_61(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_61

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_62(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_62

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:tradingExtension_33(ITradingExtension), function:modifyLongOi, arguments:['REF_61', 'REF_62', 'True', '_positionSize_1']  
High Call: modifyLongOi
func name:modifyLongOi
other func name:modifyLongOi
done.
position_38(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_37', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_35(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_66', 'tradingExtension_13', 'tradingExtension_52', 'tradingExtension_70', 'tradingExtension_75', 'tradingExtension_82', 'tradingExtension_78', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_34', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_14', 'tradingExtension_60'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_64(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_64

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_65(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_65

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:tradingExtension_33(ITradingExtension), function:modifyShortOi, arguments:['REF_64', 'REF_65', 'True', '_positionSize_1']  
High Call: modifyShortOi
func name:modifyShortOi
other func name:modifyShortOi
done.
position_37(IPosition) := ϕ(['position_1', 'position_24', 'position_90', 'position_106', 'position_36', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
tradingExtension_34(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_33', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: addToPosition
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
typecheckig node...
typecheckig node...
REF_66(uint256) -> _trade_1.asset
Function name: addToPosition
MEMBER
_trade
asset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_66

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: _trade.asset Function: addToPosition
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: asset Function: None
Num: 1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
REF_67(address) -> _trade_1.tigAsset
Function name: addToPosition
MEMBER
_trade
tigAsset
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
[i]Type for REF_67

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: _trade.tigAsset Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef

Name: tigAsset Function: None
Num: -1
Den: -1
Norm: 0
LF: _tigAsset
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, Trading._updateFunding(uint256,address)(REF_66,REF_67)
Internal call...
_updateFunding
REF_66
REF_67
Function: _updateFunding
ic
Internal cal param_cache
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
cur_param: [[1], [-1], 0, None, [], -1]
cur_param: [[-1], [-1], 0, '_tigAsset', [], -1]
Its the same:
Param: 0
    num: [1]
    den: [-1]
    norm: 0
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: 0
    link: _tigAsset
    fields: []
    fintype: -1
0
Parameter length: 1
[[1], [-1], 0, None, [], -1]
[[-1], [-1], 0, '_tigAsset', [], -1]
0
done.
position_39(IPosition) := ϕ(['position_111'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
typecheckig node...
_addMargin_2(uint256) = _addMargin_1 - _fee_1
Function name: addToPosition
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _fee Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for _addMargin

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
REF_68(uint256) -> _trade_1.margin
Function name: addToPosition
MEMBER
_trade
margin
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_68

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_78(uint256) = REF_68 + _addMargin_2
Function name: addToPosition

Name: TMP_78 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
initlize checks
;;;
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: -1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_78 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_78

Name: TMP_78 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
_newMargin_1(uint256) := TMP_78(uint256)
Function name: addToPosition
asgn

Name: TMP_78 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: _newMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for _newMargin

Name: _newMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
REF_69(uint256) -> _trade_1.price
Function name: addToPosition
MEMBER
_trade
price
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: price Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_69

Name: _trade.price Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.price Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: price Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_70(uint256) -> _trade_1.margin
Function name: addToPosition
MEMBER
_trade
margin
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_70

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: margin Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_79(uint256) = REF_69 * REF_70
Function name: addToPosition
testing mul...
lnorm: u rnorm: u
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1

Name: _trade.margin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: TMP_79 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_79

Name: TMP_79 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_80(uint256) = TMP_79 / _newMargin_1
Function name: addToPosition
lnorm: u rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: -1
Final dest type: 1

Name: TMP_80 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_80

Name: TMP_80 Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance
done.
TMP_81(uint256) = _price_3 * _addMargin_2
Function name: addToPosition
testing mul...
lnorm: 0 rnorm: u
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: -1
Final dest type: 1

Name: _addMargin Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: net balance

Name: TMP_81 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_81

Name: TMP_81 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
done.
TMP_82(uint256) = TMP_81 / _newMargin_1
Function name: addToPosition
lnorm: 0 rnorm: u
Finance type key: (1, 1)
Func: div
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: TMP_82 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_82

Name: TMP_82 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
done.
TMP_83(uint256) = TMP_80 + TMP_82
Function name: addToPosition

Name: TMP_83 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
initlize checks
;;;
lnorm: u rnorm: 0
Finance type key: (1, 1)
Func: add
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: 1, Left type: 1
Final dest type: 1

Name: TMP_82 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance

Name: TMP_83 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
[i]Type for TMP_83

Name: TMP_83 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
done.
_newPrice_1(uint256) := TMP_83(uint256)
Function name: addToPosition
asgn

Name: TMP_83 Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance

Name: _newPrice Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
Finance type key: (1, -1)
Func: assign
Dest type: 1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: 1
Final dest type: 1
[i]Type for _newPrice

Name: _newPrice Function: addToPosition
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: net balance
done.
typecheckig node...
REF_72(uint256) -> _trade_1.id
Function name: addToPosition
MEMBER
_trade
id
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: id Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_72

Name: _trade.id Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.id Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: id Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
HIGH_LEVEL_CALL, dest:position_39(IPosition), function:addToPosition, arguments:['REF_72', '_newMargin_1', '_newPrice_1']  
High Call: addToPosition
func name:addToPosition
other func name:addToPosition
done.
position_40(IPosition) := ϕ(['position_39', 'position_1', 'position_24', 'position_90', 'position_106', 'position_77', 'position_18', 'position_113', 'position_40', 'position_72', 'position_111', 'position_50', 'position_64', 'position_99', 'position_105', 'position_56'])
Function name: addToPosition
Phi
[i]Type for position

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
done.
typecheckig node...
REF_73(uint256) -> _trade_1.id
Function name: addToPosition
MEMBER
_trade
id
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: id Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_73

Name: _trade.id Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.id Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: id Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_74(address) -> _trade_1.trader
Function name: addToPosition
MEMBER
_trade
trader
addToPosition
_trade Fields:
asset
tigAsset
margin
leverage
orderType
direction
price
id
trader
^^^

Name: trader Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for REF_74

Name: _trade.trader Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: _trade.trader Function: addToPosition
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: trader Function: None
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
Emit AddToPosition(REF_73,_newMargin_1,_newPrice_1,REF_74)
WORKLIST iteration 2 for function call "addToPosition":
 New undefined nodes- 0
 Old undefined nodes- 0
Saving return values for: addToPosition
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: initiateLimitOrder
wooo
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: cancelLimitOrder
wooo
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: addMargin
wooo
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: removeMargin
wooo
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: updateTpSl
wooo
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: executeLimitOrder
wooo
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: liquidatePosition
wooo
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: limitClose
Function limitClose not marked
Mark Iterations TRUE, proceeding anyway
Function name: limitClose
Function Visibility (test): external
_id
Finding type for _id...
uint256
_tp
Finding type for _tp...
bool
_priceData
Finding type for _priceData...
PriceData
_signature
Finding type for _signature...
bytes
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 2
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
Param: 3
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
clearing ir...?
DIVISION_CONSTANT_7(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
tradingExtension_68(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
typecheckig node...
DIVISION_CONSTANT_7(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_0', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: limitClose
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_68(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_0', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: limitClose
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(_id_1,False)
typecheckig node...
INTERNAL_CALL, Trading._checkDelay(uint256,bool)(_id_1,False)
Internal call...
_checkDelay
_id
False
Function: _checkDelay
ic
done.
clearning node...
typecheckig node...
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TUPLE_10(uint256,address) = HIGH_LEVEL_CALL, dest:tradingExtension_69(ITradingExtension), function:_limitClose, arguments:['_id_1', '_tp_1', '_priceData_1 (-> [])', '_signature_1']  
has variable
clearing ir...?
DIVISION_CONSTANT_9(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_8', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
has variable
clearing ir...?
tradingExtension_70(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_69', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
has variable
clearing ir...?
_limitPrice_1(uint256)= UNPACK TUPLE_10 index: 0 
has variable
[i] _limitPrice cleared
clearing ir...?
_tigAsset_1(address)= UNPACK TUPLE_10 index: 1 
has variable
[i] _tigAsset cleared
typecheckig node...
TUPLE_10(uint256,address) = HIGH_LEVEL_CALL, dest:tradingExtension_69(ITradingExtension), function:_limitClose, arguments:['_id_1', '_tp_1', '_priceData_1 (-> [])', '_signature_1']  
Function name: limitClose
High Call: _limitClose
func name:_limitClose
other func name:_limitClose
TUPLE_10
[i]Type for TUPLE_10

Name: TUPLE_10 Function: limitClose
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
DIVISION_CONSTANT_9(uint256) := ϕ(['DIVISION_CONSTANT_21', 'DIVISION_CONSTANT_8', 'DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_24', 'DIVISION_CONSTANT_27', 'DIVISION_CONSTANT_28', 'DIVISION_CONSTANT_10', 'DIVISION_CONSTANT_16', 'DIVISION_CONSTANT_22', 'DIVISION_CONSTANT_30', 'DIVISION_CONSTANT_6'])
Function name: limitClose
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
tradingExtension_70(ITradingExtension) := ϕ(['tradingExtension_35', 'tradingExtension_52', 'tradingExtension_69', 'tradingExtension_78', 'tradingExtension_66', 'tradingExtension_34', 'tradingExtension_70', 'tradingExtension_13', 'tradingExtension_21', 'tradingExtension_74', 'tradingExtension_60', 'tradingExtension_82', 'tradingExtension_67', 'tradingExtension_48', 'tradingExtension_61', 'tradingExtension_81', 'tradingExtension_41', 'tradingExtension_75', 'tradingExtension_14'])
Function name: limitClose
Phi
[i]Type for tradingExtension

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
done.
_limitPrice_1(uint256)= UNPACK TUPLE_10 index: 0 
Function name: limitClose
Reading tuple TUPLE_10 index 0
Finding type for _limitPrice...
uint256
[i]Type for _limitPrice

Name: _limitPrice Function: limitClose
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
_tigAsset_1(address)= UNPACK TUPLE_10 index: 1 
Function name: limitClose
Reading tuple TUPLE_10 index 1
Finding type for _tigAsset...
address
[i]Type for _tigAsset

Name: _tigAsset Function: limitClose
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
clearning node...
clearing ir...?
TMP_217 = CONVERT 0 to address
has variable
[i] TMP_217 cleared
clearing ir...?
INTERNAL_CALL, Trading._closePosition(uint256,uint256,uint256,address,address,bool)(_id_1,DIVISION_CONSTANT_9,_limitPrice_1,TMP_217,_tigAsset_1,True)
clearing ir...?
DIVISION_CONSTANT_10(uint256) := ϕ(['DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_16'])
has variable
typecheckig node...
TMP_217 = CONVERT 0 to address
Function name: limitClose
val: 0

Name: 0 Function: None
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef

Name: TMP_217 Function: limitClose
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
val: 0
val: 0
[i]Type for TMP_217

Name: TMP_217 Function: limitClose
Num: -1
Den: -1
Norm: 0
LF: None
Fields: 
Finance Type: undef
done.
INTERNAL_CALL, Trading._closePosition(uint256,uint256,uint256,address,address,bool)(_id_1,DIVISION_CONSTANT_9,_limitPrice_1,TMP_217,_tigAsset_1,True)
Internal call...
_closePosition
_id
DIVISION_CONSTANT
_limitPrice
TMP_217
_tigAsset
True
Function: _closePosition
ic
done.
DIVISION_CONSTANT_10(uint256) := ϕ(['DIVISION_CONSTANT_17', 'DIVISION_CONSTANT_16'])
Function name: limitClose
Phi
[i]Type for DIVISION_CONSTANT

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "limitClose":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: approveProxy
Function approveProxy not marked
Mark Iterations TRUE, proceeding anyway
Function name: approveProxy
Function Visibility (test): external
_proxy
Finding type for _proxy...
address
_timestamp
Finding type for _timestamp...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _proxy
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
TMP_219(address) = INTERNAL_CALL, MetaContext._msgSender()()
has variable
[i] TMP_219 cleared
clearing ir...?
REF_228(Trading.Proxy) -> proxyApprovals_0[TMP_219]
has variable
clearing ir...?
TMP_220 = new Proxy(_proxy_1,_timestamp_1)
clearing ir...?
proxyApprovals_1(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_0'])
has variable
clearing ir...?
REF_228 (->proxyApprovals_1) := TMP_220(Trading.Proxy)
has variable
typecheckig node...
TMP_219(address) = INTERNAL_CALL, MetaContext._msgSender()()
Function name: approveProxy
Internal call...
_msgSender
Function: _msgSender
ic
[i]Type for TMP_219

Name: TMP_219 Function: approveProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_228(Trading.Proxy) -> proxyApprovals_0[TMP_219]
Function name: approveProxy
INDEX
[i]Type for REF_228

Name: REF_228 Function: approveProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_220 = new Proxy(_proxy_1,_timestamp_1)
[i]Type for TMP_220

Name: None Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
proxyApprovals_1(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_0'])
Function name: approveProxy
Phi
[i]Type for proxyApprovals

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_228 (->proxyApprovals_1) := TMP_220(Trading.Proxy)
Function name: approveProxy
asgn

Name: TMP_220 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_228 Function: approveProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_228

Name: REF_228 Function: approveProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_228 (->proxyApprovals_1) := TMP_220(Trading.Proxy)
XXXXX
clearning node...
clearing ir...?
TMP_221 = CONVERT _proxy_1 to address
has variable
[i] TMP_221 cleared
clearing ir...?
Transfer dest:TMP_221 value:msg.value
typecheckig node...
TMP_221 = CONVERT _proxy_1 to address
Function name: approveProxy

Name: _proxy Function: approveProxy
Num: -1
Den: -1
Norm: u
LF: _proxy
Fields: 
Finance Type: undef

Name: TMP_221 Function: approveProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_221

Name: TMP_221 Function: approveProxy
Num: -1
Den: -1
Norm: u
LF: _proxy
Fields: 
Finance Type: undef
done.
Transfer dest:TMP_221 value:msg.value
done.
WORKLIST iteration 0 for function call "approveProxy":
 New undefined nodes- 1
 Old undefined nodes- 0
typecheckig node...
typecheckig node...
TMP_219(address) = INTERNAL_CALL, MetaContext._msgSender()()
Function name: approveProxy
Internal call...
_msgSender
Function: _msgSender
ic
[i]Type for TMP_219

Name: TMP_219 Function: approveProxy
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_228(Trading.Proxy) -> proxyApprovals_0[TMP_219]
Function name: approveProxy
INDEX
[i]Type for REF_228

Name: REF_228 Function: approveProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
TMP_220 = new Proxy(_proxy_1,_timestamp_1)
[i]Type for TMP_220

Name: TMP_220 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
proxyApprovals_1(mapping(address => Trading.Proxy)) := ϕ(['proxyApprovals_0'])
Function name: approveProxy
Phi
[i]Type for proxyApprovals

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_228 (->proxyApprovals_1) := TMP_220(Trading.Proxy)
Function name: approveProxy
asgn

Name: TMP_220 Function: None
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_228 Function: approveProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_228

Name: REF_228 Function: approveProxy
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
This IR caused addback:
REF_228 (->proxyApprovals_1) := TMP_220(Trading.Proxy)
XXXXX
typecheckig node...
TMP_221 = CONVERT _proxy_1 to address
Function name: approveProxy

Name: _proxy Function: approveProxy
Num: -1
Den: -1
Norm: u
LF: _proxy
Fields: 
Finance Type: undef

Name: TMP_221 Function: approveProxy
Num: -1
Den: -1
Norm: u
LF: _proxy
Fields: 
Finance Type: undef
[i]Type for TMP_221

Name: TMP_221 Function: approveProxy
Num: -1
Den: -1
Norm: u
LF: _proxy
Fields: 
Finance Type: undef
done.
Transfer dest:TMP_221 value:msg.value
done.
WORKLIST iteration 1 for function call "approveProxy":
 New undefined nodes- 1
 Old undefined nodes- 1
No save for this scenario
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _closePosition
Function _closePosition not marked
Mark Iterations TRUE, proceeding anyway
Function name: _closePosition
Function Visibility (test): internal
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _handleDeposit
Function _handleDeposit not marked
Mark Iterations TRUE, proceeding anyway
Function name: _handleDeposit
Function Visibility (test): internal
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _handleWithdraw
Function _handleWithdraw not marked
Mark Iterations TRUE, proceeding anyway
Function name: _handleWithdraw
Function Visibility (test): internal
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _handleOpenFees
Function _handleOpenFees not marked
Mark Iterations TRUE, proceeding anyway
Function name: _handleOpenFees
Function Visibility (test): internal
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _handleCloseFees
Function _handleCloseFees not marked
Mark Iterations TRUE, proceeding anyway
Function name: _handleCloseFees
Function Visibility (test): internal
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _updateFunding
Function _updateFunding not marked
Mark Iterations TRUE, proceeding anyway
Function name: _updateFunding
Function Visibility (test): internal
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _checkSl
Function _checkSl not marked
Mark Iterations TRUE, proceeding anyway
Function name: _checkSl
Function Visibility (test): internal
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _checkOwner
Function _checkOwner not marked
Mark Iterations TRUE, proceeding anyway
Function name: _checkOwner
Function Visibility (test): internal
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _checkDelay
Function _checkDelay not marked
Mark Iterations TRUE, proceeding anyway
Function name: _checkDelay
Function Visibility (test): internal
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _checkVault
Function _checkVault not marked
Mark Iterations TRUE, proceeding anyway
Function name: _checkVault
Function Visibility (test): internal
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: _validateProxy
Function _validateProxy not marked
Mark Iterations TRUE, proceeding anyway
Function name: _validateProxy
Function Visibility (test): internal
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setBlockDelay
Function setBlockDelay not marked
Mark Iterations TRUE, proceeding anyway
Function name: setBlockDelay
Function Visibility (test): external
_blockDelay
Finding type for _blockDelay...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Ownable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, Ownable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
blockDelay_2(uint256) := _blockDelay_1(uint256)
has variable
typecheckig node...
blockDelay_2(uint256) := _blockDelay_1(uint256)
Function name: setBlockDelay
asgn

Name: _blockDelay Function: setBlockDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: blockDelay Function: setBlockDelay
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for blockDelay

Name: blockDelay Function: setBlockDelay
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "setBlockDelay":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setAllowedVault
Function setAllowedVault not marked
Mark Iterations TRUE, proceeding anyway
Function name: setAllowedVault
Function Visibility (test): external
_stableVault
Finding type for _stableVault...
address
_bool
Finding type for _bool...
bool
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _stableVault
    fields: []
    fintype: -1
Param: 1
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Ownable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, Ownable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
REF_348(bool) -> allowedVault_1[_stableVault_1]
has variable
clearing ir...?
allowedVault_2(mapping(address => bool)) := ϕ(['allowedVault_1'])
has variable
clearing ir...?
REF_348 (->allowedVault_2) := _bool_1(bool)
has variable
typecheckig node...
REF_348(bool) -> allowedVault_1[_stableVault_1]
Function name: setAllowedVault
INDEX
[i]Type for REF_348

Name: REF_348 Function: setAllowedVault
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
allowedVault_2(mapping(address => bool)) := ϕ(['allowedVault_1'])
Function name: setAllowedVault
Phi
[i]Type for allowedVault

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
REF_348 (->allowedVault_2) := _bool_1(bool)
Function name: setAllowedVault
asgn

Name: _bool Function: setAllowedVault
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: REF_348 Function: setAllowedVault
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for REF_348

Name: REF_348 Function: setAllowedVault
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "setAllowedVault":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setMaxWinPercent
Function setMaxWinPercent not marked
Mark Iterations TRUE, proceeding anyway
Function name: setMaxWinPercent
Function Visibility (test): external
_maxWinPercent
Finding type for _maxWinPercent...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Ownable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, Ownable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
maxWinPercent_9(uint256) := _maxWinPercent_1(uint256)
has variable
typecheckig node...
maxWinPercent_9(uint256) := _maxWinPercent_1(uint256)
Function name: setMaxWinPercent
asgn

Name: _maxWinPercent Function: setMaxWinPercent
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: maxWinPercent Function: setMaxWinPercent
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for maxWinPercent

Name: maxWinPercent Function: setMaxWinPercent
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "setMaxWinPercent":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setLimitOrderPriceRange
Function setLimitOrderPriceRange not marked
Mark Iterations TRUE, proceeding anyway
Function name: setLimitOrderPriceRange
Function Visibility (test): external
_range
Finding type for _range...
uint256
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: None
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Ownable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, Ownable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
limitOrderPriceRange_7(uint256) := _range_1(uint256)
has variable
typecheckig node...
limitOrderPriceRange_7(uint256) := _range_1(uint256)
Function name: setLimitOrderPriceRange
asgn

Name: _range Function: setLimitOrderPriceRange
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef

Name: limitOrderPriceRange Function: setLimitOrderPriceRange
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for limitOrderPriceRange

Name: limitOrderPriceRange Function: setLimitOrderPriceRange
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "setLimitOrderPriceRange":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setFees
wooo
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: setTradingExtension
Function setTradingExtension not marked
Mark Iterations TRUE, proceeding anyway
Function name: setTradingExtension
Function Visibility (test): external
_ext
Finding type for _ext...
address
Param: 0
    num: [-1]
    den: [-1]
    norm: u
    link: _ext
    fields: []
    fintype: -1
clearning node...
typecheckig node...
clearning node...
clearing ir...?
MODIFIER_CALL, Ownable.onlyOwner()()
typecheckig node...
MODIFIER_CALL, Ownable.onlyOwner()()
Internal call...
onlyOwner
Function: onlyOwner
ic
done.
clearning node...
clearing ir...?
TMP_439 = CONVERT _ext_1 to ITradingExtension
has variable
[i] TMP_439 cleared
clearing ir...?
tradingExtension_82(ITradingExtension) := TMP_439(ITradingExtension)
has variable
typecheckig node...
TMP_439 = CONVERT _ext_1 to ITradingExtension
Function name: setTradingExtension

Name: _ext Function: setTradingExtension
Num: -1
Den: -1
Norm: u
LF: _ext
Fields: 
Finance Type: undef

Name: TMP_439 Function: setTradingExtension
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
[i]Type for TMP_439

Name: TMP_439 Function: setTradingExtension
Num: -1
Den: -1
Norm: u
LF: _ext
Fields: 
Finance Type: undef
done.
tradingExtension_82(ITradingExtension) := TMP_439(ITradingExtension)
Function name: setTradingExtension
asgn

Name: TMP_439 Function: setTradingExtension
Num: -1
Den: -1
Norm: u
LF: _ext
Fields: 
Finance Type: undef

Name: tradingExtension Function: setTradingExtension
Num: 
Den: 
Norm: u
LF: None
Fields: 
Finance Type: undef
Finance type key: (-1, -1)
Func: assign
Dest type: -1, Update_ratios: {10: False, 12: -1, 20: -1, 21: -1, 110: True}
Right type: -1, Left type: -1
Final dest type: -1
[i]Type for tradingExtension

Name: tradingExtension Function: setTradingExtension
Num: -1
Den: -1
Norm: u
LF: _ext
Fields: 
Finance Type: undef
done.
WORKLIST iteration 0 for function call "setTradingExtension":
 New undefined nodes- 0
 Old undefined nodes- 0
No save for this scenario
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: slitherConstructorVariables
Function slitherConstructorVariables not marked
Mark Iterations TRUE, proceeding anyway
Function name: slitherConstructorVariables
Function Visibility (test): internal
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Reading Function: slitherConstructorConstantVariables
Function slitherConstructorConstantVariables not marked
Mark Iterations TRUE, proceeding anyway
Function name: slitherConstructorConstantVariables
Function Visibility (test): internal
State_var: _isTrustedForwarder
Finding type for _isTrustedForwarder...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: _isTrustedForwarder Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: position
Finding type for position...
IPosition
Check copy_toekn_tuple
(-1, -1, 0, 'POSITION', -1)
----
Type: IPosition
IPosition
Final Type: IPosition
 NO FIELDS

Name: position Function: global
Num: -1
Den: -1
Norm: 0
LF: POSITION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: tradingExtension
Finding type for tradingExtension...
ITradingExtension
Check copy_toekn_tuple
(-1, -1, 0, 'TRADINGEXTENSION', -1)
----
Type: ITradingExtension
ITradingExtension
Final Type: ITradingExtension
 NO FIELDS

Name: tradingExtension Function: global
Num: -1
Den: -1
Norm: 0
LF: TRADINGEXTENSION
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelay
Finding type for blockDelay...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: blockDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: blockDelayPassed
Finding type for blockDelayPassed...
mapping(uint256 => Trading.Delay)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => Trading.Delay)
mapping(uint256 => Trading.Delay)
Trading.Delay
Final Type: Trading.Delay
global
blockDelayPassed
delay
global
blockDelayPassed
actionType
FIELDS:
blockDelayPassed Fields:
actionType
delay
^^^

Name: blockDelayPassed Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: actionType, delay
Finance Type: undef
[*]Type fetched successfully
State_var: pairsContract
Finding type for pairsContract...
IPairsContract
Check copy_toekn_tuple
(-1, -1, 0, 'PAIRS', -1)
----
Type: IPairsContract
IPairsContract
Final Type: IPairsContract
 NO FIELDS

Name: pairsContract Function: global
Num: -1
Den: -1
Norm: 0
LF: PAIRS
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: vaultFundingPercent
Finding type for vaultFundingPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: vaultFundingPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: DIVISION_CONSTANT
Finding type for DIVISION_CONSTANT...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: DIVISION_CONSTANT Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: closeFees
Finding type for closeFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
closeFees
daoFees
global
closeFees
burnFees
global
closeFees
referralFees
global
closeFees
botFees
FIELDS:
closeFees Fields:
^^^

Name: closeFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: openFees
Finding type for openFees...
Trading.Fees
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: Trading.Fees
Trading.Fees
Final Type: Trading.Fees
global
openFees
daoFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
burnFees
Check copy_toekn_tuple
([-1], [-1], ['u'], None, 10)
----
Type: uint256
uint256
Final Type: uint256
Type: uint256
uint256
Final Type: uint256
global
openFees
referralFees
global
openFees
botFees
FIELDS:
openFees Fields:
daoFees
burnFees
^^^

Name: openFees Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: daoFees, burnFees
Finance Type: undef
[*]Type fetched successfully
State_var: limitDelay
Finding type for limitDelay...
mapping(uint256 => uint256)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(uint256 => uint256)
mapping(uint256 => uint256)
uint256
Final Type: uint256

Name: limitDelay Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: limitOrderPriceRange
Finding type for limitOrderPriceRange...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: limitOrderPriceRange Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: allowedVault
Finding type for allowedVault...
mapping(address => bool)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => bool)
mapping(address => bool)
bool
Final Type: bool

Name: allowedVault Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: gov
Finding type for gov...
IGovNFT
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: IGovNFT
IGovNFT
Final Type: IGovNFT
 NO FIELDS

Name: gov Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: maxWinPercent
Finding type for maxWinPercent...
uint256
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: uint256
uint256
Final Type: uint256

Name: maxWinPercent Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: _owner
Finding type for _owner...
address
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: address
address
Final Type: address

Name: _owner Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
State_var: proxyApprovals
Finding type for proxyApprovals...
mapping(address => Trading.Proxy)
Check copy_toekn_tuple
(-1, -1, 'u', None, -1)
----
Type: mapping(address => Trading.Proxy)
mapping(address => Trading.Proxy)
Trading.Proxy
Final Type: Trading.Proxy
global
proxyApprovals
proxy
global
proxyApprovals
time
FIELDS:
proxyApprovals Fields:
^^^

Name: proxyApprovals Function: global
Num: -1
Den: -1
Norm: u
LF: None
Fields: 
Finance Type: undef
[*]Type fetched successfully
Errors: [<slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f591c0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434fef220>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f4ea90>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f622b0>, <slither.slithir.variables.temporary_ssa.TemporaryVariableSSA object at 0x7ff434f59b50>]
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True} Contract name out: IGovNFT
[x] IGovNFT not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True} Contract name out: IPairsContract
[x] IPairsContract not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True, 'IPairsContract': True} Contract name out: IPosition
[x] IPosition not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True, 'IPairsContract': True, 'IPosition': True} Contract name out: IReferrals
[x] IReferrals not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True, 'IPairsContract': True, 'IPosition': True, 'IReferrals': True} Contract name out: IStableVault
[x] IStableVault not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True, 'IPairsContract': True, 'IPosition': True, 'IReferrals': True, 'IStableVault': True} Contract name out: ITrading
[x] ITrading not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True, 'IPairsContract': True, 'IPosition': True, 'IReferrals': True, 'IStableVault': True, 'ITrading': True} Contract name out: Ownable
[x] Ownable not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True, 'IPairsContract': True, 'IPosition': True, 'IReferrals': True, 'IStableVault': True, 'ITrading': True, 'Ownable': True} Contract name out: IERC20
[x] IERC20 not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True, 'IPairsContract': True, 'IPosition': True, 'IReferrals': True, 'IStableVault': True, 'ITrading': True, 'Ownable': True, 'IERC20': True} Contract name out: Context
[x] Context not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True, 'IPairsContract': True, 'IPosition': True, 'IReferrals': True, 'IStableVault': True, 'ITrading': True, 'Ownable': True, 'IERC20': True, 'Context': True} Contract name out: Strings
[x] Strings not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True, 'IPairsContract': True, 'IPosition': True, 'IReferrals': True, 'IStableVault': True, 'ITrading': True, 'Ownable': True, 'IERC20': True, 'Context': True, 'Strings': True} Contract name out: ECDSA
[x] ECDSA not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True, 'IPairsContract': True, 'IPosition': True, 'IReferrals': True, 'IStableVault': True, 'ITrading': True, 'Ownable': True, 'IERC20': True, 'Context': True, 'Strings': True, 'ECDSA': True} Contract name out: Math
[x] Math not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True, 'IPairsContract': True, 'IPosition': True, 'IReferrals': True, 'IStableVault': True, 'ITrading': True, 'Ownable': True, 'IERC20': True, 'Context': True, 'Strings': True, 'ECDSA': True, 'Math': True} Contract name out: MetaContext
[x] MetaContext not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True, 'IPairsContract': True, 'IPosition': True, 'IReferrals': True, 'IStableVault': True, 'ITrading': True, 'Ownable': True, 'IERC20': True, 'Context': True, 'Strings': True, 'ECDSA': True, 'Math': True, 'MetaContext': True} Contract name out: IPrice
[x] IPrice not run
Seen contract: {'ITradingExtension': True, 'IStable': True, 'ExtendedIERC20': True, 'ERC20Permit': True, 'Trading': True, 'IGovNFT': True, 'IPairsContract': True, 'IPosition': True, 'IReferrals': True, 'IStableVault': True, 'ITrading': True, 'Ownable': True, 'IERC20': True, 'Context': True, 'Strings': True, 'ECDSA': True, 'Math': True, 'MetaContext': True, 'IPrice': True} Contract name out: TradingLibrary
[x] TradingLibrary not run
Function count: 20
